warning: unused import: `ptr::read_unaligned`
 --> src/syscalls/syscall_handlers.rs:1:23
  |
1 | use core::{ffi::CStr, ptr::read_unaligned};
  |                       ^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `GS`, `GsBase`, `KernelGsBase`, and `Segment64`
 --> src/syscalls/syscall_handlers.rs:3:42
  |
3 | use x86_64::registers::{model_specific::{GsBase, KernelGsBase}, segmentation::{Segment64, GS}};
  |                                          ^^^^^^  ^^^^^^^^^^^^                  ^^^^^^^^^  ^^

warning: unused imports: `debug` and `gdt::RING0_STACK_SIZE`
 --> src/syscalls/syscall_handlers.rs:6:17
  |
6 |     constants::{gdt::RING0_STACK_SIZE, syscalls::*}, debug, events::{current_running_event_info, EventInfo}, interrupts::{gdt::TSSS, x2apic::current_core_id}, processes::process::{clear_process_frame...
  |                 ^^^^^^^^^^^^^^^^^^^^^                ^^^^^

warning: unused variable: `device`
   --> src/devices/pci.rs:243:23
    |
243 | pub fn print_pci_info(device: &DeviceInfo) {
    |                       ^^^^^^ help: if this is intentional, prefix it with an underscore: `_device`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `present_state`
   --> src/devices/sd_card.rs:793:13
    |
793 |         let present_state = unsafe { core::ptr::read_volatile(present_state_register_addr) };
    |             ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_present_state`


taos:	file format elf64-x86-64

Disassembly of section .text:

ffffffff80000000 <<&T as core::fmt::Display>::fmt::ha7394c33b002fed6>:
ffffffff80000000: 48 8b 3f             	movq	(%rdi), %rdi
ffffffff80000003: e9 b8 bd 01 00       	jmp	0xffffffff8001bdc0 <<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h1d3e5ed404e3eb74>
ffffffff80000008: cc                   	int3
ffffffff80000009: cc                   	int3
ffffffff8000000a: cc                   	int3
ffffffff8000000b: cc                   	int3
ffffffff8000000c: cc                   	int3
ffffffff8000000d: cc                   	int3
ffffffff8000000e: cc                   	int3
ffffffff8000000f: cc                   	int3

ffffffff80000010 <_start>:
ffffffff80000010: 53                   	pushq	%rbx
ffffffff80000011: 48 83 ec 60          	subq	$0x60, %rsp
ffffffff80000015: e8 96 fb 00 00       	callq	0xffffffff8000fbb0 <taos::init::init::h50db611692509fc0>
ffffffff8000001a: 89 c3                	movl	%eax, %ebx
ffffffff8000001c: 48 8b 05 f5 63 03 00 	movq	0x363f5(%rip), %rax     # 0xffffffff80036418 <log::MAX_LOG_LEVEL_FILTER::hebff44fa7f6797f5>
ffffffff80000023: 48 83 f8 04          	cmpq	$0x4, %rax
ffffffff80000027: 72 78                	jb	0xffffffff800000a1 <_start+0x91>
ffffffff80000029: 48 c7 44 24 30 18 d0 01 80   	movq	$-0x7ffe2fe8, 0x30(%rsp) # imm = 0x8001D018
ffffffff80000032: 48 c7 44 24 38 01 00 00 00   	movq	$0x1, 0x38(%rsp)
ffffffff8000003b: 48 c7 44 24 50 00 00 00 00   	movq	$0x0, 0x50(%rsp)
ffffffff80000044: 48 c7 44 24 40 08 00 00 00   	movq	$0x8, 0x40(%rsp)
ffffffff8000004d: 48 c7 44 24 48 00 00 00 00   	movq	$0x0, 0x48(%rsp)
ffffffff80000056: 48 c7 c7 38 d0 01 80 	movq	$-0x7ffe2fc8, %rdi      # imm = 0x8001D038
ffffffff8000005d: e8 ee 7b 01 00       	callq	0xffffffff80017c50 <log::__private_api::loc::h7d13c00ac743e0a8>
ffffffff80000062: 48 c7 44 24 08 68 d0 01 80   	movq	$-0x7ffe2f98, 0x8(%rsp) # imm = 0x8001D068
ffffffff8000006b: 48 c7 44 24 10 04 00 00 00   	movq	$0x4, 0x10(%rsp)
ffffffff80000074: 48 c7 44 24 18 68 d0 01 80   	movq	$-0x7ffe2f98, 0x18(%rsp) # imm = 0x8001D068
ffffffff8000007d: 48 c7 44 24 20 04 00 00 00   	movq	$0x4, 0x20(%rsp)
ffffffff80000086: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff8000008b: 48 8d 7c 24 30       	leaq	0x30(%rsp), %rdi
ffffffff80000090: 48 8d 54 24 08       	leaq	0x8(%rsp), %rdx
ffffffff80000095: be 04 00 00 00       	movl	$0x4, %esi
ffffffff8000009a: 31 c9                	xorl	%ecx, %ecx
ffffffff8000009c: e8 6f 7a 01 00       	callq	0xffffffff80017b10 <log::__private_api::log_impl::hbf977b1a5812fb97>
ffffffff800000a1: 89 df                	movl	%ebx, %edi
ffffffff800000a3: e8 08 9b 00 00       	callq	0xffffffff80009bb0 <taos::events::run_loop::hb7053eb66eece363>
ffffffff800000a8: cc                   	int3
ffffffff800000a9: cc                   	int3
ffffffff800000aa: cc                   	int3
ffffffff800000ab: cc                   	int3
ffffffff800000ac: cc                   	int3
ffffffff800000ad: cc                   	int3
ffffffff800000ae: cc                   	int3
ffffffff800000af: cc                   	int3

ffffffff800000b0 <rust_begin_unwind>:
ffffffff800000b0: 48 83 ec 48          	subq	$0x48, %rsp
ffffffff800000b4: 48 89 3c 24          	movq	%rdi, (%rsp)
ffffffff800000b8: 48 89 e0             	movq	%rsp, %rax
ffffffff800000bb: 48 89 44 24 08       	movq	%rax, 0x8(%rsp)
ffffffff800000c0: 48 c7 44 24 10 00 00 00 80   	movq	$-0x80000000, 0x10(%rsp) # imm = 0x80000000
ffffffff800000c9: 48 c7 44 24 18 90 d0 01 80   	movq	$-0x7ffe2f70, 0x18(%rsp) # imm = 0x8001D090
ffffffff800000d2: 48 c7 44 24 20 02 00 00 00   	movq	$0x2, 0x20(%rsp)
ffffffff800000db: 48 c7 44 24 38 00 00 00 00   	movq	$0x0, 0x38(%rsp)
ffffffff800000e4: 48 8d 44 24 08       	leaq	0x8(%rsp), %rax
ffffffff800000e9: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff800000ee: 48 c7 44 24 30 01 00 00 00   	movq	$0x1, 0x30(%rsp)
ffffffff800000f7: 48 8d 7c 24 18       	leaq	0x18(%rsp), %rdi
ffffffff800000fc: e8 4f b1 00 00       	callq	0xffffffff8000b250 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff80000101: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
ffffffff80000110: f4                   	hlt
ffffffff80000111: eb fd                	jmp	0xffffffff80000110 <rust_begin_unwind+0x60>
ffffffff80000113: cc                   	int3
ffffffff80000114: cc                   	int3
ffffffff80000115: cc                   	int3
ffffffff80000116: cc                   	int3
ffffffff80000117: cc                   	int3
ffffffff80000118: cc                   	int3
ffffffff80000119: cc                   	int3
ffffffff8000011a: cc                   	int3
ffffffff8000011b: cc                   	int3
ffffffff8000011c: cc                   	int3
ffffffff8000011d: cc                   	int3
ffffffff8000011e: cc                   	int3
ffffffff8000011f: cc                   	int3

ffffffff80000120 <__rust_alloc_error_handler>:
ffffffff80000120: e9 5b 8f 01 00       	jmp	0xffffffff80019080 <__rdl_oom>
ffffffff80000125: cc                   	int3
ffffffff80000126: cc                   	int3
ffffffff80000127: cc                   	int3

ffffffff80000128 <naked_syscall_handler>:
ffffffff80000128: 50                   	pushq	%rax
ffffffff80000129: 53                   	pushq	%rbx
ffffffff8000012a: 51                   	pushq	%rcx
ffffffff8000012b: 52                   	pushq	%rdx
ffffffff8000012c: 56                   	pushq	%rsi
ffffffff8000012d: 57                   	pushq	%rdi
ffffffff8000012e: 55                   	pushq	%rbp
ffffffff8000012f: 48 89 e7             	movq	%rsp, %rdi
ffffffff80000132: e8 69 07 00 00       	callq	0xffffffff800008a0 <syscall_handler>
ffffffff80000137: 5d                   	popq	%rbp
ffffffff80000138: 5f                   	popq	%rdi
ffffffff80000139: 5e                   	popq	%rsi
ffffffff8000013a: 5a                   	popq	%rdx
ffffffff8000013b: 59                   	popq	%rcx
ffffffff8000013c: 5b                   	popq	%rbx
ffffffff8000013d: 58                   	popq	%rax
ffffffff8000013e: 48 cf                	iretq

ffffffff80000140 <taos::interrupts::idt::naked_timer_handler::h612966a4c35a83e8>:
ffffffff80000140: 55                   	pushq	%rbp
ffffffff80000141: 41 57                	pushq	%r15
ffffffff80000143: 41 56                	pushq	%r14
ffffffff80000145: 41 55                	pushq	%r13
ffffffff80000147: 41 54                	pushq	%r12
ffffffff80000149: 41 53                	pushq	%r11
ffffffff8000014b: 41 52                	pushq	%r10
ffffffff8000014d: 41 51                	pushq	%r9
ffffffff8000014f: 41 50                	pushq	%r8
ffffffff80000151: 57                   	pushq	%rdi
ffffffff80000152: 56                   	pushq	%rsi
ffffffff80000153: 52                   	pushq	%rdx
ffffffff80000154: 51                   	pushq	%rcx
ffffffff80000155: 53                   	pushq	%rbx
ffffffff80000156: 50                   	pushq	%rax
ffffffff80000157: fc                   	cld
ffffffff80000158: 48 89 e7             	movq	%rsp, %rdi
ffffffff8000015b: e8 d0 09 00 00       	callq	0xffffffff80000b30 <timer_handler>
ffffffff80000160: 58                   	popq	%rax
ffffffff80000161: 5b                   	popq	%rbx
ffffffff80000162: 59                   	popq	%rcx
ffffffff80000163: 5a                   	popq	%rdx
ffffffff80000164: 5e                   	popq	%rsi
ffffffff80000165: 5f                   	popq	%rdi
ffffffff80000166: 41 58                	popq	%r8
ffffffff80000168: 41 59                	popq	%r9
ffffffff8000016a: 41 5a                	popq	%r10
ffffffff8000016c: 41 5b                	popq	%r11
ffffffff8000016e: 41 5c                	popq	%r12
ffffffff80000170: 41 5d                	popq	%r13
ffffffff80000172: 41 5e                	popq	%r14
ffffffff80000174: 41 5f                	popq	%r15
ffffffff80000176: 5d                   	popq	%rbp
ffffffff80000177: 48 cf                	iretq
ffffffff80000179: cc                   	int3
ffffffff8000017a: cc                   	int3
ffffffff8000017b: cc                   	int3
ffffffff8000017c: cc                   	int3
ffffffff8000017d: cc                   	int3
ffffffff8000017e: cc                   	int3
ffffffff8000017f: cc                   	int3

ffffffff80000180 <<&T as core::fmt::Debug>::fmt::h3a6114fd7043c76d>:
ffffffff80000180: 50                   	pushq	%rax
ffffffff80000181: 48 8b 07             	movq	(%rdi), %rax
ffffffff80000184: 48 8b 08             	movq	(%rax), %rcx
ffffffff80000187: 48 85 c9             	testq	%rcx, %rcx
ffffffff8000018a: 74 2d                	je	0xffffffff800001b9 <<&T as core::fmt::Debug>::fmt::h3a6114fd7043c76d+0x39>
ffffffff8000018c: 83 f9 01             	cmpl	$0x1, %ecx
ffffffff8000018f: 75 68                	jne	0xffffffff800001f9 <<&T as core::fmt::Debug>::fmt::h3a6114fd7043c76d+0x79>
ffffffff80000191: 48 83 c0 08          	addq	$0x8, %rax
ffffffff80000195: 48 89 04 24          	movq	%rax, (%rsp)
ffffffff80000199: 48 89 e1             	movq	%rsp, %rcx
ffffffff8000019c: ba 09 00 00 00       	movl	$0x9, %edx
ffffffff800001a1: 48 89 f7             	movq	%rsi, %rdi
ffffffff800001a4: 48 c7 c6 01 d1 01 80 	movq	$-0x7ffe2eff, %rsi      # imm = 0x8001D101
ffffffff800001ab: 49 c7 c0 d8 d0 01 80 	movq	$-0x7ffe2f28, %r8       # imm = 0x8001D0D8
ffffffff800001b2: e8 a9 9e 01 00       	callq	0xffffffff8001a060 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>
ffffffff800001b7: 59                   	popq	%rcx
ffffffff800001b8: c3                   	retq
ffffffff800001b9: 4c 8d 48 08          	leaq	0x8(%rax), %r9
ffffffff800001bd: 48 83 c0 10          	addq	$0x10, %rax
ffffffff800001c1: 48 89 04 24          	movq	%rax, (%rsp)
ffffffff800001c5: 48 83 ec 08          	subq	$0x8, %rsp
ffffffff800001c9: 48 8d 44 24 08       	leaq	0x8(%rsp), %rax
ffffffff800001ce: ba 06 00 00 00       	movl	$0x6, %edx
ffffffff800001d3: 41 b8 04 00 00 00    	movl	$0x4, %r8d
ffffffff800001d9: 48 89 f7             	movq	%rsi, %rdi
ffffffff800001dc: 48 c7 c6 f8 d0 01 80 	movq	$-0x7ffe2f08, %rsi      # imm = 0x8001D0F8
ffffffff800001e3: 48 c7 c1 74 d0 01 80 	movq	$-0x7ffe2f8c, %rcx      # imm = 0x8001D074
ffffffff800001ea: 68 d8 d0 01 80       	pushq	$-0x7ffe2f28            # imm = 0x8001D0D8
ffffffff800001ef: 50                   	pushq	%rax
ffffffff800001f0: 6a 03                	pushq	$0x3
ffffffff800001f2: 68 fe d0 01 80       	pushq	$-0x7ffe2f02            # imm = 0x8001D0FE
ffffffff800001f7: eb 3e                	jmp	0xffffffff80000237 <<&T as core::fmt::Debug>::fmt::h3a6114fd7043c76d+0xb7>
ffffffff800001f9: 4c 8d 48 08          	leaq	0x8(%rax), %r9
ffffffff800001fd: 48 83 c0 10          	addq	$0x10, %rax
ffffffff80000201: 48 89 04 24          	movq	%rax, (%rsp)
ffffffff80000205: 48 83 ec 08          	subq	$0x8, %rsp
ffffffff80000209: 48 8d 44 24 08       	leaq	0x8(%rsp), %rax
ffffffff8000020e: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff80000213: 41 b8 04 00 00 00    	movl	$0x4, %r8d
ffffffff80000219: 48 89 f7             	movq	%rsi, %rdi
ffffffff8000021c: 48 c7 c6 40 d1 01 80 	movq	$-0x7ffe2ec0, %rsi      # imm = 0x8001D140
ffffffff80000223: 48 c7 c1 74 d0 01 80 	movq	$-0x7ffe2f8c, %rcx      # imm = 0x8001D074
ffffffff8000022a: 68 10 d1 01 80       	pushq	$-0x7ffe2ef0            # imm = 0x8001D110
ffffffff8000022f: 50                   	pushq	%rax
ffffffff80000230: 6a 03                	pushq	$0x3
ffffffff80000232: 68 88 d1 01 80       	pushq	$-0x7ffe2e78            # imm = 0x8001D188
ffffffff80000237: 68 b8 d0 01 80       	pushq	$-0x7ffe2f48            # imm = 0x8001D0B8
ffffffff8000023c: e8 ff 9c 01 00       	callq	0xffffffff80019f40 <core::fmt::Formatter::debug_struct_field2_finish::h83a85978f04b0b76>
ffffffff80000241: 48 83 c4 30          	addq	$0x30, %rsp
ffffffff80000245: 59                   	popq	%rcx
ffffffff80000246: c3                   	retq
ffffffff80000247: cc                   	int3
ffffffff80000248: cc                   	int3
ffffffff80000249: cc                   	int3
ffffffff8000024a: cc                   	int3
ffffffff8000024b: cc                   	int3
ffffffff8000024c: cc                   	int3
ffffffff8000024d: cc                   	int3
ffffffff8000024e: cc                   	int3
ffffffff8000024f: cc                   	int3

ffffffff80000250 <<&T as core::fmt::Debug>::fmt::h638a8ad3ef3f1de9>:
ffffffff80000250: 48 8b 3f             	movq	(%rdi), %rdi
ffffffff80000253: 8b 46 24             	movl	0x24(%rsi), %eax
ffffffff80000256: a8 10                	testb	$0x10, %al
ffffffff80000258: 0f 85 c2 90 01 00    	jne	0xffffffff80019320 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hd0e7c1aefe0075e3>
ffffffff8000025e: a8 20                	testb	$0x20, %al
ffffffff80000260: 0f 85 3a 91 01 00    	jne	0xffffffff800193a0 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::h869006add1042b35>
ffffffff80000266: e9 55 b6 01 00       	jmp	0xffffffff8001b8c0 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f>
ffffffff8000026b: cc                   	int3
ffffffff8000026c: cc                   	int3
ffffffff8000026d: cc                   	int3
ffffffff8000026e: cc                   	int3
ffffffff8000026f: cc                   	int3

ffffffff80000270 <<&T as core::fmt::Debug>::fmt::h7015926b2d9d56aa>:
ffffffff80000270: 48 8b 3f             	movq	(%rdi), %rdi
ffffffff80000273: 8b 46 24             	movl	0x24(%rsi), %eax
ffffffff80000276: a8 10                	testb	$0x10, %al
ffffffff80000278: 0f 85 c2 8e 01 00    	jne	0xffffffff80019140 <core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt::h91bffb6be8aabb18>
ffffffff8000027e: a8 20                	testb	$0x20, %al
ffffffff80000280: 0f 85 2a 8f 01 00    	jne	0xffffffff800191b0 <core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt::h3b2fbee468aa9cf2>
ffffffff80000286: e9 b5 b3 01 00       	jmp	0xffffffff8001b640 <core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt::h2a0afb799489a89b>
ffffffff8000028b: cc                   	int3
ffffffff8000028c: cc                   	int3
ffffffff8000028d: cc                   	int3
ffffffff8000028e: cc                   	int3
ffffffff8000028f: cc                   	int3

ffffffff80000290 <<&T as core::fmt::Debug>::fmt::h9bf6857fe883fa9a>:
ffffffff80000290: 48 89 f7             	movq	%rsi, %rdi
ffffffff80000293: ba 02 00 00 00       	movl	$0x2, %edx
ffffffff80000298: 48 c7 c6 b0 d0 01 80 	movq	$-0x7ffe2f50, %rsi      # imm = 0x8001D0B0
ffffffff8000029f: e9 bc 99 01 00       	jmp	0xffffffff80019c60 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e>
ffffffff800002a4: cc                   	int3
ffffffff800002a5: cc                   	int3
ffffffff800002a6: cc                   	int3
ffffffff800002a7: cc                   	int3
ffffffff800002a8: cc                   	int3
ffffffff800002a9: cc                   	int3
ffffffff800002aa: cc                   	int3
ffffffff800002ab: cc                   	int3
ffffffff800002ac: cc                   	int3
ffffffff800002ad: cc                   	int3
ffffffff800002ae: cc                   	int3
ffffffff800002af: cc                   	int3

ffffffff800002b0 <<&T as core::fmt::Debug>::fmt::he6ab0644ed46e4da>:
ffffffff800002b0: 48 89 f2             	movq	%rsi, %rdx
ffffffff800002b3: 48 8b 07             	movq	(%rdi), %rax
ffffffff800002b6: 48 8b 38             	movq	(%rax), %rdi
ffffffff800002b9: 48 8b 70 08          	movq	0x8(%rax), %rsi
ffffffff800002bd: e9 7e a1 01 00       	jmp	0xffffffff8001a440 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790>
ffffffff800002c2: cc                   	int3
ffffffff800002c3: cc                   	int3
ffffffff800002c4: cc                   	int3
ffffffff800002c5: cc                   	int3
ffffffff800002c6: cc                   	int3
ffffffff800002c7: cc                   	int3
ffffffff800002c8: cc                   	int3
ffffffff800002c9: cc                   	int3
ffffffff800002ca: cc                   	int3
ffffffff800002cb: cc                   	int3
ffffffff800002cc: cc                   	int3
ffffffff800002cd: cc                   	int3
ffffffff800002ce: cc                   	int3
ffffffff800002cf: cc                   	int3

ffffffff800002d0 <<&T as core::fmt::Debug>::fmt::hf28f55f836680ef2>:
ffffffff800002d0: 48 8b 3f             	movq	(%rdi), %rdi
ffffffff800002d3: 8b 46 24             	movl	0x24(%rsi), %eax
ffffffff800002d6: a8 10                	testb	$0x10, %al
ffffffff800002d8: 0f 85 42 90 01 00    	jne	0xffffffff80019320 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hd0e7c1aefe0075e3>
ffffffff800002de: a8 20                	testb	$0x20, %al
ffffffff800002e0: 0f 85 ba 90 01 00    	jne	0xffffffff800193a0 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::h869006add1042b35>
ffffffff800002e6: e9 d5 b5 01 00       	jmp	0xffffffff8001b8c0 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f>
ffffffff800002eb: cc                   	int3
ffffffff800002ec: cc                   	int3
ffffffff800002ed: cc                   	int3
ffffffff800002ee: cc                   	int3
ffffffff800002ef: cc                   	int3

ffffffff800002f0 <<&T as core::fmt::Display>::fmt::h3db49864f978420e>:
ffffffff800002f0: 48 89 f2             	movq	%rsi, %rdx
ffffffff800002f3: 48 8b 07             	movq	(%rdi), %rax
ffffffff800002f6: 48 8b 77 08          	movq	0x8(%rdi), %rsi
ffffffff800002fa: 48 89 c7             	movq	%rax, %rdi
ffffffff800002fd: e9 de a4 01 00       	jmp	0xffffffff8001a7e0 <<str as core::fmt::Display>::fmt::h8862704feddd2413>
ffffffff80000302: cc                   	int3
ffffffff80000303: cc                   	int3
ffffffff80000304: cc                   	int3
ffffffff80000305: cc                   	int3
ffffffff80000306: cc                   	int3
ffffffff80000307: cc                   	int3
ffffffff80000308: cc                   	int3
ffffffff80000309: cc                   	int3
ffffffff8000030a: cc                   	int3
ffffffff8000030b: cc                   	int3
ffffffff8000030c: cc                   	int3
ffffffff8000030d: cc                   	int3
ffffffff8000030e: cc                   	int3
ffffffff8000030f: cc                   	int3

ffffffff80000310 <<&T as core::fmt::Display>::fmt::h6f93a5d34fda4e37>:
ffffffff80000310: 48 8b 3f             	movq	(%rdi), %rdi
ffffffff80000313: e9 58 93 01 00       	jmp	0xffffffff80019670 <<core::fmt::Arguments as core::fmt::Display>::fmt::h748934159bb7ee61>
ffffffff80000318: cc                   	int3
ffffffff80000319: cc                   	int3
ffffffff8000031a: cc                   	int3
ffffffff8000031b: cc                   	int3
ffffffff8000031c: cc                   	int3
ffffffff8000031d: cc                   	int3
ffffffff8000031e: cc                   	int3
ffffffff8000031f: cc                   	int3

ffffffff80000320 <core::fmt::num::<impl core::fmt::Debug for u64>::fmt::hca0a2ef8424966c6>:
ffffffff80000320: 8b 46 24             	movl	0x24(%rsi), %eax
ffffffff80000323: a8 10                	testb	$0x10, %al
ffffffff80000325: 0f 85 f5 8f 01 00    	jne	0xffffffff80019320 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hd0e7c1aefe0075e3>
ffffffff8000032b: a8 20                	testb	$0x20, %al
ffffffff8000032d: 0f 85 6d 90 01 00    	jne	0xffffffff800193a0 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::h869006add1042b35>
ffffffff80000333: e9 88 b5 01 00       	jmp	0xffffffff8001b8c0 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f>
ffffffff80000338: cc                   	int3
ffffffff80000339: cc                   	int3
ffffffff8000033a: cc                   	int3
ffffffff8000033b: cc                   	int3
ffffffff8000033c: cc                   	int3
ffffffff8000033d: cc                   	int3
ffffffff8000033e: cc                   	int3
ffffffff8000033f: cc                   	int3

ffffffff80000340 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09f62a01ec113f1c>:
ffffffff80000340: 8b 46 24             	movl	0x24(%rsi), %eax
ffffffff80000343: a8 10                	testb	$0x10, %al
ffffffff80000345: 0f 85 d5 8f 01 00    	jne	0xffffffff80019320 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hd0e7c1aefe0075e3>
ffffffff8000034b: a8 20                	testb	$0x20, %al
ffffffff8000034d: 0f 85 4d 90 01 00    	jne	0xffffffff800193a0 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::h869006add1042b35>
ffffffff80000353: e9 68 b5 01 00       	jmp	0xffffffff8001b8c0 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f>
ffffffff80000358: cc                   	int3
ffffffff80000359: cc                   	int3
ffffffff8000035a: cc                   	int3
ffffffff8000035b: cc                   	int3
ffffffff8000035c: cc                   	int3
ffffffff8000035d: cc                   	int3
ffffffff8000035e: cc                   	int3
ffffffff8000035f: cc                   	int3

ffffffff80000360 <<x86_64::structures::idt::InterruptStackFrame as core::fmt::Debug>::fmt::h45b6642a28848021>:
ffffffff80000360: e9 db 83 01 00       	jmp	0xffffffff80018740 <<x86_64::structures::idt::InterruptStackFrameValue as core::fmt::Debug>::fmt::h547349f5b4b49a5c>
ffffffff80000365: cc                   	int3
ffffffff80000366: cc                   	int3
ffffffff80000367: cc                   	int3
ffffffff80000368: cc                   	int3
ffffffff80000369: cc                   	int3
ffffffff8000036a: cc                   	int3
ffffffff8000036b: cc                   	int3
ffffffff8000036c: cc                   	int3
ffffffff8000036d: cc                   	int3
ffffffff8000036e: cc                   	int3
ffffffff8000036f: cc                   	int3

ffffffff80000370 <<x86_64::structures::paging::mapper::FlagUpdateError as core::fmt::Debug>::fmt::h662ebedc53abc7d1.llvm.6482013028561868880>:
ffffffff80000370: 80 3f 00             	cmpb	$0x0, (%rdi)
ffffffff80000373: b8 13 00 00 00       	movl	$0x13, %eax
ffffffff80000378: ba 0d 00 00 00       	movl	$0xd, %edx
ffffffff8000037d: 48 0f 45 d0          	cmovneq	%rax, %rdx
ffffffff80000381: 48 c7 c1 f5 d1 01 80 	movq	$-0x7ffe2e0b, %rcx      # imm = 0x8001D1F5
ffffffff80000388: 48 c7 c0 e8 d1 01 80 	movq	$-0x7ffe2e18, %rax      # imm = 0x8001D1E8
ffffffff8000038f: 48 0f 45 c1          	cmovneq	%rcx, %rax
ffffffff80000393: 48 89 f7             	movq	%rsi, %rdi
ffffffff80000396: 48 89 c6             	movq	%rax, %rsi
ffffffff80000399: e9 42 9b 01 00       	jmp	0xffffffff80019ee0 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff8000039e: cc                   	int3
ffffffff8000039f: cc                   	int3

ffffffff800003a0 <<x86_64::structures::paging::mapper::MapToError<S> as core::fmt::Debug>::fmt::hcc62ad01c583fd9e.llvm.6482013028561868880>:
ffffffff800003a0: 48 8b 07             	movq	(%rdi), %rax
ffffffff800003a3: 48 85 c0             	testq	%rax, %rax
ffffffff800003a6: 74 19                	je	0xffffffff800003c1 <<x86_64::structures::paging::mapper::MapToError<S> as core::fmt::Debug>::fmt::hcc62ad01c583fd9e.llvm.6482013028561868880+0x21>
ffffffff800003a8: 83 f8 01             	cmpl	$0x1, %eax
ffffffff800003ab: 75 28                	jne	0xffffffff800003d5 <<x86_64::structures::paging::mapper::MapToError<S> as core::fmt::Debug>::fmt::hcc62ad01c583fd9e.llvm.6482013028561868880+0x35>
ffffffff800003ad: ba 13 00 00 00       	movl	$0x13, %edx
ffffffff800003b2: 48 89 f7             	movq	%rsi, %rdi
ffffffff800003b5: 48 c7 c6 f5 d1 01 80 	movq	$-0x7ffe2e0b, %rsi      # imm = 0x8001D1F5
ffffffff800003bc: e9 1f 9b 01 00       	jmp	0xffffffff80019ee0 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff800003c1: ba 15 00 00 00       	movl	$0x15, %edx
ffffffff800003c6: 48 89 f7             	movq	%rsi, %rdi
ffffffff800003c9: 48 c7 c6 08 d2 01 80 	movq	$-0x7ffe2df8, %rsi      # imm = 0x8001D208
ffffffff800003d0: e9 0b 9b 01 00       	jmp	0xffffffff80019ee0 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff800003d5: 50                   	pushq	%rax
ffffffff800003d6: 48 83 c7 08          	addq	$0x8, %rdi
ffffffff800003da: 48 89 3c 24          	movq	%rdi, (%rsp)
ffffffff800003de: 48 89 e1             	movq	%rsp, %rcx
ffffffff800003e1: ba 11 00 00 00       	movl	$0x11, %edx
ffffffff800003e6: 48 89 f7             	movq	%rsi, %rdi
ffffffff800003e9: 48 c7 c6 40 d2 01 80 	movq	$-0x7ffe2dc0, %rsi      # imm = 0x8001D240
ffffffff800003f0: 49 c7 c0 20 d2 01 80 	movq	$-0x7ffe2de0, %r8       # imm = 0x8001D220
ffffffff800003f7: e8 64 9c 01 00       	callq	0xffffffff8001a060 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>
ffffffff800003fc: 59                   	popq	%rcx
ffffffff800003fd: c3                   	retq
ffffffff800003fe: cc                   	int3
ffffffff800003ff: cc                   	int3

ffffffff80000400 <taos::interrupts::idt::init_idt::hdcaef96650e17ee9>:
ffffffff80000400: 53                   	pushq	%rbx
ffffffff80000401: 48 83 ec 10          	subq	$0x10, %rsp
ffffffff80000405: 0f b6 05 e4 5d 02 00 	movzbl	0x25de4(%rip), %eax     # 0xffffffff800261f0 <<taos::interrupts::idt::IDT as core::ops::deref::Deref>::deref::__stability::LAZY::h3c959f46fd8caf0f+0x1000>
ffffffff8000040c: 3c 02                	cmpb	$0x2, %al
ffffffff8000040e: 75 1d                	jne	0xffffffff8000042d <taos::interrupts::idt::init_idt::hdcaef96650e17ee9+0x2d>
ffffffff80000410: 48 8d 5c 24 06       	leaq	0x6(%rsp), %rbx
ffffffff80000415: 48 89 df             	movq	%rbx, %rdi
ffffffff80000418: 48 c7 c6 f0 51 02 80 	movq	$-0x7ffdae10, %rsi      # imm = 0x800251F0
ffffffff8000041f: e8 dc 82 01 00       	callq	0xffffffff80018700 <x86_64::structures::idt::InterruptDescriptorTable::pointer::h919539d5e33678bd>
ffffffff80000424: 0f 01 1b             	lidtq	(%rbx)
ffffffff80000427: 48 83 c4 10          	addq	$0x10, %rsp
ffffffff8000042b: 5b                   	popq	%rbx
ffffffff8000042c: c3                   	retq
ffffffff8000042d: 48 c7 c7 f0 51 02 80 	movq	$-0x7ffdae10, %rdi      # imm = 0x800251F0
ffffffff80000434: e8 37 1e 00 00       	callq	0xffffffff80002270 <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.14359069980145722807>
ffffffff80000439: eb d5                	jmp	0xffffffff80000410 <taos::interrupts::idt::init_idt::hdcaef96650e17ee9+0x10>
ffffffff8000043b: cc                   	int3
ffffffff8000043c: cc                   	int3
ffffffff8000043d: cc                   	int3
ffffffff8000043e: cc                   	int3
ffffffff8000043f: cc                   	int3

ffffffff80000440 <taos::interrupts::idt::breakpoint_handler::h6e0a8de6c541cbd9>:
ffffffff80000440: 41 53                	pushq	%r11
ffffffff80000442: 41 52                	pushq	%r10
ffffffff80000444: 41 51                	pushq	%r9
ffffffff80000446: 41 50                	pushq	%r8
ffffffff80000448: 57                   	pushq	%rdi
ffffffff80000449: 56                   	pushq	%rsi
ffffffff8000044a: 52                   	pushq	%rdx
ffffffff8000044b: 51                   	pushq	%rcx
ffffffff8000044c: 50                   	pushq	%rax
ffffffff8000044d: 48 81 ec 80 00 00 00 	subq	$0x80, %rsp
ffffffff80000454: fc                   	cld
ffffffff80000455: 48 8d 84 24 c8 00 00 00      	leaq	0xc8(%rsp), %rax
ffffffff8000045d: 48 89 44 24 08       	movq	%rax, 0x8(%rsp)
ffffffff80000462: 48 c7 44 24 10 60 03 00 80   	movq	$-0x7ffffca0, 0x10(%rsp) # imm = 0x80000360
ffffffff8000046b: 48 c7 44 24 48 02 00 00 00   	movq	$0x2, 0x48(%rsp)
ffffffff80000474: 48 c7 44 24 58 02 00 00 00   	movq	$0x2, 0x58(%rsp)
ffffffff8000047d: 48 c7 44 24 68 00 00 00 00   	movq	$0x0, 0x68(%rsp)
ffffffff80000486: 48 b8 20 00 00 00 04 00 00 00	movabsq	$0x400000020, %rax # imm = 0x400000020
ffffffff80000490: 48 89 44 24 70       	movq	%rax, 0x70(%rsp)
ffffffff80000495: c6 44 24 78 03       	movb	$0x3, 0x78(%rsp)
ffffffff8000049a: 48 c7 44 24 18 68 d2 01 80   	movq	$-0x7ffe2d98, 0x18(%rsp) # imm = 0x8001D268
ffffffff800004a3: 48 c7 44 24 20 02 00 00 00   	movq	$0x2, 0x20(%rsp)
ffffffff800004ac: 48 8d 44 24 48       	leaq	0x48(%rsp), %rax
ffffffff800004b1: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff800004b6: 48 c7 44 24 40 01 00 00 00   	movq	$0x1, 0x40(%rsp)
ffffffff800004bf: 48 8d 44 24 08       	leaq	0x8(%rsp), %rax
ffffffff800004c4: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff800004c9: 48 c7 44 24 30 01 00 00 00   	movq	$0x1, 0x30(%rsp)
ffffffff800004d2: 48 8d 7c 24 18       	leaq	0x18(%rsp), %rdi
ffffffff800004d7: e8 74 ad 00 00       	callq	0xffffffff8000b250 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff800004dc: 48 81 c4 80 00 00 00 	addq	$0x80, %rsp
ffffffff800004e3: 58                   	popq	%rax
ffffffff800004e4: 59                   	popq	%rcx
ffffffff800004e5: 5a                   	popq	%rdx
ffffffff800004e6: 5e                   	popq	%rsi
ffffffff800004e7: 5f                   	popq	%rdi
ffffffff800004e8: 41 58                	popq	%r8
ffffffff800004ea: 41 59                	popq	%r9
ffffffff800004ec: 41 5a                	popq	%r10
ffffffff800004ee: 41 5b                	popq	%r11
ffffffff800004f0: 48 cf                	iretq
ffffffff800004f2: cc                   	int3
ffffffff800004f3: cc                   	int3
ffffffff800004f4: cc                   	int3
ffffffff800004f5: cc                   	int3
ffffffff800004f6: cc                   	int3
ffffffff800004f7: cc                   	int3
ffffffff800004f8: cc                   	int3
ffffffff800004f9: cc                   	int3
ffffffff800004fa: cc                   	int3
ffffffff800004fb: cc                   	int3
ffffffff800004fc: cc                   	int3
ffffffff800004fd: cc                   	int3
ffffffff800004fe: cc                   	int3
ffffffff800004ff: cc                   	int3

ffffffff80000500 <taos::interrupts::idt::double_fault_handler::h54b511e9a236be7f>:
ffffffff80000500: 50                   	pushq	%rax
ffffffff80000501: 41 53                	pushq	%r11
ffffffff80000503: 41 52                	pushq	%r10
ffffffff80000505: 41 51                	pushq	%r9
ffffffff80000507: 41 50                	pushq	%r8
ffffffff80000509: 57                   	pushq	%rdi
ffffffff8000050a: 56                   	pushq	%rsi
ffffffff8000050b: 52                   	pushq	%rdx
ffffffff8000050c: 51                   	pushq	%rcx
ffffffff8000050d: 50                   	pushq	%rax
ffffffff8000050e: 48 81 ec 88 00 00 00 	subq	$0x88, %rsp
ffffffff80000515: fc                   	cld
ffffffff80000516: 48 8d 84 24 e0 00 00 00      	leaq	0xe0(%rsp), %rax
ffffffff8000051e: 48 89 44 24 10       	movq	%rax, 0x10(%rsp)
ffffffff80000523: 48 c7 44 24 18 60 03 00 80   	movq	$-0x7ffffca0, 0x18(%rsp) # imm = 0x80000360
ffffffff8000052c: 48 c7 44 24 50 02 00 00 00   	movq	$0x2, 0x50(%rsp)
ffffffff80000535: 48 c7 44 24 60 02 00 00 00   	movq	$0x2, 0x60(%rsp)
ffffffff8000053e: 48 c7 44 24 70 00 00 00 00   	movq	$0x0, 0x70(%rsp)
ffffffff80000547: 48 b8 20 00 00 00 04 00 00 00	movabsq	$0x400000020, %rax # imm = 0x400000020
ffffffff80000551: 48 89 44 24 78       	movq	%rax, 0x78(%rsp)
ffffffff80000556: c6 84 24 80 00 00 00 03      	movb	$0x3, 0x80(%rsp)
ffffffff8000055e: 48 c7 44 24 20 a0 d2 01 80   	movq	$-0x7ffe2d60, 0x20(%rsp) # imm = 0x8001D2A0
ffffffff80000567: 48 c7 44 24 28 01 00 00 00   	movq	$0x1, 0x28(%rsp)
ffffffff80000570: 48 8d 44 24 50       	leaq	0x50(%rsp), %rax
ffffffff80000575: 48 89 44 24 40       	movq	%rax, 0x40(%rsp)
ffffffff8000057a: 48 c7 44 24 48 01 00 00 00   	movq	$0x1, 0x48(%rsp)
ffffffff80000583: 48 8d 44 24 10       	leaq	0x10(%rsp), %rax
ffffffff80000588: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff8000058d: 48 c7 44 24 38 01 00 00 00   	movq	$0x1, 0x38(%rsp)
ffffffff80000596: 48 8d 7c 24 20       	leaq	0x20(%rsp), %rdi
ffffffff8000059b: 48 c7 c6 c8 d2 01 80 	movq	$-0x7ffe2d38, %rsi      # imm = 0x8001D2C8
ffffffff800005a2: e8 49 be 01 00       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff800005a7: cc                   	int3
ffffffff800005a8: cc                   	int3
ffffffff800005a9: cc                   	int3
ffffffff800005aa: cc                   	int3
ffffffff800005ab: cc                   	int3
ffffffff800005ac: cc                   	int3
ffffffff800005ad: cc                   	int3
ffffffff800005ae: cc                   	int3
ffffffff800005af: cc                   	int3

ffffffff800005b0 <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca>:
ffffffff800005b0: 50                   	pushq	%rax
ffffffff800005b1: 41 57                	pushq	%r15
ffffffff800005b3: 41 56                	pushq	%r14
ffffffff800005b5: 41 54                	pushq	%r12
ffffffff800005b7: 41 53                	pushq	%r11
ffffffff800005b9: 41 52                	pushq	%r10
ffffffff800005bb: 41 51                	pushq	%r9
ffffffff800005bd: 41 50                	pushq	%r8
ffffffff800005bf: 57                   	pushq	%rdi
ffffffff800005c0: 56                   	pushq	%rsi
ffffffff800005c1: 52                   	pushq	%rdx
ffffffff800005c2: 51                   	pushq	%rcx
ffffffff800005c3: 53                   	pushq	%rbx
ffffffff800005c4: 50                   	pushq	%rax
ffffffff800005c5: 48 81 ec 28 01 00 00 	subq	$0x128, %rsp            # imm = 0x128
ffffffff800005cc: fc                   	cld
ffffffff800005cd: 49 be 00 00 00 00 00 80 00 00	movabsq	$0x800000000000, %r14 # imm = 0x800000000000
ffffffff800005d7: 0f 20 d0             	movq	%cr2, %rax
ffffffff800005da: 48 89 c1             	movq	%rax, %rcx
ffffffff800005dd: 4c 01 f1             	addq	%r14, %rcx
ffffffff800005e0: 48 c1 e9 30          	shrq	$0x30, %rcx
ffffffff800005e4: 0f 85 66 02 00 00    	jne	0xffffffff80000850 <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x2a0>
ffffffff800005ea: 49 bf 00 00 00 00 00 00 01 00	movabsq	$0x1000000000000, %r15 # imm = 0x1000000000000
ffffffff800005f4: 48 89 44 24 08       	movq	%rax, 0x8(%rsp)
ffffffff800005f9: 41 0f 20 dc          	movq	%cr3, %r12
ffffffff800005fd: 0f b6 05 24 5c 02 00 	movzbl	0x25c24(%rip), %eax     # 0xffffffff80026228 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.6482013028561868880+0x8>
ffffffff80000604: 3c 02                	cmpb	$0x2, %al
ffffffff80000606: 74 0c                	je	0xffffffff80000614 <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x64>
ffffffff80000608: 48 c7 c7 20 62 02 80 	movq	$-0x7ffd9de0, %rdi      # imm = 0x80026220
ffffffff8000060f: e8 7c 27 00 00       	callq	0xffffffff80002d90 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.14359069980145722807>
ffffffff80000614: 48 8b 1d 05 5c 02 00 	movq	0x25c05(%rip), %rbx     # 0xffffffff80026220 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.6482013028561868880>
ffffffff8000061b: 4a 8d 04 33          	leaq	(%rbx,%r14), %rax
ffffffff8000061f: 4c 39 f8             	cmpq	%r15, %rax
ffffffff80000622: 0f 83 57 02 00 00    	jae	0xffffffff8000087f <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x2cf>
ffffffff80000628: 48 b8 00 f0 ff ff ff ff 0f 00	movabsq	$0xffffffffff000, %rax # imm = 0xFFFFFFFFFF000
ffffffff80000632: 49 21 c4             	andq	%rax, %r12
ffffffff80000635: 4c 01 e3             	addq	%r12, %rbx
ffffffff80000638: 4a 8d 04 33          	leaq	(%rbx,%r14), %rax
ffffffff8000063c: 4c 39 f8             	cmpq	%r15, %rax
ffffffff8000063f: 0f 83 3a 02 00 00    	jae	0xffffffff8000087f <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x2cf>
ffffffff80000645: 0f b6 05 dc 5b 02 00 	movzbl	0x25bdc(%rip), %eax     # 0xffffffff80026228 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.6482013028561868880+0x8>
ffffffff8000064c: 3c 02                	cmpb	$0x2, %al
ffffffff8000064e: 74 0c                	je	0xffffffff8000065c <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0xac>
ffffffff80000650: 48 c7 c7 20 62 02 80 	movq	$-0x7ffd9de0, %rdi      # imm = 0x80026220
ffffffff80000657: e8 34 27 00 00       	callq	0xffffffff80002d90 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.14359069980145722807>
ffffffff8000065c: 48 8b 05 bd 5b 02 00 	movq	0x25bbd(%rip), %rax     # 0xffffffff80026220 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.6482013028561868880>
ffffffff80000663: 4a 8d 0c 30          	leaq	(%rax,%r14), %rcx
ffffffff80000667: 4c 39 f9             	cmpq	%r15, %rcx
ffffffff8000066a: 0f 83 0f 02 00 00    	jae	0xffffffff8000087f <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x2cf>
ffffffff80000670: 48 8d 8c 24 a0 01 00 00      	leaq	0x1a0(%rsp), %rcx
ffffffff80000678: 48 89 5c 24 10       	movq	%rbx, 0x10(%rsp)
ffffffff8000067d: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff80000682: 4c 8b 61 18          	movq	0x18(%rcx), %r12
ffffffff80000686: 48 8d 44 24 08       	leaq	0x8(%rsp), %rax
ffffffff8000068b: 48 89 44 24 50       	movq	%rax, 0x50(%rsp)
ffffffff80000690: 48 c7 44 24 58 20 03 00 80   	movq	$-0x7ffffce0, 0x58(%rsp) # imm = 0x80000320
ffffffff80000699: 48 8d 84 24 98 01 00 00      	leaq	0x198(%rsp), %rax
ffffffff800006a1: 48 89 44 24 60       	movq	%rax, 0x60(%rsp)
ffffffff800006a6: 48 c7 44 24 68 40 88 01 80   	movq	$-0x7ffe77c0, 0x68(%rsp) # imm = 0x80018840
ffffffff800006af: 48 89 4c 24 70       	movq	%rcx, 0x70(%rsp)
ffffffff800006b4: 48 c7 44 24 78 60 03 00 80   	movq	$-0x7ffffca0, 0x78(%rsp) # imm = 0x80000360
ffffffff800006bd: 48 c7 84 24 80 00 00 00 02 00 00 00  	movq	$0x2, 0x80(%rsp)
ffffffff800006c9: 48 c7 84 24 90 00 00 00 02 00 00 00  	movq	$0x2, 0x90(%rsp)
ffffffff800006d5: 48 c7 84 24 a0 00 00 00 00 00 00 00  	movq	$0x0, 0xa0(%rsp)
ffffffff800006e1: 48 c7 84 24 a8 00 00 00 20 00 00 00  	movq	$0x20, 0xa8(%rsp)
ffffffff800006ed: c6 84 24 b0 00 00 00 03      	movb	$0x3, 0xb0(%rsp)
ffffffff800006f5: 48 c7 84 24 b8 00 00 00 02 00 00 00  	movq	$0x2, 0xb8(%rsp)
ffffffff80000701: 48 c7 84 24 c8 00 00 00 02 00 00 00  	movq	$0x2, 0xc8(%rsp)
ffffffff8000070d: 48 c7 84 24 d8 00 00 00 01 00 00 00  	movq	$0x1, 0xd8(%rsp)
ffffffff80000719: 48 c7 84 24 e0 00 00 00 20 00 00 00  	movq	$0x20, 0xe0(%rsp)
ffffffff80000725: c6 84 24 e8 00 00 00 03      	movb	$0x3, 0xe8(%rsp)
ffffffff8000072d: 48 c7 84 24 f0 00 00 00 02 00 00 00  	movq	$0x2, 0xf0(%rsp)
ffffffff80000739: 48 c7 84 24 00 01 00 00 02 00 00 00  	movq	$0x2, 0x100(%rsp)
ffffffff80000745: 48 c7 84 24 10 01 00 00 02 00 00 00  	movq	$0x2, 0x110(%rsp)
ffffffff80000751: 48 b8 20 00 00 00 04 00 00 00	movabsq	$0x400000020, %rax # imm = 0x400000020
ffffffff8000075b: 48 89 84 24 18 01 00 00      	movq	%rax, 0x118(%rsp)
ffffffff80000763: c6 84 24 20 01 00 00 03      	movb	$0x3, 0x120(%rsp)
ffffffff8000076b: 48 c7 44 24 20 c0 d3 01 80   	movq	$-0x7ffe2c40, 0x20(%rsp) # imm = 0x8001D3C0
ffffffff80000774: 48 c7 44 24 28 04 00 00 00   	movq	$0x4, 0x28(%rsp)
ffffffff8000077d: 48 8d 84 24 80 00 00 00      	leaq	0x80(%rsp), %rax
ffffffff80000785: 48 89 44 24 40       	movq	%rax, 0x40(%rsp)
ffffffff8000078a: 48 c7 44 24 48 03 00 00 00   	movq	$0x3, 0x48(%rsp)
ffffffff80000793: 48 8d 44 24 50       	leaq	0x50(%rsp), %rax
ffffffff80000798: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff8000079d: 48 c7 44 24 38 03 00 00 00   	movq	$0x3, 0x38(%rsp)
ffffffff800007a6: 48 8d 7c 24 20       	leaq	0x20(%rsp), %rdi
ffffffff800007ab: e8 a0 aa 00 00       	callq	0xffffffff8000b250 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff800007b0: 48 8b 5c 24 08       	movq	0x8(%rsp), %rbx
ffffffff800007b5: 49 01 de             	addq	%rbx, %r14
ffffffff800007b8: 4d 39 fe             	cmpq	%r15, %r14
ffffffff800007bb: 0f 83 be 00 00 00    	jae	0xffffffff8000087f <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x2cf>
ffffffff800007c1: 49 83 c4 c0          	addq	$-0x40, %r12
ffffffff800007c5: 49 39 dc             	cmpq	%rbx, %r12
ffffffff800007c8: 77 36                	ja	0xffffffff80000800 <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x250>
ffffffff800007ca: 0f b6 05 57 5a 02 00 	movzbl	0x25a57(%rip), %eax     # 0xffffffff80026228 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.6482013028561868880+0x8>
ffffffff800007d1: 3c 02                	cmpb	$0x2, %al
ffffffff800007d3: 74 0c                	je	0xffffffff800007e1 <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x231>
ffffffff800007d5: 48 c7 c7 20 62 02 80 	movq	$-0x7ffd9de0, %rdi      # imm = 0x80026220
ffffffff800007dc: e8 af 25 00 00       	callq	0xffffffff80002d90 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.14359069980145722807>
ffffffff800007e1: 48 3b 1d 38 5a 02 00 	cmpq	0x25a38(%rip), %rbx     # 0xffffffff80026220 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.6482013028561868880>
ffffffff800007e8: 73 16                	jae	0xffffffff80000800 <taos::interrupts::idt::page_fault_handler::h7c5b556adea364ca+0x250>
ffffffff800007ea: 48 81 e3 00 f0 ff ff 	andq	$-0x1000, %rbx          # imm = 0xF000
ffffffff800007f1: 48 8d 74 24 10       	leaq	0x10(%rsp), %rsi
ffffffff800007f6: 48 89 df             	movq	%rbx, %rdi
ffffffff800007f9: 31 d2                	xorl	%edx, %edx
ffffffff800007fb: e8 b0 09 00 00       	callq	0xffffffff800011b0 <taos::memory::paging::create_mapping::h82f738cb2eb9bd37>
ffffffff80000800: 48 c7 84 24 80 00 00 00 10 d4 01 80  	movq	$-0x7ffe2bf0, 0x80(%rsp) # imm = 0x8001D410
ffffffff8000080c: 48 c7 84 24 88 00 00 00 01 00 00 00  	movq	$0x1, 0x88(%rsp)
ffffffff80000818: 48 c7 84 24 a0 00 00 00 00 00 00 00  	movq	$0x0, 0xa0(%rsp)
ffffffff80000824: 48 c7 84 24 90 00 00 00 08 00 00 00  	movq	$0x8, 0x90(%rsp)
ffffffff80000830: 48 c7 84 24 98 00 00 00 00 00 00 00  	movq	$0x0, 0x98(%rsp)
ffffffff8000083c: 48 8d bc 24 80 00 00 00      	leaq	0x80(%rsp), %rdi
ffffffff80000844: 48 c7 c6 20 d4 01 80 	movq	$-0x7ffe2be0, %rsi      # imm = 0x8001D420
ffffffff8000084b: e8 a0 bb 01 00       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff80000850: 48 89 84 24 80 00 00 00      	movq	%rax, 0x80(%rsp)
ffffffff80000858: 48 8d 94 24 80 00 00 00      	leaq	0x80(%rsp), %rdx
ffffffff80000860: be 1c 00 00 00       	movl	$0x1c, %esi
ffffffff80000865: 48 c7 c7 00 d3 01 80 	movq	$-0x7ffe2d00, %rdi      # imm = 0x8001D300
ffffffff8000086c: 48 c7 c1 e0 d2 01 80 	movq	$-0x7ffe2d20, %rcx      # imm = 0x8001D2E0
ffffffff80000873: 49 c7 c0 20 d3 01 80 	movq	$-0x7ffe2ce0, %r8       # imm = 0x8001D320
ffffffff8000087a: e8 61 b6 01 00       	callq	0xffffffff8001bee0 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff8000087f: be 36 00 00 00       	movl	$0x36, %esi
ffffffff80000884: 48 c7 c7 38 d3 01 80 	movq	$-0x7ffe2cc8, %rdi      # imm = 0x8001D338
ffffffff8000088b: 48 c7 c2 70 d3 01 80 	movq	$-0x7ffe2c90, %rdx      # imm = 0x8001D370
ffffffff80000892: e8 d9 bb 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80000897: cc                   	int3
ffffffff80000898: cc                   	int3
ffffffff80000899: cc                   	int3
ffffffff8000089a: cc                   	int3
ffffffff8000089b: cc                   	int3
ffffffff8000089c: cc                   	int3
ffffffff8000089d: cc                   	int3
ffffffff8000089e: cc                   	int3
ffffffff8000089f: cc                   	int3

ffffffff800008a0 <syscall_handler>:
ffffffff800008a0: 53                   	pushq	%rbx
ffffffff800008a1: 48 81 ec 80 00 00 00 	subq	$0x80, %rsp
ffffffff800008a8: 48 8b 47 30          	movq	0x30(%rdi), %rax
ffffffff800008ac: 48 89 44 24 48       	movq	%rax, 0x48(%rsp)
ffffffff800008b1: 48 8b 47 28          	movq	0x28(%rdi), %rax
ffffffff800008b5: 48 89 44 24 50       	movq	%rax, 0x50(%rsp)
ffffffff800008ba: 48 8b 47 20          	movq	0x20(%rdi), %rax
ffffffff800008be: 48 89 44 24 58       	movq	%rax, 0x58(%rsp)
ffffffff800008c3: 48 8b 47 18          	movq	0x18(%rdi), %rax
ffffffff800008c7: 48 89 44 24 60       	movq	%rax, 0x60(%rsp)
ffffffff800008cc: 48 8b 47 10          	movq	0x10(%rdi), %rax
ffffffff800008d0: 48 89 44 24 68       	movq	%rax, 0x68(%rsp)
ffffffff800008d5: 48 8b 47 08          	movq	0x8(%rdi), %rax
ffffffff800008d9: 48 89 44 24 70       	movq	%rax, 0x70(%rsp)
ffffffff800008de: 48 8b 07             	movq	(%rdi), %rax
ffffffff800008e1: 48 89 44 24 78       	movq	%rax, 0x78(%rsp)
ffffffff800008e6: 48 8d 44 24 50       	leaq	0x50(%rsp), %rax
ffffffff800008eb: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff800008f0: 48 c7 44 24 40 c0 b8 01 80   	movq	$-0x7ffe4740, 0x40(%rsp) # imm = 0x8001B8C0
ffffffff800008f9: 48 c7 04 24 48 d4 01 80      	movq	$-0x7ffe2bb8, (%rsp) # imm = 0x8001D448
ffffffff80000901: 48 c7 44 24 08 02 00 00 00   	movq	$0x2, 0x8(%rsp)
ffffffff8000090a: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff80000913: 48 8d 5c 24 38       	leaq	0x38(%rsp), %rbx
ffffffff80000918: 48 89 5c 24 10       	movq	%rbx, 0x10(%rsp)
ffffffff8000091d: 48 c7 44 24 18 01 00 00 00   	movq	$0x1, 0x18(%rsp)
ffffffff80000926: 48 89 e7             	movq	%rsp, %rdi
ffffffff80000929: e8 22 a9 00 00       	callq	0xffffffff8000b250 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff8000092e: 48 8d 44 24 58       	leaq	0x58(%rsp), %rax
ffffffff80000933: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff80000938: 48 c7 44 24 40 c0 b8 01 80   	movq	$-0x7ffe4740, 0x40(%rsp) # imm = 0x8001B8C0
ffffffff80000941: 48 c7 04 24 78 d4 01 80      	movq	$-0x7ffe2b88, (%rsp) # imm = 0x8001D478
ffffffff80000949: 48 c7 44 24 08 02 00 00 00   	movq	$0x2, 0x8(%rsp)
ffffffff80000952: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff8000095b: 48 89 5c 24 10       	movq	%rbx, 0x10(%rsp)
ffffffff80000960: 48 c7 44 24 18 01 00 00 00   	movq	$0x1, 0x18(%rsp)
ffffffff80000969: 48 89 e7             	movq	%rsp, %rdi
ffffffff8000096c: e8 df a8 00 00       	callq	0xffffffff8000b250 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff80000971: 48 8d 44 24 60       	leaq	0x60(%rsp), %rax
ffffffff80000976: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff8000097b: 48 c7 44 24 40 c0 b8 01 80   	movq	$-0x7ffe4740, 0x40(%rsp) # imm = 0x8001B8C0
ffffffff80000984: 48 c7 04 24 a8 d4 01 80      	movq	$-0x7ffe2b58, (%rsp) # imm = 0x8001D4A8
ffffffff8000098c: 48 c7 44 24 08 02 00 00 00   	movq	$0x2, 0x8(%rsp)
ffffffff80000995: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff8000099e: 48 89 5c 24 10       	movq	%rbx, 0x10(%rsp)
ffffffff800009a3: 48 c7 44 24 18 01 00 00 00   	movq	$0x1, 0x18(%rsp)
ffffffff800009ac: 48 89 e7             	movq	%rsp, %rdi
ffffffff800009af: e8 9c a8 00 00       	callq	0xffffffff8000b250 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff800009b4: 48 8d 44 24 68       	leaq	0x68(%rsp), %rax
ffffffff800009b9: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff800009be: 48 c7 44 24 40 c0 b8 01 80   	movq	$-0x7ffe4740, 0x40(%rsp) # imm = 0x8001B8C0
ffffffff800009c7: 48 c7 04 24 d8 d4 01 80      	movq	$-0x7ffe2b28, (%rsp) # imm = 0x8001D4D8
ffffffff800009cf: 48 c7 44 24 08 02 00 00 00   	movq	$0x2, 0x8(%rsp)
ffffffff800009d8: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff800009e1: 48 89 5c 24 10       	movq	%rbx, 0x10(%rsp)
ffffffff800009e6: 48 c7 44 24 18 01 00 00 00   	movq	$0x1, 0x18(%rsp)
ffffffff800009ef: 48 89 e7             	movq	%rsp, %rdi
ffffffff800009f2: e8 59 a8 00 00       	callq	0xffffffff8000b250 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff800009f7: 48 8d 44 24 70       	leaq	0x70(%rsp), %rax
ffffffff800009fc: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff80000a01: 48 c7 44 24 40 c0 b8 01 80   	movq	$-0x7ffe4740, 0x40(%rsp) # imm = 0x8001B8C0
ffffffff80000a0a: 48 c7 04 24 08 d5 01 80      	movq	$-0x7ffe2af8, (%rsp) # imm = 0x8001D508
ffffffff80000a12: 48 c7 44 24 08 02 00 00 00   	movq	$0x2, 0x8(%rsp)
ffffffff80000a1b: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff80000a24: 48 89 5c 24 10       	movq	%rbx, 0x10(%rsp)
ffffffff80000a29: 48 c7 44 24 18 01 00 00 00   	movq	$0x1, 0x18(%rsp)
ffffffff80000a32: 48 89 e7             	movq	%rsp, %rdi
ffffffff80000a35: e8 16 a8 00 00       	callq	0xffffffff8000b250 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff80000a3a: 48 8d 44 24 78       	leaq	0x78(%rsp), %rax
ffffffff80000a3f: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff80000a44: 48 c7 44 24 40 c0 b8 01 80   	movq	$-0x7ffe4740, 0x40(%rsp) # imm = 0x8001B8C0
ffffffff80000a4d: 48 c7 04 24 38 d5 01 80      	movq	$-0x7ffe2ac8, (%rsp) # imm = 0x8001D538
ffffffff80000a55: 48 c7 44 24 08 02 00 00 00   	movq	$0x2, 0x8(%rsp)
ffffffff80000a5e: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff80000a67: 48 89 5c 24 10       	movq	%rbx, 0x10(%rsp)
ffffffff80000a6c: 48 c7 44 24 18 01 00 00 00   	movq	$0x1, 0x18(%rsp)
ffffffff80000a75: 48 89 e7             	movq	%rsp, %rdi
ffffffff80000a78: e8 d3 a7 00 00       	callq	0xffffffff8000b250 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff80000a7d: 8b 44 24 48          	movl	0x48(%rsp), %eax
ffffffff80000a81: 83 f8 01             	cmpl	$0x1, %eax
ffffffff80000a84: 74 3c                	je	0xffffffff80000ac2 <syscall_handler+0x222>
ffffffff80000a86: 83 f8 03             	cmpl	$0x3, %eax
ffffffff80000a89: 75 55                	jne	0xffffffff80000ae0 <syscall_handler+0x240>
ffffffff80000a8b: 48 c7 04 24 68 d5 01 80      	movq	$-0x7ffe2a98, (%rsp) # imm = 0x8001D568
ffffffff80000a93: 48 c7 44 24 08 01 00 00 00   	movq	$0x1, 0x8(%rsp)
ffffffff80000a9c: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff80000aa5: 48 8d 44 24 30       	leaq	0x30(%rsp), %rax
ffffffff80000aaa: 48 89 44 24 10       	movq	%rax, 0x10(%rsp)
ffffffff80000aaf: 48 c7 44 24 18 00 00 00 00   	movq	$0x0, 0x18(%rsp)
ffffffff80000ab8: 48 89 e7             	movq	%rsp, %rdi
ffffffff80000abb: e8 90 a7 00 00       	callq	0xffffffff8000b250 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff80000ac0: eb 0a                	jmp	0xffffffff80000acc <syscall_handler+0x22c>
ffffffff80000ac2: 48 8b 7c 24 50       	movq	0x50(%rsp), %rdi
ffffffff80000ac7: e8 04 02 01 00       	callq	0xffffffff80010cd0 <taos::syscalls::syscall_handlers::sys_exit::h32fe19e9a1355d1a>
ffffffff80000acc: b9 0b 08 00 00       	movl	$0x80b, %ecx            # imm = 0x80B
ffffffff80000ad1: 31 c0                	xorl	%eax, %eax
ffffffff80000ad3: 31 d2                	xorl	%edx, %edx
ffffffff80000ad5: 0f 30                	wrmsr
ffffffff80000ad7: 48 81 c4 80 00 00 00 	addq	$0x80, %rsp
ffffffff80000ade: 5b                   	popq	%rbx
ffffffff80000adf: c3                   	retq
ffffffff80000ae0: 48 8d 44 24 48       	leaq	0x48(%rsp), %rax
ffffffff80000ae5: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff80000aea: 48 c7 44 24 40 c0 b8 01 80   	movq	$-0x7ffe4740, 0x40(%rsp) # imm = 0x8001B8C0
ffffffff80000af3: 48 c7 04 24 90 d5 01 80      	movq	$-0x7ffe2a70, (%rsp) # imm = 0x8001D590
ffffffff80000afb: 48 c7 44 24 08 01 00 00 00   	movq	$0x1, 0x8(%rsp)
ffffffff80000b04: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff80000b0d: 48 89 5c 24 10       	movq	%rbx, 0x10(%rsp)
ffffffff80000b12: 48 c7 44 24 18 01 00 00 00   	movq	$0x1, 0x18(%rsp)
ffffffff80000b1b: 48 89 e7             	movq	%rsp, %rdi
ffffffff80000b1e: 48 c7 c6 a0 d5 01 80 	movq	$-0x7ffe2a60, %rsi      # imm = 0x8001D5A0
ffffffff80000b25: e8 c6 b8 01 00       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff80000b2a: cc                   	int3
ffffffff80000b2b: cc                   	int3
ffffffff80000b2c: cc                   	int3
ffffffff80000b2d: cc                   	int3
ffffffff80000b2e: cc                   	int3
ffffffff80000b2f: cc                   	int3

ffffffff80000b30 <timer_handler>:
ffffffff80000b30: 55                   	pushq	%rbp
ffffffff80000b31: 41 57                	pushq	%r15
ffffffff80000b33: 41 56                	pushq	%r14
ffffffff80000b35: 53                   	pushq	%rbx
ffffffff80000b36: 48 83 ec 28          	subq	$0x28, %rsp
ffffffff80000b3a: 49 89 fe             	movq	%rdi, %r14
ffffffff80000b3d: b9 02 08 00 00       	movl	$0x802, %ecx            # imm = 0x802
ffffffff80000b42: 0f 32                	rdmsr
ffffffff80000b44: 89 c3                	movl	%eax, %ebx
ffffffff80000b46: 89 c7                	movl	%eax, %edi
ffffffff80000b48: e8 33 9e 00 00       	callq	0xffffffff8000a980 <taos::events::current_running_event_info::h26232e862fef7a5d>
ffffffff80000b4d: 85 d2                	testl	%edx, %edx
ffffffff80000b4f: 0f 84 b8 01 00 00    	je	0xffffffff80000d0d <timer_handler+0x1dd>
ffffffff80000b55: 0f b6 05 ac 58 02 00 	movzbl	0x258ac(%rip), %eax     # 0xffffffff80026408 <_ZN83_$LT$taos..processes..process..PROCESS_TABLE$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17he905a56e6b762301E.llvm.4978740807361014121+0x8>
ffffffff80000b5c: 3c 02                	cmpb	$0x2, %al
ffffffff80000b5e: 0f 85 f1 01 00 00    	jne	0xffffffff80000d55 <timer_handler+0x225>
ffffffff80000b64: 48 8b 35 95 58 02 00 	movq	0x25895(%rip), %rsi     # 0xffffffff80026400 <_ZN83_$LT$taos..processes..process..PROCESS_TABLE$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17he905a56e6b762301E.llvm.4978740807361014121>
ffffffff80000b6b: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff80000b70: 31 c0                	xorl	%eax, %eax
ffffffff80000b72: f0                   	lock
ffffffff80000b73: 48 0f b1 4e 10       	cmpxchgq	%rcx, 0x10(%rsi)
ffffffff80000b78: 74 12                	je	0xffffffff80000b8c <timer_handler+0x5c>
ffffffff80000b7a: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff80000b80: f3 90                	pause
ffffffff80000b82: 31 c0                	xorl	%eax, %eax
ffffffff80000b84: f0                   	lock
ffffffff80000b85: 48 0f b1 4e 10       	cmpxchgq	%rcx, 0x10(%rsi)
ffffffff80000b8a: 75 f4                	jne	0xffffffff80000b80 <timer_handler+0x50>
ffffffff80000b8c: 48 8b 46 18          	movq	0x18(%rsi), %rax
ffffffff80000b90: 48 85 c0             	testq	%rax, %rax
ffffffff80000b93: 0f 84 d1 01 00 00    	je	0xffffffff80000d6a <timer_handler+0x23a>
ffffffff80000b99: 48 8b 4e 20          	movq	0x20(%rsi), %rcx
ffffffff80000b9d: bf ff 00 00 00       	movl	$0xff, %edi
ffffffff80000ba2: 44 0f b7 88 8e 00 00 00      	movzwl	0x8e(%rax), %r9d
ffffffff80000baa: 45 89 ca             	movl	%r9d, %r10d
ffffffff80000bad: 41 c1 e2 02          	shll	$0x2, %r10d
ffffffff80000bb1: 49 c7 c0 ff ff ff ff 	movq	$-0x1, %r8
ffffffff80000bb8: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
ffffffff80000bc0: 4d 85 d2             	testq	%r10, %r10
ffffffff80000bc3: 74 2b                	je	0xffffffff80000bf0 <timer_handler+0xc0>
ffffffff80000bc5: 45 31 db             	xorl	%r11d, %r11d
ffffffff80000bc8: 42 39 54 80 64       	cmpl	%edx, 0x64(%rax,%r8,4)
ffffffff80000bcd: 41 0f 95 c3          	setne	%r11b
ffffffff80000bd1: 44 0f 47 df          	cmoval	%edi, %r11d
ffffffff80000bd5: 49 ff c0             	incq	%r8
ffffffff80000bd8: 49 83 c2 fc          	addq	$-0x4, %r10
ffffffff80000bdc: 41 80 fb 01          	cmpb	$0x1, %r11b
ffffffff80000be0: 74 de                	je	0xffffffff80000bc0 <timer_handler+0x90>
ffffffff80000be2: 45 0f b6 cb          	movzbl	%r11b, %r9d
ffffffff80000be6: 45 85 c9             	testl	%r9d, %r9d
ffffffff80000be9: 74 1c                	je	0xffffffff80000c07 <timer_handler+0xd7>
ffffffff80000beb: eb 06                	jmp	0xffffffff80000bf3 <timer_handler+0xc3>
ffffffff80000bed: 0f 1f 00             	nopl	(%rax)
ffffffff80000bf0: 4d 89 c8             	movq	%r9, %r8
ffffffff80000bf3: 48 83 e9 01          	subq	$0x1, %rcx
ffffffff80000bf7: 0f 82 6d 01 00 00    	jb	0xffffffff80000d6a <timer_handler+0x23a>
ffffffff80000bfd: 4a 8b 84 c0 90 00 00 00      	movq	0x90(%rax,%r8,8), %rax
ffffffff80000c05: eb 9b                	jmp	0xffffffff80000ba2 <timer_handler+0x72>
ffffffff80000c07: 4a 8b 44 c0 08       	movq	0x8(%rax,%r8,8), %rax
ffffffff80000c0c: 80 b8 bc 00 00 00 02 	cmpb	$0x2, 0xbc(%rax)
ffffffff80000c13: 0f 85 01 01 00 00    	jne	0xffffffff80000d1a <timer_handler+0x1ea>
ffffffff80000c19: 49 8b 0e             	movq	(%r14), %rcx
ffffffff80000c1c: 48 89 48 20          	movq	%rcx, 0x20(%rax)
ffffffff80000c20: 49 8b 4e 08          	movq	0x8(%r14), %rcx
ffffffff80000c24: 48 89 48 28          	movq	%rcx, 0x28(%rax)
ffffffff80000c28: 49 8b 4e 10          	movq	0x10(%r14), %rcx
ffffffff80000c2c: 48 89 48 30          	movq	%rcx, 0x30(%rax)
ffffffff80000c30: 49 8b 4e 18          	movq	0x18(%r14), %rcx
ffffffff80000c34: 48 89 48 38          	movq	%rcx, 0x38(%rax)
ffffffff80000c38: 49 8b 4e 20          	movq	0x20(%r14), %rcx
ffffffff80000c3c: 48 89 48 40          	movq	%rcx, 0x40(%rax)
ffffffff80000c40: 49 8b 4e 28          	movq	0x28(%r14), %rcx
ffffffff80000c44: 48 89 48 48          	movq	%rcx, 0x48(%rax)
ffffffff80000c48: 49 8b 4e 30          	movq	0x30(%r14), %rcx
ffffffff80000c4c: 48 89 48 50          	movq	%rcx, 0x50(%rax)
ffffffff80000c50: 49 8b 4e 38          	movq	0x38(%r14), %rcx
ffffffff80000c54: 48 89 48 58          	movq	%rcx, 0x58(%rax)
ffffffff80000c58: 49 8b 4e 40          	movq	0x40(%r14), %rcx
ffffffff80000c5c: 48 89 48 60          	movq	%rcx, 0x60(%rax)
ffffffff80000c60: 49 8b 4e 48          	movq	0x48(%r14), %rcx
ffffffff80000c64: 48 89 48 68          	movq	%rcx, 0x68(%rax)
ffffffff80000c68: 49 8b 4e 50          	movq	0x50(%r14), %rcx
ffffffff80000c6c: 48 89 48 70          	movq	%rcx, 0x70(%rax)
ffffffff80000c70: 49 8b 4e 58          	movq	0x58(%r14), %rcx
ffffffff80000c74: 48 89 48 78          	movq	%rcx, 0x78(%rax)
ffffffff80000c78: 49 8b 4e 60          	movq	0x60(%r14), %rcx
ffffffff80000c7c: 48 89 88 80 00 00 00 	movq	%rcx, 0x80(%rax)
ffffffff80000c83: 49 8b 4e 68          	movq	0x68(%r14), %rcx
ffffffff80000c87: 48 89 88 88 00 00 00 	movq	%rcx, 0x88(%rax)
ffffffff80000c8e: 49 8b 4e 70          	movq	0x70(%r14), %rcx
ffffffff80000c92: 48 89 88 90 00 00 00 	movq	%rcx, 0x90(%rax)
ffffffff80000c99: 49 8b 8e 90 00 00 00 	movq	0x90(%r14), %rcx
ffffffff80000ca0: 48 89 88 98 00 00 00 	movq	%rcx, 0x98(%rax)
ffffffff80000ca7: 49 8b 4e 78          	movq	0x78(%r14), %rcx
ffffffff80000cab: 48 89 88 a0 00 00 00 	movq	%rcx, 0xa0(%rax)
ffffffff80000cb2: 49 8b 8e 88 00 00 00 	movq	0x88(%r14), %rcx
ffffffff80000cb9: 48 89 88 a8 00 00 00 	movq	%rcx, 0xa8(%rax)
ffffffff80000cc0: c6 80 bc 00 00 00 03 	movb	$0x3, 0xbc(%rax)
ffffffff80000cc7: 4c 8b 70 10          	movq	0x10(%rax), %r14
ffffffff80000ccb: 4c 8b 78 18          	movq	0x18(%rax), %r15
ffffffff80000ccf: f0                   	lock
ffffffff80000cd0: 48 83 66 10 fc       	andq	$-0x4, 0x10(%rsi)
ffffffff80000cd5: 89 d0                	movl	%edx, %eax
ffffffff80000cd7: 89 5c 24 08          	movl	%ebx, 0x8(%rsp)
ffffffff80000cdb: 89 54 24 0c          	movl	%edx, 0xc(%rsp)
ffffffff80000cdf: 48 8d 4c 24 08       	leaq	0x8(%rsp), %rcx
ffffffff80000ce4: 48 89 4c 24 10       	movq	%rcx, 0x10(%rsp)
ffffffff80000ce9: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff80000cee: 48 8d 44 24 0c       	leaq	0xc(%rsp), %rax
ffffffff80000cf3: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff80000cf8: 9c                   	pushfq
ffffffff80000cf9: 58                   	popq	%rax
ffffffff80000cfa: a9 00 02 00 00       	testl	$0x200, %eax            # imm = 0x200
ffffffff80000cff: 75 2c                	jne	0xffffffff80000d2d <timer_handler+0x1fd>
ffffffff80000d01: 48 8d 7c 24 10       	leaq	0x10(%rsp), %rdi
ffffffff80000d06: e8 d5 8f 00 00       	callq	0xffffffff80009ce0 <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580>
ffffffff80000d0b: eb 2c                	jmp	0xffffffff80000d39 <timer_handler+0x209>
ffffffff80000d0d: b9 0b 08 00 00       	movl	$0x80b, %ecx            # imm = 0x80B
ffffffff80000d12: 31 c0                	xorl	%eax, %eax
ffffffff80000d14: 31 d2                	xorl	%edx, %edx
ffffffff80000d16: 0f 30                	wrmsr
ffffffff80000d18: eb 30                	jmp	0xffffffff80000d4a <timer_handler+0x21a>
ffffffff80000d1a: b9 0b 08 00 00       	movl	$0x80b, %ecx            # imm = 0x80B
ffffffff80000d1f: 31 c0                	xorl	%eax, %eax
ffffffff80000d21: 31 d2                	xorl	%edx, %edx
ffffffff80000d23: 0f 30                	wrmsr
ffffffff80000d25: f0                   	lock
ffffffff80000d26: 48 83 66 10 fc       	andq	$-0x4, 0x10(%rsi)
ffffffff80000d2b: eb 1d                	jmp	0xffffffff80000d4a <timer_handler+0x21a>
ffffffff80000d2d: fa                   	cli
ffffffff80000d2e: 48 8d 7c 24 10       	leaq	0x10(%rsp), %rdi
ffffffff80000d33: e8 a8 8f 00 00       	callq	0xffffffff80009ce0 <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580>
ffffffff80000d38: fb                   	sti
ffffffff80000d39: 4c 89 f4             	movq	%r14, %rsp
ffffffff80000d3c: 41 57                	pushq	%r15
ffffffff80000d3e: b9 0b 08 00 00       	movl	$0x80b, %ecx            # imm = 0x80B
ffffffff80000d43: 31 c0                	xorl	%eax, %eax
ffffffff80000d45: 31 d2                	xorl	%edx, %edx
ffffffff80000d47: 0f 30                	wrmsr
ffffffff80000d49: c3                   	retq
ffffffff80000d4a: 48 83 c4 28          	addq	$0x28, %rsp
ffffffff80000d4e: 5b                   	popq	%rbx
ffffffff80000d4f: 41 5e                	popq	%r14
ffffffff80000d51: 41 5f                	popq	%r15
ffffffff80000d53: 5d                   	popq	%rbp
ffffffff80000d54: c3                   	retq
ffffffff80000d55: 48 c7 c7 00 64 02 80 	movq	$-0x7ffd9c00, %rdi      # imm = 0x80026400
ffffffff80000d5c: 89 d5                	movl	%edx, %ebp
ffffffff80000d5e: e8 2d 13 00 00       	callq	0xffffffff80002090 <spin::once::Once<T,R>::try_call_once_slow::h18e40e08e0d1d65a.llvm.14359069980145722807>
ffffffff80000d63: 89 ea                	movl	%ebp, %edx
ffffffff80000d65: e9 fa fd ff ff       	jmp	0xffffffff80000b64 <timer_handler+0x34>
ffffffff80000d6a: be 11 00 00 00       	movl	$0x11, %esi
ffffffff80000d6f: 48 c7 c7 b8 d5 01 80 	movq	$-0x7ffe2a48, %rdi      # imm = 0x8001D5B8
ffffffff80000d76: 48 c7 c2 d0 d5 01 80 	movq	$-0x7ffe2a30, %rdx      # imm = 0x8001D5D0
ffffffff80000d7d: e8 0e bc 01 00       	callq	0xffffffff8001c990 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff80000d82: cc                   	int3
ffffffff80000d83: cc                   	int3
ffffffff80000d84: cc                   	int3
ffffffff80000d85: cc                   	int3
ffffffff80000d86: cc                   	int3
ffffffff80000d87: cc                   	int3
ffffffff80000d88: cc                   	int3
ffffffff80000d89: cc                   	int3
ffffffff80000d8a: cc                   	int3
ffffffff80000d8b: cc                   	int3
ffffffff80000d8c: cc                   	int3
ffffffff80000d8d: cc                   	int3
ffffffff80000d8e: cc                   	int3
ffffffff80000d8f: cc                   	int3

ffffffff80000d90 <taos::interrupts::idt::tlb_shootdown_handler::h659d2310168953cc>:
ffffffff80000d90: 41 53                	pushq	%r11
ffffffff80000d92: 41 52                	pushq	%r10
ffffffff80000d94: 41 51                	pushq	%r9
ffffffff80000d96: 41 50                	pushq	%r8
ffffffff80000d98: 57                   	pushq	%rdi
ffffffff80000d99: 56                   	pushq	%rsi
ffffffff80000d9a: 52                   	pushq	%rdx
ffffffff80000d9b: 51                   	pushq	%rcx
ffffffff80000d9c: 50                   	pushq	%rax
ffffffff80000d9d: fc                   	cld
ffffffff80000d9e: b9 02 08 00 00       	movl	$0x802, %ecx            # imm = 0x802
ffffffff80000da3: 0f 32                	rdmsr
ffffffff80000da5: 48 c1 e2 20          	shlq	$0x20, %rdx
ffffffff80000da9: 89 c7                	movl	%eax, %edi
ffffffff80000dab: 48 09 d7             	orq	%rdx, %rdi
ffffffff80000dae: b1 01                	movb	$0x1, %cl
ffffffff80000db0: 31 c0                	xorl	%eax, %eax
ffffffff80000db2: f0                   	lock
ffffffff80000db3: 0f b0 0d 76 54 02 00 	cmpxchgb	%cl, 0x25476(%rip)      # 0xffffffff80026230 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30>
ffffffff80000dba: 75 06                	jne	0xffffffff80000dc2 <taos::interrupts::idt::tlb_shootdown_handler::h659d2310168953cc+0x32>
ffffffff80000dbc: eb 11                	jmp	0xffffffff80000dcf <taos::interrupts::idt::tlb_shootdown_handler::h659d2310168953cc+0x3f>
ffffffff80000dbe: 66 90                	nop
ffffffff80000dc0: f3 90                	pause
ffffffff80000dc2: 0f b6 05 67 54 02 00 	movzbl	0x25467(%rip), %eax     # 0xffffffff80026230 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30>
ffffffff80000dc9: 84 c0                	testb	%al, %al
ffffffff80000dcb: 75 f3                	jne	0xffffffff80000dc0 <taos::interrupts::idt::tlb_shootdown_handler::h659d2310168953cc+0x30>
ffffffff80000dcd: eb e1                	jmp	0xffffffff80000db0 <taos::interrupts::idt::tlb_shootdown_handler::h659d2310168953cc+0x20>
ffffffff80000dcf: 48 83 ff 01          	cmpq	$0x1, %rdi
ffffffff80000dd3: 77 3d                	ja	0xffffffff80000e12 <taos::interrupts::idt::tlb_shootdown_handler::h659d2310168953cc+0x82>
ffffffff80000dd5: 48 8b 04 fd 38 62 02 80      	movq	-0x7ffd9dc8(,%rdi,8), %rax
ffffffff80000ddd: 48 85 c0             	testq	%rax, %rax
ffffffff80000de0: 74 0f                	je	0xffffffff80000df1 <taos::interrupts::idt::tlb_shootdown_handler::h659d2310168953cc+0x61>
ffffffff80000de2: 0f 01 38             	invlpg	(%rax)
ffffffff80000de5: 48 c7 04 fd 38 62 02 80 00 00 00 00  	movq	$0x0, -0x7ffd9dc8(,%rdi,8)
ffffffff80000df1: c6 05 38 54 02 00 00 	movb	$0x0, 0x25438(%rip)     # 0xffffffff80026230 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30>
ffffffff80000df8: b9 0b 08 00 00       	movl	$0x80b, %ecx            # imm = 0x80B
ffffffff80000dfd: 31 c0                	xorl	%eax, %eax
ffffffff80000dff: 31 d2                	xorl	%edx, %edx
ffffffff80000e01: 0f 30                	wrmsr
ffffffff80000e03: 58                   	popq	%rax
ffffffff80000e04: 59                   	popq	%rcx
ffffffff80000e05: 5a                   	popq	%rdx
ffffffff80000e06: 5e                   	popq	%rsi
ffffffff80000e07: 5f                   	popq	%rdi
ffffffff80000e08: 41 58                	popq	%r8
ffffffff80000e0a: 41 59                	popq	%r9
ffffffff80000e0c: 41 5a                	popq	%r10
ffffffff80000e0e: 41 5b                	popq	%r11
ffffffff80000e10: 48 cf                	iretq
ffffffff80000e12: be 02 00 00 00       	movl	$0x2, %esi
ffffffff80000e17: 48 c7 c2 e8 d5 01 80 	movq	$-0x7ffe2a18, %rdx      # imm = 0x8001D5E8
ffffffff80000e1e: e8 96 b6 01 00       	callq	0xffffffff8001c4b9 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff80000e23: cc                   	int3
ffffffff80000e24: cc                   	int3
ffffffff80000e25: cc                   	int3
ffffffff80000e26: cc                   	int3
ffffffff80000e27: cc                   	int3
ffffffff80000e28: cc                   	int3
ffffffff80000e29: cc                   	int3
ffffffff80000e2a: cc                   	int3
ffffffff80000e2b: cc                   	int3
ffffffff80000e2c: cc                   	int3
ffffffff80000e2d: cc                   	int3
ffffffff80000e2e: cc                   	int3
ffffffff80000e2f: cc                   	int3

ffffffff80000e30 <taos::interrupts::x2apic::X2ApicManager::bsp_init::h253783201cccabbe>:
ffffffff80000e30: 53                   	pushq	%rbx
ffffffff80000e31: 48 83 ec 20          	subq	$0x20, %rsp
ffffffff80000e35: b9 32 08 00 00       	movl	$0x832, %ecx            # imm = 0x832
ffffffff80000e3a: 0f 32                	rdmsr
ffffffff80000e3c: 0d 00 00 01 00       	orl	$0x10000, %eax          # imm = 0x10000
ffffffff80000e41: 0f 30                	wrmsr
ffffffff80000e43: 31 f6                	xorl	%esi, %esi
ffffffff80000e45: b9 3e 08 00 00       	movl	$0x83e, %ecx            # imm = 0x83E
ffffffff80000e4a: b8 0b 00 00 00       	movl	$0xb, %eax
ffffffff80000e4f: 31 d2                	xorl	%edx, %edx
ffffffff80000e51: 0f 30                	wrmsr
ffffffff80000e53: b9 38 08 00 00       	movl	$0x838, %ecx            # imm = 0x838
ffffffff80000e58: b8 ff ff ff ff       	movl	$0xffffffff, %eax       # imm = 0xFFFFFFFF
ffffffff80000e5d: 31 d2                	xorl	%edx, %edx
ffffffff80000e5f: 0f 30                	wrmsr
ffffffff80000e61: 66 ba 61 00          	movw	$0x61, %dx
ffffffff80000e65: b0 01                	movb	$0x1, %al
ffffffff80000e67: ee                   	outb	%al, %dx
ffffffff80000e68: 66 ba 43 00          	movw	$0x43, %dx
ffffffff80000e6c: b0 b6                	movb	$-0x4a, %al
ffffffff80000e6e: ee                   	outb	%al, %dx
ffffffff80000e6f: 66 ba 42 00          	movw	$0x42, %dx
ffffffff80000e73: b0 0b                	movb	$0xb, %al
ffffffff80000e75: ee                   	outb	%al, %dx
ffffffff80000e76: b0 e9                	movb	$-0x17, %al
ffffffff80000e78: ee                   	outb	%al, %dx
ffffffff80000e79: 66 ba 61 00          	movw	$0x61, %dx
ffffffff80000e7d: ec                   	inb	%dx, %al
ffffffff80000e7e: 89 c1                	movl	%eax, %ecx
ffffffff80000e80: 80 e1 20             	andb	$0x20, %cl
ffffffff80000e83: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
ffffffff80000e90: 66 ba 61 00          	movw	$0x61, %dx
ffffffff80000e94: ec                   	inb	%dx, %al
ffffffff80000e95: 24 20                	andb	$0x20, %al
ffffffff80000e97: 31 d2                	xorl	%edx, %edx
ffffffff80000e99: 38 c8                	cmpb	%cl, %al
ffffffff80000e9b: 0f 95 c2             	setne	%dl
ffffffff80000e9e: 01 d6                	addl	%edx, %esi
ffffffff80000ea0: 89 c1                	movl	%eax, %ecx
ffffffff80000ea2: 83 fe 28             	cmpl	$0x28, %esi
ffffffff80000ea5: 72 e9                	jb	0xffffffff80000e90 <taos::interrupts::x2apic::X2ApicManager::bsp_init::h253783201cccabbe+0x60>
ffffffff80000ea7: 66 ba 61 00          	movw	$0x61, %dx
ffffffff80000eab: 31 c0                	xorl	%eax, %eax
ffffffff80000ead: ee                   	outb	%al, %dx
ffffffff80000eae: b9 39 08 00 00       	movl	$0x839, %ecx            # imm = 0x839
ffffffff80000eb3: 0f 32                	rdmsr
ffffffff80000eb5: 85 ff                	testl	%edi, %edi
ffffffff80000eb7: 0f 84 6d 01 00 00    	je	0xffffffff8000102a <taos::interrupts::x2apic::X2ApicManager::bsp_init::h253783201cccabbe+0x1fa>
ffffffff80000ebd: f7 d0                	notl	%eax
ffffffff80000ebf: 31 d2                	xorl	%edx, %edx
ffffffff80000ec1: f7 f7                	divl	%edi
ffffffff80000ec3: 89 c3                	movl	%eax, %ebx
ffffffff80000ec5: 89 05 19 43 02 00    	movl	%eax, 0x24319(%rip)     # 0xffffffff800251e4 <taos::interrupts::x2apic::CALIBRATED_TIMER_COUNT::h692544a125c19776.0>
ffffffff80000ecb: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff80000ed0: e8 8b 6d 01 00       	callq	0xffffffff80017c60 <raw_cpuid::CpuId<raw_cpuid::native_cpuid::CpuIdReaderNative>::new::h4e0c54ad999a6cca>
ffffffff80000ed5: 83 7c 24 18 00       	cmpl	$0x0, 0x18(%rsp)
ffffffff80000eda: 0f 84 13 01 00 00    	je	0xffffffff80000ff3 <taos::interrupts::x2apic::X2ApicManager::bsp_init::h253783201cccabbe+0x1c3>
ffffffff80000ee0: b8 01 00 00 00       	movl	$0x1, %eax
ffffffff80000ee5: 31 c9                	xorl	%ecx, %ecx
ffffffff80000ee7: 48 89 de             	movq	%rbx, %rsi
ffffffff80000eea: 0f a2                	cpuid
ffffffff80000eec: 48 87 f3             	xchgq	%rbx, %rsi
ffffffff80000eef: 83 7c 24 08 03       	cmpl	$0x3, 0x8(%rsp)
ffffffff80000ef4: 0f 84 f9 00 00 00    	je	0xffffffff80000ff3 <taos::interrupts::x2apic::X2ApicManager::bsp_init::h253783201cccabbe+0x1c3>
ffffffff80000efa: 81 e1 00 00 20 00    	andl	$0x200000, %ecx         # imm = 0x200000
ffffffff80000f00: 0f 84 ed 00 00 00    	je	0xffffffff80000ff3 <taos::interrupts::x2apic::X2ApicManager::bsp_init::h253783201cccabbe+0x1c3>
ffffffff80000f06: b9 1b 00 00 00       	movl	$0x1b, %ecx
ffffffff80000f0b: 0f 32                	rdmsr
ffffffff80000f0d: 0d 00 0c 00 00       	orl	$0xc00, %eax            # imm = 0xC00
ffffffff80000f12: 0f 30                	wrmsr
ffffffff80000f14: 0f 32                	rdmsr
ffffffff80000f16: 89 c1                	movl	%eax, %ecx
ffffffff80000f18: f7 d1                	notl	%ecx
ffffffff80000f1a: b0 02                	movb	$0x2, %al
ffffffff80000f1c: f7 c1 00 0c 00 00    	testl	$0xc00, %ecx            # imm = 0xC00
ffffffff80000f22: 0f 85 c5 00 00 00    	jne	0xffffffff80000fed <taos::interrupts::x2apic::X2ApicManager::bsp_init::h253783201cccabbe+0x1bd>
ffffffff80000f28: b9 0f 08 00 00       	movl	$0x80f, %ecx            # imm = 0x80F
ffffffff80000f2d: b8 ff 01 00 00       	movl	$0x1ff, %eax            # imm = 0x1FF
ffffffff80000f32: 31 d2                	xorl	%edx, %edx
ffffffff80000f34: 0f 30                	wrmsr
ffffffff80000f36: b9 08 08 00 00       	movl	$0x808, %ecx            # imm = 0x808
ffffffff80000f3b: 31 c0                	xorl	%eax, %eax
ffffffff80000f3d: 31 d2                	xorl	%edx, %edx
ffffffff80000f3f: 0f 30                	wrmsr
ffffffff80000f41: b9 02 08 00 00       	movl	$0x802, %ecx            # imm = 0x802
ffffffff80000f46: 0f 32                	rdmsr
ffffffff80000f48: 48 c1 e2 20          	shlq	$0x20, %rdx
ffffffff80000f4c: 89 c1                	movl	%eax, %ecx
ffffffff80000f4e: 48 09 d1             	orq	%rdx, %rcx
ffffffff80000f51: b0 06                	movb	$0x6, %al
ffffffff80000f53: 48 83 f9 01          	cmpq	$0x1, %rcx
ffffffff80000f57: 0f 87 90 00 00 00    	ja	0xffffffff80000fed <taos::interrupts::x2apic::X2ApicManager::bsp_init::h253783201cccabbe+0x1bd>
ffffffff80000f5d: b9 32 08 00 00       	movl	$0x832, %ecx            # imm = 0x832
ffffffff80000f62: b8 20 00 02 00       	movl	$0x20020, %eax          # imm = 0x20020
ffffffff80000f67: 31 d2                	xorl	%edx, %edx
ffffffff80000f69: 0f 30                	wrmsr
ffffffff80000f6b: b9 3e 08 00 00       	movl	$0x83e, %ecx            # imm = 0x83E
ffffffff80000f70: b8 0b 00 00 00       	movl	$0xb, %eax
ffffffff80000f75: 31 d2                	xorl	%edx, %edx
ffffffff80000f77: 0f 30                	wrmsr
ffffffff80000f79: b9 38 08 00 00       	movl	$0x838, %ecx            # imm = 0x838
ffffffff80000f7e: 89 d8                	movl	%ebx, %eax
ffffffff80000f80: 31 d2                	xorl	%edx, %edx
ffffffff80000f82: 0f 30                	wrmsr
ffffffff80000f84: 0f b6 05 6d 54 02 00 	movzbl	0x2546d(%rip), %eax     # 0xffffffff800263f8 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.4978740807361014121+0x60>
ffffffff80000f8b: 3c 02                	cmpb	$0x2, %al
ffffffff80000f8d: 75 6c                	jne	0xffffffff80000ffb <taos::interrupts::x2apic::X2ApicManager::bsp_init::h253783201cccabbe+0x1cb>
ffffffff80000f8f: 0f b7 1d 5a 54 02 00 	movzwl	0x2545a(%rip), %ebx     # 0xffffffff800263f0 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.4978740807361014121+0x58>
ffffffff80000f96: 0f b6 05 5b 54 02 00 	movzbl	0x2545b(%rip), %eax     # 0xffffffff800263f8 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.4978740807361014121+0x60>
ffffffff80000f9d: 3c 02                	cmpb	$0x2, %al
ffffffff80000f9f: 75 78                	jne	0xffffffff80001019 <taos::interrupts::x2apic::X2ApicManager::bsp_init::h253783201cccabbe+0x1e9>
ffffffff80000fa1: 0f b7 05 44 54 02 00 	movzwl	0x25444(%rip), %eax     # 0xffffffff800263ec <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.4978740807361014121+0x54>
ffffffff80000fa8: c1 e3 10             	shll	$0x10, %ebx
ffffffff80000fab: 09 c3                	orl	%eax, %ebx
ffffffff80000fad: b9 80 00 00 c0       	movl	$0xc0000080, %ecx       # imm = 0xC0000080
ffffffff80000fb2: 0f 32                	rdmsr
ffffffff80000fb4: 83 c8 01             	orl	$0x1, %eax
ffffffff80000fb7: 0f 30                	wrmsr
ffffffff80000fb9: 48 c7 c2 4c f8 00 80 	movq	$-0x7fff07b4, %rdx      # imm = 0x8000F84C
ffffffff80000fc0: 48 c1 ea 20          	shrq	$0x20, %rdx
ffffffff80000fc4: b9 82 00 00 c0       	movl	$0xc0000082, %ecx       # imm = 0xC0000082
ffffffff80000fc9: 48 c7 c0 4c f8 00 80 	movq	$-0x7fff07b4, %rax      # imm = 0x8000F84C
ffffffff80000fd0: 0f 30                	wrmsr
ffffffff80000fd2: b9 84 00 00 c0       	movl	$0xc0000084, %ecx       # imm = 0xC0000084
ffffffff80000fd7: b8 00 02 00 00       	movl	$0x200, %eax            # imm = 0x200
ffffffff80000fdc: 31 d2                	xorl	%edx, %edx
ffffffff80000fde: 0f 30                	wrmsr
ffffffff80000fe0: b9 81 00 00 c0       	movl	$0xc0000081, %ecx       # imm = 0xC0000081
ffffffff80000fe5: 31 c0                	xorl	%eax, %eax
ffffffff80000fe7: 89 da                	movl	%ebx, %edx
ffffffff80000fe9: 0f 30                	wrmsr
ffffffff80000feb: b0 07                	movb	$0x7, %al
ffffffff80000fed: 48 83 c4 20          	addq	$0x20, %rsp
ffffffff80000ff1: 5b                   	popq	%rbx
ffffffff80000ff2: c3                   	retq
ffffffff80000ff3: 31 c0                	xorl	%eax, %eax
ffffffff80000ff5: 48 83 c4 20          	addq	$0x20, %rsp
ffffffff80000ff9: 5b                   	popq	%rbx
ffffffff80000ffa: c3                   	retq
ffffffff80000ffb: 48 c7 c7 98 63 02 80 	movq	$-0x7ffd9c68, %rdi      # imm = 0x80026398
ffffffff80001002: e8 19 1a 00 00       	callq	0xffffffff80002a20 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.14359069980145722807>
ffffffff80001007: 0f b7 1d e2 53 02 00 	movzwl	0x253e2(%rip), %ebx     # 0xffffffff800263f0 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.4978740807361014121+0x58>
ffffffff8000100e: 0f b6 05 e3 53 02 00 	movzbl	0x253e3(%rip), %eax     # 0xffffffff800263f8 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.4978740807361014121+0x60>
ffffffff80001015: 3c 02                	cmpb	$0x2, %al
ffffffff80001017: 74 88                	je	0xffffffff80000fa1 <taos::interrupts::x2apic::X2ApicManager::bsp_init::h253783201cccabbe+0x171>
ffffffff80001019: 48 c7 c7 98 63 02 80 	movq	$-0x7ffd9c68, %rdi      # imm = 0x80026398
ffffffff80001020: e8 fb 19 00 00       	callq	0xffffffff80002a20 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.14359069980145722807>
ffffffff80001025: e9 77 ff ff ff       	jmp	0xffffffff80000fa1 <taos::interrupts::x2apic::X2ApicManager::bsp_init::h253783201cccabbe+0x171>
ffffffff8000102a: 48 c7 c7 18 d6 01 80 	movq	$-0x7ffe29e8, %rdi      # imm = 0x8001D618
ffffffff80001031: e8 da a1 01 00       	callq	0xffffffff8001b210 <core::panicking::panic_const::panic_const_div_by_zero::h64ab67691243fe14>
ffffffff80001036: cc                   	int3
ffffffff80001037: cc                   	int3
ffffffff80001038: cc                   	int3
ffffffff80001039: cc                   	int3
ffffffff8000103a: cc                   	int3
ffffffff8000103b: cc                   	int3
ffffffff8000103c: cc                   	int3
ffffffff8000103d: cc                   	int3
ffffffff8000103e: cc                   	int3
ffffffff8000103f: cc                   	int3

ffffffff80001040 <taos::interrupts::x2apic::X2ApicManager::ap_init::h72e228fd69d0e3c9>:
ffffffff80001040: 53                   	pushq	%rbx
ffffffff80001041: 48 83 ec 20          	subq	$0x20, %rsp
ffffffff80001045: 8b 1d 99 41 02 00    	movl	0x24199(%rip), %ebx     # 0xffffffff800251e4 <taos::interrupts::x2apic::CALIBRATED_TIMER_COUNT::h692544a125c19776.0>
ffffffff8000104b: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff80001050: e8 0b 6c 01 00       	callq	0xffffffff80017c60 <raw_cpuid::CpuId<raw_cpuid::native_cpuid::CpuIdReaderNative>::new::h4e0c54ad999a6cca>
ffffffff80001055: 83 7c 24 18 00       	cmpl	$0x0, 0x18(%rsp)
ffffffff8000105a: 0f 84 a0 00 00 00    	je	0xffffffff80001100 <taos::interrupts::x2apic::X2ApicManager::ap_init::h72e228fd69d0e3c9+0xc0>
ffffffff80001060: b8 01 00 00 00       	movl	$0x1, %eax
ffffffff80001065: 31 c9                	xorl	%ecx, %ecx
ffffffff80001067: 48 89 de             	movq	%rbx, %rsi
ffffffff8000106a: 0f a2                	cpuid
ffffffff8000106c: 48 87 f3             	xchgq	%rbx, %rsi
ffffffff8000106f: 83 7c 24 08 03       	cmpl	$0x3, 0x8(%rsp)
ffffffff80001074: 0f 84 86 00 00 00    	je	0xffffffff80001100 <taos::interrupts::x2apic::X2ApicManager::ap_init::h72e228fd69d0e3c9+0xc0>
ffffffff8000107a: 81 e1 00 00 20 00    	andl	$0x200000, %ecx         # imm = 0x200000
ffffffff80001080: 74 7e                	je	0xffffffff80001100 <taos::interrupts::x2apic::X2ApicManager::ap_init::h72e228fd69d0e3c9+0xc0>
ffffffff80001082: b9 1b 00 00 00       	movl	$0x1b, %ecx
ffffffff80001087: 0f 32                	rdmsr
ffffffff80001089: 0d 00 0c 00 00       	orl	$0xc00, %eax            # imm = 0xC00
ffffffff8000108e: 0f 30                	wrmsr
ffffffff80001090: 0f 32                	rdmsr
ffffffff80001092: 89 c1                	movl	%eax, %ecx
ffffffff80001094: f7 d1                	notl	%ecx
ffffffff80001096: b0 02                	movb	$0x2, %al
ffffffff80001098: f7 c1 00 0c 00 00    	testl	$0xc00, %ecx            # imm = 0xC00
ffffffff8000109e: 75 5a                	jne	0xffffffff800010fa <taos::interrupts::x2apic::X2ApicManager::ap_init::h72e228fd69d0e3c9+0xba>
ffffffff800010a0: b9 0f 08 00 00       	movl	$0x80f, %ecx            # imm = 0x80F
ffffffff800010a5: b8 ff 01 00 00       	movl	$0x1ff, %eax            # imm = 0x1FF
ffffffff800010aa: 31 d2                	xorl	%edx, %edx
ffffffff800010ac: 0f 30                	wrmsr
ffffffff800010ae: b9 08 08 00 00       	movl	$0x808, %ecx            # imm = 0x808
ffffffff800010b3: 31 c0                	xorl	%eax, %eax
ffffffff800010b5: 31 d2                	xorl	%edx, %edx
ffffffff800010b7: 0f 30                	wrmsr
ffffffff800010b9: b9 02 08 00 00       	movl	$0x802, %ecx            # imm = 0x802
ffffffff800010be: 0f 32                	rdmsr
ffffffff800010c0: 48 c1 e2 20          	shlq	$0x20, %rdx
ffffffff800010c4: 89 c1                	movl	%eax, %ecx
ffffffff800010c6: 48 09 d1             	orq	%rdx, %rcx
ffffffff800010c9: b0 06                	movb	$0x6, %al
ffffffff800010cb: 48 83 f9 01          	cmpq	$0x1, %rcx
ffffffff800010cf: 77 29                	ja	0xffffffff800010fa <taos::interrupts::x2apic::X2ApicManager::ap_init::h72e228fd69d0e3c9+0xba>
ffffffff800010d1: b9 32 08 00 00       	movl	$0x832, %ecx            # imm = 0x832
ffffffff800010d6: b8 20 00 02 00       	movl	$0x20020, %eax          # imm = 0x20020
ffffffff800010db: 31 d2                	xorl	%edx, %edx
ffffffff800010dd: 0f 30                	wrmsr
ffffffff800010df: b9 3e 08 00 00       	movl	$0x83e, %ecx            # imm = 0x83E
ffffffff800010e4: b8 0b 00 00 00       	movl	$0xb, %eax
ffffffff800010e9: 31 d2                	xorl	%edx, %edx
ffffffff800010eb: 0f 30                	wrmsr
ffffffff800010ed: b9 38 08 00 00       	movl	$0x838, %ecx            # imm = 0x838
ffffffff800010f2: 89 d8                	movl	%ebx, %eax
ffffffff800010f4: 31 d2                	xorl	%edx, %edx
ffffffff800010f6: 0f 30                	wrmsr
ffffffff800010f8: b0 07                	movb	$0x7, %al
ffffffff800010fa: 48 83 c4 20          	addq	$0x20, %rsp
ffffffff800010fe: 5b                   	popq	%rbx
ffffffff800010ff: c3                   	retq
ffffffff80001100: 31 c0                	xorl	%eax, %eax
ffffffff80001102: 48 83 c4 20          	addq	$0x20, %rsp
ffffffff80001106: 5b                   	popq	%rbx
ffffffff80001107: c3                   	retq
ffffffff80001108: cc                   	int3
ffffffff80001109: cc                   	int3
ffffffff8000110a: cc                   	int3
ffffffff8000110b: cc                   	int3
ffffffff8000110c: cc                   	int3
ffffffff8000110d: cc                   	int3
ffffffff8000110e: cc                   	int3
ffffffff8000110f: cc                   	int3

ffffffff80001110 <taos::memory::paging::init::h00a848d77a170e5f>:
ffffffff80001110: 53                   	pushq	%rbx
ffffffff80001111: 0f 20 d9             	movq	%cr3, %rcx
ffffffff80001114: 48 b8 00 f0 ff ff ff ff 0f 00	movabsq	$0xffffffffff000, %rax # imm = 0xFFFFFFFFFF000
ffffffff8000111e: 48 21 c8             	andq	%rcx, %rax
ffffffff80001121: 0f b6 0d 00 51 02 00 	movzbl	0x25100(%rip), %ecx     # 0xffffffff80026228 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.6482013028561868880+0x8>
ffffffff80001128: 80 f9 02             	cmpb	$0x2, %cl
ffffffff8000112b: 75 2f                	jne	0xffffffff8000115c <taos::memory::paging::init::h00a848d77a170e5f+0x4c>
ffffffff8000112d: 48 03 05 ec 50 02 00 	addq	0x250ec(%rip), %rax     # 0xffffffff80026220 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.6482013028561868880>
ffffffff80001134: 48 b9 00 00 00 00 00 80 00 00	movabsq	$0x800000000000, %rcx # imm = 0x800000000000
ffffffff8000113e: 48 01 c1             	addq	%rax, %rcx
ffffffff80001141: 48 c1 e9 30          	shrq	$0x30, %rcx
ffffffff80001145: 75 44                	jne	0xffffffff8000118b <taos::memory::paging::init::h00a848d77a170e5f+0x7b>
ffffffff80001147: 0f b6 0d da 50 02 00 	movzbl	0x250da(%rip), %ecx     # 0xffffffff80026228 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.6482013028561868880+0x8>
ffffffff8000114e: 80 f9 02             	cmpb	$0x2, %cl
ffffffff80001151: 75 1d                	jne	0xffffffff80001170 <taos::memory::paging::init::h00a848d77a170e5f+0x60>
ffffffff80001153: 48 8b 15 c6 50 02 00 	movq	0x250c6(%rip), %rdx     # 0xffffffff80026220 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.6482013028561868880>
ffffffff8000115a: 5b                   	popq	%rbx
ffffffff8000115b: c3                   	retq
ffffffff8000115c: 48 c7 c7 20 62 02 80 	movq	$-0x7ffd9de0, %rdi      # imm = 0x80026220
ffffffff80001163: 48 89 c3             	movq	%rax, %rbx
ffffffff80001166: e8 25 1c 00 00       	callq	0xffffffff80002d90 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.14359069980145722807>
ffffffff8000116b: 48 89 d8             	movq	%rbx, %rax
ffffffff8000116e: eb bd                	jmp	0xffffffff8000112d <taos::memory::paging::init::h00a848d77a170e5f+0x1d>
ffffffff80001170: 48 c7 c7 20 62 02 80 	movq	$-0x7ffd9de0, %rdi      # imm = 0x80026220
ffffffff80001177: 48 89 c3             	movq	%rax, %rbx
ffffffff8000117a: e8 11 1c 00 00       	callq	0xffffffff80002d90 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.14359069980145722807>
ffffffff8000117f: 48 89 d8             	movq	%rbx, %rax
ffffffff80001182: 48 8b 15 97 50 02 00 	movq	0x25097(%rip), %rdx     # 0xffffffff80026220 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.6482013028561868880>
ffffffff80001189: 5b                   	popq	%rbx
ffffffff8000118a: c3                   	retq
ffffffff8000118b: be 36 00 00 00       	movl	$0x36, %esi
ffffffff80001190: 48 c7 c7 38 d3 01 80 	movq	$-0x7ffe2cc8, %rdi      # imm = 0x8001D338
ffffffff80001197: 48 c7 c2 70 d3 01 80 	movq	$-0x7ffe2c90, %rdx      # imm = 0x8001D370
ffffffff8000119e: e8 cd b2 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff800011a3: cc                   	int3
ffffffff800011a4: cc                   	int3
ffffffff800011a5: cc                   	int3
ffffffff800011a6: cc                   	int3
ffffffff800011a7: cc                   	int3
ffffffff800011a8: cc                   	int3
ffffffff800011a9: cc                   	int3
ffffffff800011aa: cc                   	int3
ffffffff800011ab: cc                   	int3
ffffffff800011ac: cc                   	int3
ffffffff800011ad: cc                   	int3
ffffffff800011ae: cc                   	int3
ffffffff800011af: cc                   	int3

ffffffff800011b0 <taos::memory::paging::create_mapping::h82f738cb2eb9bd37>:
ffffffff800011b0: 41 57                	pushq	%r15
ffffffff800011b2: 41 56                	pushq	%r14
ffffffff800011b4: 41 55                	pushq	%r13
ffffffff800011b6: 41 54                	pushq	%r12
ffffffff800011b8: 53                   	pushq	%rbx
ffffffff800011b9: 48 83 ec 50          	subq	$0x50, %rsp
ffffffff800011bd: 49 89 cf             	movq	%rcx, %r15
ffffffff800011c0: 49 89 d4             	movq	%rdx, %r12
ffffffff800011c3: 49 89 f6             	movq	%rsi, %r14
ffffffff800011c6: 48 89 fb             	movq	%rdi, %rbx
ffffffff800011c9: b1 01                	movb	$0x1, %cl
ffffffff800011cb: 0f 1f 44 00 00       	nopl	(%rax,%rax)
ffffffff800011d0: 31 c0                	xorl	%eax, %eax
ffffffff800011d2: f0                   	lock
ffffffff800011d3: 0f b0 0d 26 3e 02 00 	cmpxchgb	%cl, 0x23e26(%rip)      # 0xffffffff80025000 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208>
ffffffff800011da: 75 06                	jne	0xffffffff800011e2 <taos::memory::paging::create_mapping::h82f738cb2eb9bd37+0x32>
ffffffff800011dc: eb 11                	jmp	0xffffffff800011ef <taos::memory::paging::create_mapping::h82f738cb2eb9bd37+0x3f>
ffffffff800011de: 66 90                	nop
ffffffff800011e0: f3 90                	pause
ffffffff800011e2: 0f b6 05 17 3e 02 00 	movzbl	0x23e17(%rip), %eax     # 0xffffffff80025000 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208>
ffffffff800011e9: 84 c0                	testb	%al, %al
ffffffff800011eb: 75 f3                	jne	0xffffffff800011e0 <taos::memory::paging::create_mapping::h82f738cb2eb9bd37+0x30>
ffffffff800011ed: eb e1                	jmp	0xffffffff800011d0 <taos::memory::paging::create_mapping::h82f738cb2eb9bd37+0x20>
ffffffff800011ef: 48 8b 05 12 3e 02 00 	movq	0x23e12(%rip), %rax     # 0xffffffff80025008 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x8>
ffffffff800011f6: 48 83 f8 02          	cmpq	$0x2, %rax
ffffffff800011fa: 74 1c                	je	0xffffffff80001218 <taos::memory::paging::create_mapping::h82f738cb2eb9bd37+0x68>
ffffffff800011fc: 83 f8 03             	cmpl	$0x3, %eax
ffffffff800011ff: 0f 84 1c 01 00 00    	je	0xffffffff80001321 <taos::memory::paging::create_mapping::h82f738cb2eb9bd37+0x171>
ffffffff80001205: 48 8d 7c 24 10       	leaq	0x10(%rsp), %rdi
ffffffff8000120a: 48 c7 c6 08 50 02 80 	movq	$-0x7ffdaff8, %rsi      # imm = 0x80025008
ffffffff80001211: e8 2a a2 00 00       	callq	0xffffffff8000b440 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683>
ffffffff80001216: eb 11                	jmp	0xffffffff80001229 <taos::memory::paging::create_mapping::h82f738cb2eb9bd37+0x79>
ffffffff80001218: 48 8d 7c 24 10       	leaq	0x10(%rsp), %rdi
ffffffff8000121d: 48 c7 c6 10 50 02 80 	movq	$-0x7ffdaff0, %rsi      # imm = 0x80025010
ffffffff80001224: e8 47 aa 00 00       	callq	0xffffffff8000bc70 <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h034757e32ae64125>
ffffffff80001229: c6 05 d0 3d 02 00 00 	movb	$0x0, 0x23dd0(%rip)     # 0xffffffff80025000 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208>
ffffffff80001230: f6 44 24 10 01       	testb	$0x1, 0x10(%rsp)
ffffffff80001235: 0f 84 7e 00 00 00    	je	0xffffffff800012b9 <taos::memory::paging::create_mapping::h82f738cb2eb9bd37+0x109>
ffffffff8000123b: 4c 8b 6c 24 18       	movq	0x18(%rsp), %r13
ffffffff80001240: 41 f6 c4 01          	testb	$0x1, %r12b
ffffffff80001244: 41 b8 07 00 00 00    	movl	$0x7, %r8d
ffffffff8000124a: 4d 0f 45 c7          	cmovneq	%r15, %r8
ffffffff8000124e: b1 01                	movb	$0x1, %cl
ffffffff80001250: 31 c0                	xorl	%eax, %eax
ffffffff80001252: f0                   	lock
ffffffff80001253: 0f b0 0d a6 3d 02 00 	cmpxchgb	%cl, 0x23da6(%rip)      # 0xffffffff80025000 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208>
ffffffff8000125a: 75 06                	jne	0xffffffff80001262 <taos::memory::paging::create_mapping::h82f738cb2eb9bd37+0xb2>
ffffffff8000125c: eb 11                	jmp	0xffffffff8000126f <taos::memory::paging::create_mapping::h82f738cb2eb9bd37+0xbf>
ffffffff8000125e: 66 90                	nop
ffffffff80001260: f3 90                	pause
ffffffff80001262: 0f b6 05 97 3d 02 00 	movzbl	0x23d97(%rip), %eax     # 0xffffffff80025000 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208>
ffffffff80001269: 84 c0                	testb	%al, %al
ffffffff8000126b: 75 f3                	jne	0xffffffff80001260 <taos::memory::paging::create_mapping::h82f738cb2eb9bd37+0xb0>
ffffffff8000126d: eb e1                	jmp	0xffffffff80001250 <taos::memory::paging::create_mapping::h82f738cb2eb9bd37+0xa0>
ffffffff8000126f: 83 3d 92 3d 02 00 03 	cmpl	$0x3, 0x23d92(%rip)     # 0xffffffff80025008 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x8>
ffffffff80001276: 74 59                	je	0xffffffff800012d1 <taos::memory::paging::create_mapping::h82f738cb2eb9bd37+0x121>
ffffffff80001278: 45 89 c1             	movl	%r8d, %r9d
ffffffff8000127b: 41 83 e1 07          	andl	$0x7, %r9d
ffffffff8000127f: 48 c7 04 24 08 50 02 80      	movq	$-0x7ffdaff8, (%rsp) # imm = 0x80025008
ffffffff80001287: 48 8d 7c 24 40       	leaq	0x40(%rsp), %rdi
ffffffff8000128c: 4c 89 f6             	movq	%r14, %rsi
ffffffff8000128f: 48 89 da             	movq	%rbx, %rdx
ffffffff80001292: 4c 89 e9             	movq	%r13, %rcx
ffffffff80001295: e8 56 e2 00 00       	callq	0xffffffff8000f4f0 <x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P>::map_to_4kib::hf126fe5c9974d9a9>
ffffffff8000129a: 83 7c 24 40 03       	cmpl	$0x3, 0x40(%rsp)
ffffffff8000129f: 75 48                	jne	0xffffffff800012e9 <taos::memory::paging::create_mapping::h82f738cb2eb9bd37+0x139>
ffffffff800012a1: c6 05 58 3d 02 00 00 	movb	$0x0, 0x23d58(%rip)     # 0xffffffff80025000 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208>
ffffffff800012a8: 4c 89 e8             	movq	%r13, %rax
ffffffff800012ab: 48 83 c4 50          	addq	$0x50, %rsp
ffffffff800012af: 5b                   	popq	%rbx
ffffffff800012b0: 41 5c                	popq	%r12
ffffffff800012b2: 41 5d                	popq	%r13
ffffffff800012b4: 41 5e                	popq	%r14
ffffffff800012b6: 41 5f                	popq	%r15
ffffffff800012b8: c3                   	retq
ffffffff800012b9: be 0e 00 00 00       	movl	$0xe, %esi
ffffffff800012be: 48 c7 c7 30 d6 01 80 	movq	$-0x7ffe29d0, %rdi      # imm = 0x8001D630
ffffffff800012c5: 48 c7 c2 58 d6 01 80 	movq	$-0x7ffe29a8, %rdx      # imm = 0x8001D658
ffffffff800012cc: e8 bf b6 01 00       	callq	0xffffffff8001c990 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff800012d1: be 20 00 00 00       	movl	$0x20, %esi
ffffffff800012d6: 48 c7 c7 90 d6 01 80 	movq	$-0x7ffe2970, %rdi      # imm = 0x8001D690
ffffffff800012dd: 48 c7 c2 10 d7 01 80 	movq	$-0x7ffe28f0, %rdx      # imm = 0x8001D710
ffffffff800012e4: e8 a7 b6 01 00       	callq	0xffffffff8001c990 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff800012e9: 48 8b 44 24 40       	movq	0x40(%rsp), %rax
ffffffff800012ee: 48 8b 4c 24 48       	movq	0x48(%rsp), %rcx
ffffffff800012f3: 48 89 4c 24 18       	movq	%rcx, 0x18(%rsp)
ffffffff800012f8: 48 89 44 24 10       	movq	%rax, 0x10(%rsp)
ffffffff800012fd: 48 8d 54 24 10       	leaq	0x10(%rsp), %rdx
ffffffff80001302: be 0e 00 00 00       	movl	$0xe, %esi
ffffffff80001307: 48 c7 c7 48 d7 01 80 	movq	$-0x7ffe28b8, %rdi      # imm = 0x8001D748
ffffffff8000130e: 48 c7 c1 28 d7 01 80 	movq	$-0x7ffe28d8, %rcx      # imm = 0x8001D728
ffffffff80001315: 49 c7 c0 58 d7 01 80 	movq	$-0x7ffe28a8, %r8       # imm = 0x8001D758
ffffffff8000131c: e8 bf ab 01 00       	callq	0xffffffff8001bee0 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff80001321: 48 c7 44 24 10 50 f1 01 80   	movq	$-0x7ffe0eb0, 0x10(%rsp) # imm = 0x8001F150
ffffffff8000132a: 48 c7 44 24 18 01 00 00 00   	movq	$0x1, 0x18(%rsp)
ffffffff80001333: 48 c7 44 24 30 00 00 00 00   	movq	$0x0, 0x30(%rsp)
ffffffff8000133c: 48 c7 44 24 20 08 00 00 00   	movq	$0x8, 0x20(%rsp)
ffffffff80001345: 48 c7 44 24 28 00 00 00 00   	movq	$0x0, 0x28(%rsp)
ffffffff8000134e: 48 8d 7c 24 10       	leaq	0x10(%rsp), %rdi
ffffffff80001353: 48 c7 c6 80 f1 01 80 	movq	$-0x7ffe0e80, %rsi      # imm = 0x8001F180
ffffffff8000135a: e8 91 b0 01 00       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8000135f: cc                   	int3

ffffffff80001360 <taos::memory::paging::map_kernel_frame::hd0419d03bd944108>:
ffffffff80001360: 53                   	pushq	%rbx
ffffffff80001361: 48 83 ec 30          	subq	$0x30, %rsp
ffffffff80001365: 48 8b 1d 7c 3e 02 00 	movq	0x23e7c(%rip), %rbx     # 0xffffffff800251e8 <taos::memory::paging::NEXT_EPH_OFFSET::h63fa29dc81a38579>
ffffffff8000136c: 48 8d 83 00 10 00 00 	leaq	0x1000(%rbx), %rax
ffffffff80001373: 48 89 05 6e 3e 02 00 	movq	%rax, 0x23e6e(%rip)     # 0xffffffff800251e8 <taos::memory::paging::NEXT_EPH_OFFSET::h63fa29dc81a38579>
ffffffff8000137a: 48 b8 00 00 00 00 80 7f 00 00	movabsq	$0x7f8000000000, %rax # imm = 0x7F8000000000
ffffffff80001384: 48 01 d8             	addq	%rbx, %rax
ffffffff80001387: 48 c1 e8 30          	shrq	$0x30, %rax
ffffffff8000138b: 0f 85 86 00 00 00    	jne	0xffffffff80001417 <taos::memory::paging::map_kernel_frame::hd0419d03bd944108+0xb7>
ffffffff80001391: 49 89 d0             	movq	%rdx, %r8
ffffffff80001394: 48 89 f1             	movq	%rsi, %rcx
ffffffff80001397: 48 89 fe             	movq	%rdi, %rsi
ffffffff8000139a: b2 01                	movb	$0x1, %dl
ffffffff8000139c: 0f 1f 40 00          	nopl	(%rax)
ffffffff800013a0: 31 c0                	xorl	%eax, %eax
ffffffff800013a2: f0                   	lock
ffffffff800013a3: 0f b0 15 56 3c 02 00 	cmpxchgb	%dl, 0x23c56(%rip)      # 0xffffffff80025000 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208>
ffffffff800013aa: 75 06                	jne	0xffffffff800013b2 <taos::memory::paging::map_kernel_frame::hd0419d03bd944108+0x52>
ffffffff800013ac: eb 11                	jmp	0xffffffff800013bf <taos::memory::paging::map_kernel_frame::hd0419d03bd944108+0x5f>
ffffffff800013ae: 66 90                	nop
ffffffff800013b0: f3 90                	pause
ffffffff800013b2: 0f b6 05 47 3c 02 00 	movzbl	0x23c47(%rip), %eax     # 0xffffffff80025000 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208>
ffffffff800013b9: 84 c0                	testb	%al, %al
ffffffff800013bb: 75 f3                	jne	0xffffffff800013b0 <taos::memory::paging::map_kernel_frame::hd0419d03bd944108+0x50>
ffffffff800013bd: eb e1                	jmp	0xffffffff800013a0 <taos::memory::paging::map_kernel_frame::hd0419d03bd944108+0x40>
ffffffff800013bf: 83 3d 42 3c 02 00 03 	cmpl	$0x3, 0x23c42(%rip)     # 0xffffffff80025008 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x8>
ffffffff800013c6: 74 67                	je	0xffffffff8000142f <taos::memory::paging::map_kernel_frame::hd0419d03bd944108+0xcf>
ffffffff800013c8: 48 b8 00 00 00 00 80 ff ff ff	movabsq	$-0x8000000000, %rax # imm = 0xFFFFFF8000000000
ffffffff800013d2: 48 01 c3             	addq	%rax, %rbx
ffffffff800013d5: 48 89 da             	movq	%rbx, %rdx
ffffffff800013d8: 48 81 e2 00 f0 ff ff 	andq	$-0x1000, %rdx          # imm = 0xF000
ffffffff800013df: 45 89 c1             	movl	%r8d, %r9d
ffffffff800013e2: 41 83 e1 07          	andl	$0x7, %r9d
ffffffff800013e6: 48 c7 04 24 08 50 02 80      	movq	$-0x7ffdaff8, (%rsp) # imm = 0x80025008
ffffffff800013ee: 48 8d 7c 24 10       	leaq	0x10(%rsp), %rdi
ffffffff800013f3: e8 f8 e0 00 00       	callq	0xffffffff8000f4f0 <x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P>::map_to_4kib::hf126fe5c9974d9a9>
ffffffff800013f8: c6 05 01 3c 02 00 00 	movb	$0x0, 0x23c01(%rip)     # 0xffffffff80025000 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208>
ffffffff800013ff: 83 7c 24 10 03       	cmpl	$0x3, 0x10(%rsp)
ffffffff80001404: 75 41                	jne	0xffffffff80001447 <taos::memory::paging::map_kernel_frame::hd0419d03bd944108+0xe7>
ffffffff80001406: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff8000140b: 0f 01 38             	invlpg	(%rax)
ffffffff8000140e: 48 89 d8             	movq	%rbx, %rax
ffffffff80001411: 48 83 c4 30          	addq	$0x30, %rsp
ffffffff80001415: 5b                   	popq	%rbx
ffffffff80001416: c3                   	retq
ffffffff80001417: be 36 00 00 00       	movl	$0x36, %esi
ffffffff8000141c: 48 c7 c7 38 d3 01 80 	movq	$-0x7ffe2cc8, %rdi      # imm = 0x8001D338
ffffffff80001423: 48 c7 c2 70 d3 01 80 	movq	$-0x7ffe2c90, %rdx      # imm = 0x8001D370
ffffffff8000142a: e8 41 b0 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000142f: be 20 00 00 00       	movl	$0x20, %esi
ffffffff80001434: 48 c7 c7 90 d6 01 80 	movq	$-0x7ffe2970, %rdi      # imm = 0x8001D690
ffffffff8000143b: 48 c7 c2 70 d7 01 80 	movq	$-0x7ffe2890, %rdx      # imm = 0x8001D770
ffffffff80001442: e8 49 b5 01 00       	callq	0xffffffff8001c990 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff80001447: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff8000144c: 48 8b 4c 24 18       	movq	0x18(%rsp), %rcx
ffffffff80001451: 48 89 4c 24 28       	movq	%rcx, 0x28(%rsp)
ffffffff80001456: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff8000145b: 48 8d 54 24 20       	leaq	0x20(%rsp), %rdx
ffffffff80001460: be 0d 00 00 00       	movl	$0xd, %esi
ffffffff80001465: 48 c7 c7 88 d7 01 80 	movq	$-0x7ffe2878, %rdi      # imm = 0x8001D788
ffffffff8000146c: 48 c7 c1 28 d7 01 80 	movq	$-0x7ffe28d8, %rcx      # imm = 0x8001D728
ffffffff80001473: 49 c7 c0 98 d7 01 80 	movq	$-0x7ffe2868, %r8       # imm = 0x8001D798
ffffffff8000147a: e8 61 aa 01 00       	callq	0xffffffff8001bee0 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff8000147f: cc                   	int3

ffffffff80001480 <taos::memory::init::h991c0fb9746e9f2b>:
ffffffff80001480: 41 57                	pushq	%r15
ffffffff80001482: 41 56                	pushq	%r14
ffffffff80001484: 53                   	pushq	%rbx
ffffffff80001485: 48 83 ec 20          	subq	$0x20, %rsp
ffffffff80001489: 85 ff                	testl	%edi, %edi
ffffffff8000148b: 0f 85 5f 01 00 00    	jne	0xffffffff800015f0 <taos::memory::init::h991c0fb9746e9f2b+0x170>
ffffffff80001491: 48 c7 c7 e8 50 02 80 	movq	$-0x7ffdaf18, %rdi      # imm = 0x800250E8
ffffffff80001498: e8 f3 73 01 00       	callq	0xffffffff80018890 <limine::request::BootloaderInfoRequest::get_response::h5ddf6f18b059e155>
ffffffff8000149d: 48 85 c0             	testq	%rax, %rax
ffffffff800014a0: 0f 84 54 01 00 00    	je	0xffffffff800015fa <taos::memory::init::h991c0fb9746e9f2b+0x17a>
ffffffff800014a6: 48 89 c3             	movq	%rax, %rbx
ffffffff800014a9: 48 c7 c7 18 51 02 80 	movq	$-0x7ffdaee8, %rdi      # imm = 0x80025118
ffffffff800014b0: e8 db 73 01 00       	callq	0xffffffff80018890 <limine::request::BootloaderInfoRequest::get_response::h5ddf6f18b059e155>
ffffffff800014b5: 48 85 c0             	testq	%rax, %rax
ffffffff800014b8: 0f 84 54 01 00 00    	je	0xffffffff80001612 <taos::memory::init::h991c0fb9746e9f2b+0x192>
ffffffff800014be: 4c 8b 70 08          	movq	0x8(%rax), %r14
ffffffff800014c2: 4d 89 f7             	movq	%r14, %r15
ffffffff800014c5: 4c 2b 78 10          	subq	0x10(%rax), %r15
ffffffff800014c9: 48 c7 04 24 00 00 00 00      	movq	$0x0, (%rsp)
ffffffff800014d1: 48 c7 44 24 08 00 00 00 00   	movq	$0x0, 0x8(%rsp)
ffffffff800014da: 4c 03 3d 3f 4f 03 00 	addq	0x34f3f(%rip), %r15     # 0xffffffff80036420
ffffffff800014e1: b1 01                	movb	$0x1, %cl
ffffffff800014e3: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
ffffffff800014f0: 31 c0                	xorl	%eax, %eax
ffffffff800014f2: f0                   	lock
ffffffff800014f3: 0f b0 0d 06 3b 02 00 	cmpxchgb	%cl, 0x23b06(%rip)      # 0xffffffff80025000 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208>
ffffffff800014fa: 75 06                	jne	0xffffffff80001502 <taos::memory::init::h991c0fb9746e9f2b+0x82>
ffffffff800014fc: eb 11                	jmp	0xffffffff8000150f <taos::memory::init::h991c0fb9746e9f2b+0x8f>
ffffffff800014fe: 66 90                	nop
ffffffff80001500: f3 90                	pause
ffffffff80001502: 0f b6 05 f7 3a 02 00 	movzbl	0x23af7(%rip), %eax     # 0xffffffff80025000 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208>
ffffffff80001509: 84 c0                	testb	%al, %al
ffffffff8000150b: 75 f3                	jne	0xffffffff80001500 <taos::memory::init::h991c0fb9746e9f2b+0x80>
ffffffff8000150d: eb e1                	jmp	0xffffffff800014f0 <taos::memory::init::h991c0fb9746e9f2b+0x70>
ffffffff8000150f: 83 3d f2 3a 02 00 02 	cmpl	$0x2, 0x23af2(%rip)     # 0xffffffff80025008 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x8>
ffffffff80001516: 75 5f                	jne	0xffffffff80001577 <taos::memory::init::h991c0fb9746e9f2b+0xf7>
ffffffff80001518: 48 8b 0d f9 3a 02 00 	movq	0x23af9(%rip), %rcx     # 0xffffffff80025018 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x18>
ffffffff8000151f: 48 85 c9             	testq	%rcx, %rcx
ffffffff80001522: 74 53                	je	0xffffffff80001577 <taos::memory::init::h991c0fb9746e9f2b+0xf7>
ffffffff80001524: 48 c1 e1 03          	shlq	$0x3, %rcx
ffffffff80001528: 48 8b 35 e1 3a 02 00 	movq	0x23ae1(%rip), %rsi     # 0xffffffff80025010 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x10>
ffffffff8000152f: b2 01                	movb	$0x1, %dl
ffffffff80001531: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
ffffffff80001540: 31 c0                	xorl	%eax, %eax
ffffffff80001542: f0                   	lock
ffffffff80001543: 0f b0 15 06 3b 02 00 	cmpxchgb	%dl, 0x23b06(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000154a: 75 06                	jne	0xffffffff80001552 <taos::memory::init::h991c0fb9746e9f2b+0xd2>
ffffffff8000154c: eb 11                	jmp	0xffffffff8000155f <taos::memory::init::h991c0fb9746e9f2b+0xdf>
ffffffff8000154e: 66 90                	nop
ffffffff80001550: f3 90                	pause
ffffffff80001552: 0f b6 05 f7 3a 02 00 	movzbl	0x23af7(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80001559: 84 c0                	testb	%al, %al
ffffffff8000155b: 75 f3                	jne	0xffffffff80001550 <taos::memory::init::h991c0fb9746e9f2b+0xd0>
ffffffff8000155d: eb e1                	jmp	0xffffffff80001540 <taos::memory::init::h991c0fb9746e9f2b+0xc0>
ffffffff8000155f: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff80001564: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000156b: e8 30 1b 00 00       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80001570: c6 05 d9 3a 02 00 00 	movb	$0x0, 0x23ad9(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80001577: 48 c7 05 86 3a 02 00 00 00 00 00     	movq	$0x0, 0x23a86(%rip) # 0xffffffff80025008 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x8>
ffffffff80001582: 48 c7 05 8b 3a 02 00 00 00 00 00     	movq	$0x0, 0x23a8b(%rip) # 0xffffffff80025018 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x18>
ffffffff8000158d: 48 89 1d 94 3a 02 00 	movq	%rbx, 0x23a94(%rip)     # 0xffffffff80025028 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x28>
ffffffff80001594: 48 8b 04 24          	movq	(%rsp), %rax
ffffffff80001598: 48 8b 4c 24 08       	movq	0x8(%rsp), %rcx
ffffffff8000159d: 48 89 05 8c 3a 02 00 	movq	%rax, 0x23a8c(%rip)     # 0xffffffff80025030 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x30>
ffffffff800015a4: 48 89 0d 8d 3a 02 00 	movq	%rcx, 0x23a8d(%rip)     # 0xffffffff80025038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x38>
ffffffff800015ab: 4c 89 35 8e 3a 02 00 	movq	%r14, 0x23a8e(%rip)     # 0xffffffff80025040 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x40>
ffffffff800015b2: 4c 89 3d 8f 3a 02 00 	movq	%r15, 0x23a8f(%rip)     # 0xffffffff80025048 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x48>
ffffffff800015b9: c6 05 40 3a 02 00 00 	movb	$0x0, 0x23a40(%rip)     # 0xffffffff80025000 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208>
ffffffff800015c0: b9 80 00 00 c0       	movl	$0xc0000080, %ecx       # imm = 0xC0000080
ffffffff800015c5: 0f 32                	rdmsr
ffffffff800015c7: 89 c6                	movl	%eax, %esi
ffffffff800015c9: 81 e6 01 f5 00 00    	andl	$0xf501, %esi           # imm = 0xF501
ffffffff800015cf: 0f 32                	rdmsr
ffffffff800015d1: 25 fe 02 ff ff       	andl	$0xffff02fe, %eax       # imm = 0xFFFF02FE
ffffffff800015d6: 01 f0                	addl	%esi, %eax
ffffffff800015d8: 05 00 08 00 00       	addl	$0x800, %eax            # imm = 0x800
ffffffff800015dd: 0f 30                	wrmsr
ffffffff800015df: 48 8d 7c 24 10       	leaq	0x10(%rsp), %rdi
ffffffff800015e4: e8 77 c8 00 00       	callq	0xffffffff8000de60 <taos::memory::heap::init_heap::hd4797709bd4047f7>
ffffffff800015e9: 83 7c 24 10 03       	cmpl	$0x3, 0x10(%rsp)
ffffffff800015ee: 75 3a                	jne	0xffffffff8000162a <taos::memory::init::h991c0fb9746e9f2b+0x1aa>
ffffffff800015f0: 48 83 c4 20          	addq	$0x20, %rsp
ffffffff800015f4: 5b                   	popq	%rbx
ffffffff800015f5: 41 5e                	popq	%r14
ffffffff800015f7: 41 5f                	popq	%r15
ffffffff800015f9: c3                   	retq
ffffffff800015fa: be 19 00 00 00       	movl	$0x19, %esi
ffffffff800015ff: 48 c7 c7 68 ea 01 80 	movq	$-0x7ffe1598, %rdi      # imm = 0x8001EA68
ffffffff80001606: 48 c7 c2 a8 ea 01 80 	movq	$-0x7ffe1558, %rdx      # imm = 0x8001EAA8
ffffffff8000160d: e8 7e b3 01 00       	callq	0xffffffff8001c990 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff80001612: be 1d 00 00 00       	movl	$0x1d, %esi
ffffffff80001617: 48 c7 c7 c0 ea 01 80 	movq	$-0x7ffe1540, %rdi      # imm = 0x8001EAC0
ffffffff8000161e: 48 c7 c2 e0 ea 01 80 	movq	$-0x7ffe1520, %rdx      # imm = 0x8001EAE0
ffffffff80001625: e8 66 b3 01 00       	callq	0xffffffff8001c990 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff8000162a: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff8000162f: 48 8b 4c 24 18       	movq	0x18(%rsp), %rcx
ffffffff80001634: 48 89 4c 24 08       	movq	%rcx, 0x8(%rsp)
ffffffff80001639: 48 89 04 24          	movq	%rax, (%rsp)
ffffffff8000163d: 48 89 e2             	movq	%rsp, %rdx
ffffffff80001640: be 19 00 00 00       	movl	$0x19, %esi
ffffffff80001645: 48 c7 c7 00 d8 01 80 	movq	$-0x7ffe2800, %rdi      # imm = 0x8001D800
ffffffff8000164c: 48 c7 c1 28 d7 01 80 	movq	$-0x7ffe28d8, %rcx      # imm = 0x8001D728
ffffffff80001653: 49 c7 c0 30 d8 01 80 	movq	$-0x7ffe27d0, %r8       # imm = 0x8001D830
ffffffff8000165a: e8 81 a8 01 00       	callq	0xffffffff8001bee0 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff8000165f: cc                   	int3

ffffffff80001660 <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.14359069980145722807>:
ffffffff80001660: 55                   	pushq	%rbp
ffffffff80001661: 41 57                	pushq	%r15
ffffffff80001663: 41 56                	pushq	%r14
ffffffff80001665: 41 55                	pushq	%r13
ffffffff80001667: 41 54                	pushq	%r12
ffffffff80001669: 53                   	pushq	%rbx
ffffffff8000166a: 48 81 ec e8 01 00 00 	subq	$0x1e8, %rsp            # imm = 0x1E8
ffffffff80001671: 48 89 fb             	movq	%rdi, %rbx
ffffffff80001674: b1 01                	movb	$0x1, %cl
ffffffff80001676: 31 c0                	xorl	%eax, %eax
ffffffff80001678: f0                   	lock
ffffffff80001679: 0f b0 8f d0 00 00 00 	cmpxchgb	%cl, 0xd0(%rdi)
ffffffff80001680: 0f 85 6a 09 00 00    	jne	0xffffffff80001ff0 <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.14359069980145722807+0x990>
ffffffff80001686: 48 c7 84 24 98 01 00 00 00 00 00 00  	movq	$0x0, 0x198(%rsp)
ffffffff80001692: 48 c7 84 24 a0 01 00 00 00 00 00 00  	movq	$0x0, 0x1a0(%rsp)
ffffffff8000169e: 48 c7 84 24 68 01 00 00 00 00 00 00  	movq	$0x0, 0x168(%rsp)
ffffffff800016aa: 48 c7 84 24 70 01 00 00 00 00 00 00  	movq	$0x0, 0x170(%rsp)
ffffffff800016b6: 48 c7 84 24 78 01 00 00 00 00 00 00  	movq	$0x0, 0x178(%rsp)
ffffffff800016c2: 48 c7 84 24 80 01 00 00 00 00 00 00  	movq	$0x0, 0x180(%rsp)
ffffffff800016ce: 48 c7 84 24 88 01 00 00 00 00 00 00  	movq	$0x0, 0x188(%rsp)
ffffffff800016da: 48 c7 84 24 90 01 00 00 00 00 00 00  	movq	$0x0, 0x190(%rsp)
ffffffff800016e6: 48 c7 84 24 d8 01 00 00 00 00 00 00  	movq	$0x0, 0x1d8(%rsp)
ffffffff800016f2: 48 c7 84 24 e0 01 00 00 00 00 00 00  	movq	$0x0, 0x1e0(%rsp)
ffffffff800016fe: 48 c7 84 24 a8 01 00 00 00 00 00 00  	movq	$0x0, 0x1a8(%rsp)
ffffffff8000170a: 48 c7 84 24 b0 01 00 00 00 00 00 00  	movq	$0x0, 0x1b0(%rsp)
ffffffff80001716: 48 c7 84 24 b8 01 00 00 00 00 00 00  	movq	$0x0, 0x1b8(%rsp)
ffffffff80001722: 48 c7 84 24 c0 01 00 00 00 00 00 00  	movq	$0x0, 0x1c0(%rsp)
ffffffff8000172e: 48 c7 84 24 c8 01 00 00 00 00 00 00  	movq	$0x0, 0x1c8(%rsp)
ffffffff8000173a: 48 c7 84 24 d0 01 00 00 00 00 00 00  	movq	$0x0, 0x1d0(%rsp)
ffffffff80001746: 48 bd 00 00 00 00 00 80 00 00	movabsq	$0x800000000000, %rbp # imm = 0x800000000000
ffffffff80001750: 48 8d 85 10 64 02 80 	leaq	-0x7ffd9bf0(%rbp), %rax
ffffffff80001757: 48 c1 e8 30          	shrq	$0x30, %rax
ffffffff8000175b: 0f 85 de 08 00 00    	jne	0xffffffff8000203f <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.14359069980145722807+0x9df>
ffffffff80001761: 49 bf 00 00 00 00 00 00 01 00	movabsq	$0x1000000000000, %r15 # imm = 0x1000000000000
ffffffff8000176b: 49 bc 00 40 00 00 00 80 00 00	movabsq	$0x800000004000, %r12 # imm = 0x800000004000
ffffffff80001775: 48 c7 84 24 b8 00 00 00 10 64 02 80  	movq	$-0x7ffd9bf0, 0xb8(%rsp) # imm = 0x80026410
ffffffff80001781: 48 8d 84 24 b8 00 00 00      	leaq	0xb8(%rsp), %rax
ffffffff80001789: 48 89 44 24 40       	movq	%rax, 0x40(%rsp)
ffffffff8000178e: 48 c7 44 24 48 80 2e 00 80   	movq	$-0x7fffd180, 0x48(%rsp) # imm = 0x80002E80
ffffffff80001797: 48 c7 44 24 70 02 00 00 00   	movq	$0x2, 0x70(%rsp)
ffffffff800017a0: 48 c7 84 24 80 00 00 00 02 00 00 00  	movq	$0x2, 0x80(%rsp)
ffffffff800017ac: 48 c7 84 24 90 00 00 00 00 00 00 00  	movq	$0x0, 0x90(%rsp)
ffffffff800017b8: 48 b8 20 00 00 00 04 00 00 00	movabsq	$0x400000020, %rax # imm = 0x400000020
ffffffff800017c2: 48 89 84 24 98 00 00 00      	movq	%rax, 0x98(%rsp)
ffffffff800017ca: c6 84 24 a0 00 00 00 03      	movb	$0x3, 0xa0(%rsp)
ffffffff800017d2: 48 c7 44 24 08 78 db 01 80   	movq	$-0x7ffe2488, 0x8(%rsp) # imm = 0x8001DB78
ffffffff800017db: 48 c7 44 24 10 02 00 00 00   	movq	$0x2, 0x10(%rsp)
ffffffff800017e4: 48 8d 44 24 70       	leaq	0x70(%rsp), %rax
ffffffff800017e9: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff800017ee: 48 c7 44 24 30 01 00 00 00   	movq	$0x1, 0x30(%rsp)
ffffffff800017f7: 48 8d 44 24 40       	leaq	0x40(%rsp), %rax
ffffffff800017fc: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff80001801: 48 c7 44 24 20 01 00 00 00   	movq	$0x1, 0x20(%rsp)
ffffffff8000180a: 4c 8d 74 24 08       	leaq	0x8(%rsp), %r14
ffffffff8000180f: 4c 89 f7             	movq	%r14, %rdi
ffffffff80001812: e8 39 9a 00 00       	callq	0xffffffff8000b250 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff80001817: 48 8b 84 24 b8 00 00 00      	movq	0xb8(%rsp), %rax
ffffffff8000181f: 4a 8d 0c 20          	leaq	(%rax,%r12), %rcx
ffffffff80001823: 4c 39 f9             	cmpq	%r15, %rcx
ffffffff80001826: 0f 83 13 08 00 00    	jae	0xffffffff8000203f <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.14359069980145722807+0x9df>
ffffffff8000182c: 48 05 00 40 00 00    	addq	$0x4000, %rax           # imm = 0x4000
ffffffff80001832: 48 89 84 24 c0 00 00 00      	movq	%rax, 0xc0(%rsp)
ffffffff8000183a: 48 8d 84 24 c0 00 00 00      	leaq	0xc0(%rsp), %rax
ffffffff80001842: 48 89 84 24 a8 00 00 00      	movq	%rax, 0xa8(%rsp)
ffffffff8000184a: 48 c7 84 24 b0 00 00 00 80 2e 00 80  	movq	$-0x7fffd180, 0xb0(%rsp) # imm = 0x80002E80
ffffffff80001856: 48 8b 84 24 a0 00 00 00      	movq	0xa0(%rsp), %rax
ffffffff8000185e: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff80001863: 48 8b 84 24 98 00 00 00      	movq	0x98(%rsp), %rax
ffffffff8000186b: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff80001870: 48 8b 84 24 90 00 00 00      	movq	0x90(%rsp), %rax
ffffffff80001878: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff8000187d: 48 8b 84 24 88 00 00 00      	movq	0x88(%rsp), %rax
ffffffff80001885: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff8000188a: 48 8b 84 24 80 00 00 00      	movq	0x80(%rsp), %rax
ffffffff80001892: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff80001897: 48 8b 44 24 70       	movq	0x70(%rsp), %rax
ffffffff8000189c: 48 8b 4c 24 78       	movq	0x78(%rsp), %rcx
ffffffff800018a1: 48 89 4c 24 10       	movq	%rcx, 0x10(%rsp)
ffffffff800018a6: 48 89 44 24 08       	movq	%rax, 0x8(%rsp)
ffffffff800018ab: 48 c7 44 24 40 a8 db 01 80   	movq	$-0x7ffe2458, 0x40(%rsp) # imm = 0x8001DBA8
ffffffff800018b4: 48 c7 44 24 48 02 00 00 00   	movq	$0x2, 0x48(%rsp)
ffffffff800018bd: 4c 89 74 24 60       	movq	%r14, 0x60(%rsp)
ffffffff800018c2: 48 c7 44 24 68 01 00 00 00   	movq	$0x1, 0x68(%rsp)
ffffffff800018cb: 4c 8d ac 24 a8 00 00 00      	leaq	0xa8(%rsp), %r13
ffffffff800018d3: 4c 89 6c 24 50       	movq	%r13, 0x50(%rsp)
ffffffff800018d8: 48 c7 44 24 58 01 00 00 00   	movq	$0x1, 0x58(%rsp)
ffffffff800018e1: 48 8d 7c 24 40       	leaq	0x40(%rsp), %rdi
ffffffff800018e6: e8 65 99 00 00       	callq	0xffffffff8000b250 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff800018eb: 48 8d 85 10 e4 02 80 	leaq	-0x7ffd1bf0(%rbp), %rax
ffffffff800018f2: 4c 39 f8             	cmpq	%r15, %rax
ffffffff800018f5: 0f 83 44 07 00 00    	jae	0xffffffff8000203f <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.14359069980145722807+0x9df>
ffffffff800018fb: 48 c7 84 24 d0 00 00 00 10 e4 02 80  	movq	$-0x7ffd1bf0, 0xd0(%rsp) # imm = 0x8002E410
ffffffff80001907: 48 8d ac 24 d0 00 00 00      	leaq	0xd0(%rsp), %rbp
ffffffff8000190f: 48 89 ac 24 a8 00 00 00      	movq	%rbp, 0xa8(%rsp)
ffffffff80001917: 48 c7 84 24 b0 00 00 00 80 2e 00 80  	movq	$-0x7fffd180, 0xb0(%rsp) # imm = 0x80002E80
ffffffff80001923: 48 8b 84 24 a0 00 00 00      	movq	0xa0(%rsp), %rax
ffffffff8000192b: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff80001930: 48 8b 84 24 98 00 00 00      	movq	0x98(%rsp), %rax
ffffffff80001938: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff8000193d: 48 8b 84 24 90 00 00 00      	movq	0x90(%rsp), %rax
ffffffff80001945: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff8000194a: 48 8b 84 24 88 00 00 00      	movq	0x88(%rsp), %rax
ffffffff80001952: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff80001957: 48 8b 84 24 80 00 00 00      	movq	0x80(%rsp), %rax
ffffffff8000195f: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff80001964: 48 8b 44 24 70       	movq	0x70(%rsp), %rax
ffffffff80001969: 48 8b 4c 24 78       	movq	0x78(%rsp), %rcx
ffffffff8000196e: 48 89 4c 24 10       	movq	%rcx, 0x10(%rsp)
ffffffff80001973: 48 89 44 24 08       	movq	%rax, 0x8(%rsp)
ffffffff80001978: 48 c7 44 24 40 e0 db 01 80   	movq	$-0x7ffe2420, 0x40(%rsp) # imm = 0x8001DBE0
ffffffff80001981: 48 c7 44 24 48 02 00 00 00   	movq	$0x2, 0x48(%rsp)
ffffffff8000198a: 4c 89 74 24 60       	movq	%r14, 0x60(%rsp)
ffffffff8000198f: 48 c7 44 24 68 01 00 00 00   	movq	$0x1, 0x68(%rsp)
ffffffff80001998: 4c 89 6c 24 50       	movq	%r13, 0x50(%rsp)
ffffffff8000199d: 48 c7 44 24 58 01 00 00 00   	movq	$0x1, 0x58(%rsp)
ffffffff800019a6: 48 8d 7c 24 40       	leaq	0x40(%rsp), %rdi
ffffffff800019ab: e8 a0 98 00 00       	callq	0xffffffff8000b250 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff800019b0: 48 8b 84 24 d0 00 00 00      	movq	0xd0(%rsp), %rax
ffffffff800019b8: 4a 8d 0c 20          	leaq	(%rax,%r12), %rcx
ffffffff800019bc: 4c 39 f9             	cmpq	%r15, %rcx
ffffffff800019bf: 0f 83 7a 06 00 00    	jae	0xffffffff8000203f <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.14359069980145722807+0x9df>
ffffffff800019c5: 48 05 00 40 00 00    	addq	$0x4000, %rax           # imm = 0x4000
ffffffff800019cb: 48 89 84 24 c8 00 00 00      	movq	%rax, 0xc8(%rsp)
ffffffff800019d3: 48 8d 84 24 c8 00 00 00      	leaq	0xc8(%rsp), %rax
ffffffff800019db: 48 89 84 24 a8 00 00 00      	movq	%rax, 0xa8(%rsp)
ffffffff800019e3: 48 c7 84 24 b0 00 00 00 80 2e 00 80  	movq	$-0x7fffd180, 0xb0(%rsp) # imm = 0x80002E80
ffffffff800019ef: 48 8b 84 24 a0 00 00 00      	movq	0xa0(%rsp), %rax
ffffffff800019f7: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff800019fc: 48 8b 84 24 98 00 00 00      	movq	0x98(%rsp), %rax
ffffffff80001a04: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff80001a09: 48 8b 84 24 90 00 00 00      	movq	0x90(%rsp), %rax
ffffffff80001a11: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff80001a16: 48 8b 84 24 88 00 00 00      	movq	0x88(%rsp), %rax
ffffffff80001a1e: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff80001a23: 48 8b 84 24 80 00 00 00      	movq	0x80(%rsp), %rax
ffffffff80001a2b: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff80001a30: 48 8b 44 24 70       	movq	0x70(%rsp), %rax
ffffffff80001a35: 48 8b 4c 24 78       	movq	0x78(%rsp), %rcx
ffffffff80001a3a: 48 89 4c 24 10       	movq	%rcx, 0x10(%rsp)
ffffffff80001a3f: 48 89 44 24 08       	movq	%rax, 0x8(%rsp)
ffffffff80001a44: 48 c7 44 24 40 70 dc 01 80   	movq	$-0x7ffe2390, 0x40(%rsp) # imm = 0x8001DC70
ffffffff80001a4d: 48 c7 44 24 48 02 00 00 00   	movq	$0x2, 0x48(%rsp)
ffffffff80001a56: 4c 89 74 24 60       	movq	%r14, 0x60(%rsp)
ffffffff80001a5b: 48 c7 44 24 68 01 00 00 00   	movq	$0x1, 0x68(%rsp)
ffffffff80001a64: 4c 89 6c 24 50       	movq	%r13, 0x50(%rsp)
ffffffff80001a69: 48 c7 44 24 58 01 00 00 00   	movq	$0x1, 0x58(%rsp)
ffffffff80001a72: 4c 8d 74 24 40       	leaq	0x40(%rsp), %r14
ffffffff80001a77: 4c 89 f7             	movq	%r14, %rdi
ffffffff80001a7a: e8 d1 97 00 00       	callq	0xffffffff8000b250 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff80001a7f: 49 8d 84 24 10 64 02 80      	leaq	-0x7ffd9bf0(%r12), %rax
ffffffff80001a87: 4c 39 f8             	cmpq	%r15, %rax
ffffffff80001a8a: 0f 83 af 05 00 00    	jae	0xffffffff8000203f <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.14359069980145722807+0x9df>
ffffffff80001a90: 48 8b 84 24 c0 00 00 00      	movq	0xc0(%rsp), %rax
ffffffff80001a98: 48 89 84 24 e0 00 00 00      	movq	%rax, 0xe0(%rsp)
ffffffff80001aa0: 48 8b 84 24 c8 00 00 00      	movq	0xc8(%rsp), %rax
ffffffff80001aa8: 48 89 84 24 d8 00 00 00      	movq	%rax, 0xd8(%rsp)
ffffffff80001ab0: 48 c7 84 24 b8 00 00 00 10 a4 02 80  	movq	$-0x7ffd5bf0, 0xb8(%rsp) # imm = 0x8002A410
ffffffff80001abc: 48 8d 84 24 b8 00 00 00      	leaq	0xb8(%rsp), %rax
ffffffff80001ac4: 48 89 44 24 40       	movq	%rax, 0x40(%rsp)
ffffffff80001ac9: 48 c7 44 24 48 80 2e 00 80   	movq	$-0x7fffd180, 0x48(%rsp) # imm = 0x80002E80
ffffffff80001ad2: 48 c7 44 24 70 02 00 00 00   	movq	$0x2, 0x70(%rsp)
ffffffff80001adb: 48 c7 84 24 80 00 00 00 02 00 00 00  	movq	$0x2, 0x80(%rsp)
ffffffff80001ae7: 48 c7 84 24 90 00 00 00 00 00 00 00  	movq	$0x0, 0x90(%rsp)
ffffffff80001af3: 48 b8 20 00 00 00 04 00 00 00	movabsq	$0x400000020, %rax # imm = 0x400000020
ffffffff80001afd: 48 89 84 24 98 00 00 00      	movq	%rax, 0x98(%rsp)
ffffffff80001b05: c6 84 24 a0 00 00 00 03      	movb	$0x3, 0xa0(%rsp)
ffffffff80001b0d: 48 c7 44 24 08 78 db 01 80   	movq	$-0x7ffe2488, 0x8(%rsp) # imm = 0x8001DB78
ffffffff80001b16: 48 c7 44 24 10 02 00 00 00   	movq	$0x2, 0x10(%rsp)
ffffffff80001b1f: 48 8d 44 24 70       	leaq	0x70(%rsp), %rax
ffffffff80001b24: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff80001b29: 48 c7 44 24 30 01 00 00 00   	movq	$0x1, 0x30(%rsp)
ffffffff80001b32: 4c 89 74 24 18       	movq	%r14, 0x18(%rsp)
ffffffff80001b37: 48 c7 44 24 20 01 00 00 00   	movq	$0x1, 0x20(%rsp)
ffffffff80001b40: 4c 8d 74 24 08       	leaq	0x8(%rsp), %r14
ffffffff80001b45: 4c 89 f7             	movq	%r14, %rdi
ffffffff80001b48: e8 03 97 00 00       	callq	0xffffffff8000b250 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff80001b4d: 48 8b 84 24 b8 00 00 00      	movq	0xb8(%rsp), %rax
ffffffff80001b55: 4a 8d 0c 20          	leaq	(%rax,%r12), %rcx
ffffffff80001b59: 4c 39 f9             	cmpq	%r15, %rcx
ffffffff80001b5c: 0f 83 dd 04 00 00    	jae	0xffffffff8000203f <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.14359069980145722807+0x9df>
ffffffff80001b62: 48 05 00 40 00 00    	addq	$0x4000, %rax           # imm = 0x4000
ffffffff80001b68: 48 89 84 24 c0 00 00 00      	movq	%rax, 0xc0(%rsp)
ffffffff80001b70: 48 8d 84 24 c0 00 00 00      	leaq	0xc0(%rsp), %rax
ffffffff80001b78: 48 89 84 24 a8 00 00 00      	movq	%rax, 0xa8(%rsp)
ffffffff80001b80: 48 c7 84 24 b0 00 00 00 80 2e 00 80  	movq	$-0x7fffd180, 0xb0(%rsp) # imm = 0x80002E80
ffffffff80001b8c: 48 8b 84 24 a0 00 00 00      	movq	0xa0(%rsp), %rax
ffffffff80001b94: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff80001b99: 48 8b 84 24 98 00 00 00      	movq	0x98(%rsp), %rax
ffffffff80001ba1: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff80001ba6: 48 8b 84 24 90 00 00 00      	movq	0x90(%rsp), %rax
ffffffff80001bae: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff80001bb3: 48 8b 84 24 88 00 00 00      	movq	0x88(%rsp), %rax
ffffffff80001bbb: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff80001bc0: 48 8b 84 24 80 00 00 00      	movq	0x80(%rsp), %rax
ffffffff80001bc8: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff80001bcd: 48 8b 44 24 70       	movq	0x70(%rsp), %rax
ffffffff80001bd2: 48 8b 4c 24 78       	movq	0x78(%rsp), %rcx
ffffffff80001bd7: 48 89 4c 24 10       	movq	%rcx, 0x10(%rsp)
ffffffff80001bdc: 48 89 44 24 08       	movq	%rax, 0x8(%rsp)
ffffffff80001be1: 48 c7 44 24 40 a8 db 01 80   	movq	$-0x7ffe2458, 0x40(%rsp) # imm = 0x8001DBA8
ffffffff80001bea: 48 c7 44 24 48 02 00 00 00   	movq	$0x2, 0x48(%rsp)
ffffffff80001bf3: 4c 89 74 24 60       	movq	%r14, 0x60(%rsp)
ffffffff80001bf8: 48 c7 44 24 68 01 00 00 00   	movq	$0x1, 0x68(%rsp)
ffffffff80001c01: 4c 89 6c 24 50       	movq	%r13, 0x50(%rsp)
ffffffff80001c06: 48 c7 44 24 58 01 00 00 00   	movq	$0x1, 0x58(%rsp)
ffffffff80001c0f: 48 8d 7c 24 40       	leaq	0x40(%rsp), %rdi
ffffffff80001c14: e8 37 96 00 00       	callq	0xffffffff8000b250 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff80001c19: 49 8d 84 24 10 e4 02 80      	leaq	-0x7ffd1bf0(%r12), %rax
ffffffff80001c21: 4c 39 f8             	cmpq	%r15, %rax
ffffffff80001c24: 0f 83 15 04 00 00    	jae	0xffffffff8000203f <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.14359069980145722807+0x9df>
ffffffff80001c2a: 48 c7 84 24 d0 00 00 00 10 24 03 80  	movq	$-0x7ffcdbf0, 0xd0(%rsp) # imm = 0x80032410
ffffffff80001c36: 48 89 ac 24 a8 00 00 00      	movq	%rbp, 0xa8(%rsp)
ffffffff80001c3e: 48 c7 84 24 b0 00 00 00 80 2e 00 80  	movq	$-0x7fffd180, 0xb0(%rsp) # imm = 0x80002E80
ffffffff80001c4a: 48 8b 84 24 a0 00 00 00      	movq	0xa0(%rsp), %rax
ffffffff80001c52: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff80001c57: 48 8b 84 24 98 00 00 00      	movq	0x98(%rsp), %rax
ffffffff80001c5f: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff80001c64: 48 8b 84 24 90 00 00 00      	movq	0x90(%rsp), %rax
ffffffff80001c6c: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff80001c71: 48 8b 84 24 88 00 00 00      	movq	0x88(%rsp), %rax
ffffffff80001c79: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff80001c7e: 48 8b 84 24 80 00 00 00      	movq	0x80(%rsp), %rax
ffffffff80001c86: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff80001c8b: 48 8b 44 24 70       	movq	0x70(%rsp), %rax
ffffffff80001c90: 48 8b 4c 24 78       	movq	0x78(%rsp), %rcx
ffffffff80001c95: 48 89 4c 24 10       	movq	%rcx, 0x10(%rsp)
ffffffff80001c9a: 48 89 44 24 08       	movq	%rax, 0x8(%rsp)
ffffffff80001c9f: 48 c7 44 24 40 e0 db 01 80   	movq	$-0x7ffe2420, 0x40(%rsp) # imm = 0x8001DBE0
ffffffff80001ca8: 48 c7 44 24 48 02 00 00 00   	movq	$0x2, 0x48(%rsp)
ffffffff80001cb1: 4c 89 74 24 60       	movq	%r14, 0x60(%rsp)
ffffffff80001cb6: 48 c7 44 24 68 01 00 00 00   	movq	$0x1, 0x68(%rsp)
ffffffff80001cbf: 4c 89 6c 24 50       	movq	%r13, 0x50(%rsp)
ffffffff80001cc4: 48 c7 44 24 58 01 00 00 00   	movq	$0x1, 0x58(%rsp)
ffffffff80001ccd: 48 8d 7c 24 40       	leaq	0x40(%rsp), %rdi
ffffffff80001cd2: e8 79 95 00 00       	callq	0xffffffff8000b250 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff80001cd7: 48 8b 84 24 d0 00 00 00      	movq	0xd0(%rsp), %rax
ffffffff80001cdf: 49 01 c4             	addq	%rax, %r12
ffffffff80001ce2: 4d 39 fc             	cmpq	%r15, %r12
ffffffff80001ce5: 0f 83 54 03 00 00    	jae	0xffffffff8000203f <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.14359069980145722807+0x9df>
ffffffff80001ceb: 48 05 00 40 00 00    	addq	$0x4000, %rax           # imm = 0x4000
ffffffff80001cf1: 48 89 84 24 c8 00 00 00      	movq	%rax, 0xc8(%rsp)
ffffffff80001cf9: 48 8d 84 24 c8 00 00 00      	leaq	0xc8(%rsp), %rax
ffffffff80001d01: 48 89 84 24 a8 00 00 00      	movq	%rax, 0xa8(%rsp)
ffffffff80001d09: 48 c7 84 24 b0 00 00 00 80 2e 00 80  	movq	$-0x7fffd180, 0xb0(%rsp) # imm = 0x80002E80
ffffffff80001d15: 48 8b 84 24 a0 00 00 00      	movq	0xa0(%rsp), %rax
ffffffff80001d1d: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff80001d22: 48 8b 84 24 98 00 00 00      	movq	0x98(%rsp), %rax
ffffffff80001d2a: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff80001d2f: 48 8b 84 24 90 00 00 00      	movq	0x90(%rsp), %rax
ffffffff80001d37: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff80001d3c: 48 8b 84 24 88 00 00 00      	movq	0x88(%rsp), %rax
ffffffff80001d44: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff80001d49: 48 8b 84 24 80 00 00 00      	movq	0x80(%rsp), %rax
ffffffff80001d51: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff80001d56: 48 8b 44 24 70       	movq	0x70(%rsp), %rax
ffffffff80001d5b: 48 8b 4c 24 78       	movq	0x78(%rsp), %rcx
ffffffff80001d60: 48 89 4c 24 10       	movq	%rcx, 0x10(%rsp)
ffffffff80001d65: 48 89 44 24 08       	movq	%rax, 0x8(%rsp)
ffffffff80001d6a: 48 c7 44 24 40 70 dc 01 80   	movq	$-0x7ffe2390, 0x40(%rsp) # imm = 0x8001DC70
ffffffff80001d73: 48 c7 44 24 48 02 00 00 00   	movq	$0x2, 0x48(%rsp)
ffffffff80001d7c: 4c 89 74 24 60       	movq	%r14, 0x60(%rsp)
ffffffff80001d81: 48 c7 44 24 68 01 00 00 00   	movq	$0x1, 0x68(%rsp)
ffffffff80001d8a: 4c 89 6c 24 50       	movq	%r13, 0x50(%rsp)
ffffffff80001d8f: 48 c7 44 24 58 01 00 00 00   	movq	$0x1, 0x58(%rsp)
ffffffff80001d98: 48 8d 7c 24 40       	leaq	0x40(%rsp), %rdi
ffffffff80001d9d: e8 ae 94 00 00       	callq	0xffffffff8000b250 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff80001da2: 48 8b 84 24 c0 00 00 00      	movq	0xc0(%rsp), %rax
ffffffff80001daa: 48 8b 8c 24 c8 00 00 00      	movq	0xc8(%rsp), %rcx
ffffffff80001db2: 48 8b 94 24 d8 01 00 00      	movq	0x1d8(%rsp), %rdx
ffffffff80001dba: 48 8b b4 24 e0 01 00 00      	movq	0x1e0(%rsp), %rsi
ffffffff80001dc2: 48 89 94 24 58 01 00 00      	movq	%rdx, 0x158(%rsp)
ffffffff80001dca: 48 89 b4 24 60 01 00 00      	movq	%rsi, 0x160(%rsp)
ffffffff80001dd2: 48 8b 94 24 a8 01 00 00      	movq	0x1a8(%rsp), %rdx
ffffffff80001dda: 48 8b b4 24 b0 01 00 00      	movq	0x1b0(%rsp), %rsi
ffffffff80001de2: 48 89 94 24 28 01 00 00      	movq	%rdx, 0x128(%rsp)
ffffffff80001dea: 48 89 b4 24 30 01 00 00      	movq	%rsi, 0x130(%rsp)
ffffffff80001df2: 48 8b 94 24 b8 01 00 00      	movq	0x1b8(%rsp), %rdx
ffffffff80001dfa: 48 89 94 24 38 01 00 00      	movq	%rdx, 0x138(%rsp)
ffffffff80001e02: 48 8b 94 24 c0 01 00 00      	movq	0x1c0(%rsp), %rdx
ffffffff80001e0a: 48 89 94 24 40 01 00 00      	movq	%rdx, 0x140(%rsp)
ffffffff80001e12: 48 8b 94 24 c8 01 00 00      	movq	0x1c8(%rsp), %rdx
ffffffff80001e1a: 48 89 94 24 48 01 00 00      	movq	%rdx, 0x148(%rsp)
ffffffff80001e22: 48 8b 94 24 d0 01 00 00      	movq	0x1d0(%rsp), %rdx
ffffffff80001e2a: 48 89 94 24 50 01 00 00      	movq	%rdx, 0x150(%rsp)
ffffffff80001e32: 48 8b 94 24 98 01 00 00      	movq	0x198(%rsp), %rdx
ffffffff80001e3a: 48 8b b4 24 a0 01 00 00      	movq	0x1a0(%rsp), %rsi
ffffffff80001e42: 48 89 b4 24 20 01 00 00      	movq	%rsi, 0x120(%rsp)
ffffffff80001e4a: 48 89 94 24 18 01 00 00      	movq	%rdx, 0x118(%rsp)
ffffffff80001e52: 48 8b 94 24 90 01 00 00      	movq	0x190(%rsp), %rdx
ffffffff80001e5a: 48 89 94 24 10 01 00 00      	movq	%rdx, 0x110(%rsp)
ffffffff80001e62: 48 8b 94 24 88 01 00 00      	movq	0x188(%rsp), %rdx
ffffffff80001e6a: 48 89 94 24 08 01 00 00      	movq	%rdx, 0x108(%rsp)
ffffffff80001e72: 48 8b 94 24 80 01 00 00      	movq	0x180(%rsp), %rdx
ffffffff80001e7a: 48 89 94 24 00 01 00 00      	movq	%rdx, 0x100(%rsp)
ffffffff80001e82: 48 8b 94 24 78 01 00 00      	movq	0x178(%rsp), %rdx
ffffffff80001e8a: 48 89 94 24 f8 00 00 00      	movq	%rdx, 0xf8(%rsp)
ffffffff80001e92: 48 8b 94 24 68 01 00 00      	movq	0x168(%rsp), %rdx
ffffffff80001e9a: 48 8b b4 24 70 01 00 00      	movq	0x170(%rsp), %rsi
ffffffff80001ea2: 48 89 b4 24 f0 00 00 00      	movq	%rsi, 0xf0(%rsp)
ffffffff80001eaa: 48 89 94 24 e8 00 00 00      	movq	%rdx, 0xe8(%rsp)
ffffffff80001eb2: c7 03 00 00 00 00    	movl	$0x0, (%rbx)
ffffffff80001eb8: 48 8b 94 24 d8 00 00 00      	movq	0xd8(%rsp), %rdx
ffffffff80001ec0: 48 89 53 04          	movq	%rdx, 0x4(%rbx)
ffffffff80001ec4: 48 8b 94 24 58 01 00 00      	movq	0x158(%rsp), %rdx
ffffffff80001ecc: 48 8b b4 24 60 01 00 00      	movq	0x160(%rsp), %rsi
ffffffff80001ed4: 48 89 53 0c          	movq	%rdx, 0xc(%rbx)
ffffffff80001ed8: 48 89 73 14          	movq	%rsi, 0x14(%rbx)
ffffffff80001edc: 48 c7 43 1c 00 00 00 00      	movq	$0x0, 0x1c(%rbx)
ffffffff80001ee4: 48 8b 94 24 e0 00 00 00      	movq	0xe0(%rsp), %rdx
ffffffff80001eec: 48 89 53 24          	movq	%rdx, 0x24(%rbx)
ffffffff80001ef0: 48 8b 94 24 28 01 00 00      	movq	0x128(%rsp), %rdx
ffffffff80001ef8: 48 8b b4 24 30 01 00 00      	movq	0x130(%rsp), %rsi
ffffffff80001f00: 48 89 53 2c          	movq	%rdx, 0x2c(%rbx)
ffffffff80001f04: 48 89 73 34          	movq	%rsi, 0x34(%rbx)
ffffffff80001f08: 48 8b 94 24 38 01 00 00      	movq	0x138(%rsp), %rdx
ffffffff80001f10: 48 89 53 3c          	movq	%rdx, 0x3c(%rbx)
ffffffff80001f14: 48 8b 94 24 40 01 00 00      	movq	0x140(%rsp), %rdx
ffffffff80001f1c: 48 89 53 44          	movq	%rdx, 0x44(%rbx)
ffffffff80001f20: 48 8b 94 24 48 01 00 00      	movq	0x148(%rsp), %rdx
ffffffff80001f28: 48 89 53 4c          	movq	%rdx, 0x4c(%rbx)
ffffffff80001f2c: 48 8b 94 24 50 01 00 00      	movq	0x150(%rsp), %rdx
ffffffff80001f34: 48 89 53 54          	movq	%rdx, 0x54(%rbx)
ffffffff80001f38: 48 c7 43 5c 00 00 00 00      	movq	$0x0, 0x5c(%rbx)
ffffffff80001f40: 48 c7 43 64 00 00 68 00      	movq	$0x680000, 0x64(%rbx) # imm = 0x680000
ffffffff80001f48: 48 89 4b 6c          	movq	%rcx, 0x6c(%rbx)
ffffffff80001f4c: 48 8b 8c 24 18 01 00 00      	movq	0x118(%rsp), %rcx
ffffffff80001f54: 48 8b 94 24 20 01 00 00      	movq	0x120(%rsp), %rdx
ffffffff80001f5c: 48 89 4b 74          	movq	%rcx, 0x74(%rbx)
ffffffff80001f60: 48 89 53 7c          	movq	%rdx, 0x7c(%rbx)
ffffffff80001f64: 48 c7 83 84 00 00 00 00 00 00 00     	movq	$0x0, 0x84(%rbx)
ffffffff80001f6f: 48 89 83 8c 00 00 00 	movq	%rax, 0x8c(%rbx)
ffffffff80001f76: 48 8b 84 24 10 01 00 00      	movq	0x110(%rsp), %rax
ffffffff80001f7e: 48 89 83 bc 00 00 00 	movq	%rax, 0xbc(%rbx)
ffffffff80001f85: 48 8b 84 24 08 01 00 00      	movq	0x108(%rsp), %rax
ffffffff80001f8d: 48 89 83 b4 00 00 00 	movq	%rax, 0xb4(%rbx)
ffffffff80001f94: 48 8b 84 24 00 01 00 00      	movq	0x100(%rsp), %rax
ffffffff80001f9c: 48 89 83 ac 00 00 00 	movq	%rax, 0xac(%rbx)
ffffffff80001fa3: 48 8b 84 24 f8 00 00 00      	movq	0xf8(%rsp), %rax
ffffffff80001fab: 48 89 83 a4 00 00 00 	movq	%rax, 0xa4(%rbx)
ffffffff80001fb2: 48 8b 84 24 e8 00 00 00      	movq	0xe8(%rsp), %rax
ffffffff80001fba: 48 8b 8c 24 f0 00 00 00      	movq	0xf0(%rsp), %rcx
ffffffff80001fc2: 48 89 8b 9c 00 00 00 	movq	%rcx, 0x9c(%rbx)
ffffffff80001fc9: 48 89 83 94 00 00 00 	movq	%rax, 0x94(%rbx)
ffffffff80001fd0: 48 c7 83 c4 00 00 00 00 00 00 00     	movq	$0x0, 0xc4(%rbx)
ffffffff80001fdb: c7 83 cc 00 00 00 00 00 68 00	movl	$0x680000, 0xcc(%rbx) # imm = 0x680000
ffffffff80001fe5: c6 83 d0 00 00 00 02 	movb	$0x2, 0xd0(%rbx)
ffffffff80001fec: eb 3c                	jmp	0xffffffff8000202a <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.14359069980145722807+0x9ca>
ffffffff80001fee: 66 90                	nop
ffffffff80001ff0: 0f b6 c0             	movzbl	%al, %eax
ffffffff80001ff3: ff 24 c5 48 d8 01 80 	jmpq	*-0x7ffe27b8(,%rax,8)
ffffffff80001ffa: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff80002000: f3 90                	pause
ffffffff80002002: 0f b6 83 d0 00 00 00 	movzbl	0xd0(%rbx), %eax
ffffffff80002009: 3c 01                	cmpb	$0x1, %al
ffffffff8000200b: 74 f3                	je	0xffffffff80002000 <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.14359069980145722807+0x9a0>
ffffffff8000200d: 0f b6 c0             	movzbl	%al, %eax
ffffffff80002010: 85 c0                	testl	%eax, %eax
ffffffff80002012: 75 11                	jne	0xffffffff80002025 <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.14359069980145722807+0x9c5>
ffffffff80002014: 31 c0                	xorl	%eax, %eax
ffffffff80002016: f0                   	lock
ffffffff80002017: 0f b0 8b d0 00 00 00 	cmpxchgb	%cl, 0xd0(%rbx)
ffffffff8000201e: 75 d0                	jne	0xffffffff80001ff0 <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.14359069980145722807+0x990>
ffffffff80002020: e9 61 f6 ff ff       	jmp	0xffffffff80001686 <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.14359069980145722807+0x26>
ffffffff80002025: 83 f8 02             	cmpl	$0x2, %eax
ffffffff80002028: 75 2d                	jne	0xffffffff80002057 <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.14359069980145722807+0x9f7>
ffffffff8000202a: 48 89 d8             	movq	%rbx, %rax
ffffffff8000202d: 48 81 c4 e8 01 00 00 	addq	$0x1e8, %rsp            # imm = 0x1E8
ffffffff80002034: 5b                   	popq	%rbx
ffffffff80002035: 41 5c                	popq	%r12
ffffffff80002037: 41 5d                	popq	%r13
ffffffff80002039: 41 5e                	popq	%r14
ffffffff8000203b: 41 5f                	popq	%r15
ffffffff8000203d: 5d                   	popq	%rbp
ffffffff8000203e: c3                   	retq
ffffffff8000203f: be 36 00 00 00       	movl	$0x36, %esi
ffffffff80002044: 48 c7 c7 b8 da 01 80 	movq	$-0x7ffe2548, %rdi      # imm = 0x8001DAB8
ffffffff8000204b: 48 c7 c2 50 db 01 80 	movq	$-0x7ffe24b0, %rdx      # imm = 0x8001DB50
ffffffff80002052: e8 19 a4 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80002057: be 26 00 00 00       	movl	$0x26, %esi
ffffffff8000205c: 48 c7 c7 a8 d9 01 80 	movq	$-0x7ffe2658, %rdi      # imm = 0x8001D9A8
ffffffff80002063: 48 c7 c2 d0 d9 01 80 	movq	$-0x7ffe2630, %rdx      # imm = 0x8001D9D0
ffffffff8000206a: e8 01 a4 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000206f: be 0d 00 00 00       	movl	$0xd, %esi
ffffffff80002074: 48 c7 c7 28 d9 01 80 	movq	$-0x7ffe26d8, %rdi      # imm = 0x8001D928
ffffffff8000207b: 48 c7 c2 90 d9 01 80 	movq	$-0x7ffe2670, %rdx      # imm = 0x8001D990
ffffffff80002082: e8 e9 a3 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80002087: cc                   	int3
ffffffff80002088: cc                   	int3
ffffffff80002089: cc                   	int3
ffffffff8000208a: cc                   	int3
ffffffff8000208b: cc                   	int3
ffffffff8000208c: cc                   	int3
ffffffff8000208d: cc                   	int3
ffffffff8000208e: cc                   	int3
ffffffff8000208f: cc                   	int3

ffffffff80002090 <spin::once::Once<T,R>::try_call_once_slow::h18e40e08e0d1d65a.llvm.14359069980145722807>:
ffffffff80002090: 53                   	pushq	%rbx
ffffffff80002091: 48 89 fb             	movq	%rdi, %rbx
ffffffff80002094: b1 01                	movb	$0x1, %cl
ffffffff80002096: 31 c0                	xorl	%eax, %eax
ffffffff80002098: f0                   	lock
ffffffff80002099: 0f b0 4f 08          	cmpxchgb	%cl, 0x8(%rdi)
ffffffff8000209d: 0f 85 aa 00 00 00    	jne	0xffffffff8000214d <spin::once::Once<T,R>::try_call_once_slow::h18e40e08e0d1d65a.llvm.14359069980145722807+0xbd>
ffffffff800020a3: 0f b6 05 37 31 02 00 	movzbl	0x23137(%rip), %eax     # 0xffffffff800251e1 <__rust_no_alloc_shim_is_unstable>
ffffffff800020aa: 31 c0                	xorl	%eax, %eax
ffffffff800020ac: f0                   	lock
ffffffff800020ad: 0f b0 0d 9c 2f 02 00 	cmpxchgb	%cl, 0x22f9c(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff800020b4: 74 23                	je	0xffffffff800020d9 <spin::once::Once<T,R>::try_call_once_slow::h18e40e08e0d1d65a.llvm.14359069980145722807+0x49>
ffffffff800020b6: b1 01                	movb	$0x1, %cl
ffffffff800020b8: eb 08                	jmp	0xffffffff800020c2 <spin::once::Once<T,R>::try_call_once_slow::h18e40e08e0d1d65a.llvm.14359069980145722807+0x32>
ffffffff800020ba: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff800020c0: f3 90                	pause
ffffffff800020c2: 0f b6 05 87 2f 02 00 	movzbl	0x22f87(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff800020c9: 84 c0                	testb	%al, %al
ffffffff800020cb: 75 f3                	jne	0xffffffff800020c0 <spin::once::Once<T,R>::try_call_once_slow::h18e40e08e0d1d65a.llvm.14359069980145722807+0x30>
ffffffff800020cd: 31 c0                	xorl	%eax, %eax
ffffffff800020cf: f0                   	lock
ffffffff800020d0: 0f b0 0d 79 2f 02 00 	cmpxchgb	%cl, 0x22f79(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff800020d7: 75 e9                	jne	0xffffffff800020c2 <spin::once::Once<T,R>::try_call_once_slow::h18e40e08e0d1d65a.llvm.14359069980145722807+0x32>
ffffffff800020d9: be 08 00 00 00       	movl	$0x8, %esi
ffffffff800020de: ba 30 00 00 00       	movl	$0x30, %edx
ffffffff800020e3: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff800020ea: e8 11 12 00 00       	callq	0xffffffff80003300 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff800020ef: c6 05 5a 2f 02 00 00 	movb	$0x0, 0x22f5a(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff800020f6: 48 85 c0             	testq	%rax, %rax
ffffffff800020f9: 0f 84 b4 00 00 00    	je	0xffffffff800021b3 <spin::once::Once<T,R>::try_call_once_slow::h18e40e08e0d1d65a.llvm.14359069980145722807+0x123>
ffffffff800020ff: 48 c7 00 01 00 00 00 	movq	$0x1, (%rax)
ffffffff80002106: 48 c7 40 08 01 00 00 00      	movq	$0x1, 0x8(%rax)
ffffffff8000210e: 48 c7 40 28 00 00 00 00      	movq	$0x0, 0x28(%rax)
ffffffff80002116: 48 c7 40 10 00 00 00 00      	movq	$0x0, 0x10(%rax)
ffffffff8000211e: 48 c7 40 18 00 00 00 00      	movq	$0x0, 0x18(%rax)
ffffffff80002126: 48 89 03             	movq	%rax, (%rbx)
ffffffff80002129: c6 43 08 02          	movb	$0x2, 0x8(%rbx)
ffffffff8000212d: 48 89 d8             	movq	%rbx, %rax
ffffffff80002130: 5b                   	popq	%rbx
ffffffff80002131: c3                   	retq
ffffffff80002132: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
ffffffff80002140: 31 c0                	xorl	%eax, %eax
ffffffff80002142: f0                   	lock
ffffffff80002143: 0f b0 4b 08          	cmpxchgb	%cl, 0x8(%rbx)
ffffffff80002147: 0f 84 56 ff ff ff    	je	0xffffffff800020a3 <spin::once::Once<T,R>::try_call_once_slow::h18e40e08e0d1d65a.llvm.14359069980145722807+0x13>
ffffffff8000214d: 0f b6 c0             	movzbl	%al, %eax
ffffffff80002150: ff 24 c5 68 d8 01 80 	jmpq	*-0x7ffe2798(,%rax,8)
ffffffff80002157: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
ffffffff80002160: 0f b6 43 08          	movzbl	0x8(%rbx), %eax
ffffffff80002164: 3c 01                	cmpb	$0x1, %al
ffffffff80002166: 75 0a                	jne	0xffffffff80002172 <spin::once::Once<T,R>::try_call_once_slow::h18e40e08e0d1d65a.llvm.14359069980145722807+0xe2>
ffffffff80002168: f3 90                	pause
ffffffff8000216a: 0f b6 43 08          	movzbl	0x8(%rbx), %eax
ffffffff8000216e: 3c 01                	cmpb	$0x1, %al
ffffffff80002170: 74 f6                	je	0xffffffff80002168 <spin::once::Once<T,R>::try_call_once_slow::h18e40e08e0d1d65a.llvm.14359069980145722807+0xd8>
ffffffff80002172: 0f b6 c0             	movzbl	%al, %eax
ffffffff80002175: 85 c0                	testl	%eax, %eax
ffffffff80002177: 74 c7                	je	0xffffffff80002140 <spin::once::Once<T,R>::try_call_once_slow::h18e40e08e0d1d65a.llvm.14359069980145722807+0xb0>
ffffffff80002179: 83 f8 02             	cmpl	$0x2, %eax
ffffffff8000217c: 75 05                	jne	0xffffffff80002183 <spin::once::Once<T,R>::try_call_once_slow::h18e40e08e0d1d65a.llvm.14359069980145722807+0xf3>
ffffffff8000217e: 48 89 d8             	movq	%rbx, %rax
ffffffff80002181: 5b                   	popq	%rbx
ffffffff80002182: c3                   	retq
ffffffff80002183: be 26 00 00 00       	movl	$0x26, %esi
ffffffff80002188: 48 c7 c7 a8 d9 01 80 	movq	$-0x7ffe2658, %rdi      # imm = 0x8001D9A8
ffffffff8000218f: 48 c7 c2 d0 d9 01 80 	movq	$-0x7ffe2630, %rdx      # imm = 0x8001D9D0
ffffffff80002196: e8 d5 a2 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000219b: be 0d 00 00 00       	movl	$0xd, %esi
ffffffff800021a0: 48 c7 c7 28 d9 01 80 	movq	$-0x7ffe26d8, %rdi      # imm = 0x8001D928
ffffffff800021a7: 48 c7 c2 90 d9 01 80 	movq	$-0x7ffe2670, %rdx      # imm = 0x8001D990
ffffffff800021ae: e8 bd a2 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff800021b3: bf 08 00 00 00       	movl	$0x8, %edi
ffffffff800021b8: be 30 00 00 00       	movl	$0x30, %esi
ffffffff800021bd: e8 a0 6e 01 00       	callq	0xffffffff80019062 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff800021c2: cc                   	int3
ffffffff800021c3: cc                   	int3
ffffffff800021c4: cc                   	int3
ffffffff800021c5: cc                   	int3
ffffffff800021c6: cc                   	int3
ffffffff800021c7: cc                   	int3
ffffffff800021c8: cc                   	int3
ffffffff800021c9: cc                   	int3
ffffffff800021ca: cc                   	int3
ffffffff800021cb: cc                   	int3
ffffffff800021cc: cc                   	int3
ffffffff800021cd: cc                   	int3
ffffffff800021ce: cc                   	int3
ffffffff800021cf: cc                   	int3

ffffffff800021d0 <spin::once::Once<T,R>::try_call_once_slow::h2c9ba4a48035d004.llvm.14359069980145722807>:
ffffffff800021d0: 53                   	pushq	%rbx
ffffffff800021d1: 48 89 fb             	movq	%rdi, %rbx
ffffffff800021d4: b1 01                	movb	$0x1, %cl
ffffffff800021d6: 31 c0                	xorl	%eax, %eax
ffffffff800021d8: f0                   	lock
ffffffff800021d9: 0f b0 4f 18          	cmpxchgb	%cl, 0x18(%rdi)
ffffffff800021dd: 75 21                	jne	0xffffffff80002200 <spin::once::Once<T,R>::try_call_once_slow::h2c9ba4a48035d004.llvm.14359069980145722807+0x30>
ffffffff800021df: e8 2c ef ff ff       	callq	0xffffffff80001110 <taos::memory::paging::init::h00a848d77a170e5f>
ffffffff800021e4: 48 c7 03 00 00 00 00 	movq	$0x0, (%rbx)
ffffffff800021eb: 48 89 43 08          	movq	%rax, 0x8(%rbx)
ffffffff800021ef: 48 89 53 10          	movq	%rdx, 0x10(%rbx)
ffffffff800021f3: c6 43 18 02          	movb	$0x2, 0x18(%rbx)
ffffffff800021f7: 48 89 d8             	movq	%rbx, %rax
ffffffff800021fa: 5b                   	popq	%rbx
ffffffff800021fb: c3                   	retq
ffffffff800021fc: 0f 1f 40 00          	nopl	(%rax)
ffffffff80002200: 0f b6 c0             	movzbl	%al, %eax
ffffffff80002203: ff 24 c5 88 d8 01 80 	jmpq	*-0x7ffe2778(,%rax,8)
ffffffff8000220a: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff80002210: f3 90                	pause
ffffffff80002212: 0f b6 43 18          	movzbl	0x18(%rbx), %eax
ffffffff80002216: 3c 01                	cmpb	$0x1, %al
ffffffff80002218: 74 f6                	je	0xffffffff80002210 <spin::once::Once<T,R>::try_call_once_slow::h2c9ba4a48035d004.llvm.14359069980145722807+0x40>
ffffffff8000221a: 0f b6 c0             	movzbl	%al, %eax
ffffffff8000221d: 85 c0                	testl	%eax, %eax
ffffffff8000221f: 75 0b                	jne	0xffffffff8000222c <spin::once::Once<T,R>::try_call_once_slow::h2c9ba4a48035d004.llvm.14359069980145722807+0x5c>
ffffffff80002221: 31 c0                	xorl	%eax, %eax
ffffffff80002223: f0                   	lock
ffffffff80002224: 0f b0 4b 18          	cmpxchgb	%cl, 0x18(%rbx)
ffffffff80002228: 75 d6                	jne	0xffffffff80002200 <spin::once::Once<T,R>::try_call_once_slow::h2c9ba4a48035d004.llvm.14359069980145722807+0x30>
ffffffff8000222a: eb b3                	jmp	0xffffffff800021df <spin::once::Once<T,R>::try_call_once_slow::h2c9ba4a48035d004.llvm.14359069980145722807+0xf>
ffffffff8000222c: 83 f8 02             	cmpl	$0x2, %eax
ffffffff8000222f: 75 05                	jne	0xffffffff80002236 <spin::once::Once<T,R>::try_call_once_slow::h2c9ba4a48035d004.llvm.14359069980145722807+0x66>
ffffffff80002231: 48 89 d8             	movq	%rbx, %rax
ffffffff80002234: 5b                   	popq	%rbx
ffffffff80002235: c3                   	retq
ffffffff80002236: be 26 00 00 00       	movl	$0x26, %esi
ffffffff8000223b: 48 c7 c7 a8 d9 01 80 	movq	$-0x7ffe2658, %rdi      # imm = 0x8001D9A8
ffffffff80002242: 48 c7 c2 d0 d9 01 80 	movq	$-0x7ffe2630, %rdx      # imm = 0x8001D9D0
ffffffff80002249: e8 22 a2 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000224e: be 0d 00 00 00       	movl	$0xd, %esi
ffffffff80002253: 48 c7 c7 28 d9 01 80 	movq	$-0x7ffe26d8, %rdi      # imm = 0x8001D928
ffffffff8000225a: 48 c7 c2 90 d9 01 80 	movq	$-0x7ffe2670, %rdx      # imm = 0x8001D990
ffffffff80002261: e8 0a a2 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80002266: cc                   	int3
ffffffff80002267: cc                   	int3
ffffffff80002268: cc                   	int3
ffffffff80002269: cc                   	int3
ffffffff8000226a: cc                   	int3
ffffffff8000226b: cc                   	int3
ffffffff8000226c: cc                   	int3
ffffffff8000226d: cc                   	int3
ffffffff8000226e: cc                   	int3
ffffffff8000226f: cc                   	int3

ffffffff80002270 <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.14359069980145722807>:
ffffffff80002270: 55                   	pushq	%rbp
ffffffff80002271: 41 57                	pushq	%r15
ffffffff80002273: 41 56                	pushq	%r14
ffffffff80002275: 41 55                	pushq	%r13
ffffffff80002277: 41 54                	pushq	%r12
ffffffff80002279: 53                   	pushq	%rbx
ffffffff8000227a: 48 81 ec 00 10 00 00 	subq	$0x1000, %rsp           # imm = 0x1000
ffffffff80002281: 48 c7 04 24 00 00 00 00      	movq	$0x0, (%rsp)
ffffffff80002289: 48 81 ec 00 10 00 00 	subq	$0x1000, %rsp           # imm = 0x1000
ffffffff80002290: 48 c7 04 24 00 00 00 00      	movq	$0x0, (%rsp)
ffffffff80002298: 48 81 ec 08 0a 00 00 	subq	$0xa08, %rsp            # imm = 0xA08
ffffffff8000229f: 48 89 fb             	movq	%rdi, %rbx
ffffffff800022a2: b1 01                	movb	$0x1, %cl
ffffffff800022a4: 31 c0                	xorl	%eax, %eax
ffffffff800022a6: f0                   	lock
ffffffff800022a7: 0f b0 8f 00 10 00 00 	cmpxchgb	%cl, 0x1000(%rdi)
ffffffff800022ae: 0f 85 cc 06 00 00    	jne	0xffffffff80002980 <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.14359069980145722807+0x710>
ffffffff800022b4: b8 1c 00 00 00       	movl	$0x1c, %eax
ffffffff800022b9: 48 b9 00 00 00 00 00 0e 00 00	movabsq	$0xe0000000000, %rcx # imm = 0xE0000000000
ffffffff800022c3: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
ffffffff800022d0: 48 89 4c 04 3c       	movq	%rcx, 0x3c(%rsp,%rax)
ffffffff800022d5: 48 c7 44 04 44 00 00 00 00   	movq	$0x0, 0x44(%rsp,%rax)
ffffffff800022de: 48 89 4c 04 4c       	movq	%rcx, 0x4c(%rsp,%rax)
ffffffff800022e3: 48 c7 44 04 54 00 00 00 00   	movq	$0x0, 0x54(%rsp,%rax)
ffffffff800022ec: 48 83 c0 20          	addq	$0x20, %rax
ffffffff800022f0: 48 3d 1c 0e 00 00    	cmpq	$0xe1c, %rax            # imm = 0xE1C
ffffffff800022f6: 75 d8                	jne	0xffffffff800022d0 <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.14359069980145722807+0x60>
ffffffff800022f8: 8b 6c 24 64          	movl	0x64(%rsp), %ebp
ffffffff800022fc: 48 8d 74 24 74       	leaq	0x74(%rsp), %rsi
ffffffff80002301: 48 8d bc 24 3c 14 00 00      	leaq	0x143c(%rsp), %rdi
ffffffff80002309: 4c 8b 3d 10 41 03 00 	movq	0x34110(%rip), %r15     # 0xffffffff80036420
ffffffff80002310: ba e4 05 00 00       	movl	$0x5e4, %edx            # imm = 0x5E4
ffffffff80002315: 41 ff d7             	callq	*%r15
ffffffff80002318: 48 8d b4 24 64 06 00 00      	leaq	0x664(%rsp), %rsi
ffffffff80002320: 48 8d bc 24 14 22 00 00      	leaq	0x2214(%rsp), %rdi
ffffffff80002328: ba f4 07 00 00       	movl	$0x7f4, %edx            # imm = 0x7F4
ffffffff8000232d: 41 ff d7             	callq	*%r15
ffffffff80002330: 48 b8 00 00 00 00 00 80 00 00	movabsq	$0x800000000000, %rax # imm = 0x800000000000
ffffffff8000233a: 48 8d 88 40 04 00 80 	leaq	-0x7ffffbc0(%rax), %rcx
ffffffff80002341: 48 c1 e9 30          	shrq	$0x30, %rcx
ffffffff80002345: 0f 85 84 06 00 00    	jne	0xffffffff800029cf <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.14359069980145722807+0x75f>
ffffffff8000234b: 48 b9 00 00 00 00 00 00 01 00	movabsq	$0x1000000000000, %rcx # imm = 0x1000000000000
ffffffff80002355: 41 8c ce             	movl	%cs, %r14d
ffffffff80002358: 48 8d 90 b0 05 00 80 	leaq	-0x7ffffa50(%rax), %rdx
ffffffff8000235f: 48 39 ca             	cmpq	%rcx, %rdx
ffffffff80002362: 0f 83 67 06 00 00    	jae	0xffffffff800029cf <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.14359069980145722807+0x75f>
ffffffff80002368: 41 8c c8             	movl	%cs, %r8d
ffffffff8000236b: 48 8d 90 00 05 00 80 	leaq	-0x7ffffb00(%rax), %rdx
ffffffff80002372: 48 39 ca             	cmpq	%rcx, %rdx
ffffffff80002375: 0f 83 54 06 00 00    	jae	0xffffffff800029cf <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.14359069980145722807+0x75f>
ffffffff8000237b: 8c cf                	movl	%cs, %edi
ffffffff8000237d: 48 8d 90 40 01 00 80 	leaq	-0x7ffffec0(%rax), %rdx
ffffffff80002384: 48 39 ca             	cmpq	%rcx, %rdx
ffffffff80002387: 0f 83 42 06 00 00    	jae	0xffffffff800029cf <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.14359069980145722807+0x75f>
ffffffff8000238d: 8c ce                	movl	%cs, %esi
ffffffff8000238f: 48 8d 90 28 01 00 80 	leaq	-0x7ffffed8(%rax), %rdx
ffffffff80002396: 48 39 ca             	cmpq	%rcx, %rdx
ffffffff80002399: 0f 83 30 06 00 00    	jae	0xffffffff800029cf <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.14359069980145722807+0x75f>
ffffffff8000239f: 8c ca                	movl	%cs, %edx
ffffffff800023a1: 48 8d 80 90 0d 00 80 	leaq	-0x7ffff270(%rax), %rax
ffffffff800023a8: 48 39 c8             	cmpq	%rcx, %rax
ffffffff800023ab: 0f 83 1e 06 00 00    	jae	0xffffffff800029cf <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.14359069980145722807+0x75f>
ffffffff800023b1: 48 c7 c0 28 01 00 80 	movq	$-0x7ffffed8, %rax      # imm = 0x80000128
ffffffff800023b8: 48 c1 e8 20          	shrq	$0x20, %rax
ffffffff800023bc: 48 89 44 24 50       	movq	%rax, 0x50(%rsp)
ffffffff800023c1: 48 c7 c0 28 01 00 80 	movq	$-0x7ffffed8, %rax      # imm = 0x80000128
ffffffff800023c8: c1 e8 10             	shrl	$0x10, %eax
ffffffff800023cb: 48 89 44 24 48       	movq	%rax, 0x48(%rsp)
ffffffff800023d0: 48 c7 c0 40 01 00 80 	movq	$-0x7ffffec0, %rax      # imm = 0x80000140
ffffffff800023d7: 48 c1 e8 20          	shrq	$0x20, %rax
ffffffff800023db: 48 89 44 24 40       	movq	%rax, 0x40(%rsp)
ffffffff800023e0: 48 c7 c0 40 01 00 80 	movq	$-0x7ffffec0, %rax      # imm = 0x80000140
ffffffff800023e7: c1 e8 10             	shrl	$0x10, %eax
ffffffff800023ea: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff800023ef: 48 c7 c1 00 05 00 80 	movq	$-0x7ffffb00, %rcx      # imm = 0x80000500
ffffffff800023f6: 48 c1 e9 20          	shrq	$0x20, %rcx
ffffffff800023fa: 48 89 4c 24 10       	movq	%rcx, 0x10(%rsp)
ffffffff800023ff: 49 c7 c4 00 05 00 80 	movq	$-0x7ffffb00, %r12      # imm = 0x80000500
ffffffff80002406: 41 c1 ec 10          	shrl	$0x10, %r12d
ffffffff8000240a: 48 c7 c1 b0 05 00 80 	movq	$-0x7ffffa50, %rcx      # imm = 0x800005B0
ffffffff80002411: 48 c1 e9 20          	shrq	$0x20, %rcx
ffffffff80002415: 48 89 4c 24 20       	movq	%rcx, 0x20(%rsp)
ffffffff8000241a: 48 c7 c1 b0 05 00 80 	movq	$-0x7ffffa50, %rcx      # imm = 0x800005B0
ffffffff80002421: c1 e9 10             	shrl	$0x10, %ecx
ffffffff80002424: 48 89 4c 24 18       	movq	%rcx, 0x18(%rsp)
ffffffff80002429: 89 6c 24 0c          	movl	%ebp, 0xc(%rsp)
ffffffff8000242d: 48 c7 c5 40 04 00 80 	movq	$-0x7ffffbc0, %rbp      # imm = 0x80000440
ffffffff80002434: 48 c1 ed 20          	shrq	$0x20, %rbp
ffffffff80002438: 49 c7 c5 40 04 00 80 	movq	$-0x7ffffbc0, %r13      # imm = 0x80000440
ffffffff8000243f: 41 c1 ed 10          	shrl	$0x10, %r13d
ffffffff80002443: 48 c7 c1 90 0d 00 80 	movq	$-0x7ffff270, %rcx      # imm = 0x80000D90
ffffffff8000244a: c1 e9 10             	shrl	$0x10, %ecx
ffffffff8000244d: 48 89 4c 24 30       	movq	%rcx, 0x30(%rsp)
ffffffff80002452: 48 c7 c1 90 0d 00 80 	movq	$-0x7ffff270, %rcx      # imm = 0x80000D90
ffffffff80002459: 48 c1 e9 20          	shrq	$0x20, %rcx
ffffffff8000245d: 48 89 4c 24 28       	movq	%rcx, 0x28(%rsp)
ffffffff80002462: 8c c9                	movl	%cs, %ecx
ffffffff80002464: 66 89 4c 24 08       	movw	%cx, 0x8(%rsp)
ffffffff80002469: 66 89 7c 24 02       	movw	%di, 0x2(%rsp)
ffffffff8000246e: 48 8d bc 24 58 0e 00 00      	leaq	0xe58(%rsp), %rdi
ffffffff80002476: 66 89 74 24 06       	movw	%si, 0x6(%rsp)
ffffffff8000247b: 48 8d b4 24 3c 14 00 00      	leaq	0x143c(%rsp), %rsi
ffffffff80002483: 66 89 54 24 0a       	movw	%dx, 0xa(%rsp)
ffffffff80002488: ba e4 05 00 00       	movl	$0x5e4, %edx            # imm = 0x5E4
ffffffff8000248d: 66 44 89 44 24 04    	movw	%r8w, 0x4(%rsp)
ffffffff80002493: 41 ff d7             	callq	*%r15
ffffffff80002496: 48 8d bc 24 20 1a 00 00      	leaq	0x1a20(%rsp), %rdi
ffffffff8000249e: 48 8d b4 24 14 22 00 00      	leaq	0x2214(%rsp), %rsi
ffffffff800024a6: ba f4 07 00 00       	movl	$0x7f4, %edx            # imm = 0x7F4
ffffffff800024ab: 41 ff d7             	callq	*%r15
ffffffff800024ae: c7 03 00 00 00 00    	movl	$0x0, (%rbx)
ffffffff800024b4: 66 c7 43 04 00 0e    	movw	$0xe00, 0x4(%rbx)       # imm = 0xE00
ffffffff800024ba: 48 c7 43 06 00 00 00 00      	movq	$0x0, 0x6(%rbx)
ffffffff800024c2: 48 c7 43 0c 00 00 00 00      	movq	$0x0, 0xc(%rbx)
ffffffff800024ca: 66 c7 43 14 00 0e    	movw	$0xe00, 0x14(%rbx)      # imm = 0xE00
ffffffff800024d0: 48 c7 43 16 00 00 00 00      	movq	$0x0, 0x16(%rbx)
ffffffff800024d8: 48 c7 43 1c 00 00 00 00      	movq	$0x0, 0x1c(%rbx)
ffffffff800024e0: 48 c7 43 24 00 0e 00 00      	movq	$0xe00, 0x24(%rbx) # imm = 0xE00
ffffffff800024e8: c7 43 2c 00 00 00 00 	movl	$0x0, 0x2c(%rbx)
ffffffff800024ef: 48 c7 c1 40 04 00 80 	movq	$-0x7ffffbc0, %rcx      # imm = 0x80000440
ffffffff800024f6: 66 89 4b 30          	movw	%cx, 0x30(%rbx)
ffffffff800024fa: 66 44 89 73 32       	movw	%r14w, 0x32(%rbx)
ffffffff800024ff: 66 c7 43 34 00 8e    	movw	$0x8e00, 0x34(%rbx)     # imm = 0x8E00
ffffffff80002505: 66 44 89 6b 36       	movw	%r13w, 0x36(%rbx)
ffffffff8000250a: 89 6b 38             	movl	%ebp, 0x38(%rbx)
ffffffff8000250d: 48 c7 43 3c 00 00 00 00      	movq	$0x0, 0x3c(%rbx)
ffffffff80002515: 66 c7 43 44 00 0e    	movw	$0xe00, 0x44(%rbx)      # imm = 0xE00
ffffffff8000251b: 48 c7 43 46 00 00 00 00      	movq	$0x0, 0x46(%rbx)
ffffffff80002523: 48 c7 43 4c 00 00 00 00      	movq	$0x0, 0x4c(%rbx)
ffffffff8000252b: 66 c7 43 54 00 0e    	movw	$0xe00, 0x54(%rbx)      # imm = 0xE00
ffffffff80002531: 48 c7 43 5c 00 00 00 00      	movq	$0x0, 0x5c(%rbx)
ffffffff80002539: 48 c7 43 56 00 00 00 00      	movq	$0x0, 0x56(%rbx)
ffffffff80002541: 66 c7 43 64 00 0e    	movw	$0xe00, 0x64(%rbx)      # imm = 0xE00
ffffffff80002547: 48 c7 43 6c 00 00 00 00      	movq	$0x0, 0x6c(%rbx)
ffffffff8000254f: 48 c7 43 66 00 00 00 00      	movq	$0x0, 0x66(%rbx)
ffffffff80002557: 48 c7 43 74 00 0e 00 00      	movq	$0xe00, 0x74(%rbx) # imm = 0xE00
ffffffff8000255f: c7 43 7c 00 00 00 00 	movl	$0x0, 0x7c(%rbx)
ffffffff80002566: 48 c7 c1 00 05 00 80 	movq	$-0x7ffffb00, %rcx      # imm = 0x80000500
ffffffff8000256d: 66 89 8b 80 00 00 00 	movw	%cx, 0x80(%rbx)
ffffffff80002574: 0f b7 4c 24 02       	movzwl	0x2(%rsp), %ecx
ffffffff80002579: 66 89 8b 82 00 00 00 	movw	%cx, 0x82(%rbx)
ffffffff80002580: 66 c7 83 84 00 00 00 01 8e   	movw	$0x8e01, 0x84(%rbx) # imm = 0x8E01
ffffffff80002589: 66 44 89 a3 86 00 00 00      	movw	%r12w, 0x86(%rbx)
ffffffff80002591: 48 8b 4c 24 10       	movq	0x10(%rsp), %rcx
ffffffff80002596: 89 8b 88 00 00 00    	movl	%ecx, 0x88(%rbx)
ffffffff8000259c: 48 c7 83 8c 00 00 00 00 00 00 00     	movq	$0x0, 0x8c(%rbx)
ffffffff800025a7: 66 c7 83 94 00 00 00 00 0e   	movw	$0xe00, 0x94(%rbx) # imm = 0xE00
ffffffff800025b0: 48 c7 83 96 00 00 00 00 00 00 00     	movq	$0x0, 0x96(%rbx)
ffffffff800025bb: 48 c7 83 9c 00 00 00 00 00 00 00     	movq	$0x0, 0x9c(%rbx)
ffffffff800025c6: 66 c7 83 a4 00 00 00 00 0e   	movw	$0xe00, 0xa4(%rbx) # imm = 0xE00
ffffffff800025cf: 48 c7 83 ac 00 00 00 00 00 00 00     	movq	$0x0, 0xac(%rbx)
ffffffff800025da: 48 c7 83 a6 00 00 00 00 00 00 00     	movq	$0x0, 0xa6(%rbx)
ffffffff800025e5: 66 c7 83 b4 00 00 00 00 0e   	movw	$0xe00, 0xb4(%rbx) # imm = 0xE00
ffffffff800025ee: 48 c7 83 bc 00 00 00 00 00 00 00     	movq	$0x0, 0xbc(%rbx)
ffffffff800025f9: 48 c7 83 b6 00 00 00 00 00 00 00     	movq	$0x0, 0xb6(%rbx)
ffffffff80002604: 66 c7 83 c4 00 00 00 00 0e   	movw	$0xe00, 0xc4(%rbx) # imm = 0xE00
ffffffff8000260d: 48 c7 83 cc 00 00 00 00 00 00 00     	movq	$0x0, 0xcc(%rbx)
ffffffff80002618: 48 c7 83 c6 00 00 00 00 00 00 00     	movq	$0x0, 0xc6(%rbx)
ffffffff80002623: 48 c7 83 d4 00 00 00 00 0e 00 00     	movq	$0xe00, 0xd4(%rbx) # imm = 0xE00
ffffffff8000262e: c7 83 dc 00 00 00 00 00 00 00	movl	$0x0, 0xdc(%rbx)
ffffffff80002638: 48 c7 c1 b0 05 00 80 	movq	$-0x7ffffa50, %rcx      # imm = 0x800005B0
ffffffff8000263f: 66 89 8b e0 00 00 00 	movw	%cx, 0xe0(%rbx)
ffffffff80002646: 0f b7 4c 24 04       	movzwl	0x4(%rsp), %ecx
ffffffff8000264b: 66 89 8b e2 00 00 00 	movw	%cx, 0xe2(%rbx)
ffffffff80002652: 66 c7 83 e4 00 00 00 00 8e   	movw	$0x8e00, 0xe4(%rbx) # imm = 0x8E00
ffffffff8000265b: 48 8b 4c 24 18       	movq	0x18(%rsp), %rcx
ffffffff80002660: 66 89 8b e6 00 00 00 	movw	%cx, 0xe6(%rbx)
ffffffff80002667: 48 8b 4c 24 20       	movq	0x20(%rsp), %rcx
ffffffff8000266c: 89 8b e8 00 00 00    	movl	%ecx, 0xe8(%rbx)
ffffffff80002672: 48 c7 83 ec 00 00 00 00 00 00 00     	movq	$0x0, 0xec(%rbx)
ffffffff8000267d: 66 c7 83 f4 00 00 00 00 0e   	movw	$0xe00, 0xf4(%rbx) # imm = 0xE00
ffffffff80002686: 48 c7 83 f6 00 00 00 00 00 00 00     	movq	$0x0, 0xf6(%rbx)
ffffffff80002691: 48 c7 83 fc 00 00 00 00 00 00 00     	movq	$0x0, 0xfc(%rbx)
ffffffff8000269c: 66 c7 83 04 01 00 00 00 0e   	movw	$0xe00, 0x104(%rbx) # imm = 0xE00
ffffffff800026a5: 48 c7 83 0c 01 00 00 00 00 00 00     	movq	$0x0, 0x10c(%rbx)
ffffffff800026b0: 48 c7 83 06 01 00 00 00 00 00 00     	movq	$0x0, 0x106(%rbx)
ffffffff800026bb: 66 c7 83 14 01 00 00 00 0e   	movw	$0xe00, 0x114(%rbx) # imm = 0xE00
ffffffff800026c4: 48 c7 83 1c 01 00 00 00 00 00 00     	movq	$0x0, 0x11c(%rbx)
ffffffff800026cf: 48 c7 83 16 01 00 00 00 00 00 00     	movq	$0x0, 0x116(%rbx)
ffffffff800026da: 66 c7 83 24 01 00 00 00 0e   	movw	$0xe00, 0x124(%rbx) # imm = 0xE00
ffffffff800026e3: 48 c7 83 2c 01 00 00 00 00 00 00     	movq	$0x0, 0x12c(%rbx)
ffffffff800026ee: 48 c7 83 26 01 00 00 00 00 00 00     	movq	$0x0, 0x126(%rbx)
ffffffff800026f9: 66 c7 83 34 01 00 00 00 0e   	movw	$0xe00, 0x134(%rbx) # imm = 0xE00
ffffffff80002702: 48 c7 83 3c 01 00 00 00 00 00 00     	movq	$0x0, 0x13c(%rbx)
ffffffff8000270d: 48 c7 83 36 01 00 00 00 00 00 00     	movq	$0x0, 0x136(%rbx)
ffffffff80002718: 66 c7 83 44 01 00 00 00 0e   	movw	$0xe00, 0x144(%rbx) # imm = 0xE00
ffffffff80002721: 48 c7 83 4c 01 00 00 00 00 00 00     	movq	$0x0, 0x14c(%rbx)
ffffffff8000272c: 48 c7 83 46 01 00 00 00 00 00 00     	movq	$0x0, 0x146(%rbx)
ffffffff80002737: 66 c7 83 54 01 00 00 00 0e   	movw	$0xe00, 0x154(%rbx) # imm = 0xE00
ffffffff80002740: 48 c7 83 5c 01 00 00 00 00 00 00     	movq	$0x0, 0x15c(%rbx)
ffffffff8000274b: 48 c7 83 56 01 00 00 00 00 00 00     	movq	$0x0, 0x156(%rbx)
ffffffff80002756: 66 c7 83 64 01 00 00 00 0e   	movw	$0xe00, 0x164(%rbx) # imm = 0xE00
ffffffff8000275f: 48 c7 83 6c 01 00 00 00 00 00 00     	movq	$0x0, 0x16c(%rbx)
ffffffff8000276a: 48 c7 83 66 01 00 00 00 00 00 00     	movq	$0x0, 0x166(%rbx)
ffffffff80002775: 66 c7 83 74 01 00 00 00 0e   	movw	$0xe00, 0x174(%rbx) # imm = 0xE00
ffffffff8000277e: 48 c7 83 7c 01 00 00 00 00 00 00     	movq	$0x0, 0x17c(%rbx)
ffffffff80002789: 48 c7 83 76 01 00 00 00 00 00 00     	movq	$0x0, 0x176(%rbx)
ffffffff80002794: 66 c7 83 84 01 00 00 00 0e   	movw	$0xe00, 0x184(%rbx) # imm = 0xE00
ffffffff8000279d: 48 c7 83 8c 01 00 00 00 00 00 00     	movq	$0x0, 0x18c(%rbx)
ffffffff800027a8: 48 c7 83 86 01 00 00 00 00 00 00     	movq	$0x0, 0x186(%rbx)
ffffffff800027b3: 66 c7 83 94 01 00 00 00 0e   	movw	$0xe00, 0x194(%rbx) # imm = 0xE00
ffffffff800027bc: 48 c7 83 9c 01 00 00 00 00 00 00     	movq	$0x0, 0x19c(%rbx)
ffffffff800027c7: 48 c7 83 96 01 00 00 00 00 00 00     	movq	$0x0, 0x196(%rbx)
ffffffff800027d2: 66 c7 83 a4 01 00 00 00 0e   	movw	$0xe00, 0x1a4(%rbx) # imm = 0xE00
ffffffff800027db: 48 c7 83 ac 01 00 00 00 00 00 00     	movq	$0x0, 0x1ac(%rbx)
ffffffff800027e6: 48 c7 83 a6 01 00 00 00 00 00 00     	movq	$0x0, 0x1a6(%rbx)
ffffffff800027f1: 66 c7 83 b4 01 00 00 00 0e   	movw	$0xe00, 0x1b4(%rbx) # imm = 0xE00
ffffffff800027fa: 48 c7 83 bc 01 00 00 00 00 00 00     	movq	$0x0, 0x1bc(%rbx)
ffffffff80002805: 48 c7 83 b6 01 00 00 00 00 00 00     	movq	$0x0, 0x1b6(%rbx)
ffffffff80002810: 66 c7 83 c4 01 00 00 00 0e   	movw	$0xe00, 0x1c4(%rbx) # imm = 0xE00
ffffffff80002819: 48 c7 83 cc 01 00 00 00 00 00 00     	movq	$0x0, 0x1cc(%rbx)
ffffffff80002824: 48 c7 83 c6 01 00 00 00 00 00 00     	movq	$0x0, 0x1c6(%rbx)
ffffffff8000282f: 66 c7 83 d4 01 00 00 00 0e   	movw	$0xe00, 0x1d4(%rbx) # imm = 0xE00
ffffffff80002838: 48 c7 83 dc 01 00 00 00 00 00 00     	movq	$0x0, 0x1dc(%rbx)
ffffffff80002843: 48 c7 83 d6 01 00 00 00 00 00 00     	movq	$0x0, 0x1d6(%rbx)
ffffffff8000284e: 66 c7 83 e4 01 00 00 00 0e   	movw	$0xe00, 0x1e4(%rbx) # imm = 0xE00
ffffffff80002857: 48 c7 83 ec 01 00 00 00 00 00 00     	movq	$0x0, 0x1ec(%rbx)
ffffffff80002862: 48 c7 83 e6 01 00 00 00 00 00 00     	movq	$0x0, 0x1e6(%rbx)
ffffffff8000286d: 48 c7 83 f4 01 00 00 00 0e 00 00     	movq	$0xe00, 0x1f4(%rbx) # imm = 0xE00
ffffffff80002878: c7 83 fc 01 00 00 00 00 00 00	movl	$0x0, 0x1fc(%rbx)
ffffffff80002882: 48 c7 c1 40 01 00 80 	movq	$-0x7ffffec0, %rcx      # imm = 0x80000140
ffffffff80002889: 66 89 8b 00 02 00 00 	movw	%cx, 0x200(%rbx)
ffffffff80002890: 0f b7 4c 24 06       	movzwl	0x6(%rsp), %ecx
ffffffff80002895: 66 89 8b 02 02 00 00 	movw	%cx, 0x202(%rbx)
ffffffff8000289c: 66 c7 83 04 02 00 00 00 8e   	movw	$0x8e00, 0x204(%rbx) # imm = 0x8E00
ffffffff800028a5: 48 8b 4c 24 38       	movq	0x38(%rsp), %rcx
ffffffff800028aa: 66 89 8b 06 02 00 00 	movw	%cx, 0x206(%rbx)
ffffffff800028b1: 48 8b 4c 24 40       	movq	0x40(%rsp), %rcx
ffffffff800028b6: 89 8b 08 02 00 00    	movl	%ecx, 0x208(%rbx)
ffffffff800028bc: 8b 4c 24 0c          	movl	0xc(%rsp), %ecx
ffffffff800028c0: 89 8b 0c 02 00 00    	movl	%ecx, 0x20c(%rbx)
ffffffff800028c6: 48 c7 c1 90 0d 00 80 	movq	$-0x7ffff270, %rcx      # imm = 0x80000D90
ffffffff800028cd: 66 89 8b 10 02 00 00 	movw	%cx, 0x210(%rbx)
ffffffff800028d4: 0f b7 4c 24 08       	movzwl	0x8(%rsp), %ecx
ffffffff800028d9: 66 89 8b 12 02 00 00 	movw	%cx, 0x212(%rbx)
ffffffff800028e0: 66 c7 83 14 02 00 00 00 8e   	movw	$0x8e00, 0x214(%rbx) # imm = 0x8E00
ffffffff800028e9: 48 8b 4c 24 30       	movq	0x30(%rsp), %rcx
ffffffff800028ee: 66 89 8b 16 02 00 00 	movw	%cx, 0x216(%rbx)
ffffffff800028f5: 48 8b 4c 24 28       	movq	0x28(%rsp), %rcx
ffffffff800028fa: 89 8b 18 02 00 00    	movl	%ecx, 0x218(%rbx)
ffffffff80002900: 48 8d bb 1c 02 00 00 	leaq	0x21c(%rbx), %rdi
ffffffff80002907: ba e4 05 00 00       	movl	$0x5e4, %edx            # imm = 0x5E4
ffffffff8000290c: 48 8d b4 24 58 0e 00 00      	leaq	0xe58(%rsp), %rsi
ffffffff80002914: 41 ff d7             	callq	*%r15
ffffffff80002917: 48 c7 c0 28 01 00 80 	movq	$-0x7ffffed8, %rax      # imm = 0x80000128
ffffffff8000291e: 66 89 83 00 08 00 00 	movw	%ax, 0x800(%rbx)
ffffffff80002925: 0f b7 44 24 0a       	movzwl	0xa(%rsp), %eax
ffffffff8000292a: 66 89 83 02 08 00 00 	movw	%ax, 0x802(%rbx)
ffffffff80002931: 66 c7 83 04 08 00 00 00 ee   	movw	$0xee00, 0x804(%rbx) # imm = 0xEE00
ffffffff8000293a: 48 8b 44 24 48       	movq	0x48(%rsp), %rax
ffffffff8000293f: 66 89 83 06 08 00 00 	movw	%ax, 0x806(%rbx)
ffffffff80002946: 48 8b 44 24 50       	movq	0x50(%rsp), %rax
ffffffff8000294b: 89 83 08 08 00 00    	movl	%eax, 0x808(%rbx)
ffffffff80002951: 48 8d bb 0c 08 00 00 	leaq	0x80c(%rbx), %rdi
ffffffff80002958: ba f4 07 00 00       	movl	$0x7f4, %edx            # imm = 0x7F4
ffffffff8000295d: 48 8d b4 24 20 1a 00 00      	leaq	0x1a20(%rsp), %rsi
ffffffff80002965: 41 ff d7             	callq	*%r15
ffffffff80002968: c6 83 00 10 00 00 02 	movb	$0x2, 0x1000(%rbx)
ffffffff8000296f: eb 49                	jmp	0xffffffff800029ba <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.14359069980145722807+0x74a>
ffffffff80002971: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
ffffffff80002980: 0f b6 c0             	movzbl	%al, %eax
ffffffff80002983: ff 24 c5 a8 d8 01 80 	jmpq	*-0x7ffe2758(,%rax,8)
ffffffff8000298a: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff80002990: f3 90                	pause
ffffffff80002992: 0f b6 83 00 10 00 00 	movzbl	0x1000(%rbx), %eax
ffffffff80002999: 3c 01                	cmpb	$0x1, %al
ffffffff8000299b: 74 f3                	je	0xffffffff80002990 <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.14359069980145722807+0x720>
ffffffff8000299d: 0f b6 c0             	movzbl	%al, %eax
ffffffff800029a0: 85 c0                	testl	%eax, %eax
ffffffff800029a2: 75 11                	jne	0xffffffff800029b5 <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.14359069980145722807+0x745>
ffffffff800029a4: 31 c0                	xorl	%eax, %eax
ffffffff800029a6: f0                   	lock
ffffffff800029a7: 0f b0 8b 00 10 00 00 	cmpxchgb	%cl, 0x1000(%rbx)
ffffffff800029ae: 75 d0                	jne	0xffffffff80002980 <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.14359069980145722807+0x710>
ffffffff800029b0: e9 ff f8 ff ff       	jmp	0xffffffff800022b4 <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.14359069980145722807+0x44>
ffffffff800029b5: 83 f8 02             	cmpl	$0x2, %eax
ffffffff800029b8: 75 2d                	jne	0xffffffff800029e7 <spin::once::Once<T,R>::try_call_once_slow::h3d8ca990b82a90fa.llvm.14359069980145722807+0x777>
ffffffff800029ba: 48 89 d8             	movq	%rbx, %rax
ffffffff800029bd: 48 81 c4 08 2a 00 00 	addq	$0x2a08, %rsp           # imm = 0x2A08
ffffffff800029c4: 5b                   	popq	%rbx
ffffffff800029c5: 41 5c                	popq	%r12
ffffffff800029c7: 41 5d                	popq	%r13
ffffffff800029c9: 41 5e                	popq	%r14
ffffffff800029cb: 41 5f                	popq	%r15
ffffffff800029cd: 5d                   	popq	%rbp
ffffffff800029ce: c3                   	retq
ffffffff800029cf: be 36 00 00 00       	movl	$0x36, %esi
ffffffff800029d4: 48 c7 c7 b8 da 01 80 	movq	$-0x7ffe2548, %rdi      # imm = 0x8001DAB8
ffffffff800029db: 48 c7 c2 50 db 01 80 	movq	$-0x7ffe24b0, %rdx      # imm = 0x8001DB50
ffffffff800029e2: e8 89 9a 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff800029e7: be 26 00 00 00       	movl	$0x26, %esi
ffffffff800029ec: 48 c7 c7 a8 d9 01 80 	movq	$-0x7ffe2658, %rdi      # imm = 0x8001D9A8
ffffffff800029f3: 48 c7 c2 d0 d9 01 80 	movq	$-0x7ffe2630, %rdx      # imm = 0x8001D9D0
ffffffff800029fa: e8 71 9a 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff800029ff: be 0d 00 00 00       	movl	$0xd, %esi
ffffffff80002a04: 48 c7 c7 28 d9 01 80 	movq	$-0x7ffe26d8, %rdi      # imm = 0x8001D928
ffffffff80002a0b: 48 c7 c2 90 d9 01 80 	movq	$-0x7ffe2670, %rdx      # imm = 0x8001D990
ffffffff80002a12: e8 59 9a 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80002a17: cc                   	int3
ffffffff80002a18: cc                   	int3
ffffffff80002a19: cc                   	int3
ffffffff80002a1a: cc                   	int3
ffffffff80002a1b: cc                   	int3
ffffffff80002a1c: cc                   	int3
ffffffff80002a1d: cc                   	int3
ffffffff80002a1e: cc                   	int3
ffffffff80002a1f: cc                   	int3

ffffffff80002a20 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.14359069980145722807>:
ffffffff80002a20: 41 57                	pushq	%r15
ffffffff80002a22: 41 56                	pushq	%r14
ffffffff80002a24: 41 54                	pushq	%r12
ffffffff80002a26: 53                   	pushq	%rbx
ffffffff80002a27: 48 81 ec a8 00 00 00 	subq	$0xa8, %rsp
ffffffff80002a2e: 48 89 fb             	movq	%rdi, %rbx
ffffffff80002a31: b1 01                	movb	$0x1, %cl
ffffffff80002a33: 31 c0                	xorl	%eax, %eax
ffffffff80002a35: f0                   	lock
ffffffff80002a36: 0f b0 4f 60          	cmpxchgb	%cl, 0x60(%rdi)
ffffffff80002a3a: 0f 85 c0 01 00 00    	jne	0xffffffff80002c00 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.14359069980145722807+0x1e0>
ffffffff80002a40: 48 c7 44 24 48 00 00 00 00   	movq	$0x0, 0x48(%rsp)
ffffffff80002a49: 48 c7 44 24 40 00 00 00 00   	movq	$0x0, 0x40(%rsp)
ffffffff80002a52: 48 c7 44 24 38 00 00 00 00   	movq	$0x0, 0x38(%rsp)
ffffffff80002a5b: 48 c7 44 24 30 00 00 00 00   	movq	$0x0, 0x30(%rsp)
ffffffff80002a64: 48 c7 44 24 08 00 00 00 00   	movq	$0x0, 0x8(%rsp)
ffffffff80002a6d: 48 b8 ff ff 00 00 00 9b af 00	movabsq	$0xaf9b000000ffff, %rax # imm = 0xAF9B000000FFFF
ffffffff80002a77: 48 89 44 24 10       	movq	%rax, 0x10(%rsp)
ffffffff80002a7c: 48 b8 ff ff 00 00 00 93 cf 00	movabsq	$0xcf93000000ffff, %rax # imm = 0xCF93000000FFFF
ffffffff80002a86: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff80002a8b: 48 b8 ff ff 00 00 00 fb af 00	movabsq	$0xaffb000000ffff, %rax # imm = 0xAFFB000000FFFF
ffffffff80002a95: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff80002a9a: 48 b8 ff ff 00 00 00 f3 cf 00	movabsq	$0xcff3000000ffff, %rax # imm = 0xCFF3000000FFFF
ffffffff80002aa4: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff80002aa9: 48 c7 44 24 50 05 00 00 00   	movq	$0x5, 0x50(%rsp)
ffffffff80002ab2: 0f b6 05 d7 38 02 00 	movzbl	0x238d7(%rip), %eax     # 0xffffffff80026390 <<taos::interrupts::gdt::TSSS as core::ops::deref::Deref>::deref::__stability::LAZY::h1d4821f1ca9c6a27.llvm.4978740807361014121+0xd0>
ffffffff80002ab9: 3c 02                	cmpb	$0x2, %al
ffffffff80002abb: 0f 85 85 01 00 00    	jne	0xffffffff80002c46 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.14359069980145722807+0x226>
ffffffff80002ac1: 49 be 67 00 00 00 00 89 00 00	movabsq	$0x890000000067, %r14 # imm = 0x890000000067
ffffffff80002acb: 48 c7 c0 c0 62 02 80 	movq	$-0x7ffd9d40, %rax      # imm = 0x800262C0
ffffffff80002ad2: 48 c7 c1 c0 62 02 80 	movq	$-0x7ffd9d40, %rcx      # imm = 0x800262C0
ffffffff80002ad9: 81 e1 fc ff ff 00    	andl	$0xfffffc, %ecx         # imm = 0xFFFFFC
ffffffff80002adf: 48 c1 e1 10          	shlq	$0x10, %rcx
ffffffff80002ae3: 48 c7 c2 c0 62 02 80 	movq	$-0x7ffd9d40, %rdx      # imm = 0x800262C0
ffffffff80002aea: 81 e2 00 00 00 ff    	andl	$0xff000000, %edx       # imm = 0xFF000000
ffffffff80002af0: 48 c1 e2 20          	shlq	$0x20, %rdx
ffffffff80002af4: 48 09 ca             	orq	%rcx, %rdx
ffffffff80002af7: 4c 09 f2             	orq	%r14, %rdx
ffffffff80002afa: 48 89 54 24 30       	movq	%rdx, 0x30(%rsp)
ffffffff80002aff: 48 8b 4c 24 50       	movq	0x50(%rsp), %rcx
ffffffff80002b04: 48 8d 79 01          	leaq	0x1(%rcx), %rdi
ffffffff80002b08: 48 89 7c 24 50       	movq	%rdi, 0x50(%rsp)
ffffffff80002b0d: 48 83 ff 09          	cmpq	$0x9, %rdi
ffffffff80002b11: 0f 83 86 01 00 00    	jae	0xffffffff80002c9d <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.14359069980145722807+0x27d>
ffffffff80002b17: 48 c1 e8 20          	shrq	$0x20, %rax
ffffffff80002b1b: 48 89 44 cc 10       	movq	%rax, 0x10(%rsp,%rcx,8)
ffffffff80002b20: 4c 8b 64 24 50       	movq	0x50(%rsp), %r12
ffffffff80002b25: 4d 8d 7c 24 01       	leaq	0x1(%r12), %r15
ffffffff80002b2a: 4c 89 7c 24 50       	movq	%r15, 0x50(%rsp)
ffffffff80002b2f: 0f b6 05 5a 38 02 00 	movzbl	0x2385a(%rip), %eax     # 0xffffffff80026390 <<taos::interrupts::gdt::TSSS as core::ops::deref::Deref>::deref::__stability::LAZY::h1d4821f1ca9c6a27.llvm.4978740807361014121+0xd0>
ffffffff80002b36: 3c 02                	cmpb	$0x2, %al
ffffffff80002b38: 0f 85 19 01 00 00    	jne	0xffffffff80002c57 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.14359069980145722807+0x237>
ffffffff80002b3e: 49 83 ff 07          	cmpq	$0x7, %r15
ffffffff80002b42: 0f 87 25 01 00 00    	ja	0xffffffff80002c6d <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.14359069980145722807+0x24d>
ffffffff80002b48: 48 b9 00 00 00 00 00 00 00 ff	movabsq	$-0x100000000000000, %rcx # imm = 0xFF00000000000000
ffffffff80002b52: 48 ba 00 00 fc ff ff 00 00 00	movabsq	$0xfffffc0000, %rdx # imm = 0xFFFFFC0000
ffffffff80002b5c: 48 c7 c0 28 63 02 80 	movq	$-0x7ffd9cd8, %rax      # imm = 0x80026328
ffffffff80002b63: 48 c7 c6 28 63 02 80 	movq	$-0x7ffd9cd8, %rsi      # imm = 0x80026328
ffffffff80002b6a: 48 c1 e6 10          	shlq	$0x10, %rsi
ffffffff80002b6e: 48 21 d6             	andq	%rdx, %rsi
ffffffff80002b71: 48 c7 c2 28 63 02 80 	movq	$-0x7ffd9cd8, %rdx      # imm = 0x80026328
ffffffff80002b78: 48 c1 e2 20          	shlq	$0x20, %rdx
ffffffff80002b7c: 48 21 ca             	andq	%rcx, %rdx
ffffffff80002b7f: 48 09 f2             	orq	%rsi, %rdx
ffffffff80002b82: 4c 09 f2             	orq	%r14, %rdx
ffffffff80002b85: 4a 89 54 e4 10       	movq	%rdx, 0x10(%rsp,%r12,8)
ffffffff80002b8a: 48 8b 4c 24 50       	movq	0x50(%rsp), %rcx
ffffffff80002b8f: 48 8d 79 01          	leaq	0x1(%rcx), %rdi
ffffffff80002b93: 48 89 7c 24 50       	movq	%rdi, 0x50(%rsp)
ffffffff80002b98: 48 83 ff 08          	cmpq	$0x8, %rdi
ffffffff80002b9c: 0f 87 fb 00 00 00    	ja	0xffffffff80002c9d <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.14359069980145722807+0x27d>
ffffffff80002ba2: 48 c1 e8 20          	shrq	$0x20, %rax
ffffffff80002ba6: 48 89 44 cc 10       	movq	%rax, 0x10(%rsp,%rcx,8)
ffffffff80002bab: 48 ff 44 24 50       	incq	0x50(%rsp)
ffffffff80002bb0: 41 c1 e7 13          	shll	$0x13, %r15d
ffffffff80002bb4: 48 8d 44 24 58       	leaq	0x58(%rsp), %rax
ffffffff80002bb9: 48 8d 74 24 08       	leaq	0x8(%rsp), %rsi
ffffffff80002bbe: b9 0a 00 00 00       	movl	$0xa, %ecx
ffffffff80002bc3: 48 89 c7             	movq	%rax, %rdi
ffffffff80002bc6: f3 48 a5             	rep		movsq	(%rsi), %es:(%rdi)
ffffffff80002bc9: 41 83 cf 28          	orl	$0x28, %r15d
ffffffff80002bcd: b9 0a 00 00 00       	movl	$0xa, %ecx
ffffffff80002bd2: 48 89 df             	movq	%rbx, %rdi
ffffffff80002bd5: 48 89 c6             	movq	%rax, %rsi
ffffffff80002bd8: f3 48 a5             	rep		movsq	(%rsi), %es:(%rdi)
ffffffff80002bdb: 44 89 7b 50          	movl	%r15d, 0x50(%rbx)
ffffffff80002bdf: 48 b8 08 00 10 00 1b 00 23 00	movabsq	$0x23001b00100008, %rax # imm = 0x23001B00100008
ffffffff80002be9: 48 89 43 54          	movq	%rax, 0x54(%rbx)
ffffffff80002bed: c6 43 60 02          	movb	$0x2, 0x60(%rbx)
ffffffff80002bf1: eb 41                	jmp	0xffffffff80002c34 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.14359069980145722807+0x214>
ffffffff80002bf3: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
ffffffff80002c00: 0f b6 c0             	movzbl	%al, %eax
ffffffff80002c03: ff 24 c5 c8 d8 01 80 	jmpq	*-0x7ffe2738(,%rax,8)
ffffffff80002c0a: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff80002c10: f3 90                	pause
ffffffff80002c12: 0f b6 43 60          	movzbl	0x60(%rbx), %eax
ffffffff80002c16: 3c 01                	cmpb	$0x1, %al
ffffffff80002c18: 74 f6                	je	0xffffffff80002c10 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.14359069980145722807+0x1f0>
ffffffff80002c1a: 0f b6 c0             	movzbl	%al, %eax
ffffffff80002c1d: 85 c0                	testl	%eax, %eax
ffffffff80002c1f: 75 0e                	jne	0xffffffff80002c2f <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.14359069980145722807+0x20f>
ffffffff80002c21: 31 c0                	xorl	%eax, %eax
ffffffff80002c23: f0                   	lock
ffffffff80002c24: 0f b0 4b 60          	cmpxchgb	%cl, 0x60(%rbx)
ffffffff80002c28: 75 d6                	jne	0xffffffff80002c00 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.14359069980145722807+0x1e0>
ffffffff80002c2a: e9 11 fe ff ff       	jmp	0xffffffff80002a40 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.14359069980145722807+0x20>
ffffffff80002c2f: 83 f8 02             	cmpl	$0x2, %eax
ffffffff80002c32: 75 51                	jne	0xffffffff80002c85 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.14359069980145722807+0x265>
ffffffff80002c34: 48 89 d8             	movq	%rbx, %rax
ffffffff80002c37: 48 81 c4 a8 00 00 00 	addq	$0xa8, %rsp
ffffffff80002c3e: 5b                   	popq	%rbx
ffffffff80002c3f: 41 5c                	popq	%r12
ffffffff80002c41: 41 5e                	popq	%r14
ffffffff80002c43: 41 5f                	popq	%r15
ffffffff80002c45: c3                   	retq
ffffffff80002c46: 48 c7 c7 c0 62 02 80 	movq	$-0x7ffd9d40, %rdi      # imm = 0x800262C0
ffffffff80002c4d: e8 0e ea ff ff       	callq	0xffffffff80001660 <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.14359069980145722807>
ffffffff80002c52: e9 6a fe ff ff       	jmp	0xffffffff80002ac1 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.14359069980145722807+0xa1>
ffffffff80002c57: 48 c7 c7 c0 62 02 80 	movq	$-0x7ffd9d40, %rdi      # imm = 0x800262C0
ffffffff80002c5e: e8 fd e9 ff ff       	callq	0xffffffff80001660 <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.14359069980145722807>
ffffffff80002c63: 49 83 ff 07          	cmpq	$0x7, %r15
ffffffff80002c67: 0f 86 db fe ff ff    	jbe	0xffffffff80002b48 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.14359069980145722807+0x128>
ffffffff80002c6d: be 34 00 00 00       	movl	$0x34, %esi
ffffffff80002c72: 48 c7 c7 68 da 01 80 	movq	$-0x7ffe2598, %rdi      # imm = 0x8001DA68
ffffffff80002c79: 48 c7 c2 a0 da 01 80 	movq	$-0x7ffe2560, %rdx      # imm = 0x8001DAA0
ffffffff80002c80: e8 eb 97 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80002c85: be 26 00 00 00       	movl	$0x26, %esi
ffffffff80002c8a: 48 c7 c7 a8 d9 01 80 	movq	$-0x7ffe2658, %rdi      # imm = 0x8001D9A8
ffffffff80002c91: 48 c7 c2 d0 d9 01 80 	movq	$-0x7ffe2630, %rdx      # imm = 0x8001D9D0
ffffffff80002c98: e8 d3 97 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80002c9d: be 09 00 00 00       	movl	$0x9, %esi
ffffffff80002ca2: 48 c7 c2 50 da 01 80 	movq	$-0x7ffe25b0, %rdx      # imm = 0x8001DA50
ffffffff80002ca9: e8 0b 98 01 00       	callq	0xffffffff8001c4b9 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff80002cae: be 0d 00 00 00       	movl	$0xd, %esi
ffffffff80002cb3: 48 c7 c7 28 d9 01 80 	movq	$-0x7ffe26d8, %rdi      # imm = 0x8001D928
ffffffff80002cba: 48 c7 c2 90 d9 01 80 	movq	$-0x7ffe2670, %rdx      # imm = 0x8001D990
ffffffff80002cc1: e8 aa 97 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80002cc6: cc                   	int3
ffffffff80002cc7: cc                   	int3
ffffffff80002cc8: cc                   	int3
ffffffff80002cc9: cc                   	int3
ffffffff80002cca: cc                   	int3
ffffffff80002ccb: cc                   	int3
ffffffff80002ccc: cc                   	int3
ffffffff80002ccd: cc                   	int3
ffffffff80002cce: cc                   	int3
ffffffff80002ccf: cc                   	int3

ffffffff80002cd0 <spin::once::Once<T,R>::try_call_once_slow::h69df9f69f53fd4bc.llvm.14359069980145722807>:
ffffffff80002cd0: 50                   	pushq	%rax
ffffffff80002cd1: b1 01                	movb	$0x1, %cl
ffffffff80002cd3: 31 c0                	xorl	%eax, %eax
ffffffff80002cd5: f0                   	lock
ffffffff80002cd6: 0f b0 4f 04          	cmpxchgb	%cl, 0x4(%rdi)
ffffffff80002cda: 74 2f                	je	0xffffffff80002d0b <spin::once::Once<T,R>::try_call_once_slow::h69df9f69f53fd4bc.llvm.14359069980145722807+0x3b>
ffffffff80002cdc: 0f b6 c0             	movzbl	%al, %eax
ffffffff80002cdf: ff 24 c5 e8 d8 01 80 	jmpq	*-0x7ffe2718(,%rax,8)
ffffffff80002ce6: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
ffffffff80002cf0: f3 90                	pause
ffffffff80002cf2: 0f b6 47 04          	movzbl	0x4(%rdi), %eax
ffffffff80002cf6: 3c 01                	cmpb	$0x1, %al
ffffffff80002cf8: 74 f6                	je	0xffffffff80002cf0 <spin::once::Once<T,R>::try_call_once_slow::h69df9f69f53fd4bc.llvm.14359069980145722807+0x20>
ffffffff80002cfa: 0f b6 c0             	movzbl	%al, %eax
ffffffff80002cfd: 85 c0                	testl	%eax, %eax
ffffffff80002cff: 74 d2                	je	0xffffffff80002cd3 <spin::once::Once<T,R>::try_call_once_slow::h69df9f69f53fd4bc.llvm.14359069980145722807+0x3>
ffffffff80002d01: 83 f8 02             	cmpl	$0x2, %eax
ffffffff80002d04: 75 4c                	jne	0xffffffff80002d52 <spin::once::Once<T,R>::try_call_once_slow::h69df9f69f53fd4bc.llvm.14359069980145722807+0x82>
ffffffff80002d06: 48 89 f8             	movq	%rdi, %rax
ffffffff80002d09: 59                   	popq	%rcx
ffffffff80002d0a: c3                   	retq
ffffffff80002d0b: 31 c0                	xorl	%eax, %eax
ffffffff80002d0d: 66 ba f9 03          	movw	$0x3f9, %dx             # imm = 0x3F9
ffffffff80002d11: ee                   	outb	%al, %dx
ffffffff80002d12: b0 80                	movb	$-0x80, %al
ffffffff80002d14: 66 ba fb 03          	movw	$0x3fb, %dx             # imm = 0x3FB
ffffffff80002d18: ee                   	outb	%al, %dx
ffffffff80002d19: b0 03                	movb	$0x3, %al
ffffffff80002d1b: 66 ba f8 03          	movw	$0x3f8, %dx             # imm = 0x3F8
ffffffff80002d1f: ee                   	outb	%al, %dx
ffffffff80002d20: 31 c0                	xorl	%eax, %eax
ffffffff80002d22: 66 ba f9 03          	movw	$0x3f9, %dx             # imm = 0x3F9
ffffffff80002d26: ee                   	outb	%al, %dx
ffffffff80002d27: b0 03                	movb	$0x3, %al
ffffffff80002d29: 66 ba fb 03          	movw	$0x3fb, %dx             # imm = 0x3FB
ffffffff80002d2d: ee                   	outb	%al, %dx
ffffffff80002d2e: b0 c7                	movb	$-0x39, %al
ffffffff80002d30: 66 ba fa 03          	movw	$0x3fa, %dx             # imm = 0x3FA
ffffffff80002d34: ee                   	outb	%al, %dx
ffffffff80002d35: b0 0b                	movb	$0xb, %al
ffffffff80002d37: 66 ba fc 03          	movw	$0x3fc, %dx             # imm = 0x3FC
ffffffff80002d3b: ee                   	outb	%al, %dx
ffffffff80002d3c: b0 01                	movb	$0x1, %al
ffffffff80002d3e: 66 ba f9 03          	movw	$0x3f9, %dx             # imm = 0x3F9
ffffffff80002d42: ee                   	outb	%al, %dx
ffffffff80002d43: c7 07 00 00 f8 03    	movl	$0x3f80000, (%rdi)      # imm = 0x3F80000
ffffffff80002d49: c6 47 04 02          	movb	$0x2, 0x4(%rdi)
ffffffff80002d4d: 48 89 f8             	movq	%rdi, %rax
ffffffff80002d50: 59                   	popq	%rcx
ffffffff80002d51: c3                   	retq
ffffffff80002d52: be 26 00 00 00       	movl	$0x26, %esi
ffffffff80002d57: 48 c7 c7 a8 d9 01 80 	movq	$-0x7ffe2658, %rdi      # imm = 0x8001D9A8
ffffffff80002d5e: 48 c7 c2 d0 d9 01 80 	movq	$-0x7ffe2630, %rdx      # imm = 0x8001D9D0
ffffffff80002d65: e8 06 97 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80002d6a: be 0d 00 00 00       	movl	$0xd, %esi
ffffffff80002d6f: 48 c7 c7 28 d9 01 80 	movq	$-0x7ffe26d8, %rdi      # imm = 0x8001D928
ffffffff80002d76: 48 c7 c2 90 d9 01 80 	movq	$-0x7ffe2670, %rdx      # imm = 0x8001D990
ffffffff80002d7d: e8 ee 96 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80002d82: cc                   	int3
ffffffff80002d83: cc                   	int3
ffffffff80002d84: cc                   	int3
ffffffff80002d85: cc                   	int3
ffffffff80002d86: cc                   	int3
ffffffff80002d87: cc                   	int3
ffffffff80002d88: cc                   	int3
ffffffff80002d89: cc                   	int3
ffffffff80002d8a: cc                   	int3
ffffffff80002d8b: cc                   	int3
ffffffff80002d8c: cc                   	int3
ffffffff80002d8d: cc                   	int3
ffffffff80002d8e: cc                   	int3
ffffffff80002d8f: cc                   	int3

ffffffff80002d90 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.14359069980145722807>:
ffffffff80002d90: 53                   	pushq	%rbx
ffffffff80002d91: 48 89 fb             	movq	%rdi, %rbx
ffffffff80002d94: b1 01                	movb	$0x1, %cl
ffffffff80002d96: 31 c0                	xorl	%eax, %eax
ffffffff80002d98: f0                   	lock
ffffffff80002d99: 0f b0 4f 08          	cmpxchgb	%cl, 0x8(%rdi)
ffffffff80002d9d: 75 41                	jne	0xffffffff80002de0 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.14359069980145722807+0x50>
ffffffff80002d9f: 48 c7 c7 b8 50 02 80 	movq	$-0x7ffdaf48, %rdi      # imm = 0x800250B8
ffffffff80002da6: e8 c5 5a 01 00       	callq	0xffffffff80018870 <limine::request::EfiSystemTableRequest::get_response::h4a4b8b0bbd703f80>
ffffffff80002dab: 48 85 c0             	testq	%rax, %rax
ffffffff80002dae: 0f 84 aa 00 00 00    	je	0xffffffff80002e5e <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.14359069980145722807+0xce>
ffffffff80002db4: 48 8b 40 08          	movq	0x8(%rax), %rax
ffffffff80002db8: 48 b9 00 00 00 00 00 80 00 00	movabsq	$0x800000000000, %rcx # imm = 0x800000000000
ffffffff80002dc2: 48 01 c1             	addq	%rax, %rcx
ffffffff80002dc5: 48 c1 e9 30          	shrq	$0x30, %rcx
ffffffff80002dc9: 75 4b                	jne	0xffffffff80002e16 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.14359069980145722807+0x86>
ffffffff80002dcb: 48 89 03             	movq	%rax, (%rbx)
ffffffff80002dce: c6 43 08 02          	movb	$0x2, 0x8(%rbx)
ffffffff80002dd2: 48 89 d8             	movq	%rbx, %rax
ffffffff80002dd5: 5b                   	popq	%rbx
ffffffff80002dd6: c3                   	retq
ffffffff80002dd7: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
ffffffff80002de0: 0f b6 c0             	movzbl	%al, %eax
ffffffff80002de3: ff 24 c5 08 d9 01 80 	jmpq	*-0x7ffe26f8(,%rax,8)
ffffffff80002dea: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff80002df0: f3 90                	pause
ffffffff80002df2: 0f b6 43 08          	movzbl	0x8(%rbx), %eax
ffffffff80002df6: 3c 01                	cmpb	$0x1, %al
ffffffff80002df8: 74 f6                	je	0xffffffff80002df0 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.14359069980145722807+0x60>
ffffffff80002dfa: 0f b6 c0             	movzbl	%al, %eax
ffffffff80002dfd: 85 c0                	testl	%eax, %eax
ffffffff80002dff: 75 0b                	jne	0xffffffff80002e0c <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.14359069980145722807+0x7c>
ffffffff80002e01: 31 c0                	xorl	%eax, %eax
ffffffff80002e03: f0                   	lock
ffffffff80002e04: 0f b0 4b 08          	cmpxchgb	%cl, 0x8(%rbx)
ffffffff80002e08: 75 d6                	jne	0xffffffff80002de0 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.14359069980145722807+0x50>
ffffffff80002e0a: eb 93                	jmp	0xffffffff80002d9f <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.14359069980145722807+0xf>
ffffffff80002e0c: 83 f8 02             	cmpl	$0x2, %eax
ffffffff80002e0f: 75 1d                	jne	0xffffffff80002e2e <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.14359069980145722807+0x9e>
ffffffff80002e11: 48 89 d8             	movq	%rbx, %rax
ffffffff80002e14: 5b                   	popq	%rbx
ffffffff80002e15: c3                   	retq
ffffffff80002e16: be 36 00 00 00       	movl	$0x36, %esi
ffffffff80002e1b: 48 c7 c7 b8 da 01 80 	movq	$-0x7ffe2548, %rdi      # imm = 0x8001DAB8
ffffffff80002e22: 48 c7 c2 50 db 01 80 	movq	$-0x7ffe24b0, %rdx      # imm = 0x8001DB50
ffffffff80002e29: e8 42 96 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80002e2e: be 26 00 00 00       	movl	$0x26, %esi
ffffffff80002e33: 48 c7 c7 a8 d9 01 80 	movq	$-0x7ffe2658, %rdi      # imm = 0x8001D9A8
ffffffff80002e3a: 48 c7 c2 d0 d9 01 80 	movq	$-0x7ffe2630, %rdx      # imm = 0x8001D9D0
ffffffff80002e41: e8 2a 96 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80002e46: be 0d 00 00 00       	movl	$0xd, %esi
ffffffff80002e4b: 48 c7 c7 28 d9 01 80 	movq	$-0x7ffe26d8, %rdi      # imm = 0x8001D928
ffffffff80002e52: 48 c7 c2 90 d9 01 80 	movq	$-0x7ffe2670, %rdx      # imm = 0x8001D990
ffffffff80002e59: e8 12 96 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80002e5e: be 13 00 00 00       	movl	$0x13, %esi
ffffffff80002e63: 48 c7 c7 90 dc 01 80 	movq	$-0x7ffe2370, %rdi      # imm = 0x8001DC90
ffffffff80002e6a: 48 c7 c2 b8 dc 01 80 	movq	$-0x7ffe2348, %rdx      # imm = 0x8001DCB8
ffffffff80002e71: e8 1a 9b 01 00       	callq	0xffffffff8001c990 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff80002e76: cc                   	int3
ffffffff80002e77: cc                   	int3
ffffffff80002e78: cc                   	int3
ffffffff80002e79: cc                   	int3
ffffffff80002e7a: cc                   	int3
ffffffff80002e7b: cc                   	int3
ffffffff80002e7c: cc                   	int3
ffffffff80002e7d: cc                   	int3
ffffffff80002e7e: cc                   	int3
ffffffff80002e7f: cc                   	int3

ffffffff80002e80 <<x86_64::addr::VirtAddr as core::fmt::LowerHex>::fmt::h7ef78997f3d83a90>:
ffffffff80002e80: e9 9b 64 01 00       	jmp	0xffffffff80019320 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hd0e7c1aefe0075e3>
ffffffff80002e85: cc                   	int3
ffffffff80002e86: cc                   	int3
ffffffff80002e87: cc                   	int3
ffffffff80002e88: cc                   	int3
ffffffff80002e89: cc                   	int3
ffffffff80002e8a: cc                   	int3
ffffffff80002e8b: cc                   	int3
ffffffff80002e8c: cc                   	int3
ffffffff80002e8d: cc                   	int3
ffffffff80002e8e: cc                   	int3
ffffffff80002e8f: cc                   	int3

ffffffff80002e90 <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858>:
ffffffff80002e90: 41 57                	pushq	%r15
ffffffff80002e92: 41 56                	pushq	%r14
ffffffff80002e94: 41 55                	pushq	%r13
ffffffff80002e96: 41 54                	pushq	%r12
ffffffff80002e98: 53                   	pushq	%rbx
ffffffff80002e99: 4d 89 c6             	movq	%r8, %r14
ffffffff80002e9c: 49 89 cc             	movq	%rcx, %r12
ffffffff80002e9f: 48 89 f3             	movq	%rsi, %rbx
ffffffff80002ea2: 49 89 ff             	movq	%rdi, %r15
ffffffff80002ea5: 49 01 f4             	addq	%rsi, %r12
ffffffff80002ea8: 4c 89 e7             	movq	%r12, %rdi
ffffffff80002eab: e8 60 4b 01 00       	callq	0xffffffff80017a10 <talc::ptr_utils::align_up::h3dc09199da0d2fc9>
ffffffff80002eb0: 49 89 c5             	movq	%rax, %r13
ffffffff80002eb3: 49 01 de             	addq	%rbx, %r14
ffffffff80002eb6: 4c 89 f7             	movq	%r14, %rdi
ffffffff80002eb9: e8 52 4b 01 00       	callq	0xffffffff80017a10 <talc::ptr_utils::align_up::h3dc09199da0d2fc9>
ffffffff80002ebe: 49 39 c5             	cmpq	%rax, %r13
ffffffff80002ec1: 74 4b                	je	0xffffffff80002f0e <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x7e>
ffffffff80002ec3: 49 89 c6             	movq	%rax, %r14
ffffffff80002ec6: 4c 89 e7             	movq	%r12, %rdi
ffffffff80002ec9: e8 42 4b 01 00       	callq	0xffffffff80017a10 <talc::ptr_utils::align_up::h3dc09199da0d2fc9>
ffffffff80002ece: 4c 8b 28             	movq	(%rax), %r13
ffffffff80002ed1: 49 39 c5             	cmpq	%rax, %r13
ffffffff80002ed4: 76 10                	jbe	0xffffffff80002ee6 <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x56>
ffffffff80002ed6: 4d 8b 65 00          	movq	(%r13), %r12
ffffffff80002eda: 4d 39 ee             	cmpq	%r13, %r14
ffffffff80002edd: 77 12                	ja	0xffffffff80002ef1 <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x61>
ffffffff80002edf: 73 2d                	jae	0xffffffff80002f0e <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x7e>
ffffffff80002ee1: 4d 89 2e             	movq	%r13, (%r14)
ffffffff80002ee4: eb 28                	jmp	0xffffffff80002f0e <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x7e>
ffffffff80002ee6: 4d 89 ec             	movq	%r13, %r12
ffffffff80002ee9: 49 89 c5             	movq	%rax, %r13
ffffffff80002eec: 4d 39 ee             	cmpq	%r13, %r14
ffffffff80002eef: 76 ee                	jbe	0xffffffff80002edf <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x4f>
ffffffff80002ef1: 4c 89 e7             	movq	%r12, %rdi
ffffffff80002ef4: e8 37 4b 01 00       	callq	0xffffffff80017a30 <talc::ptr_utils::align_down::h6c85a3b2ada70f65>
ffffffff80002ef9: 41 f6 c4 02          	testb	$0x2, %r12b
ffffffff80002efd: 74 0d                	je	0xffffffff80002f0c <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x7c>
ffffffff80002eff: 49 8b 55 18          	movq	0x18(%r13), %rdx
ffffffff80002f03: 4e 8d 24 2a          	leaq	(%rdx,%r13), %r12
ffffffff80002f07: 4d 39 e6             	cmpq	%r12, %r14
ffffffff80002f0a: 76 0f                	jbe	0xffffffff80002f1b <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x8b>
ffffffff80002f0c: 31 db                	xorl	%ebx, %ebx
ffffffff80002f0e: 48 89 d8             	movq	%rbx, %rax
ffffffff80002f11: 5b                   	popq	%rbx
ffffffff80002f12: 41 5c                	popq	%r12
ffffffff80002f14: 41 5d                	popq	%r13
ffffffff80002f16: 41 5e                	popq	%r14
ffffffff80002f18: 41 5f                	popq	%r15
ffffffff80002f1a: c3                   	retq
ffffffff80002f1b: 48 81 fa 00 01 00 00 	cmpq	$0x100, %rdx            # imm = 0x100
ffffffff80002f22: 73 0a                	jae	0xffffffff80002f2e <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x9e>
ffffffff80002f24: 48 83 c2 e8          	addq	$-0x18, %rdx
ffffffff80002f28: 48 c1 ea 03          	shrq	$0x3, %rdx
ffffffff80002f2c: eb 3d                	jmp	0xffffffff80002f6b <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0xdb>
ffffffff80002f2e: 48 81 fa 00 02 00 00 	cmpq	$0x200, %rdx            # imm = 0x200
ffffffff80002f35: 73 0a                	jae	0xffffffff80002f41 <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0xb1>
ffffffff80002f37: 48 c1 ea 04          	shrq	$0x4, %rdx
ffffffff80002f3b: 48 83 c2 0d          	addq	$0xd, %rdx
ffffffff80002f3f: eb 2a                	jmp	0xffffffff80002f6b <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0xdb>
ffffffff80002f41: 48 0f bd f2          	bsrq	%rdx, %rsi
ffffffff80002f45: 48 83 f6 3f          	xorq	$0x3f, %rsi
ffffffff80002f49: b1 3d                	movb	$0x3d, %cl
ffffffff80002f4b: 40 28 f1             	subb	%sil, %cl
ffffffff80002f4e: 48 d3 ea             	shrq	%cl, %rdx
ffffffff80002f51: c1 e6 02             	shll	$0x2, %esi
ffffffff80002f54: 48 29 f2             	subq	%rsi, %rdx
ffffffff80002f57: 48 81 c2 01 01 00 00 	addq	$0x101, %rdx            # imm = 0x101
ffffffff80002f5e: 48 83 fa 7f          	cmpq	$0x7f, %rdx
ffffffff80002f62: b9 7f 00 00 00       	movl	$0x7f, %ecx
ffffffff80002f67: 48 0f 43 d1          	cmovaeq	%rcx, %rdx
ffffffff80002f6b: 49 8b 4d 08          	movq	0x8(%r13), %rcx
ffffffff80002f6f: 49 8b 75 10          	movq	0x10(%r13), %rsi
ffffffff80002f73: 48 89 0e             	movq	%rcx, (%rsi)
ffffffff80002f76: 48 85 c9             	testq	%rcx, %rcx
ffffffff80002f79: 74 04                	je	0xffffffff80002f7f <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0xef>
ffffffff80002f7b: 48 89 71 08          	movq	%rsi, 0x8(%rcx)
ffffffff80002f7f: 49 8b 7f 20          	movq	0x20(%r15), %rdi
ffffffff80002f83: 48 83 3c d7 00       	cmpq	$0x0, (%rdi,%rdx,8)
ffffffff80002f88: 75 1a                	jne	0xffffffff80002fa4 <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x114>
ffffffff80002f8a: 31 f6                	xorl	%esi, %esi
ffffffff80002f8c: 48 83 fa 40          	cmpq	$0x40, %rdx
ffffffff80002f90: 40 0f 93 c6          	setae	%sil
ffffffff80002f94: 41 b8 01 00 00 00    	movl	$0x1, %r8d
ffffffff80002f9a: 89 d1                	movl	%edx, %ecx
ffffffff80002f9c: 49 d3 e0             	shlq	%cl, %r8
ffffffff80002f9f: 4d 31 44 f7 10       	xorq	%r8, 0x10(%r15,%rsi,8)
ffffffff80002fa4: 4c 89 e1             	movq	%r12, %rcx
ffffffff80002fa7: 4c 29 f1             	subq	%r14, %rcx
ffffffff80002faa: 48 83 f9 17          	cmpq	$0x17, %rcx
ffffffff80002fae: 76 24                	jbe	0xffffffff80002fd4 <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x144>
ffffffff80002fb0: 4c 89 f2             	movq	%r14, %rdx
ffffffff80002fb3: 48 83 c2 08          	addq	$0x8, %rdx
ffffffff80002fb7: 4c 89 e6             	movq	%r12, %rsi
ffffffff80002fba: 48 29 d6             	subq	%rdx, %rsi
ffffffff80002fbd: 48 83 c6 08          	addq	$0x8, %rsi
ffffffff80002fc1: 48 81 fe 00 01 00 00 	cmpq	$0x100, %rsi            # imm = 0x100
ffffffff80002fc8: 73 28                	jae	0xffffffff80002ff2 <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x162>
ffffffff80002fca: 48 8d 4e e8          	leaq	-0x18(%rsi), %rcx
ffffffff80002fce: 48 c1 e9 03          	shrq	$0x3, %rcx
ffffffff80002fd2: eb 62                	jmp	0xffffffff80003036 <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x1a6>
ffffffff80002fd4: 4c 89 e7             	movq	%r12, %rdi
ffffffff80002fd7: 48 89 c6             	movq	%rax, %rsi
ffffffff80002fda: 31 d2                	xorl	%edx, %edx
ffffffff80002fdc: e8 3f 4a 01 00       	callq	0xffffffff80017a20 <talc::talc::tag::Tag::write::h1e76d32195c79b2e>
ffffffff80002fe1: 4d 39 e6             	cmpq	%r12, %r14
ffffffff80002fe4: 0f 84 24 ff ff ff    	je	0xffffffff80002f0e <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x7e>
ffffffff80002fea: 4d 89 26             	movq	%r12, (%r14)
ffffffff80002fed: e9 1c ff ff ff       	jmp	0xffffffff80002f0e <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x7e>
ffffffff80002ff2: 48 81 fe 00 02 00 00 	cmpq	$0x200, %rsi            # imm = 0x200
ffffffff80002ff9: 73 0d                	jae	0xffffffff80003008 <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x178>
ffffffff80002ffb: 48 89 f1             	movq	%rsi, %rcx
ffffffff80002ffe: 48 c1 e9 04          	shrq	$0x4, %rcx
ffffffff80003002: 48 83 c1 0d          	addq	$0xd, %rcx
ffffffff80003006: eb 2e                	jmp	0xffffffff80003036 <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x1a6>
ffffffff80003008: 4c 0f bd c6          	bsrq	%rsi, %r8
ffffffff8000300c: 49 83 f0 3f          	xorq	$0x3f, %r8
ffffffff80003010: b1 3d                	movb	$0x3d, %cl
ffffffff80003012: 44 28 c1             	subb	%r8b, %cl
ffffffff80003015: 49 89 f1             	movq	%rsi, %r9
ffffffff80003018: 49 d3 e9             	shrq	%cl, %r9
ffffffff8000301b: 41 c1 e0 02          	shll	$0x2, %r8d
ffffffff8000301f: 4d 29 c1             	subq	%r8, %r9
ffffffff80003022: 49 81 c1 01 01 00 00 	addq	$0x101, %r9             # imm = 0x101
ffffffff80003029: 49 83 f9 7f          	cmpq	$0x7f, %r9
ffffffff8000302d: b9 7f 00 00 00       	movl	$0x7f, %ecx
ffffffff80003032: 49 0f 42 c9          	cmovbq	%r9, %rcx
ffffffff80003036: 4c 8d 04 cf          	leaq	(%rdi,%rcx,8), %r8
ffffffff8000303a: 48 8b 3c cf          	movq	(%rdi,%rcx,8), %rdi
ffffffff8000303e: 48 85 ff             	testq	%rdi, %rdi
ffffffff80003041: 74 14                	je	0xffffffff80003057 <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x1c7>
ffffffff80003043: 49 89 7e 08          	movq	%rdi, 0x8(%r14)
ffffffff80003047: 4d 89 46 10          	movq	%r8, 0x10(%r14)
ffffffff8000304b: 49 89 10             	movq	%rdx, (%r8)
ffffffff8000304e: 48 83 c7 08          	addq	$0x8, %rdi
ffffffff80003052: 49 89 f8             	movq	%rdi, %r8
ffffffff80003055: eb 24                	jmp	0xffffffff8000307b <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x1eb>
ffffffff80003057: 31 ff                	xorl	%edi, %edi
ffffffff80003059: 48 83 f9 40          	cmpq	$0x40, %rcx
ffffffff8000305d: 40 0f 93 c7          	setae	%dil
ffffffff80003061: 41 b9 01 00 00 00    	movl	$0x1, %r9d
ffffffff80003067: 49 d3 e1             	shlq	%cl, %r9
ffffffff8000306a: 4d 31 4c ff 10       	xorq	%r9, 0x10(%r15,%rdi,8)
ffffffff8000306f: 49 c7 46 08 00 00 00 00      	movq	$0x0, 0x8(%r14)
ffffffff80003077: 4d 89 46 10          	movq	%r8, 0x10(%r14)
ffffffff8000307b: 49 89 10             	movq	%rdx, (%r8)
ffffffff8000307e: 49 89 76 18          	movq	%rsi, 0x18(%r14)
ffffffff80003082: 49 89 34 24          	movq	%rsi, (%r12)
ffffffff80003086: 4c 89 f7             	movq	%r14, %rdi
ffffffff80003089: 48 89 c6             	movq	%rax, %rsi
ffffffff8000308c: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff80003091: e8 8a 49 01 00       	callq	0xffffffff80017a20 <talc::talc::tag::Tag::write::h1e76d32195c79b2e>
ffffffff80003096: e9 73 fe ff ff       	jmp	0xffffffff80002f0e <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858+0x7e>
ffffffff8000309b: cc                   	int3
ffffffff8000309c: cc                   	int3
ffffffff8000309d: cc                   	int3
ffffffff8000309e: cc                   	int3
ffffffff8000309f: cc                   	int3

ffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>:
ffffffff800030a0: 41 57                	pushq	%r15
ffffffff800030a2: 41 56                	pushq	%r14
ffffffff800030a4: 41 54                	pushq	%r12
ffffffff800030a6: 53                   	pushq	%rbx
ffffffff800030a7: 50                   	pushq	%rax
ffffffff800030a8: 48 89 fb             	movq	%rdi, %rbx
ffffffff800030ab: 48 8d 3c 0e          	leaq	(%rsi,%rcx), %rdi
ffffffff800030af: e8 5c 49 01 00       	callq	0xffffffff80017a10 <talc::ptr_utils::align_up::h3dc09199da0d2fc9>
ffffffff800030b4: 4c 8b 20             	movq	(%rax), %r12
ffffffff800030b7: 49 39 c4             	cmpq	%rax, %r12
ffffffff800030ba: 76 06                	jbe	0xffffffff800030c2 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x22>
ffffffff800030bc: 4d 8b 3c 24          	movq	(%r12), %r15
ffffffff800030c0: eb 06                	jmp	0xffffffff800030c8 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x28>
ffffffff800030c2: 4d 89 e7             	movq	%r12, %r15
ffffffff800030c5: 49 89 c4             	movq	%rax, %r12
ffffffff800030c8: 4c 89 ff             	movq	%r15, %rdi
ffffffff800030cb: e8 60 49 01 00       	callq	0xffffffff80017a30 <talc::ptr_utils::align_down::h6c85a3b2ada70f65>
ffffffff800030d0: 49 89 c6             	movq	%rax, %r14
ffffffff800030d3: 48 8b 40 f8          	movq	-0x8(%rax), %rax
ffffffff800030d7: a8 01                	testb	$0x1, %al
ffffffff800030d9: 75 15                	jne	0xffffffff800030f0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x50>
ffffffff800030db: 49 29 c6             	subq	%rax, %r14
ffffffff800030de: 48 3d 00 01 00 00    	cmpq	$0x100, %rax            # imm = 0x100
ffffffff800030e4: 73 26                	jae	0xffffffff8000310c <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x6c>
ffffffff800030e6: 48 83 c0 e8          	addq	$-0x18, %rax
ffffffff800030ea: 48 c1 e8 03          	shrq	$0x3, %rax
ffffffff800030ee: eb 56                	jmp	0xffffffff80003146 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0xa6>
ffffffff800030f0: 4c 89 f7             	movq	%r14, %rdi
ffffffff800030f3: 48 83 c7 f8          	addq	$-0x8, %rdi
ffffffff800030f7: e8 44 49 01 00       	callq	0xffffffff80017a40 <talc::talc::tag::Tag::set_above_free::hb00f2bbb4a63b30b>
ffffffff800030fc: 49 8d 44 24 08       	leaq	0x8(%r12), %rax
ffffffff80003101: 41 f6 c7 02          	testb	$0x2, %r15b
ffffffff80003105: 74 68                	je	0xffffffff8000316f <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0xcf>
ffffffff80003107: e9 a6 00 00 00       	jmp	0xffffffff800031b2 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x112>
ffffffff8000310c: 48 3d 00 02 00 00    	cmpq	$0x200, %rax            # imm = 0x200
ffffffff80003112: 73 0a                	jae	0xffffffff8000311e <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x7e>
ffffffff80003114: 48 c1 e8 04          	shrq	$0x4, %rax
ffffffff80003118: 48 83 c0 0d          	addq	$0xd, %rax
ffffffff8000311c: eb 28                	jmp	0xffffffff80003146 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0xa6>
ffffffff8000311e: 48 0f bd d0          	bsrq	%rax, %rdx
ffffffff80003122: 48 83 f2 3f          	xorq	$0x3f, %rdx
ffffffff80003126: b1 3d                	movb	$0x3d, %cl
ffffffff80003128: 28 d1                	subb	%dl, %cl
ffffffff8000312a: 48 d3 e8             	shrq	%cl, %rax
ffffffff8000312d: c1 e2 02             	shll	$0x2, %edx
ffffffff80003130: 48 29 d0             	subq	%rdx, %rax
ffffffff80003133: 48 05 01 01 00 00    	addq	$0x101, %rax            # imm = 0x101
ffffffff80003139: 48 83 f8 7f          	cmpq	$0x7f, %rax
ffffffff8000313d: b9 7f 00 00 00       	movl	$0x7f, %ecx
ffffffff80003142: 48 0f 43 c1          	cmovaeq	%rcx, %rax
ffffffff80003146: 49 8b 0e             	movq	(%r14), %rcx
ffffffff80003149: 49 8b 56 08          	movq	0x8(%r14), %rdx
ffffffff8000314d: 48 89 0a             	movq	%rcx, (%rdx)
ffffffff80003150: 48 85 c9             	testq	%rcx, %rcx
ffffffff80003153: 74 04                	je	0xffffffff80003159 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0xb9>
ffffffff80003155: 48 89 51 08          	movq	%rdx, 0x8(%rcx)
ffffffff80003159: 48 8b 4b 20          	movq	0x20(%rbx), %rcx
ffffffff8000315d: 48 83 3c c1 00       	cmpq	$0x0, (%rcx,%rax,8)
ffffffff80003162: 74 2b                	je	0xffffffff8000318f <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0xef>
ffffffff80003164: 49 8d 44 24 08       	leaq	0x8(%r12), %rax
ffffffff80003169: 41 f6 c7 02          	testb	$0x2, %r15b
ffffffff8000316d: 75 43                	jne	0xffffffff800031b2 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x112>
ffffffff8000316f: 48 89 c2             	movq	%rax, %rdx
ffffffff80003172: 4c 29 f2             	subq	%r14, %rdx
ffffffff80003175: 48 81 fa 00 01 00 00 	cmpq	$0x100, %rdx            # imm = 0x100
ffffffff8000317c: 0f 83 d9 00 00 00    	jae	0xffffffff8000325b <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x1bb>
ffffffff80003182: 48 8d 4a e8          	leaq	-0x18(%rdx), %rcx
ffffffff80003186: 48 c1 e9 03          	shrq	$0x3, %rcx
ffffffff8000318a: e9 0f 01 00 00       	jmp	0xffffffff8000329e <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x1fe>
ffffffff8000318f: 31 d2                	xorl	%edx, %edx
ffffffff80003191: 48 83 f8 40          	cmpq	$0x40, %rax
ffffffff80003195: 0f 93 c2             	setae	%dl
ffffffff80003198: be 01 00 00 00       	movl	$0x1, %esi
ffffffff8000319d: 89 c1                	movl	%eax, %ecx
ffffffff8000319f: 48 d3 e6             	shlq	%cl, %rsi
ffffffff800031a2: 48 31 74 d3 10       	xorq	%rsi, 0x10(%rbx,%rdx,8)
ffffffff800031a7: 49 8d 44 24 08       	leaq	0x8(%r12), %rax
ffffffff800031ac: 41 f6 c7 02          	testb	$0x2, %r15b
ffffffff800031b0: 74 bd                	je	0xffffffff8000316f <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0xcf>
ffffffff800031b2: 49 8b 54 24 18       	movq	0x18(%r12), %rdx
ffffffff800031b7: 48 81 fa 00 01 00 00 	cmpq	$0x100, %rdx            # imm = 0x100
ffffffff800031be: 73 0a                	jae	0xffffffff800031ca <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x12a>
ffffffff800031c0: 48 8d 4a e8          	leaq	-0x18(%rdx), %rcx
ffffffff800031c4: 48 c1 e9 03          	shrq	$0x3, %rcx
ffffffff800031c8: eb 43                	jmp	0xffffffff8000320d <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x16d>
ffffffff800031ca: 48 81 fa 00 02 00 00 	cmpq	$0x200, %rdx            # imm = 0x200
ffffffff800031d1: 73 0d                	jae	0xffffffff800031e0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x140>
ffffffff800031d3: 48 89 d1             	movq	%rdx, %rcx
ffffffff800031d6: 48 c1 e9 04          	shrq	$0x4, %rcx
ffffffff800031da: 48 83 c1 0d          	addq	$0xd, %rcx
ffffffff800031de: eb 2d                	jmp	0xffffffff8000320d <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x16d>
ffffffff800031e0: 48 0f bd f2          	bsrq	%rdx, %rsi
ffffffff800031e4: 48 83 f6 3f          	xorq	$0x3f, %rsi
ffffffff800031e8: b1 3d                	movb	$0x3d, %cl
ffffffff800031ea: 40 28 f1             	subb	%sil, %cl
ffffffff800031ed: 48 89 d7             	movq	%rdx, %rdi
ffffffff800031f0: 48 d3 ef             	shrq	%cl, %rdi
ffffffff800031f3: c1 e6 02             	shll	$0x2, %esi
ffffffff800031f6: 48 29 f7             	subq	%rsi, %rdi
ffffffff800031f9: 48 81 c7 01 01 00 00 	addq	$0x101, %rdi            # imm = 0x101
ffffffff80003200: 48 83 ff 7f          	cmpq	$0x7f, %rdi
ffffffff80003204: b9 7f 00 00 00       	movl	$0x7f, %ecx
ffffffff80003209: 48 0f 42 cf          	cmovbq	%rdi, %rcx
ffffffff8000320d: 49 8b 74 24 08       	movq	0x8(%r12), %rsi
ffffffff80003212: 49 8b 7c 24 10       	movq	0x10(%r12), %rdi
ffffffff80003217: 48 89 37             	movq	%rsi, (%rdi)
ffffffff8000321a: 48 85 f6             	testq	%rsi, %rsi
ffffffff8000321d: 74 04                	je	0xffffffff80003223 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x183>
ffffffff8000321f: 48 89 7e 08          	movq	%rdi, 0x8(%rsi)
ffffffff80003223: 48 8b 73 20          	movq	0x20(%rbx), %rsi
ffffffff80003227: 48 83 3c ce 00       	cmpq	$0x0, (%rsi,%rcx,8)
ffffffff8000322c: 75 17                	jne	0xffffffff80003245 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x1a5>
ffffffff8000322e: 31 f6                	xorl	%esi, %esi
ffffffff80003230: 48 83 f9 40          	cmpq	$0x40, %rcx
ffffffff80003234: 40 0f 93 c6          	setae	%sil
ffffffff80003238: bf 01 00 00 00       	movl	$0x1, %edi
ffffffff8000323d: 48 d3 e7             	shlq	%cl, %rdi
ffffffff80003240: 48 31 7c f3 10       	xorq	%rdi, 0x10(%rbx,%rsi,8)
ffffffff80003245: 48 01 d0             	addq	%rdx, %rax
ffffffff80003248: 48 89 c2             	movq	%rax, %rdx
ffffffff8000324b: 4c 29 f2             	subq	%r14, %rdx
ffffffff8000324e: 48 81 fa 00 01 00 00 	cmpq	$0x100, %rdx            # imm = 0x100
ffffffff80003255: 0f 82 27 ff ff ff    	jb	0xffffffff80003182 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0xe2>
ffffffff8000325b: 48 81 fa 00 02 00 00 	cmpq	$0x200, %rdx            # imm = 0x200
ffffffff80003262: 73 0d                	jae	0xffffffff80003271 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x1d1>
ffffffff80003264: 48 89 d1             	movq	%rdx, %rcx
ffffffff80003267: 48 c1 e9 04          	shrq	$0x4, %rcx
ffffffff8000326b: 48 83 c1 0d          	addq	$0xd, %rcx
ffffffff8000326f: eb 2d                	jmp	0xffffffff8000329e <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x1fe>
ffffffff80003271: 48 0f bd f2          	bsrq	%rdx, %rsi
ffffffff80003275: 48 83 f6 3f          	xorq	$0x3f, %rsi
ffffffff80003279: b1 3d                	movb	$0x3d, %cl
ffffffff8000327b: 40 28 f1             	subb	%sil, %cl
ffffffff8000327e: 48 89 d7             	movq	%rdx, %rdi
ffffffff80003281: 48 d3 ef             	shrq	%cl, %rdi
ffffffff80003284: c1 e6 02             	shll	$0x2, %esi
ffffffff80003287: 48 29 f7             	subq	%rsi, %rdi
ffffffff8000328a: 48 81 c7 01 01 00 00 	addq	$0x101, %rdi            # imm = 0x101
ffffffff80003291: 48 83 ff 7f          	cmpq	$0x7f, %rdi
ffffffff80003295: b9 7f 00 00 00       	movl	$0x7f, %ecx
ffffffff8000329a: 48 0f 42 cf          	cmovbq	%rdi, %rcx
ffffffff8000329e: 48 8b 7b 20          	movq	0x20(%rbx), %rdi
ffffffff800032a2: 48 8d 34 cf          	leaq	(%rdi,%rcx,8), %rsi
ffffffff800032a6: 48 8b 3c cf          	movq	(%rdi,%rcx,8), %rdi
ffffffff800032aa: 48 85 ff             	testq	%rdi, %rdi
ffffffff800032ad: 74 13                	je	0xffffffff800032c2 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x222>
ffffffff800032af: 49 89 3e             	movq	%rdi, (%r14)
ffffffff800032b2: 49 89 76 08          	movq	%rsi, 0x8(%r14)
ffffffff800032b6: 4c 89 36             	movq	%r14, (%rsi)
ffffffff800032b9: 48 83 c7 08          	addq	$0x8, %rdi
ffffffff800032bd: 48 89 fe             	movq	%rdi, %rsi
ffffffff800032c0: eb 23                	jmp	0xffffffff800032e5 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464+0x245>
ffffffff800032c2: 31 ff                	xorl	%edi, %edi
ffffffff800032c4: 48 83 f9 40          	cmpq	$0x40, %rcx
ffffffff800032c8: 40 0f 93 c7          	setae	%dil
ffffffff800032cc: 41 b8 01 00 00 00    	movl	$0x1, %r8d
ffffffff800032d2: 49 d3 e0             	shlq	%cl, %r8
ffffffff800032d5: 4c 31 44 fb 10       	xorq	%r8, 0x10(%rbx,%rdi,8)
ffffffff800032da: 49 c7 06 00 00 00 00 	movq	$0x0, (%r14)
ffffffff800032e1: 49 89 76 08          	movq	%rsi, 0x8(%r14)
ffffffff800032e5: 4c 89 36             	movq	%r14, (%rsi)
ffffffff800032e8: 49 89 56 10          	movq	%rdx, 0x10(%r14)
ffffffff800032ec: 48 89 50 f8          	movq	%rdx, -0x8(%rax)
ffffffff800032f0: 48 83 c4 08          	addq	$0x8, %rsp
ffffffff800032f4: 5b                   	popq	%rbx
ffffffff800032f5: 41 5c                	popq	%r12
ffffffff800032f7: 41 5e                	popq	%r14
ffffffff800032f9: 41 5f                	popq	%r15
ffffffff800032fb: c3                   	retq
ffffffff800032fc: cc                   	int3
ffffffff800032fd: cc                   	int3
ffffffff800032fe: cc                   	int3
ffffffff800032ff: cc                   	int3

ffffffff80003300 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>:
ffffffff80003300: 55                   	pushq	%rbp
ffffffff80003301: 41 57                	pushq	%r15
ffffffff80003303: 41 56                	pushq	%r14
ffffffff80003305: 41 55                	pushq	%r13
ffffffff80003307: 41 54                	pushq	%r12
ffffffff80003309: 53                   	pushq	%rbx
ffffffff8000330a: 48 83 ec 38          	subq	$0x38, %rsp
ffffffff8000330e: 49 89 d7             	movq	%rdx, %r15
ffffffff80003311: 48 8d 42 0f          	leaq	0xf(%rdx), %rax
ffffffff80003315: 48 83 e0 f8          	andq	$-0x8, %rax
ffffffff80003319: 48 83 fa 11          	cmpq	$0x11, %rdx
ffffffff8000331d: 41 bd 18 00 00 00    	movl	$0x18, %r13d
ffffffff80003323: 4c 0f 43 e8          	cmovaeq	%rax, %r13
ffffffff80003327: 49 0f bd c5          	bsrq	%r13, %rax
ffffffff8000332b: 48 83 f0 3f          	xorq	$0x3f, %rax
ffffffff8000332f: b1 3d                	movb	$0x3d, %cl
ffffffff80003331: 28 c1                	subb	%al, %cl
ffffffff80003333: 4c 89 ea             	movq	%r13, %rdx
ffffffff80003336: 48 d3 ea             	shrq	%cl, %rdx
ffffffff80003339: c1 e0 02             	shll	$0x2, %eax
ffffffff8000333c: 48 29 c2             	subq	%rax, %rdx
ffffffff8000333f: 48 81 c2 01 01 00 00 	addq	$0x101, %rdx            # imm = 0x101
ffffffff80003346: 48 83 fa 7f          	cmpq	$0x7f, %rdx
ffffffff8000334a: b8 7f 00 00 00       	movl	$0x7f, %eax
ffffffff8000334f: 48 0f 42 c2          	cmovbq	%rdx, %rax
ffffffff80003353: 4d 89 e8             	movq	%r13, %r8
ffffffff80003356: 49 c1 e8 04          	shrq	$0x4, %r8
ffffffff8000335a: 49 83 c0 0d          	addq	$0xd, %r8
ffffffff8000335e: 49 8d 55 e8          	leaq	-0x18(%r13), %rdx
ffffffff80003362: 48 c1 ea 03          	shrq	$0x3, %rdx
ffffffff80003366: 4c 89 e9             	movq	%r13, %rcx
ffffffff80003369: 48 81 e1 00 ff ff ff 	andq	$-0x100, %rcx
ffffffff80003370: 49 81 fd 00 01 00 00 	cmpq	$0x100, %r13            # imm = 0x100
ffffffff80003377: 48 0f 43 d0          	cmovaeq	%rax, %rdx
ffffffff8000337b: 48 83 fa 40          	cmpq	$0x40, %rdx
ffffffff8000337f: 0f 92 c0             	setb	%al
ffffffff80003382: 41 89 d1             	movl	%edx, %r9d
ffffffff80003385: 41 83 e1 3f          	andl	$0x3f, %r9d
ffffffff80003389: 4c 89 4c 24 20       	movq	%r9, 0x20(%rsp)
ffffffff8000338e: 48 81 f9 00 01 00 00 	cmpq	$0x100, %rcx            # imm = 0x100
ffffffff80003395: 41 0f 94 c3          	sete	%r11b
ffffffff80003399: 48 89 54 24 08       	movq	%rdx, 0x8(%rsp)
ffffffff8000339e: 4c 0f 45 c2          	cmovneq	%rdx, %r8
ffffffff800033a2: 41 08 c3             	orb	%al, %r11b
ffffffff800033a5: 48 83 fe 09          	cmpq	$0x9, %rsi
ffffffff800033a9: 48 89 7c 24 10       	movq	%rdi, 0x10(%rsp)
ffffffff800033ae: 4c 89 44 24 28       	movq	%r8, 0x28(%rsp)
ffffffff800033b3: 0f 83 7f 01 00 00    	jae	0xffffffff80003538 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x238>
ffffffff800033b9: 48 89 f3             	movq	%rsi, %rbx
ffffffff800033bc: 48 c7 44 24 18 00 00 00 00   	movq	$0x0, 0x18(%rsp)
ffffffff800033c5: 45 84 db             	testb	%r11b, %r11b
ffffffff800033c8: 74 36                	je	0xffffffff80003400 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x100>
ffffffff800033ca: 48 8b 57 10          	movq	0x10(%rdi), %rdx
ffffffff800033ce: 48 89 d0             	movq	%rdx, %rax
ffffffff800033d1: 44 89 c1             	movl	%r8d, %ecx
ffffffff800033d4: 48 d3 e8             	shrq	%cl, %rax
ffffffff800033d7: 48 85 c0             	testq	%rax, %rax
ffffffff800033da: 74 64                	je	0xffffffff80003440 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x140>
ffffffff800033dc: f3 48 0f bc c8       	tzcntq	%rax, %rcx
ffffffff800033e1: 4c 01 c1             	addq	%r8, %rcx
ffffffff800033e4: 4c 8b 57 18          	movq	0x18(%rdi), %r10
ffffffff800033e8: 48 8b 77 20          	movq	0x20(%rdi), %rsi
ffffffff800033ec: 4d 85 d2             	testq	%r10, %r10
ffffffff800033ef: 75 6f                	jne	0xffffffff80003460 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x160>
ffffffff800033f1: e9 db 00 00 00       	jmp	0xffffffff800034d1 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x1d1>
ffffffff800033f6: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
ffffffff80003400: 48 83 7c 24 08 7f    	cmpq	$0x7f, 0x8(%rsp)
ffffffff80003406: 0f 87 04 01 00 00    	ja	0xffffffff80003510 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x210>
ffffffff8000340c: 4c 8b 57 18          	movq	0x18(%rdi), %r10
ffffffff80003410: 4c 89 d0             	movq	%r10, %rax
ffffffff80003413: 48 8b 4c 24 20       	movq	0x20(%rsp), %rcx
ffffffff80003418: 48 d3 e8             	shrq	%cl, %rax
ffffffff8000341b: 48 85 c0             	testq	%rax, %rax
ffffffff8000341e: 0f 84 ec 00 00 00    	je	0xffffffff80003510 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x210>
ffffffff80003424: f3 48 0f bc c8       	tzcntq	%rax, %rcx
ffffffff80003429: 48 03 4c 24 08       	addq	0x8(%rsp), %rcx
ffffffff8000342e: 48 8b 57 10          	movq	0x10(%rdi), %rdx
ffffffff80003432: 48 8b 77 20          	movq	0x20(%rdi), %rsi
ffffffff80003436: 4d 85 d2             	testq	%r10, %r10
ffffffff80003439: 75 25                	jne	0xffffffff80003460 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x160>
ffffffff8000343b: e9 91 00 00 00       	jmp	0xffffffff800034d1 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x1d1>
ffffffff80003440: 4c 8b 57 18          	movq	0x18(%rdi), %r10
ffffffff80003444: 4d 85 d2             	testq	%r10, %r10
ffffffff80003447: 0f 84 c3 00 00 00    	je	0xffffffff80003510 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x210>
ffffffff8000344d: f3 49 0f bc ca       	tzcntq	%r10, %rcx
ffffffff80003452: 48 83 c9 40          	orq	$0x40, %rcx
ffffffff80003456: 48 8b 77 20          	movq	0x20(%rdi), %rsi
ffffffff8000345a: 4d 85 d2             	testq	%r10, %r10
ffffffff8000345d: 74 72                	je	0xffffffff800034d1 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x1d1>
ffffffff8000345f: 90                   	nop
ffffffff80003460: f3 4d 0f bc c2       	tzcntq	%r10, %r8
ffffffff80003465: 49 83 c8 40          	orq	$0x40, %r8
ffffffff80003469: 48 8d 04 ce          	leaq	(%rsi,%rcx,8), %rax
ffffffff8000346d: 49 89 c4             	movq	%rax, %r12
ffffffff80003470: 4d 8b 24 24          	movq	(%r12), %r12
ffffffff80003474: 4d 85 e4             	testq	%r12, %r12
ffffffff80003477: 74 17                	je	0xffffffff80003490 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x190>
ffffffff80003479: 49 8b 6c 24 10       	movq	0x10(%r12), %rbp
ffffffff8000347e: 4c 39 ed             	cmpq	%r13, %rbp
ffffffff80003481: 72 ed                	jb	0xffffffff80003470 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x170>
ffffffff80003483: e9 c8 02 00 00       	jmp	0xffffffff80003750 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x450>
ffffffff80003488: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
ffffffff80003490: 48 8d 41 01          	leaq	0x1(%rcx), %rax
ffffffff80003494: 48 83 f9 3f          	cmpq	$0x3f, %rcx
ffffffff80003498: 73 12                	jae	0xffffffff800034ac <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x1ac>
ffffffff8000349a: 49 89 d1             	movq	%rdx, %r9
ffffffff8000349d: 89 c1                	movl	%eax, %ecx
ffffffff8000349f: 49 d3 e9             	shrq	%cl, %r9
ffffffff800034a2: 4c 89 c1             	movq	%r8, %rcx
ffffffff800034a5: 4d 85 c9             	testq	%r9, %r9
ffffffff800034a8: 75 15                	jne	0xffffffff800034bf <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x1bf>
ffffffff800034aa: eb bd                	jmp	0xffffffff80003469 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x169>
ffffffff800034ac: 48 83 f9 7e          	cmpq	$0x7e, %rcx
ffffffff800034b0: 77 5e                	ja	0xffffffff80003510 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x210>
ffffffff800034b2: 4d 89 d1             	movq	%r10, %r9
ffffffff800034b5: 89 c1                	movl	%eax, %ecx
ffffffff800034b7: 49 d3 e9             	shrq	%cl, %r9
ffffffff800034ba: 4d 85 c9             	testq	%r9, %r9
ffffffff800034bd: 74 51                	je	0xffffffff80003510 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x210>
ffffffff800034bf: f3 49 0f bc c9       	tzcntq	%r9, %rcx
ffffffff800034c4: 48 01 c1             	addq	%rax, %rcx
ffffffff800034c7: eb a0                	jmp	0xffffffff80003469 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x169>
ffffffff800034c9: f3 48 0f bc c0       	tzcntq	%rax, %rax
ffffffff800034ce: 48 01 c1             	addq	%rax, %rcx
ffffffff800034d1: 48 8d 04 ce          	leaq	(%rsi,%rcx,8), %rax
ffffffff800034d5: 49 89 c4             	movq	%rax, %r12
ffffffff800034d8: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
ffffffff800034e0: 4d 8b 24 24          	movq	(%r12), %r12
ffffffff800034e4: 4d 85 e4             	testq	%r12, %r12
ffffffff800034e7: 74 0f                	je	0xffffffff800034f8 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x1f8>
ffffffff800034e9: 49 8b 6c 24 10       	movq	0x10(%r12), %rbp
ffffffff800034ee: 4c 39 ed             	cmpq	%r13, %rbp
ffffffff800034f1: 72 ed                	jb	0xffffffff800034e0 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x1e0>
ffffffff800034f3: e9 58 02 00 00       	jmp	0xffffffff80003750 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x450>
ffffffff800034f8: 48 83 f9 3e          	cmpq	$0x3e, %rcx
ffffffff800034fc: 77 12                	ja	0xffffffff80003510 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x210>
ffffffff800034fe: 48 ff c1             	incq	%rcx
ffffffff80003501: 48 89 d0             	movq	%rdx, %rax
ffffffff80003504: 48 d3 e8             	shrq	%cl, %rax
ffffffff80003507: 48 85 c0             	testq	%rax, %rax
ffffffff8000350a: 75 bd                	jne	0xffffffff800034c9 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x1c9>
ffffffff8000350c: 0f 1f 40 00          	nopl	(%rax)
ffffffff80003510: 48 89 de             	movq	%rbx, %rsi
ffffffff80003513: 4c 89 fa             	movq	%r15, %rdx
ffffffff80003516: 44 89 dd             	movl	%r11d, %ebp
ffffffff80003519: e8 42 42 01 00       	callq	0xffffffff80017760 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085>
ffffffff8000351e: 41 89 eb             	movl	%ebp, %r11d
ffffffff80003521: 4c 8b 44 24 28       	movq	0x28(%rsp), %r8
ffffffff80003526: 48 8b 7c 24 10       	movq	0x10(%rsp), %rdi
ffffffff8000352b: 84 c0                	testb	%al, %al
ffffffff8000352d: 0f 84 92 fe ff ff    	je	0xffffffff800033c5 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0xc5>
ffffffff80003533: e9 41 04 00 00       	jmp	0xffffffff80003979 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x679>
ffffffff80003538: 48 8d 5e ff          	leaq	-0x1(%rsi), %rbx
ffffffff8000353c: 48 89 74 24 30       	movq	%rsi, 0x30(%rsp)
ffffffff80003541: 49 89 f6             	movq	%rsi, %r14
ffffffff80003544: 49 f7 de             	negq	%r14
ffffffff80003547: 48 c7 44 24 18 00 00 00 00   	movq	$0x0, 0x18(%rsp)
ffffffff80003550: 44 88 5c 24 07       	movb	%r11b, 0x7(%rsp)
ffffffff80003555: 45 84 db             	testb	%r11b, %r11b
ffffffff80003558: 74 36                	je	0xffffffff80003590 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x290>
ffffffff8000355a: 48 8b 57 10          	movq	0x10(%rdi), %rdx
ffffffff8000355e: 48 89 d0             	movq	%rdx, %rax
ffffffff80003561: 44 89 c1             	movl	%r8d, %ecx
ffffffff80003564: 48 d3 e8             	shrq	%cl, %rax
ffffffff80003567: 48 85 c0             	testq	%rax, %rax
ffffffff8000356a: 74 67                	je	0xffffffff800035d3 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x2d3>
ffffffff8000356c: f3 48 0f bc c8       	tzcntq	%rax, %rcx
ffffffff80003571: 4c 01 c1             	addq	%r8, %rcx
ffffffff80003574: 4c 8b 5f 18          	movq	0x18(%rdi), %r11
ffffffff80003578: 48 8b 77 20          	movq	0x20(%rdi), %rsi
ffffffff8000357c: 4d 85 db             	testq	%r11, %r11
ffffffff8000357f: 75 7f                	jne	0xffffffff80003600 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x300>
ffffffff80003581: e9 da 00 00 00       	jmp	0xffffffff80003660 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x360>
ffffffff80003586: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
ffffffff80003590: 48 81 7c 24 08 80 00 00 00   	cmpq	$0x80, 0x8(%rsp)
ffffffff80003599: 0f 83 e1 00 00 00    	jae	0xffffffff80003680 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x380>
ffffffff8000359f: 4c 8b 5f 18          	movq	0x18(%rdi), %r11
ffffffff800035a3: 4c 89 d8             	movq	%r11, %rax
ffffffff800035a6: 48 8b 4c 24 20       	movq	0x20(%rsp), %rcx
ffffffff800035ab: 48 d3 e8             	shrq	%cl, %rax
ffffffff800035ae: 48 85 c0             	testq	%rax, %rax
ffffffff800035b1: 0f 84 c9 00 00 00    	je	0xffffffff80003680 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x380>
ffffffff800035b7: f3 48 0f bc c8       	tzcntq	%rax, %rcx
ffffffff800035bc: 48 03 4c 24 08       	addq	0x8(%rsp), %rcx
ffffffff800035c1: 48 8b 57 10          	movq	0x10(%rdi), %rdx
ffffffff800035c5: 48 8b 77 20          	movq	0x20(%rdi), %rsi
ffffffff800035c9: 4d 85 db             	testq	%r11, %r11
ffffffff800035cc: 75 32                	jne	0xffffffff80003600 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x300>
ffffffff800035ce: e9 8d 00 00 00       	jmp	0xffffffff80003660 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x360>
ffffffff800035d3: 4c 8b 5f 18          	movq	0x18(%rdi), %r11
ffffffff800035d7: 4d 85 db             	testq	%r11, %r11
ffffffff800035da: 0f 84 a0 00 00 00    	je	0xffffffff80003680 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x380>
ffffffff800035e0: f3 49 0f bc cb       	tzcntq	%r11, %rcx
ffffffff800035e5: 48 83 c9 40          	orq	$0x40, %rcx
ffffffff800035e9: 48 8b 77 20          	movq	0x20(%rdi), %rsi
ffffffff800035ed: 4d 85 db             	testq	%r11, %r11
ffffffff800035f0: 74 6e                	je	0xffffffff80003660 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x360>
ffffffff800035f2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
ffffffff80003600: f3 4d 0f bc c3       	tzcntq	%r11, %r8
ffffffff80003605: 49 83 c8 40          	orq	$0x40, %r8
ffffffff80003609: e9 ba 00 00 00       	jmp	0xffffffff800036c8 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x3c8>
ffffffff8000360e: 66 90                	nop
ffffffff80003610: f3 48 0f bc c0       	tzcntq	%rax, %rax
ffffffff80003615: 48 01 c1             	addq	%rax, %rcx
ffffffff80003618: eb 46                	jmp	0xffffffff80003660 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x360>
ffffffff8000361a: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff80003620: 49 89 c4             	movq	%rax, %r12
ffffffff80003623: 48 85 c0             	testq	%rax, %rax
ffffffff80003626: 74 41                	je	0xffffffff80003669 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x369>
ffffffff80003628: 49 8b 04 24          	movq	(%r12), %rax
ffffffff8000362c: 49 8b 6c 24 10       	movq	0x10(%r12), %rbp
ffffffff80003631: 4c 39 ed             	cmpq	%r13, %rbp
ffffffff80003634: 72 ea                	jb	0xffffffff80003620 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x320>
ffffffff80003636: 4c 01 e5             	addq	%r12, %rbp
ffffffff80003639: 4e 8d 0c 23          	leaq	(%rbx,%r12), %r9
ffffffff8000363d: 4d 21 f1             	andq	%r14, %r9
ffffffff80003640: 4f 8d 04 39          	leaq	(%r9,%r15), %r8
ffffffff80003644: 49 83 c0 08          	addq	$0x8, %r8
ffffffff80003648: 49 39 e8             	cmpq	%rbp, %r8
ffffffff8000364b: 77 d3                	ja	0xffffffff80003620 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x320>
ffffffff8000364d: e9 cb 00 00 00       	jmp	0xffffffff8000371d <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x41d>
ffffffff80003652: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
ffffffff80003660: 4c 8b 24 ce          	movq	(%rsi,%rcx,8), %r12
ffffffff80003664: 4d 85 e4             	testq	%r12, %r12
ffffffff80003667: 75 bf                	jne	0xffffffff80003628 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x328>
ffffffff80003669: 48 83 f9 3e          	cmpq	$0x3e, %rcx
ffffffff8000366d: 77 11                	ja	0xffffffff80003680 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x380>
ffffffff8000366f: 48 ff c1             	incq	%rcx
ffffffff80003672: 48 89 d0             	movq	%rdx, %rax
ffffffff80003675: 48 d3 e8             	shrq	%cl, %rax
ffffffff80003678: 48 85 c0             	testq	%rax, %rax
ffffffff8000367b: 75 93                	jne	0xffffffff80003610 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x310>
ffffffff8000367d: 0f 1f 00             	nopl	(%rax)
ffffffff80003680: 48 8b 74 24 30       	movq	0x30(%rsp), %rsi
ffffffff80003685: 4c 89 fa             	movq	%r15, %rdx
ffffffff80003688: e8 d3 40 01 00       	callq	0xffffffff80017760 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085>
ffffffff8000368d: 48 8b 7c 24 10       	movq	0x10(%rsp), %rdi
ffffffff80003692: 84 c0                	testb	%al, %al
ffffffff80003694: 4c 8b 44 24 28       	movq	0x28(%rsp), %r8
ffffffff80003699: 44 0f b6 5c 24 07    	movzbl	0x7(%rsp), %r11d
ffffffff8000369f: 0f 84 b0 fe ff ff    	je	0xffffffff80003555 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x255>
ffffffff800036a5: e9 cf 02 00 00       	jmp	0xffffffff80003979 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x679>
ffffffff800036aa: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff800036b0: 49 89 d1             	movq	%rdx, %r9
ffffffff800036b3: 89 c1                	movl	%eax, %ecx
ffffffff800036b5: 49 d3 e9             	shrq	%cl, %r9
ffffffff800036b8: 4c 89 c1             	movq	%r8, %rcx
ffffffff800036bb: 4d 85 c9             	testq	%r9, %r9
ffffffff800036be: 74 08                	je	0xffffffff800036c8 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x3c8>
ffffffff800036c0: f3 49 0f bc c9       	tzcntq	%r9, %rcx
ffffffff800036c5: 48 01 c1             	addq	%rax, %rcx
ffffffff800036c8: 4c 8b 24 ce          	movq	(%rsi,%rcx,8), %r12
ffffffff800036cc: 4d 85 e4             	testq	%r12, %r12
ffffffff800036cf: 75 27                	jne	0xffffffff800036f8 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x3f8>
ffffffff800036d1: 48 8d 41 01          	leaq	0x1(%rcx), %rax
ffffffff800036d5: 48 83 f9 3f          	cmpq	$0x3f, %rcx
ffffffff800036d9: 72 d5                	jb	0xffffffff800036b0 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x3b0>
ffffffff800036db: 48 83 f9 7f          	cmpq	$0x7f, %rcx
ffffffff800036df: 73 9f                	jae	0xffffffff80003680 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x380>
ffffffff800036e1: 4d 89 d9             	movq	%r11, %r9
ffffffff800036e4: 89 c1                	movl	%eax, %ecx
ffffffff800036e6: 49 d3 e9             	shrq	%cl, %r9
ffffffff800036e9: 4d 85 c9             	testq	%r9, %r9
ffffffff800036ec: 75 d2                	jne	0xffffffff800036c0 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x3c0>
ffffffff800036ee: eb 90                	jmp	0xffffffff80003680 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x380>
ffffffff800036f0: 49 89 c4             	movq	%rax, %r12
ffffffff800036f3: 48 85 c0             	testq	%rax, %rax
ffffffff800036f6: 74 d9                	je	0xffffffff800036d1 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x3d1>
ffffffff800036f8: 49 8b 04 24          	movq	(%r12), %rax
ffffffff800036fc: 49 8b 6c 24 10       	movq	0x10(%r12), %rbp
ffffffff80003701: 4c 39 ed             	cmpq	%r13, %rbp
ffffffff80003704: 72 ea                	jb	0xffffffff800036f0 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x3f0>
ffffffff80003706: 4c 01 e5             	addq	%r12, %rbp
ffffffff80003709: 4e 8d 0c 23          	leaq	(%rbx,%r12), %r9
ffffffff8000370d: 4d 21 f1             	andq	%r14, %r9
ffffffff80003710: 4f 8d 14 39          	leaq	(%r9,%r15), %r10
ffffffff80003714: 49 83 c2 08          	addq	$0x8, %r10
ffffffff80003718: 49 39 ea             	cmpq	%rbp, %r10
ffffffff8000371b: 77 d3                	ja	0xffffffff800036f0 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x3f0>
ffffffff8000371d: 4d 89 ce             	movq	%r9, %r14
ffffffff80003720: 49 8b 54 24 08       	movq	0x8(%r12), %rdx
ffffffff80003725: 48 89 02             	movq	%rax, (%rdx)
ffffffff80003728: 48 85 c0             	testq	%rax, %rax
ffffffff8000372b: 74 04                	je	0xffffffff80003731 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x431>
ffffffff8000372d: 48 89 50 08          	movq	%rdx, 0x8(%rax)
ffffffff80003731: 48 83 3c ce 00       	cmpq	$0x0, (%rsi,%rcx,8)
ffffffff80003736: 75 4f                	jne	0xffffffff80003787 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x487>
ffffffff80003738: 31 c0                	xorl	%eax, %eax
ffffffff8000373a: 48 83 f9 40          	cmpq	$0x40, %rcx
ffffffff8000373e: 0f 93 c0             	setae	%al
ffffffff80003741: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff80003746: 48 d3 e2             	shlq	%cl, %rdx
ffffffff80003749: 48 31 54 c7 10       	xorq	%rdx, 0x10(%rdi,%rax,8)
ffffffff8000374e: eb 37                	jmp	0xffffffff80003787 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x487>
ffffffff80003750: 49 8b 14 24          	movq	(%r12), %rdx
ffffffff80003754: 49 8b 74 24 08       	movq	0x8(%r12), %rsi
ffffffff80003759: 48 89 16             	movq	%rdx, (%rsi)
ffffffff8000375c: 48 85 d2             	testq	%rdx, %rdx
ffffffff8000375f: 74 04                	je	0xffffffff80003765 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x465>
ffffffff80003761: 48 89 72 08          	movq	%rsi, 0x8(%rdx)
ffffffff80003765: 48 83 38 00          	cmpq	$0x0, (%rax)
ffffffff80003769: 75 16                	jne	0xffffffff80003781 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x481>
ffffffff8000376b: 31 c0                	xorl	%eax, %eax
ffffffff8000376d: 48 83 f9 40          	cmpq	$0x40, %rcx
ffffffff80003771: 0f 93 c0             	setae	%al
ffffffff80003774: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff80003779: 48 d3 e2             	shlq	%cl, %rdx
ffffffff8000377c: 48 31 54 c7 10       	xorq	%rdx, 0x10(%rdi,%rax,8)
ffffffff80003781: 4c 01 e5             	addq	%r12, %rbp
ffffffff80003784: 4d 89 e6             	movq	%r12, %r14
ffffffff80003787: 48 8d 5d e8          	leaq	-0x18(%rbp), %rbx
ffffffff8000378b: 4c 39 f3             	cmpq	%r14, %rbx
ffffffff8000378e: 49 0f 43 de          	cmovaeq	%r14, %rbx
ffffffff80003792: 48 89 d8             	movq	%rbx, %rax
ffffffff80003795: 4c 29 e0             	subq	%r12, %rax
ffffffff80003798: 48 83 f8 17          	cmpq	$0x17, %rax
ffffffff8000379c: 76 12                	jbe	0xffffffff800037b0 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x4b0>
ffffffff8000379e: 48 3d 00 01 00 00    	cmpq	$0x100, %rax            # imm = 0x100
ffffffff800037a4: 73 1c                	jae	0xffffffff800037c2 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x4c2>
ffffffff800037a6: 48 8d 48 e8          	leaq	-0x18(%rax), %rcx
ffffffff800037aa: 48 c1 e9 03          	shrq	$0x3, %rcx
ffffffff800037ae: eb 53                	jmp	0xffffffff80003803 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x503>
ffffffff800037b0: 49 8d 7c 24 f8       	leaq	-0x8(%r12), %rdi
ffffffff800037b5: e8 96 42 01 00       	callq	0xffffffff80017a50 <talc::talc::tag::Tag::clear_above_free::hac6cde6801e53680>
ffffffff800037ba: 4c 89 e3             	movq	%r12, %rbx
ffffffff800037bd: e9 98 00 00 00       	jmp	0xffffffff8000385a <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x55a>
ffffffff800037c2: 48 3d 00 02 00 00    	cmpq	$0x200, %rax            # imm = 0x200
ffffffff800037c8: 73 0d                	jae	0xffffffff800037d7 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x4d7>
ffffffff800037ca: 48 89 c1             	movq	%rax, %rcx
ffffffff800037cd: 48 c1 e9 04          	shrq	$0x4, %rcx
ffffffff800037d1: 48 83 c1 0d          	addq	$0xd, %rcx
ffffffff800037d5: eb 2c                	jmp	0xffffffff80003803 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x503>
ffffffff800037d7: 48 0f bd d0          	bsrq	%rax, %rdx
ffffffff800037db: 48 83 f2 3f          	xorq	$0x3f, %rdx
ffffffff800037df: b1 3d                	movb	$0x3d, %cl
ffffffff800037e1: 28 d1                	subb	%dl, %cl
ffffffff800037e3: 48 89 c6             	movq	%rax, %rsi
ffffffff800037e6: 48 d3 ee             	shrq	%cl, %rsi
ffffffff800037e9: c1 e2 02             	shll	$0x2, %edx
ffffffff800037ec: 48 29 d6             	subq	%rdx, %rsi
ffffffff800037ef: 48 81 c6 01 01 00 00 	addq	$0x101, %rsi            # imm = 0x101
ffffffff800037f6: 48 83 fe 7f          	cmpq	$0x7f, %rsi
ffffffff800037fa: b9 7f 00 00 00       	movl	$0x7f, %ecx
ffffffff800037ff: 48 0f 42 ce          	cmovbq	%rsi, %rcx
ffffffff80003803: 48 8b 77 20          	movq	0x20(%rdi), %rsi
ffffffff80003807: 48 8d 14 ce          	leaq	(%rsi,%rcx,8), %rdx
ffffffff8000380b: 48 8b 34 ce          	movq	(%rsi,%rcx,8), %rsi
ffffffff8000380f: 48 85 f6             	testq	%rsi, %rsi
ffffffff80003812: 74 15                	je	0xffffffff80003829 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x529>
ffffffff80003814: 49 89 34 24          	movq	%rsi, (%r12)
ffffffff80003818: 49 89 54 24 08       	movq	%rdx, 0x8(%r12)
ffffffff8000381d: 4c 89 22             	movq	%r12, (%rdx)
ffffffff80003820: 48 83 c6 08          	addq	$0x8, %rsi
ffffffff80003824: 48 89 f2             	movq	%rsi, %rdx
ffffffff80003827: eb 25                	jmp	0xffffffff8000384e <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x54e>
ffffffff80003829: 31 f6                	xorl	%esi, %esi
ffffffff8000382b: 48 83 f9 40          	cmpq	$0x40, %rcx
ffffffff8000382f: 40 0f 93 c6          	setae	%sil
ffffffff80003833: 41 b8 01 00 00 00    	movl	$0x1, %r8d
ffffffff80003839: 49 d3 e0             	shlq	%cl, %r8
ffffffff8000383c: 4c 31 44 f7 10       	xorq	%r8, 0x10(%rdi,%rsi,8)
ffffffff80003841: 49 c7 04 24 00 00 00 00      	movq	$0x0, (%r12)
ffffffff80003849: 49 89 54 24 08       	movq	%rdx, 0x8(%r12)
ffffffff8000384e: 4c 89 22             	movq	%r12, (%rdx)
ffffffff80003851: 49 89 44 24 10       	movq	%rax, 0x10(%r12)
ffffffff80003856: 48 89 43 f8          	movq	%rax, -0x8(%rbx)
ffffffff8000385a: 4d 01 f7             	addq	%r14, %r15
ffffffff8000385d: 4c 89 ff             	movq	%r15, %rdi
ffffffff80003860: e8 ab 41 01 00       	callq	0xffffffff80017a10 <talc::ptr_utils::align_up::h3dc09199da0d2fc9>
ffffffff80003865: 49 89 c7             	movq	%rax, %r15
ffffffff80003868: 4c 8d 6b 10          	leaq	0x10(%rbx), %r13
ffffffff8000386c: 4c 39 e8             	cmpq	%r13, %rax
ffffffff8000386f: 4c 0f 43 e8          	cmovaeq	%rax, %r13
ffffffff80003873: 49 8d 55 08          	leaq	0x8(%r13), %rdx
ffffffff80003877: 48 89 e8             	movq	%rbp, %rax
ffffffff8000387a: 48 29 d0             	subq	%rdx, %rax
ffffffff8000387d: 48 83 f8 17          	cmpq	$0x17, %rax
ffffffff80003881: 76 17                	jbe	0xffffffff8000389a <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x59a>
ffffffff80003883: 48 3d 00 01 00 00    	cmpq	$0x100, %rax            # imm = 0x100
ffffffff80003889: 73 36                	jae	0xffffffff800038c1 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x5c1>
ffffffff8000388b: 48 8d 48 e8          	leaq	-0x18(%rax), %rcx
ffffffff8000388f: 48 c1 e9 03          	shrq	$0x3, %rcx
ffffffff80003893: 4c 8b 4c 24 10       	movq	0x10(%rsp), %r9
ffffffff80003898: eb 6e                	jmp	0xffffffff80003908 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x608>
ffffffff8000389a: 48 83 c5 f8          	addq	$-0x8, %rbp
ffffffff8000389e: 48 89 ef             	movq	%rbp, %rdi
ffffffff800038a1: 48 89 de             	movq	%rbx, %rsi
ffffffff800038a4: 31 d2                	xorl	%edx, %edx
ffffffff800038a6: e8 75 41 01 00       	callq	0xffffffff80017a20 <talc::talc::tag::Tag::write::h1e76d32195c79b2e>
ffffffff800038ab: 49 89 ed             	movq	%rbp, %r13
ffffffff800038ae: 4c 89 74 24 18       	movq	%r14, 0x18(%rsp)
ffffffff800038b3: 4d 39 fd             	cmpq	%r15, %r13
ffffffff800038b6: 0f 85 ba 00 00 00    	jne	0xffffffff80003976 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x676>
ffffffff800038bc: e9 b8 00 00 00       	jmp	0xffffffff80003979 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x679>
ffffffff800038c1: 48 3d 00 02 00 00    	cmpq	$0x200, %rax            # imm = 0x200
ffffffff800038c7: 4c 8b 4c 24 10       	movq	0x10(%rsp), %r9
ffffffff800038cc: 73 0d                	jae	0xffffffff800038db <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x5db>
ffffffff800038ce: 48 89 c1             	movq	%rax, %rcx
ffffffff800038d1: 48 c1 e9 04          	shrq	$0x4, %rcx
ffffffff800038d5: 48 83 c1 0d          	addq	$0xd, %rcx
ffffffff800038d9: eb 2d                	jmp	0xffffffff80003908 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x608>
ffffffff800038db: 48 0f bd f0          	bsrq	%rax, %rsi
ffffffff800038df: 48 83 f6 3f          	xorq	$0x3f, %rsi
ffffffff800038e3: b1 3d                	movb	$0x3d, %cl
ffffffff800038e5: 40 28 f1             	subb	%sil, %cl
ffffffff800038e8: 48 89 c7             	movq	%rax, %rdi
ffffffff800038eb: 48 d3 ef             	shrq	%cl, %rdi
ffffffff800038ee: c1 e6 02             	shll	$0x2, %esi
ffffffff800038f1: 48 29 f7             	subq	%rsi, %rdi
ffffffff800038f4: 48 81 c7 01 01 00 00 	addq	$0x101, %rdi            # imm = 0x101
ffffffff800038fb: 48 83 ff 7f          	cmpq	$0x7f, %rdi
ffffffff800038ff: b9 7f 00 00 00       	movl	$0x7f, %ecx
ffffffff80003904: 48 0f 42 cf          	cmovbq	%rdi, %rcx
ffffffff80003908: 49 8b 79 20          	movq	0x20(%r9), %rdi
ffffffff8000390c: 48 8d 34 cf          	leaq	(%rdi,%rcx,8), %rsi
ffffffff80003910: 48 8b 3c cf          	movq	(%rdi,%rcx,8), %rdi
ffffffff80003914: 48 85 ff             	testq	%rdi, %rdi
ffffffff80003917: 74 14                	je	0xffffffff8000392d <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x62d>
ffffffff80003919: 49 89 7d 08          	movq	%rdi, 0x8(%r13)
ffffffff8000391d: 49 89 75 10          	movq	%rsi, 0x10(%r13)
ffffffff80003921: 48 89 16             	movq	%rdx, (%rsi)
ffffffff80003924: 48 83 c7 08          	addq	$0x8, %rdi
ffffffff80003928: 48 89 fe             	movq	%rdi, %rsi
ffffffff8000392b: eb 24                	jmp	0xffffffff80003951 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x651>
ffffffff8000392d: 31 ff                	xorl	%edi, %edi
ffffffff8000392f: 48 83 f9 40          	cmpq	$0x40, %rcx
ffffffff80003933: 40 0f 93 c7          	setae	%dil
ffffffff80003937: 41 b8 01 00 00 00    	movl	$0x1, %r8d
ffffffff8000393d: 49 d3 e0             	shlq	%cl, %r8
ffffffff80003940: 4d 31 44 f9 10       	xorq	%r8, 0x10(%r9,%rdi,8)
ffffffff80003945: 49 c7 45 08 00 00 00 00      	movq	$0x0, 0x8(%r13)
ffffffff8000394d: 49 89 75 10          	movq	%rsi, 0x10(%r13)
ffffffff80003951: 48 89 16             	movq	%rdx, (%rsi)
ffffffff80003954: 49 89 45 18          	movq	%rax, 0x18(%r13)
ffffffff80003958: 48 89 45 f8          	movq	%rax, -0x8(%rbp)
ffffffff8000395c: 4c 89 ef             	movq	%r13, %rdi
ffffffff8000395f: 48 89 de             	movq	%rbx, %rsi
ffffffff80003962: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff80003967: e8 b4 40 01 00       	callq	0xffffffff80017a20 <talc::talc::tag::Tag::write::h1e76d32195c79b2e>
ffffffff8000396c: 4c 89 74 24 18       	movq	%r14, 0x18(%rsp)
ffffffff80003971: 4d 39 fd             	cmpq	%r15, %r13
ffffffff80003974: 74 03                	je	0xffffffff80003979 <talc::talc::Talc<O>::malloc::ha1622a2b87738445+0x679>
ffffffff80003976: 4d 89 2f             	movq	%r13, (%r15)
ffffffff80003979: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff8000397e: 48 83 c4 38          	addq	$0x38, %rsp
ffffffff80003982: 5b                   	popq	%rbx
ffffffff80003983: 41 5c                	popq	%r12
ffffffff80003985: 41 5d                	popq	%r13
ffffffff80003987: 41 5e                	popq	%r14
ffffffff80003989: 41 5f                	popq	%r15
ffffffff8000398b: 5d                   	popq	%rbp
ffffffff8000398c: c3                   	retq
ffffffff8000398d: cc                   	int3
ffffffff8000398e: cc                   	int3
ffffffff8000398f: cc                   	int3

ffffffff80003990 <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4>:
ffffffff80003990: 55                   	pushq	%rbp
ffffffff80003991: 41 57                	pushq	%r15
ffffffff80003993: 41 56                	pushq	%r14
ffffffff80003995: 41 55                	pushq	%r13
ffffffff80003997: 41 54                	pushq	%r12
ffffffff80003999: 53                   	pushq	%rbx
ffffffff8000399a: 50                   	pushq	%rax
ffffffff8000399b: 4c 89 c3             	movq	%r8, %rbx
ffffffff8000399e: 49 89 f7             	movq	%rsi, %r15
ffffffff800039a1: 49 89 fe             	movq	%rdi, %r14
ffffffff800039a4: 48 8d 3c 31          	leaq	(%rcx,%rsi), %rdi
ffffffff800039a8: e8 63 40 01 00       	callq	0xffffffff80017a10 <talc::ptr_utils::align_up::h3dc09199da0d2fc9>
ffffffff800039ad: 48 8b 28             	movq	(%rax), %rbp
ffffffff800039b0: 48 39 c5             	cmpq	%rax, %rbp
ffffffff800039b3: 76 06                	jbe	0xffffffff800039bb <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0x2b>
ffffffff800039b5: 4c 8b 6d 00          	movq	(%rbp), %r13
ffffffff800039b9: eb 06                	jmp	0xffffffff800039c1 <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0x31>
ffffffff800039bb: 49 89 ed             	movq	%rbp, %r13
ffffffff800039be: 48 89 c5             	movq	%rax, %rbp
ffffffff800039c1: 4c 89 ef             	movq	%r13, %rdi
ffffffff800039c4: e8 67 40 01 00       	callq	0xffffffff80017a30 <talc::ptr_utils::align_down::h6c85a3b2ada70f65>
ffffffff800039c9: 49 89 c4             	movq	%rax, %r12
ffffffff800039cc: 49 01 df             	addq	%rbx, %r15
ffffffff800039cf: 4c 89 ff             	movq	%r15, %rdi
ffffffff800039d2: e8 39 40 01 00       	callq	0xffffffff80017a10 <talc::ptr_utils::align_up::h3dc09199da0d2fc9>
ffffffff800039d7: 48 89 c3             	movq	%rax, %rbx
ffffffff800039da: 4d 8d 7c 24 10       	leaq	0x10(%r12), %r15
ffffffff800039df: 4c 39 f8             	cmpq	%r15, %rax
ffffffff800039e2: 4c 0f 43 f8          	cmovaeq	%rax, %r15
ffffffff800039e6: 48 89 e8             	movq	%rbp, %rax
ffffffff800039e9: 4c 29 f8             	subq	%r15, %rax
ffffffff800039ec: 48 83 f8 18          	cmpq	$0x18, %rax
ffffffff800039f0: 72 29                	jb	0xffffffff80003a1b <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0x8b>
ffffffff800039f2: 48 8d 45 08          	leaq	0x8(%rbp), %rax
ffffffff800039f6: 49 8d 57 08          	leaq	0x8(%r15), %rdx
ffffffff800039fa: 41 f6 c5 02          	testb	$0x2, %r13b
ffffffff800039fe: 0f 84 a5 00 00 00    	je	0xffffffff80003aa9 <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0x119>
ffffffff80003a04: 48 8b 75 18          	movq	0x18(%rbp), %rsi
ffffffff80003a08: 48 81 fe 00 01 00 00 	cmpq	$0x100, %rsi            # imm = 0x100
ffffffff80003a0f: 73 1b                	jae	0xffffffff80003a2c <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0x9c>
ffffffff80003a11: 48 8d 4e e8          	leaq	-0x18(%rsi), %rcx
ffffffff80003a15: 48 c1 e9 03          	shrq	$0x3, %rcx
ffffffff80003a19: eb 54                	jmp	0xffffffff80003a6f <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0xdf>
ffffffff80003a1b: 49 89 ef             	movq	%rbp, %r15
ffffffff80003a1e: 49 39 df             	cmpq	%rbx, %r15
ffffffff80003a21: 0f 85 48 01 00 00    	jne	0xffffffff80003b6f <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0x1df>
ffffffff80003a27: e9 46 01 00 00       	jmp	0xffffffff80003b72 <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0x1e2>
ffffffff80003a2c: 48 81 fe 00 02 00 00 	cmpq	$0x200, %rsi            # imm = 0x200
ffffffff80003a33: 73 0d                	jae	0xffffffff80003a42 <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0xb2>
ffffffff80003a35: 48 89 f1             	movq	%rsi, %rcx
ffffffff80003a38: 48 c1 e9 04          	shrq	$0x4, %rcx
ffffffff80003a3c: 48 83 c1 0d          	addq	$0xd, %rcx
ffffffff80003a40: eb 2d                	jmp	0xffffffff80003a6f <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0xdf>
ffffffff80003a42: 48 0f bd fe          	bsrq	%rsi, %rdi
ffffffff80003a46: 48 83 f7 3f          	xorq	$0x3f, %rdi
ffffffff80003a4a: b1 3d                	movb	$0x3d, %cl
ffffffff80003a4c: 40 28 f9             	subb	%dil, %cl
ffffffff80003a4f: 49 89 f0             	movq	%rsi, %r8
ffffffff80003a52: 49 d3 e8             	shrq	%cl, %r8
ffffffff80003a55: c1 e7 02             	shll	$0x2, %edi
ffffffff80003a58: 49 29 f8             	subq	%rdi, %r8
ffffffff80003a5b: 49 81 c0 01 01 00 00 	addq	$0x101, %r8             # imm = 0x101
ffffffff80003a62: 49 83 f8 7f          	cmpq	$0x7f, %r8
ffffffff80003a66: b9 7f 00 00 00       	movl	$0x7f, %ecx
ffffffff80003a6b: 49 0f 42 c8          	cmovbq	%r8, %rcx
ffffffff80003a6f: 48 8b 7d 08          	movq	0x8(%rbp), %rdi
ffffffff80003a73: 4c 8b 45 10          	movq	0x10(%rbp), %r8
ffffffff80003a77: 49 89 38             	movq	%rdi, (%r8)
ffffffff80003a7a: 48 85 ff             	testq	%rdi, %rdi
ffffffff80003a7d: 74 04                	je	0xffffffff80003a83 <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0xf3>
ffffffff80003a7f: 4c 89 47 08          	movq	%r8, 0x8(%rdi)
ffffffff80003a83: 49 8b 7e 20          	movq	0x20(%r14), %rdi
ffffffff80003a87: 48 83 3c cf 00       	cmpq	$0x0, (%rdi,%rcx,8)
ffffffff80003a8c: 75 18                	jne	0xffffffff80003aa6 <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0x116>
ffffffff80003a8e: 31 ff                	xorl	%edi, %edi
ffffffff80003a90: 48 83 f9 40          	cmpq	$0x40, %rcx
ffffffff80003a94: 40 0f 93 c7          	setae	%dil
ffffffff80003a98: 41 b8 01 00 00 00    	movl	$0x1, %r8d
ffffffff80003a9e: 49 d3 e0             	shlq	%cl, %r8
ffffffff80003aa1: 4d 31 44 fe 10       	xorq	%r8, 0x10(%r14,%rdi,8)
ffffffff80003aa6: 48 01 f0             	addq	%rsi, %rax
ffffffff80003aa9: 48 89 c6             	movq	%rax, %rsi
ffffffff80003aac: 48 29 d6             	subq	%rdx, %rsi
ffffffff80003aaf: 48 81 fe 00 01 00 00 	cmpq	$0x100, %rsi            # imm = 0x100
ffffffff80003ab6: 73 0a                	jae	0xffffffff80003ac2 <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0x132>
ffffffff80003ab8: 48 8d 4e e8          	leaq	-0x18(%rsi), %rcx
ffffffff80003abc: 48 c1 e9 03          	shrq	$0x3, %rcx
ffffffff80003ac0: eb 43                	jmp	0xffffffff80003b05 <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0x175>
ffffffff80003ac2: 48 81 fe 00 02 00 00 	cmpq	$0x200, %rsi            # imm = 0x200
ffffffff80003ac9: 73 0d                	jae	0xffffffff80003ad8 <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0x148>
ffffffff80003acb: 48 89 f1             	movq	%rsi, %rcx
ffffffff80003ace: 48 c1 e9 04          	shrq	$0x4, %rcx
ffffffff80003ad2: 48 83 c1 0d          	addq	$0xd, %rcx
ffffffff80003ad6: eb 2d                	jmp	0xffffffff80003b05 <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0x175>
ffffffff80003ad8: 48 0f bd fe          	bsrq	%rsi, %rdi
ffffffff80003adc: 48 83 f7 3f          	xorq	$0x3f, %rdi
ffffffff80003ae0: b1 3d                	movb	$0x3d, %cl
ffffffff80003ae2: 40 28 f9             	subb	%dil, %cl
ffffffff80003ae5: 49 89 f0             	movq	%rsi, %r8
ffffffff80003ae8: 49 d3 e8             	shrq	%cl, %r8
ffffffff80003aeb: c1 e7 02             	shll	$0x2, %edi
ffffffff80003aee: 49 29 f8             	subq	%rdi, %r8
ffffffff80003af1: 49 81 c0 01 01 00 00 	addq	$0x101, %r8             # imm = 0x101
ffffffff80003af8: 49 83 f8 7f          	cmpq	$0x7f, %r8
ffffffff80003afc: b9 7f 00 00 00       	movl	$0x7f, %ecx
ffffffff80003b01: 49 0f 42 c8          	cmovbq	%r8, %rcx
ffffffff80003b05: 4d 8b 46 20          	movq	0x20(%r14), %r8
ffffffff80003b09: 49 8d 3c c8          	leaq	(%r8,%rcx,8), %rdi
ffffffff80003b0d: 4d 8b 04 c8          	movq	(%r8,%rcx,8), %r8
ffffffff80003b11: 4d 85 c0             	testq	%r8, %r8
ffffffff80003b14: 74 14                	je	0xffffffff80003b2a <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0x19a>
ffffffff80003b16: 4d 89 47 08          	movq	%r8, 0x8(%r15)
ffffffff80003b1a: 49 89 7f 10          	movq	%rdi, 0x10(%r15)
ffffffff80003b1e: 48 89 17             	movq	%rdx, (%rdi)
ffffffff80003b21: 49 83 c0 08          	addq	$0x8, %r8
ffffffff80003b25: 4c 89 c7             	movq	%r8, %rdi
ffffffff80003b28: eb 25                	jmp	0xffffffff80003b4f <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0x1bf>
ffffffff80003b2a: 45 31 c0             	xorl	%r8d, %r8d
ffffffff80003b2d: 48 83 f9 40          	cmpq	$0x40, %rcx
ffffffff80003b31: 41 0f 93 c0          	setae	%r8b
ffffffff80003b35: 41 b9 01 00 00 00    	movl	$0x1, %r9d
ffffffff80003b3b: 49 d3 e1             	shlq	%cl, %r9
ffffffff80003b3e: 4f 31 4c c6 10       	xorq	%r9, 0x10(%r14,%r8,8)
ffffffff80003b43: 49 c7 47 08 00 00 00 00      	movq	$0x0, 0x8(%r15)
ffffffff80003b4b: 49 89 7f 10          	movq	%rdi, 0x10(%r15)
ffffffff80003b4f: 48 89 17             	movq	%rdx, (%rdi)
ffffffff80003b52: 49 89 77 18          	movq	%rsi, 0x18(%r15)
ffffffff80003b56: 48 89 70 f8          	movq	%rsi, -0x8(%rax)
ffffffff80003b5a: 4c 89 ff             	movq	%r15, %rdi
ffffffff80003b5d: 4c 89 e6             	movq	%r12, %rsi
ffffffff80003b60: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff80003b65: e8 b6 3e 01 00       	callq	0xffffffff80017a20 <talc::talc::tag::Tag::write::h1e76d32195c79b2e>
ffffffff80003b6a: 49 39 df             	cmpq	%rbx, %r15
ffffffff80003b6d: 74 03                	je	0xffffffff80003b72 <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4+0x1e2>
ffffffff80003b6f: 4c 89 3b             	movq	%r15, (%rbx)
ffffffff80003b72: 48 83 c4 08          	addq	$0x8, %rsp
ffffffff80003b76: 5b                   	popq	%rbx
ffffffff80003b77: 41 5c                	popq	%r12
ffffffff80003b79: 41 5d                	popq	%r13
ffffffff80003b7b: 41 5e                	popq	%r14
ffffffff80003b7d: 41 5f                	popq	%r15
ffffffff80003b7f: 5d                   	popq	%rbp
ffffffff80003b80: c3                   	retq
ffffffff80003b81: cc                   	int3
ffffffff80003b82: cc                   	int3
ffffffff80003b83: cc                   	int3
ffffffff80003b84: cc                   	int3
ffffffff80003b85: cc                   	int3
ffffffff80003b86: cc                   	int3
ffffffff80003b87: cc                   	int3
ffffffff80003b88: cc                   	int3
ffffffff80003b89: cc                   	int3
ffffffff80003b8a: cc                   	int3
ffffffff80003b8b: cc                   	int3
ffffffff80003b8c: cc                   	int3
ffffffff80003b8d: cc                   	int3
ffffffff80003b8e: cc                   	int3
ffffffff80003b8f: cc                   	int3

ffffffff80003b90 <alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert::h09af50fff71a14f9>:
ffffffff80003b90: 41 56                	pushq	%r14
ffffffff80003b92: 53                   	pushq	%rbx
ffffffff80003b93: 48 83 ec 38          	subq	$0x38, %rsp
ffffffff80003b97: 48 89 fb             	movq	%rdi, %rbx
ffffffff80003b9a: 48 83 7f 10 00       	cmpq	$0x0, 0x10(%rdi)
ffffffff80003b9f: 74 42                	je	0xffffffff80003be3 <alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert::h09af50fff71a14f9+0x53>
ffffffff80003ba1: 48 8d 43 10          	leaq	0x10(%rbx), %rax
ffffffff80003ba5: 48 8b 48 10          	movq	0x10(%rax), %rcx
ffffffff80003ba9: 48 89 4c 24 18       	movq	%rcx, 0x18(%rsp)
ffffffff80003bae: 48 8b 08             	movq	(%rax), %rcx
ffffffff80003bb1: 48 8b 40 08          	movq	0x8(%rax), %rax
ffffffff80003bb5: 48 89 44 24 10       	movq	%rax, 0x10(%rsp)
ffffffff80003bba: 48 89 4c 24 08       	movq	%rcx, 0x8(%rsp)
ffffffff80003bbf: 48 8b 53 08          	movq	0x8(%rbx), %rdx
ffffffff80003bc3: 4c 8d 43 28          	leaq	0x28(%rbx), %r8
ffffffff80003bc7: 48 8d 7c 24 20       	leaq	0x20(%rsp), %rdi
ffffffff80003bcc: 48 8d 74 24 08       	leaq	0x8(%rsp), %rsi
ffffffff80003bd1: 48 89 d9             	movq	%rbx, %rcx
ffffffff80003bd4: e8 a7 03 00 00       	callq	0xffffffff80003f80 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053>
ffffffff80003bd9: 4c 8b 33             	movq	(%rbx), %r14
ffffffff80003bdc: 48 8b 44 24 20       	movq	0x20(%rsp), %rax
ffffffff80003be1: eb 6e                	jmp	0xffffffff80003c51 <alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert::h09af50fff71a14f9+0xc1>
ffffffff80003be3: 4c 8b 33             	movq	(%rbx), %r14
ffffffff80003be6: 0f b6 05 f4 15 02 00 	movzbl	0x215f4(%rip), %eax     # 0xffffffff800251e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80003bed: b1 01                	movb	$0x1, %cl
ffffffff80003bef: 90                   	nop
ffffffff80003bf0: 31 c0                	xorl	%eax, %eax
ffffffff80003bf2: f0                   	lock
ffffffff80003bf3: 0f b0 0d 56 14 02 00 	cmpxchgb	%cl, 0x21456(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80003bfa: 75 06                	jne	0xffffffff80003c02 <alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert::h09af50fff71a14f9+0x72>
ffffffff80003bfc: eb 11                	jmp	0xffffffff80003c0f <alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert::h09af50fff71a14f9+0x7f>
ffffffff80003bfe: 66 90                	nop
ffffffff80003c00: f3 90                	pause
ffffffff80003c02: 0f b6 05 47 14 02 00 	movzbl	0x21447(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80003c09: 84 c0                	testb	%al, %al
ffffffff80003c0b: 75 f3                	jne	0xffffffff80003c00 <alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert::h09af50fff71a14f9+0x70>
ffffffff80003c0d: eb e1                	jmp	0xffffffff80003bf0 <alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert::h09af50fff71a14f9+0x60>
ffffffff80003c0f: be 08 00 00 00       	movl	$0x8, %esi
ffffffff80003c14: ba 68 00 00 00       	movl	$0x68, %edx
ffffffff80003c19: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff80003c20: e8 db f6 ff ff       	callq	0xffffffff80003300 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80003c25: c6 05 24 14 02 00 00 	movb	$0x0, 0x21424(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80003c2c: 48 85 c0             	testq	%rax, %rax
ffffffff80003c2f: 74 30                	je	0xffffffff80003c61 <alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert::h09af50fff71a14f9+0xd1>
ffffffff80003c31: 48 c7 00 00 00 00 00 	movq	$0x0, (%rax)
ffffffff80003c38: 49 89 06             	movq	%rax, (%r14)
ffffffff80003c3b: 49 c7 46 08 00 00 00 00      	movq	$0x0, 0x8(%r14)
ffffffff80003c43: 48 8b 4b 08          	movq	0x8(%rbx), %rcx
ffffffff80003c47: 66 c7 40 62 01 00    	movw	$0x1, 0x62(%rax)
ffffffff80003c4d: 48 89 48 08          	movq	%rcx, 0x8(%rax)
ffffffff80003c51: 49 ff 46 10          	incq	0x10(%r14)
ffffffff80003c55: 48 83 c0 64          	addq	$0x64, %rax
ffffffff80003c59: 48 83 c4 38          	addq	$0x38, %rsp
ffffffff80003c5d: 5b                   	popq	%rbx
ffffffff80003c5e: 41 5e                	popq	%r14
ffffffff80003c60: c3                   	retq
ffffffff80003c61: bf 08 00 00 00       	movl	$0x8, %edi
ffffffff80003c66: be 68 00 00 00       	movl	$0x68, %esi
ffffffff80003c6b: e8 f2 53 01 00       	callq	0xffffffff80019062 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>

ffffffff80003c70 <alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert::h3ca3ac26a9d75275>:
ffffffff80003c70: 41 57                	pushq	%r15
ffffffff80003c72: 41 56                	pushq	%r14
ffffffff80003c74: 53                   	pushq	%rbx
ffffffff80003c75: 48 83 ec 30          	subq	$0x30, %rsp
ffffffff80003c79: 49 89 f6             	movq	%rsi, %r14
ffffffff80003c7c: 48 89 fb             	movq	%rdi, %rbx
ffffffff80003c7f: 48 83 7f 08 00       	cmpq	$0x0, 0x8(%rdi)
ffffffff80003c84: 74 46                	je	0xffffffff80003ccc <alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert::h3ca3ac26a9d75275+0x5c>
ffffffff80003c86: 48 8d 43 08          	leaq	0x8(%rbx), %rax
ffffffff80003c8a: 48 8b 48 10          	movq	0x10(%rax), %rcx
ffffffff80003c8e: 48 89 4c 24 10       	movq	%rcx, 0x10(%rsp)
ffffffff80003c93: 48 8b 08             	movq	(%rax), %rcx
ffffffff80003c96: 48 8b 40 08          	movq	0x8(%rax), %rax
ffffffff80003c9a: 48 89 44 24 08       	movq	%rax, 0x8(%rsp)
ffffffff80003c9f: 48 89 0c 24          	movq	%rcx, (%rsp)
ffffffff80003ca3: 8b 53 20             	movl	0x20(%rbx), %edx
ffffffff80003ca6: 4c 8d 4b 24          	leaq	0x24(%rbx), %r9
ffffffff80003caa: 48 8d 7c 24 18       	leaq	0x18(%rsp), %rdi
ffffffff80003caf: 48 89 e6             	movq	%rsp, %rsi
ffffffff80003cb2: 4c 89 f1             	movq	%r14, %rcx
ffffffff80003cb5: 49 89 d8             	movq	%rbx, %r8
ffffffff80003cb8: e8 13 19 00 00       	callq	0xffffffff800055d0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392>
ffffffff80003cbd: 4c 8b 3b             	movq	(%rbx), %r15
ffffffff80003cc0: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff80003cc5: 48 8b 4c 24 28       	movq	0x28(%rsp), %rcx
ffffffff80003cca: eb 7c                	jmp	0xffffffff80003d48 <alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert::h3ca3ac26a9d75275+0xd8>
ffffffff80003ccc: 4c 8b 3b             	movq	(%rbx), %r15
ffffffff80003ccf: 0f b6 05 0b 15 02 00 	movzbl	0x2150b(%rip), %eax     # 0xffffffff800251e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80003cd6: b1 01                	movb	$0x1, %cl
ffffffff80003cd8: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
ffffffff80003ce0: 31 c0                	xorl	%eax, %eax
ffffffff80003ce2: f0                   	lock
ffffffff80003ce3: 0f b0 0d 66 13 02 00 	cmpxchgb	%cl, 0x21366(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80003cea: 75 06                	jne	0xffffffff80003cf2 <alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert::h3ca3ac26a9d75275+0x82>
ffffffff80003cec: eb 11                	jmp	0xffffffff80003cff <alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert::h3ca3ac26a9d75275+0x8f>
ffffffff80003cee: 66 90                	nop
ffffffff80003cf0: f3 90                	pause
ffffffff80003cf2: 0f b6 05 57 13 02 00 	movzbl	0x21357(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80003cf9: 84 c0                	testb	%al, %al
ffffffff80003cfb: 75 f3                	jne	0xffffffff80003cf0 <alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert::h3ca3ac26a9d75275+0x80>
ffffffff80003cfd: eb e1                	jmp	0xffffffff80003ce0 <alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert::h3ca3ac26a9d75275+0x70>
ffffffff80003cff: be 08 00 00 00       	movl	$0x8, %esi
ffffffff80003d04: ba 90 00 00 00       	movl	$0x90, %edx
ffffffff80003d09: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff80003d10: e8 eb f5 ff ff       	callq	0xffffffff80003300 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80003d15: c6 05 34 13 02 00 00 	movb	$0x0, 0x21334(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80003d1c: 48 85 c0             	testq	%rax, %rax
ffffffff80003d1f: 74 3d                	je	0xffffffff80003d5e <alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert::h3ca3ac26a9d75275+0xee>
ffffffff80003d21: 48 c7 00 00 00 00 00 	movq	$0x0, (%rax)
ffffffff80003d28: 49 89 07             	movq	%rax, (%r15)
ffffffff80003d2b: 49 c7 47 08 00 00 00 00      	movq	$0x0, 0x8(%r15)
ffffffff80003d33: 8b 4b 20             	movl	0x20(%rbx), %ecx
ffffffff80003d36: 66 c7 80 8e 00 00 00 01 00   	movw	$0x1, 0x8e(%rax)
ffffffff80003d3f: 89 48 60             	movl	%ecx, 0x60(%rax)
ffffffff80003d42: 4c 89 70 08          	movq	%r14, 0x8(%rax)
ffffffff80003d46: 31 c9                	xorl	%ecx, %ecx
ffffffff80003d48: 49 ff 47 10          	incq	0x10(%r15)
ffffffff80003d4c: 48 8d 04 c8          	leaq	(%rax,%rcx,8), %rax
ffffffff80003d50: 48 83 c0 08          	addq	$0x8, %rax
ffffffff80003d54: 48 83 c4 30          	addq	$0x30, %rsp
ffffffff80003d58: 5b                   	popq	%rbx
ffffffff80003d59: 41 5e                	popq	%r14
ffffffff80003d5b: 41 5f                	popq	%r15
ffffffff80003d5d: c3                   	retq
ffffffff80003d5e: bf 08 00 00 00       	movl	$0x8, %edi
ffffffff80003d63: be 90 00 00 00       	movl	$0x90, %esi
ffffffff80003d68: e8 f5 52 01 00       	callq	0xffffffff80019062 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff80003d6d: cc                   	int3
ffffffff80003d6e: cc                   	int3
ffffffff80003d6f: cc                   	int3

ffffffff80003d70 <alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert::h78b76f7f376ae27e>:
ffffffff80003d70: 41 57                	pushq	%r15
ffffffff80003d72: 41 56                	pushq	%r14
ffffffff80003d74: 41 54                	pushq	%r12
ffffffff80003d76: 53                   	pushq	%rbx
ffffffff80003d77: 48 83 ec 38          	subq	$0x38, %rsp
ffffffff80003d7b: 48 89 f3             	movq	%rsi, %rbx
ffffffff80003d7e: 49 89 fe             	movq	%rdi, %r14
ffffffff80003d81: 48 83 7f 08 00       	cmpq	$0x0, 0x8(%rdi)
ffffffff80003d86: 74 4d                	je	0xffffffff80003dd5 <alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert::h78b76f7f376ae27e+0x65>
ffffffff80003d88: 49 8d 46 08          	leaq	0x8(%r14), %rax
ffffffff80003d8c: 48 8b 48 10          	movq	0x10(%rax), %rcx
ffffffff80003d90: 48 89 4c 24 18       	movq	%rcx, 0x18(%rsp)
ffffffff80003d95: 48 8b 08             	movq	(%rax), %rcx
ffffffff80003d98: 48 8b 40 08          	movq	0x8(%rax), %rax
ffffffff80003d9c: 48 89 44 24 10       	movq	%rax, 0x10(%rsp)
ffffffff80003da1: 48 89 4c 24 08       	movq	%rcx, 0x8(%rsp)
ffffffff80003da6: 41 8b 56 20          	movl	0x20(%r14), %edx
ffffffff80003daa: 4d 8d 4e 24          	leaq	0x24(%r14), %r9
ffffffff80003dae: 48 8d 7c 24 20       	leaq	0x20(%rsp), %rdi
ffffffff80003db3: 48 8d 74 24 08       	leaq	0x8(%rsp), %rsi
ffffffff80003db8: 48 89 d9             	movq	%rbx, %rcx
ffffffff80003dbb: 4d 89 f0             	movq	%r14, %r8
ffffffff80003dbe: e8 3d 0a 00 00       	callq	0xffffffff80004800 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe>
ffffffff80003dc3: 4d 8b 26             	movq	(%r14), %r12
ffffffff80003dc6: 4c 8b 7c 24 20       	movq	0x20(%rsp), %r15
ffffffff80003dcb: 48 8b 44 24 30       	movq	0x30(%rsp), %rax
ffffffff80003dd0: e9 9f 00 00 00       	jmp	0xffffffff80003e74 <alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert::h78b76f7f376ae27e+0x104>
ffffffff80003dd5: 4d 8b 26             	movq	(%r14), %r12
ffffffff80003dd8: 0f b6 05 02 14 02 00 	movzbl	0x21402(%rip), %eax     # 0xffffffff800251e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80003ddf: b1 01                	movb	$0x1, %cl
ffffffff80003de1: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
ffffffff80003df0: 31 c0                	xorl	%eax, %eax
ffffffff80003df2: f0                   	lock
ffffffff80003df3: 0f b0 0d 56 12 02 00 	cmpxchgb	%cl, 0x21256(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80003dfa: 75 06                	jne	0xffffffff80003e02 <alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert::h78b76f7f376ae27e+0x92>
ffffffff80003dfc: eb 11                	jmp	0xffffffff80003e0f <alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert::h78b76f7f376ae27e+0x9f>
ffffffff80003dfe: 66 90                	nop
ffffffff80003e00: f3 90                	pause
ffffffff80003e02: 0f b6 05 47 12 02 00 	movzbl	0x21247(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80003e09: 84 c0                	testb	%al, %al
ffffffff80003e0b: 75 f3                	jne	0xffffffff80003e00 <alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert::h78b76f7f376ae27e+0x90>
ffffffff80003e0d: eb e1                	jmp	0xffffffff80003df0 <alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert::h78b76f7f376ae27e+0x80>
ffffffff80003e0f: be 08 00 00 00       	movl	$0x8, %esi
ffffffff80003e14: ba d8 09 00 00       	movl	$0x9d8, %edx            # imm = 0x9D8
ffffffff80003e19: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff80003e20: e8 db f4 ff ff       	callq	0xffffffff80003300 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80003e25: c6 05 24 12 02 00 00 	movb	$0x0, 0x21224(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80003e2c: 48 85 c0             	testq	%rax, %rax
ffffffff80003e2f: 74 5e                	je	0xffffffff80003e8f <alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert::h78b76f7f376ae27e+0x11f>
ffffffff80003e31: 49 89 c7             	movq	%rax, %r15
ffffffff80003e34: 48 c7 80 a0 09 00 00 00 00 00 00     	movq	$0x0, 0x9a0(%rax)
ffffffff80003e3f: 49 89 04 24          	movq	%rax, (%r12)
ffffffff80003e43: 49 c7 44 24 08 00 00 00 00   	movq	$0x0, 0x8(%r12)
ffffffff80003e4c: 41 8b 46 20          	movl	0x20(%r14), %eax
ffffffff80003e50: 66 41 c7 87 d6 09 00 00 01 00	movw	$0x1, 0x9d6(%r15)
ffffffff80003e5a: 41 89 87 a8 09 00 00 	movl	%eax, 0x9a8(%r15)
ffffffff80003e61: ba e0 00 00 00       	movl	$0xe0, %edx
ffffffff80003e66: 4c 89 ff             	movq	%r15, %rdi
ffffffff80003e69: 48 89 de             	movq	%rbx, %rsi
ffffffff80003e6c: ff 15 ae 25 03 00    	callq	*0x325ae(%rip)          # 0xffffffff80036420
ffffffff80003e72: 31 c0                	xorl	%eax, %eax
ffffffff80003e74: 49 ff 44 24 10       	incq	0x10(%r12)
ffffffff80003e79: 48 69 c0 e0 00 00 00 	imulq	$0xe0, %rax, %rax
ffffffff80003e80: 4c 01 f8             	addq	%r15, %rax
ffffffff80003e83: 48 83 c4 38          	addq	$0x38, %rsp
ffffffff80003e87: 5b                   	popq	%rbx
ffffffff80003e88: 41 5c                	popq	%r12
ffffffff80003e8a: 41 5e                	popq	%r14
ffffffff80003e8c: 41 5f                	popq	%r15
ffffffff80003e8e: c3                   	retq
ffffffff80003e8f: bf 08 00 00 00       	movl	$0x8, %edi
ffffffff80003e94: be d8 09 00 00       	movl	$0x9d8, %esi            # imm = 0x9D8
ffffffff80003e99: e8 c4 51 01 00       	callq	0xffffffff80019062 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff80003e9e: cc                   	int3
ffffffff80003e9f: cc                   	int3

ffffffff80003ea0 <alloc::collections::btree::map::entry::OccupiedEntry<K,V,A>::remove_kv::ha3f2fcf3897ae665>:
ffffffff80003ea0: 41 57                	pushq	%r15
ffffffff80003ea2: 41 56                	pushq	%r14
ffffffff80003ea4: 53                   	pushq	%rbx
ffffffff80003ea5: 48 83 ec 30          	subq	$0x30, %rsp
ffffffff80003ea9: 49 89 ff             	movq	%rdi, %r15
ffffffff80003eac: c6 44 24 07 00       	movb	$0x0, 0x7(%rsp)
ffffffff80003eb1: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff80003eb6: 48 8d 54 24 07       	leaq	0x7(%rsp), %rdx
ffffffff80003ebb: 4c 89 fe             	movq	%r15, %rsi
ffffffff80003ebe: e8 dd 49 00 00       	callq	0xffffffff800088a0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7>
ffffffff80003ec3: 8b 5c 24 08          	movl	0x8(%rsp), %ebx
ffffffff80003ec7: 4c 8b 74 24 10       	movq	0x10(%rsp), %r14
ffffffff80003ecc: 49 8b 47 18          	movq	0x18(%r15), %rax
ffffffff80003ed0: 48 ff 48 10          	decq	0x10(%rax)
ffffffff80003ed4: 80 7c 24 07 00       	cmpb	$0x0, 0x7(%rsp)
ffffffff80003ed9: 74 6c                	je	0xffffffff80003f47 <alloc::collections::btree::map::entry::OccupiedEntry<K,V,A>::remove_kv::ha3f2fcf3897ae665+0xa7>
ffffffff80003edb: 48 8b 30             	movq	(%rax), %rsi
ffffffff80003ede: 48 85 f6             	testq	%rsi, %rsi
ffffffff80003ee1: 0f 84 87 00 00 00    	je	0xffffffff80003f6e <alloc::collections::btree::map::entry::OccupiedEntry<K,V,A>::remove_kv::ha3f2fcf3897ae665+0xce>
ffffffff80003ee7: 48 8b 48 08          	movq	0x8(%rax), %rcx
ffffffff80003eeb: 48 85 c9             	testq	%rcx, %rcx
ffffffff80003eee: 74 66                	je	0xffffffff80003f56 <alloc::collections::btree::map::entry::OccupiedEntry<K,V,A>::remove_kv::ha3f2fcf3897ae665+0xb6>
ffffffff80003ef0: 48 8b 96 90 00 00 00 	movq	0x90(%rsi), %rdx
ffffffff80003ef7: 48 89 10             	movq	%rdx, (%rax)
ffffffff80003efa: 48 ff c9             	decq	%rcx
ffffffff80003efd: 48 89 48 08          	movq	%rcx, 0x8(%rax)
ffffffff80003f01: 48 c7 02 00 00 00 00 	movq	$0x0, (%rdx)
ffffffff80003f08: b1 01                	movb	$0x1, %cl
ffffffff80003f0a: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff80003f10: 31 c0                	xorl	%eax, %eax
ffffffff80003f12: f0                   	lock
ffffffff80003f13: 0f b0 0d 36 11 02 00 	cmpxchgb	%cl, 0x21136(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80003f1a: 75 06                	jne	0xffffffff80003f22 <alloc::collections::btree::map::entry::OccupiedEntry<K,V,A>::remove_kv::ha3f2fcf3897ae665+0x82>
ffffffff80003f1c: eb 11                	jmp	0xffffffff80003f2f <alloc::collections::btree::map::entry::OccupiedEntry<K,V,A>::remove_kv::ha3f2fcf3897ae665+0x8f>
ffffffff80003f1e: 66 90                	nop
ffffffff80003f20: f3 90                	pause
ffffffff80003f22: 0f b6 05 27 11 02 00 	movzbl	0x21127(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80003f29: 84 c0                	testb	%al, %al
ffffffff80003f2b: 75 f3                	jne	0xffffffff80003f20 <alloc::collections::btree::map::entry::OccupiedEntry<K,V,A>::remove_kv::ha3f2fcf3897ae665+0x80>
ffffffff80003f2d: eb e1                	jmp	0xffffffff80003f10 <alloc::collections::btree::map::entry::OccupiedEntry<K,V,A>::remove_kv::ha3f2fcf3897ae665+0x70>
ffffffff80003f2f: b9 f0 00 00 00       	movl	$0xf0, %ecx
ffffffff80003f34: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff80003f3b: e8 60 f1 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80003f40: c6 05 09 11 02 00 00 	movb	$0x0, 0x21109(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80003f47: 89 d8                	movl	%ebx, %eax
ffffffff80003f49: 4c 89 f2             	movq	%r14, %rdx
ffffffff80003f4c: 48 83 c4 30          	addq	$0x30, %rsp
ffffffff80003f50: 5b                   	popq	%rbx
ffffffff80003f51: 41 5e                	popq	%r14
ffffffff80003f53: 41 5f                	popq	%r15
ffffffff80003f55: c3                   	retq
ffffffff80003f56: be 21 00 00 00       	movl	$0x21, %esi
ffffffff80003f5b: 48 c7 c7 e8 df 01 80 	movq	$-0x7ffe2018, %rdi      # imm = 0x8001DFE8
ffffffff80003f62: 48 c7 c2 10 e0 01 80 	movq	$-0x7ffe1ff0, %rdx      # imm = 0x8001E010
ffffffff80003f69: e8 02 85 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80003f6e: 48 c7 c7 f8 dd 01 80 	movq	$-0x7ffe2208, %rdi      # imm = 0x8001DDF8
ffffffff80003f75: e8 f6 89 01 00       	callq	0xffffffff8001c970 <core::option::unwrap_failed::hd8ef34c781aa10a4>
ffffffff80003f7a: cc                   	int3
ffffffff80003f7b: cc                   	int3
ffffffff80003f7c: cc                   	int3
ffffffff80003f7d: cc                   	int3
ffffffff80003f7e: cc                   	int3
ffffffff80003f7f: cc                   	int3

ffffffff80003f80 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053>:
ffffffff80003f80: 55                   	pushq	%rbp
ffffffff80003f81: 41 57                	pushq	%r15
ffffffff80003f83: 41 56                	pushq	%r14
ffffffff80003f85: 41 55                	pushq	%r13
ffffffff80003f87: 41 54                	pushq	%r12
ffffffff80003f89: 53                   	pushq	%rbx
ffffffff80003f8a: 48 83 ec 78          	subq	$0x78, %rsp
ffffffff80003f8e: 49 89 fd             	movq	%rdi, %r13
ffffffff80003f91: 4c 8b 36             	movq	(%rsi), %r14
ffffffff80003f94: 41 0f b7 5e 62       	movzwl	0x62(%r14), %ebx
ffffffff80003f99: 48 83 fb 0b          	cmpq	$0xb, %rbx
ffffffff80003f9d: 73 50                	jae	0xffffffff80003fef <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x6f>
ffffffff80003f9f: 48 8b 6e 10          	movq	0x10(%rsi), %rbp
ffffffff80003fa3: 48 8d 4d 01          	leaq	0x1(%rbp), %rcx
ffffffff80003fa7: 48 39 d9             	cmpq	%rbx, %rcx
ffffffff80003faa: 77 2b                	ja	0xffffffff80003fd7 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x57>
ffffffff80003fac: 49 89 d4             	movq	%rdx, %r12
ffffffff80003faf: 49 8d 56 08          	leaq	0x8(%r14), %rdx
ffffffff80003fb3: 48 8d 04 ea          	leaq	(%rdx,%rbp,8), %rax
ffffffff80003fb7: 48 8d 3c ca          	leaq	(%rdx,%rcx,8), %rdi
ffffffff80003fbb: 48 89 da             	movq	%rbx, %rdx
ffffffff80003fbe: 48 29 ea             	subq	%rbp, %rdx
ffffffff80003fc1: 48 c1 e2 03          	shlq	$0x3, %rdx
ffffffff80003fc5: 49 89 f7             	movq	%rsi, %r15
ffffffff80003fc8: 48 89 c6             	movq	%rax, %rsi
ffffffff80003fcb: ff 15 57 24 03 00    	callq	*0x32457(%rip)          # 0xffffffff80036428
ffffffff80003fd1: 4c 89 e2             	movq	%r12, %rdx
ffffffff80003fd4: 4c 89 fe             	movq	%r15, %rsi
ffffffff80003fd7: ff c3                	incl	%ebx
ffffffff80003fd9: 49 89 54 ee 08       	movq	%rdx, 0x8(%r14,%rbp,8)
ffffffff80003fde: 66 41 89 5e 62       	movw	%bx, 0x62(%r14)
ffffffff80003fe3: 4c 8b 7e 08          	movq	0x8(%rsi), %r15
ffffffff80003fe7: 49 89 ec             	movq	%rbp, %r12
ffffffff80003fea: e9 85 07 00 00       	jmp	0xffffffff80004774 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x7f4>
ffffffff80003fef: 49 89 cc             	movq	%rcx, %r12
ffffffff80003ff2: 48 8b 6e 08          	movq	0x8(%rsi), %rbp
ffffffff80003ff6: 4c 8b 7e 10          	movq	0x10(%rsi), %r15
ffffffff80003ffa: 0f b6 05 e0 11 02 00 	movzbl	0x211e0(%rip), %eax     # 0xffffffff800251e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80004001: b1 01                	movb	$0x1, %cl
ffffffff80004003: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
ffffffff80004010: 31 c0                	xorl	%eax, %eax
ffffffff80004012: f0                   	lock
ffffffff80004013: 0f b0 0d 36 10 02 00 	cmpxchgb	%cl, 0x21036(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000401a: 75 06                	jne	0xffffffff80004022 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0xa2>
ffffffff8000401c: eb 11                	jmp	0xffffffff8000402f <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0xaf>
ffffffff8000401e: 66 90                	nop
ffffffff80004020: f3 90                	pause
ffffffff80004022: 0f b6 05 27 10 02 00 	movzbl	0x21027(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80004029: 84 c0                	testb	%al, %al
ffffffff8000402b: 75 f3                	jne	0xffffffff80004020 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0xa0>
ffffffff8000402d: eb e1                	jmp	0xffffffff80004010 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x90>
ffffffff8000402f: 48 89 54 24 18       	movq	%rdx, 0x18(%rsp)
ffffffff80004034: be 08 00 00 00       	movl	$0x8, %esi
ffffffff80004039: ba 68 00 00 00       	movl	$0x68, %edx
ffffffff8000403e: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff80004045: e8 b6 f2 ff ff       	callq	0xffffffff80003300 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff8000404a: c6 05 ff 0f 02 00 00 	movb	$0x0, 0x20fff(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80004051: 48 85 c0             	testq	%rax, %rax
ffffffff80004054: 0f 84 7c 07 00 00    	je	0xffffffff800047d6 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x856>
ffffffff8000405a: 48 c7 00 00 00 00 00 	movq	$0x0, (%rax)
ffffffff80004061: 66 c7 40 62 00 00    	movw	$0x0, 0x62(%rax)
ffffffff80004067: 49 83 ff 05          	cmpq	$0x5, %r15
ffffffff8000406b: 4c 89 64 24 30       	movq	%r12, 0x30(%rsp)
ffffffff80004070: 48 89 44 24 10       	movq	%rax, 0x10(%rsp)
ffffffff80004075: 73 30                	jae	0xffffffff800040a7 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x127>
ffffffff80004077: 41 0f b7 56 62       	movzwl	0x62(%r14), %edx
ffffffff8000407c: 48 83 c2 fb          	addq	$-0x5, %rdx
ffffffff80004080: 66 89 50 62          	movw	%dx, 0x62(%rax)
ffffffff80004084: 48 83 fa 0c          	cmpq	$0xc, %rdx
ffffffff80004088: 0f 83 1c 07 00 00    	jae	0xffffffff800047aa <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x82a>
ffffffff8000408e: 49 8d 7e 28          	leaq	0x28(%r14), %rdi
ffffffff80004092: 66 bb 04 00          	movw	$0x4, %bx
ffffffff80004096: be 30 00 00 00       	movl	$0x30, %esi
ffffffff8000409b: 48 89 2c 24          	movq	%rbp, (%rsp)
ffffffff8000409f: 4d 89 f4             	movq	%r14, %r12
ffffffff800040a2: e9 c7 00 00 00       	jmp	0xffffffff8000416e <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x1ee>
ffffffff800040a7: 74 36                	je	0xffffffff800040df <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x15f>
ffffffff800040a9: 49 83 ff 06          	cmpq	$0x6, %r15
ffffffff800040ad: 0f 85 88 00 00 00    	jne	0xffffffff8000413b <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x1bb>
ffffffff800040b3: 41 0f b7 56 62       	movzwl	0x62(%r14), %edx
ffffffff800040b8: 48 83 c2 fa          	addq	$-0x6, %rdx
ffffffff800040bc: 66 89 50 62          	movw	%dx, 0x62(%rax)
ffffffff800040c0: 48 83 fa 0c          	cmpq	$0xc, %rdx
ffffffff800040c4: 0f 83 e0 06 00 00    	jae	0xffffffff800047aa <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x82a>
ffffffff800040ca: 49 8d 7e 30          	leaq	0x30(%r14), %rdi
ffffffff800040ce: 66 bb 05 00          	movw	$0x5, %bx
ffffffff800040d2: be 38 00 00 00       	movl	$0x38, %esi
ffffffff800040d7: 45 31 ff             	xorl	%r15d, %r15d
ffffffff800040da: e9 84 00 00 00       	jmp	0xffffffff80004163 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x1e3>
ffffffff800040df: 41 0f b7 56 62       	movzwl	0x62(%r14), %edx
ffffffff800040e4: 48 83 c2 fa          	addq	$-0x6, %rdx
ffffffff800040e8: 66 89 50 62          	movw	%dx, 0x62(%rax)
ffffffff800040ec: 48 83 fa 0c          	cmpq	$0xc, %rdx
ffffffff800040f0: 0f 83 b4 06 00 00    	jae	0xffffffff800047aa <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x82a>
ffffffff800040f6: 49 8b 4e 30          	movq	0x30(%r14), %rcx
ffffffff800040fa: 48 89 4c 24 08       	movq	%rcx, 0x8(%rsp)
ffffffff800040ff: 48 89 c7             	movq	%rax, %rdi
ffffffff80004102: 48 83 c7 08          	addq	$0x8, %rdi
ffffffff80004106: 49 8d 76 38          	leaq	0x38(%r14), %rsi
ffffffff8000410a: 48 c1 e2 03          	shlq	$0x3, %rdx
ffffffff8000410e: ff 15 0c 23 03 00    	callq	*0x3230c(%rip)          # 0xffffffff80036420
ffffffff80004114: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff80004119: 49 89 46 30          	movq	%rax, 0x30(%r14)
ffffffff8000411d: 66 41 c7 46 62 06 00 	movw	$0x6, 0x62(%r14)
ffffffff80004124: b8 05 00 00 00       	movl	$0x5, %eax
ffffffff80004129: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff8000412e: 49 89 ef             	movq	%rbp, %r15
ffffffff80004131: 4c 89 74 24 20       	movq	%r14, 0x20(%rsp)
ffffffff80004136: e9 9d 00 00 00       	jmp	0xffffffff800041d8 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x258>
ffffffff8000413b: 41 0f b7 56 62       	movzwl	0x62(%r14), %edx
ffffffff80004140: 48 83 c2 f9          	addq	$-0x7, %rdx
ffffffff80004144: 66 89 50 62          	movw	%dx, 0x62(%rax)
ffffffff80004148: 48 83 fa 0c          	cmpq	$0xc, %rdx
ffffffff8000414c: 0f 83 58 06 00 00    	jae	0xffffffff800047aa <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x82a>
ffffffff80004152: 49 8d 7e 38          	leaq	0x38(%r14), %rdi
ffffffff80004156: 49 83 c7 f9          	addq	$-0x7, %r15
ffffffff8000415a: 66 bb 06 00          	movw	$0x6, %bx
ffffffff8000415e: be 40 00 00 00       	movl	$0x40, %esi
ffffffff80004163: 48 c7 04 24 00 00 00 00      	movq	$0x0, (%rsp)
ffffffff8000416b: 49 89 c4             	movq	%rax, %r12
ffffffff8000416e: 48 8b 0f             	movq	(%rdi), %rcx
ffffffff80004171: 48 89 4c 24 08       	movq	%rcx, 0x8(%rsp)
ffffffff80004176: 48 89 c7             	movq	%rax, %rdi
ffffffff80004179: 48 83 c7 08          	addq	$0x8, %rdi
ffffffff8000417d: 4c 01 f6             	addq	%r14, %rsi
ffffffff80004180: 48 c1 e2 03          	shlq	$0x3, %rdx
ffffffff80004184: ff 15 96 22 03 00    	callq	*0x32296(%rip)          # 0xffffffff80036420
ffffffff8000418a: 66 41 89 5e 62       	movw	%bx, 0x62(%r14)
ffffffff8000418f: 41 0f b7 5c 24 62    	movzwl	0x62(%r12), %ebx
ffffffff80004195: 48 89 da             	movq	%rbx, %rdx
ffffffff80004198: 4c 29 fa             	subq	%r15, %rdx
ffffffff8000419b: 76 1b                	jbe	0xffffffff800041b8 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x238>
ffffffff8000419d: 49 8d 44 24 08       	leaq	0x8(%r12), %rax
ffffffff800041a2: 4a 8d 34 f8          	leaq	(%rax,%r15,8), %rsi
ffffffff800041a6: 4a 8d 3c f8          	leaq	(%rax,%r15,8), %rdi
ffffffff800041aa: 48 83 c7 08          	addq	$0x8, %rdi
ffffffff800041ae: 48 c1 e2 03          	shlq	$0x3, %rdx
ffffffff800041b2: ff 15 70 22 03 00    	callq	*0x32270(%rip)          # 0xffffffff80036428
ffffffff800041b8: ff c3                	incl	%ebx
ffffffff800041ba: 4c 89 7c 24 28       	movq	%r15, 0x28(%rsp)
ffffffff800041bf: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff800041c4: 4b 89 44 fc 08       	movq	%rax, 0x8(%r12,%r15,8)
ffffffff800041c9: 4c 89 64 24 20       	movq	%r12, 0x20(%rsp)
ffffffff800041ce: 66 41 89 5c 24 62    	movw	%bx, 0x62(%r12)
ffffffff800041d4: 4c 8b 3c 24          	movq	(%rsp), %r15
ffffffff800041d8: 4c 89 6c 24 18       	movq	%r13, 0x18(%rsp)
ffffffff800041dd: 4d 8b 26             	movq	(%r14), %r12
ffffffff800041e0: 4d 85 e4             	testq	%r12, %r12
ffffffff800041e3: 4c 89 3c 24          	movq	%r15, (%rsp)
ffffffff800041e7: 0f 84 6e 03 00 00    	je	0xffffffff8000455b <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x5db>
ffffffff800041ed: 45 31 ed             	xorl	%r13d, %r13d
ffffffff800041f0: 48 8b 4c 24 10       	movq	0x10(%rsp), %rcx
ffffffff800041f5: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff80004200: 4c 39 ed             	cmpq	%r13, %rbp
ffffffff80004203: 0f 85 89 05 00 00    	jne	0xffffffff80004792 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x812>
ffffffff80004209: 45 0f b7 6e 60       	movzwl	0x60(%r14), %r13d
ffffffff8000420e: 45 0f b7 74 24 62    	movzwl	0x62(%r12), %r14d
ffffffff80004214: 49 83 fe 0b          	cmpq	$0xb, %r14
ffffffff80004218: 0f 82 17 04 00 00    	jb	0xffffffff80004635 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x6b5>
ffffffff8000421e: 48 ff c5             	incq	%rbp
ffffffff80004221: 66 41 83 fd 05       	cmpw	$0x5, %r13w
ffffffff80004226: 73 38                	jae	0xffffffff80004260 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x2e0>
ffffffff80004228: 48 89 4c 24 10       	movq	%rcx, 0x10(%rsp)
ffffffff8000422d: 4c 89 64 24 38       	movq	%r12, 0x38(%rsp)
ffffffff80004232: 48 89 6c 24 40       	movq	%rbp, 0x40(%rsp)
ffffffff80004237: 48 c7 44 24 48 04 00 00 00   	movq	$0x4, 0x48(%rsp)
ffffffff80004240: 48 8d 7c 24 50       	leaq	0x50(%rsp), %rdi
ffffffff80004245: 48 8d 74 24 38       	leaq	0x38(%rsp), %rsi
ffffffff8000424a: e8 51 23 00 00       	callq	0xffffffff800065a0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::hc2421bb864a2d4b1>
ffffffff8000424f: 4c 8b 74 24 50       	movq	0x50(%rsp), %r14
ffffffff80004254: e9 e2 00 00 00       	jmp	0xffffffff8000433b <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x3bb>
ffffffff80004259: 0f 1f 80 00 00 00 00 	nopl	(%rax)
ffffffff80004260: 49 83 fd 05          	cmpq	$0x5, %r13
ffffffff80004264: 74 1c                	je	0xffffffff80004282 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x302>
ffffffff80004266: 41 83 fd 06          	cmpl	$0x6, %r13d
ffffffff8000426a: 48 89 4c 24 10       	movq	%rcx, 0x10(%rsp)
ffffffff8000426f: 0f 85 9a 00 00 00    	jne	0xffffffff8000430f <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x38f>
ffffffff80004275: b8 05 00 00 00       	movl	$0x5, %eax
ffffffff8000427a: 45 31 ed             	xorl	%r13d, %r13d
ffffffff8000427d: e9 96 00 00 00       	jmp	0xffffffff80004318 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x398>
ffffffff80004282: 49 89 cd             	movq	%rcx, %r13
ffffffff80004285: 4c 89 64 24 38       	movq	%r12, 0x38(%rsp)
ffffffff8000428a: 48 89 6c 24 40       	movq	%rbp, 0x40(%rsp)
ffffffff8000428f: 48 c7 44 24 48 05 00 00 00   	movq	$0x5, 0x48(%rsp)
ffffffff80004298: 48 8d 7c 24 50       	leaq	0x50(%rsp), %rdi
ffffffff8000429d: 48 8d 74 24 38       	leaq	0x38(%rsp), %rsi
ffffffff800042a2: e8 f9 22 00 00       	callq	0xffffffff800065a0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::hc2421bb864a2d4b1>
ffffffff800042a7: 4c 8b 74 24 50       	movq	0x50(%rsp), %r14
ffffffff800042ac: 45 0f b7 66 62       	movzwl	0x62(%r14), %r12d
ffffffff800042b1: 41 8d 5c 24 01       	leal	0x1(%r12), %ebx
ffffffff800042b6: 49 83 fc 06          	cmpq	$0x6, %r12
ffffffff800042ba: 0f 82 b8 01 00 00    	jb	0xffffffff80004478 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x4f8>
ffffffff800042c0: 49 8d 76 30          	leaq	0x30(%r14), %rsi
ffffffff800042c4: 49 8d 7e 38          	leaq	0x38(%r14), %rdi
ffffffff800042c8: 4a 8d 2c e5 d8 ff ff ff      	leaq	-0x28(,%r12,8), %rbp
ffffffff800042d0: 48 89 ea             	movq	%rbp, %rdx
ffffffff800042d3: 4c 8b 3d 4e 21 03 00 	movq	0x3214e(%rip), %r15     # 0xffffffff80036428
ffffffff800042da: 41 ff d7             	callq	*%r15
ffffffff800042dd: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff800042e2: 49 89 46 30          	movq	%rax, 0x30(%r14)
ffffffff800042e6: 49 8d b6 98 00 00 00 	leaq	0x98(%r14), %rsi
ffffffff800042ed: 49 8d be a0 00 00 00 	leaq	0xa0(%r14), %rdi
ffffffff800042f4: 48 89 ea             	movq	%rbp, %rdx
ffffffff800042f7: 41 ff d7             	callq	*%r15
ffffffff800042fa: 4c 8b 3c 24          	movq	(%rsp), %r15
ffffffff800042fe: 4d 89 ae 98 00 00 00 	movq	%r13, 0x98(%r14)
ffffffff80004305: 66 41 89 5e 62       	movw	%bx, 0x62(%r14)
ffffffff8000430a: e9 88 01 00 00       	jmp	0xffffffff80004497 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x517>
ffffffff8000430f: 49 83 c5 f9          	addq	$-0x7, %r13
ffffffff80004313: b8 06 00 00 00       	movl	$0x6, %eax
ffffffff80004318: 4c 89 64 24 38       	movq	%r12, 0x38(%rsp)
ffffffff8000431d: 48 89 6c 24 40       	movq	%rbp, 0x40(%rsp)
ffffffff80004322: 48 89 44 24 48       	movq	%rax, 0x48(%rsp)
ffffffff80004327: 48 8d 7c 24 50       	leaq	0x50(%rsp), %rdi
ffffffff8000432c: 48 8d 74 24 38       	leaq	0x38(%rsp), %rsi
ffffffff80004331: e8 6a 22 00 00       	callq	0xffffffff800065a0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::hc2421bb864a2d4b1>
ffffffff80004336: 4c 8b 74 24 60       	movq	0x60(%rsp), %r14
ffffffff8000433b: 41 0f b7 5e 62       	movzwl	0x62(%r14), %ebx
ffffffff80004340: 4d 8d 65 01          	leaq	0x1(%r13), %r12
ffffffff80004344: 49 89 df             	movq	%rbx, %r15
ffffffff80004347: 4d 29 ef             	subq	%r13, %r15
ffffffff8000434a: 76 3a                	jbe	0xffffffff80004386 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x406>
ffffffff8000434c: 49 8d 46 08          	leaq	0x8(%r14), %rax
ffffffff80004350: 4b 8d 34 ee          	leaq	(%r14,%r13,8), %rsi
ffffffff80004354: 48 83 c6 08          	addq	$0x8, %rsi
ffffffff80004358: 4a 8d 3c e0          	leaq	(%rax,%r12,8), %rdi
ffffffff8000435c: 4a 8d 2c fd 00 00 00 00      	leaq	(,%r15,8), %rbp
ffffffff80004364: 48 89 ea             	movq	%rbp, %rdx
ffffffff80004367: ff 15 bb 20 03 00    	callq	*0x320bb(%rip)          # 0xffffffff80036428
ffffffff8000436d: 4b 8d 34 e6          	leaq	(%r14,%r12,8), %rsi
ffffffff80004371: 48 83 c6 68          	addq	$0x68, %rsi
ffffffff80004375: 4b 8d 3c ee          	leaq	(%r14,%r13,8), %rdi
ffffffff80004379: 48 83 c7 78          	addq	$0x78, %rdi
ffffffff8000437d: 48 89 ea             	movq	%rbp, %rdx
ffffffff80004380: ff 15 a2 20 03 00    	callq	*0x320a2(%rip)          # 0xffffffff80036428
ffffffff80004386: 8d 4b 01             	leal	0x1(%rbx), %ecx
ffffffff80004389: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff8000438e: 4b 89 44 ee 08       	movq	%rax, 0x8(%r14,%r13,8)
ffffffff80004393: 48 8d 43 02          	leaq	0x2(%rbx), %rax
ffffffff80004397: 48 8b 54 24 10       	movq	0x10(%rsp), %rdx
ffffffff8000439c: 4b 89 54 ee 70       	movq	%rdx, 0x70(%r14,%r13,8)
ffffffff800043a1: 66 41 89 4e 62       	movw	%cx, 0x62(%r14)
ffffffff800043a6: 49 39 c4             	cmpq	%rax, %r12
ffffffff800043a9: 0f 83 8d 00 00 00    	jae	0xffffffff8000443c <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x4bc>
ffffffff800043af: 44 29 eb             	subl	%r13d, %ebx
ffffffff800043b2: ff c3                	incl	%ebx
ffffffff800043b4: 83 e3 03             	andl	$0x3, %ebx
ffffffff800043b7: 74 31                	je	0xffffffff800043ea <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x46a>
ffffffff800043b9: 4b 8d 14 ee          	leaq	(%r14,%r13,8), %rdx
ffffffff800043bd: 48 83 c2 70          	addq	$0x70, %rdx
ffffffff800043c1: 31 c9                	xorl	%ecx, %ecx
ffffffff800043c3: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
ffffffff800043d0: 48 8b 34 ca          	movq	(%rdx,%rcx,8), %rsi
ffffffff800043d4: 4c 89 36             	movq	%r14, (%rsi)
ffffffff800043d7: 41 8d 3c 0c          	leal	(%r12,%rcx), %edi
ffffffff800043db: 66 89 7e 60          	movw	%di, 0x60(%rsi)
ffffffff800043df: 48 ff c1             	incq	%rcx
ffffffff800043e2: 48 39 cb             	cmpq	%rcx, %rbx
ffffffff800043e5: 75 e9                	jne	0xffffffff800043d0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x450>
ffffffff800043e7: 49 01 cc             	addq	%rcx, %r12
ffffffff800043ea: 49 83 ff 03          	cmpq	$0x3, %r15
ffffffff800043ee: 72 4c                	jb	0xffffffff8000443c <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x4bc>
ffffffff800043f0: 4b 8b 4c e6 68       	movq	0x68(%r14,%r12,8), %rcx
ffffffff800043f5: 4c 89 31             	movq	%r14, (%rcx)
ffffffff800043f8: 66 44 89 61 60       	movw	%r12w, 0x60(%rcx)
ffffffff800043fd: 4b 8b 4c e6 70       	movq	0x70(%r14,%r12,8), %rcx
ffffffff80004402: 4c 89 31             	movq	%r14, (%rcx)
ffffffff80004405: 41 8d 54 24 01       	leal	0x1(%r12), %edx
ffffffff8000440a: 66 89 51 60          	movw	%dx, 0x60(%rcx)
ffffffff8000440e: 4b 8b 4c e6 78       	movq	0x78(%r14,%r12,8), %rcx
ffffffff80004413: 4c 89 31             	movq	%r14, (%rcx)
ffffffff80004416: 41 8d 54 24 02       	leal	0x2(%r12), %edx
ffffffff8000441b: 66 89 51 60          	movw	%dx, 0x60(%rcx)
ffffffff8000441f: 4b 8b 8c e6 80 00 00 00      	movq	0x80(%r14,%r12,8), %rcx
ffffffff80004427: 4c 89 31             	movq	%r14, (%rcx)
ffffffff8000442a: 41 8d 54 24 03       	leal	0x3(%r12), %edx
ffffffff8000442f: 66 89 51 60          	movw	%dx, 0x60(%rcx)
ffffffff80004433: 49 83 c4 04          	addq	$0x4, %r12
ffffffff80004437: 49 39 c4             	cmpq	%rax, %r12
ffffffff8000443a: 75 b4                	jne	0xffffffff800043f0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x470>
ffffffff8000443c: 4c 8b 74 24 50       	movq	0x50(%rsp), %r14
ffffffff80004441: 4d 85 f6             	testq	%r14, %r14
ffffffff80004444: 0f 84 17 03 00 00    	je	0xffffffff80004761 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x7e1>
ffffffff8000444a: 48 8b 6c 24 58       	movq	0x58(%rsp), %rbp
ffffffff8000444f: 48 8b 4c 24 60       	movq	0x60(%rsp), %rcx
ffffffff80004454: 4c 8b 6c 24 68       	movq	0x68(%rsp), %r13
ffffffff80004459: 48 8b 44 24 70       	movq	0x70(%rsp), %rax
ffffffff8000445e: 48 89 44 24 08       	movq	%rax, 0x8(%rsp)
ffffffff80004463: 4c 8b 3c 24          	movq	(%rsp), %r15
ffffffff80004467: 4d 8b 26             	movq	(%r14), %r12
ffffffff8000446a: 4d 85 e4             	testq	%r12, %r12
ffffffff8000446d: 0f 85 8d fd ff ff    	jne	0xffffffff80004200 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x280>
ffffffff80004473: e9 eb 00 00 00       	jmp	0xffffffff80004563 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x5e3>
ffffffff80004478: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff8000447d: 49 89 46 30          	movq	%rax, 0x30(%r14)
ffffffff80004481: 4d 89 ae 98 00 00 00 	movq	%r13, 0x98(%r14)
ffffffff80004488: 66 41 89 5e 62       	movw	%bx, 0x62(%r14)
ffffffff8000448d: 41 83 fc 05          	cmpl	$0x5, %r12d
ffffffff80004491: 0f 85 9d 00 00 00    	jne	0xffffffff80004534 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x5b4>
ffffffff80004497: 49 8d 4c 24 fb       	leaq	-0x5(%r12), %rcx
ffffffff8000449c: b8 06 00 00 00       	movl	$0x6, %eax
ffffffff800044a1: 48 83 f9 03          	cmpq	$0x3, %rcx
ffffffff800044a5: 72 68                	jb	0xffffffff8000450f <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x58f>
ffffffff800044a7: 44 89 e1             	movl	%r12d, %ecx
ffffffff800044aa: 83 e1 fc             	andl	$-0x4, %ecx
ffffffff800044ad: 48 83 c1 f8          	addq	$-0x8, %rcx
ffffffff800044b1: b8 16 00 00 00       	movl	$0x16, %eax
ffffffff800044b6: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
ffffffff800044c0: 48 89 c2             	movq	%rax, %rdx
ffffffff800044c3: 49 8b 44 c6 e8       	movq	-0x18(%r14,%rax,8), %rax
ffffffff800044c8: 4c 89 30             	movq	%r14, (%rax)
ffffffff800044cb: 8d 72 f0             	leal	-0x10(%rdx), %esi
ffffffff800044ce: 66 89 70 60          	movw	%si, 0x60(%rax)
ffffffff800044d2: 49 8b 44 d6 f0       	movq	-0x10(%r14,%rdx,8), %rax
ffffffff800044d7: 4c 89 30             	movq	%r14, (%rax)
ffffffff800044da: 8d 72 f1             	leal	-0xf(%rdx), %esi
ffffffff800044dd: 66 89 70 60          	movw	%si, 0x60(%rax)
ffffffff800044e1: 49 8b 44 d6 f8       	movq	-0x8(%r14,%rdx,8), %rax
ffffffff800044e6: 4c 89 30             	movq	%r14, (%rax)
ffffffff800044e9: 8d 72 f2             	leal	-0xe(%rdx), %esi
ffffffff800044ec: 66 89 70 60          	movw	%si, 0x60(%rax)
ffffffff800044f0: 49 8b 04 d6          	movq	(%r14,%rdx,8), %rax
ffffffff800044f4: 4c 89 30             	movq	%r14, (%rax)
ffffffff800044f7: 8d 72 f3             	leal	-0xd(%rdx), %esi
ffffffff800044fa: 66 89 70 60          	movw	%si, 0x60(%rax)
ffffffff800044fe: 48 8d 42 04          	leaq	0x4(%rdx), %rax
ffffffff80004502: 48 83 c2 ea          	addq	$-0x16, %rdx
ffffffff80004506: 48 39 ca             	cmpq	%rcx, %rdx
ffffffff80004509: 75 b5                	jne	0xffffffff800044c0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x540>
ffffffff8000450b: 48 83 c0 f0          	addq	$-0x10, %rax
ffffffff8000450f: 41 83 e4 03          	andl	$0x3, %r12d
ffffffff80004513: 74 1f                	je	0xffffffff80004534 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x5b4>
ffffffff80004515: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff80004520: 49 8b 4c c6 68       	movq	0x68(%r14,%rax,8), %rcx
ffffffff80004525: 4c 89 31             	movq	%r14, (%rcx)
ffffffff80004528: 66 89 41 60          	movw	%ax, 0x60(%rcx)
ffffffff8000452c: 48 ff c0             	incq	%rax
ffffffff8000452f: 49 ff cc             	decq	%r12
ffffffff80004532: 75 ec                	jne	0xffffffff80004520 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x5a0>
ffffffff80004534: 48 8b 6c 24 58       	movq	0x58(%rsp), %rbp
ffffffff80004539: 48 8b 4c 24 60       	movq	0x60(%rsp), %rcx
ffffffff8000453e: 4c 8b 6c 24 68       	movq	0x68(%rsp), %r13
ffffffff80004543: 48 8b 44 24 70       	movq	0x70(%rsp), %rax
ffffffff80004548: 48 89 44 24 08       	movq	%rax, 0x8(%rsp)
ffffffff8000454d: 4d 8b 26             	movq	(%r14), %r12
ffffffff80004550: 4d 85 e4             	testq	%r12, %r12
ffffffff80004553: 0f 85 a7 fc ff ff    	jne	0xffffffff80004200 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x280>
ffffffff80004559: eb 08                	jmp	0xffffffff80004563 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x5e3>
ffffffff8000455b: 45 31 ed             	xorl	%r13d, %r13d
ffffffff8000455e: 48 8b 4c 24 10       	movq	0x10(%rsp), %rcx
ffffffff80004563: 48 8b 44 24 30       	movq	0x30(%rsp), %rax
ffffffff80004568: 48 8b 18             	movq	(%rax), %rbx
ffffffff8000456b: 4c 8b 33             	movq	(%rbx), %r14
ffffffff8000456e: 4d 85 f6             	testq	%r14, %r14
ffffffff80004571: 0f 84 6e 02 00 00    	je	0xffffffff800047e5 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x865>
ffffffff80004577: 48 89 cd             	movq	%rcx, %rbp
ffffffff8000457a: 4c 8b 7b 08          	movq	0x8(%rbx), %r15
ffffffff8000457e: 0f b6 05 5c 0c 02 00 	movzbl	0x20c5c(%rip), %eax     # 0xffffffff800251e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80004585: b1 01                	movb	$0x1, %cl
ffffffff80004587: 31 c0                	xorl	%eax, %eax
ffffffff80004589: f0                   	lock
ffffffff8000458a: 0f b0 0d bf 0a 02 00 	cmpxchgb	%cl, 0x20abf(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80004591: 4c 8b 64 24 28       	movq	0x28(%rsp), %r12
ffffffff80004596: 75 0a                	jne	0xffffffff800045a2 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x622>
ffffffff80004598: eb 1f                	jmp	0xffffffff800045b9 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x639>
ffffffff8000459a: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff800045a0: f3 90                	pause
ffffffff800045a2: 0f b6 05 a7 0a 02 00 	movzbl	0x20aa7(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff800045a9: 84 c0                	testb	%al, %al
ffffffff800045ab: 75 f3                	jne	0xffffffff800045a0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x620>
ffffffff800045ad: 31 c0                	xorl	%eax, %eax
ffffffff800045af: f0                   	lock
ffffffff800045b0: 0f b0 0d 99 0a 02 00 	cmpxchgb	%cl, 0x20a99(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff800045b7: 75 e9                	jne	0xffffffff800045a2 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x622>
ffffffff800045b9: be 08 00 00 00       	movl	$0x8, %esi
ffffffff800045be: ba c8 00 00 00       	movl	$0xc8, %edx
ffffffff800045c3: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff800045ca: e8 31 ed ff ff       	callq	0xffffffff80003300 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff800045cf: c6 05 7a 0a 02 00 00 	movb	$0x0, 0x20a7a(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff800045d6: 48 85 c0             	testq	%rax, %rax
ffffffff800045d9: 0f 84 12 02 00 00    	je	0xffffffff800047f1 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x871>
ffffffff800045df: 48 c7 00 00 00 00 00 	movq	$0x0, (%rax)
ffffffff800045e6: 66 c7 40 62 00 00    	movw	$0x0, 0x62(%rax)
ffffffff800045ec: 4c 89 70 68          	movq	%r14, 0x68(%rax)
ffffffff800045f0: 49 8d 4f 01          	leaq	0x1(%r15), %rcx
ffffffff800045f4: 49 89 06             	movq	%rax, (%r14)
ffffffff800045f7: 66 41 c7 46 60 00 00 	movw	$0x0, 0x60(%r14)
ffffffff800045fe: 48 89 03             	movq	%rax, (%rbx)
ffffffff80004601: 48 89 4b 08          	movq	%rcx, 0x8(%rbx)
ffffffff80004605: 4d 39 ef             	cmpq	%r13, %r15
ffffffff80004608: 0f 85 b0 01 00 00    	jne	0xffffffff800047be <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x83e>
ffffffff8000460e: 66 c7 40 62 01 00    	movw	$0x1, 0x62(%rax)
ffffffff80004614: 48 8b 4c 24 08       	movq	0x8(%rsp), %rcx
ffffffff80004619: 48 89 48 08          	movq	%rcx, 0x8(%rax)
ffffffff8000461d: 48 89 68 70          	movq	%rbp, 0x70(%rax)
ffffffff80004621: 48 89 45 00          	movq	%rax, (%rbp)
ffffffff80004625: 66 c7 45 60 01 00    	movw	$0x1, 0x60(%rbp)
ffffffff8000462b: 4c 8b 6c 24 18       	movq	0x18(%rsp), %r13
ffffffff80004630: e9 36 01 00 00       	jmp	0xffffffff8000476b <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x7eb>
ffffffff80004635: 41 8d 5e 01          	leal	0x1(%r14), %ebx
ffffffff80004639: 49 8d 6d 01          	leaq	0x1(%r13), %rbp
ffffffff8000463d: 66 45 39 f5          	cmpw	%r14w, %r13w
ffffffff80004641: 73 56                	jae	0xffffffff80004699 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x719>
ffffffff80004643: 48 89 4c 24 10       	movq	%rcx, 0x10(%rsp)
ffffffff80004648: 49 8d 7c 24 08       	leaq	0x8(%r12), %rdi
ffffffff8000464d: 4b 8d 34 ec          	leaq	(%r12,%r13,8), %rsi
ffffffff80004651: 48 83 c6 08          	addq	$0x8, %rsi
ffffffff80004655: 44 8d 3c ed 00 00 00 00      	leal	(,%rbp,8), %r15d
ffffffff8000465d: 4c 01 ff             	addq	%r15, %rdi
ffffffff80004660: 4c 89 f2             	movq	%r14, %rdx
ffffffff80004663: 4c 29 ea             	subq	%r13, %rdx
ffffffff80004666: 48 c1 e2 03          	shlq	$0x3, %rdx
ffffffff8000466a: 48 89 54 24 30       	movq	%rdx, 0x30(%rsp)
ffffffff8000466f: ff 15 b3 1d 03 00    	callq	*0x31db3(%rip)          # 0xffffffff80036428
ffffffff80004675: 4b 8d 34 3c          	leaq	(%r12,%r15), %rsi
ffffffff80004679: 48 83 c6 68          	addq	$0x68, %rsi
ffffffff8000467d: 4c 8b 3c 24          	movq	(%rsp), %r15
ffffffff80004681: 4b 8d 3c ec          	leaq	(%r12,%r13,8), %rdi
ffffffff80004685: 48 83 c7 78          	addq	$0x78, %rdi
ffffffff80004689: 48 8b 54 24 30       	movq	0x30(%rsp), %rdx
ffffffff8000468e: ff 15 94 1d 03 00    	callq	*0x31d94(%rip)          # 0xffffffff80036428
ffffffff80004694: 48 8b 4c 24 10       	movq	0x10(%rsp), %rcx
ffffffff80004699: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff8000469e: 4b 89 44 ec 08       	movq	%rax, 0x8(%r12,%r13,8)
ffffffff800046a3: 49 8d 46 02          	leaq	0x2(%r14), %rax
ffffffff800046a7: 4b 89 4c ec 70       	movq	%rcx, 0x70(%r12,%r13,8)
ffffffff800046ac: 66 41 89 5c 24 62    	movw	%bx, 0x62(%r12)
ffffffff800046b2: 39 c5                	cmpl	%eax, %ebp
ffffffff800046b4: 0f 83 9b 00 00 00    	jae	0xffffffff80004755 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x7d5>
ffffffff800046ba: 44 89 f1             	movl	%r14d, %ecx
ffffffff800046bd: 44 29 e9             	subl	%r13d, %ecx
ffffffff800046c0: ff c1                	incl	%ecx
ffffffff800046c2: 4d 29 ee             	subq	%r13, %r14
ffffffff800046c5: 83 e1 03             	andl	$0x3, %ecx
ffffffff800046c8: 74 31                	je	0xffffffff800046fb <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x77b>
ffffffff800046ca: 4b 8d 34 ec          	leaq	(%r12,%r13,8), %rsi
ffffffff800046ce: 48 83 c6 70          	addq	$0x70, %rsi
ffffffff800046d2: 31 d2                	xorl	%edx, %edx
ffffffff800046d4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
ffffffff800046e0: 48 8b 3c d6          	movq	(%rsi,%rdx,8), %rdi
ffffffff800046e4: 4c 89 27             	movq	%r12, (%rdi)
ffffffff800046e7: 44 8d 04 2a          	leal	(%rdx,%rbp), %r8d
ffffffff800046eb: 66 44 89 47 60       	movw	%r8w, 0x60(%rdi)
ffffffff800046f0: 48 ff c2             	incq	%rdx
ffffffff800046f3: 48 39 d1             	cmpq	%rdx, %rcx
ffffffff800046f6: 75 e8                	jne	0xffffffff800046e0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x760>
ffffffff800046f8: 48 01 d5             	addq	%rdx, %rbp
ffffffff800046fb: 49 83 fe 03          	cmpq	$0x3, %r14
ffffffff800046ff: 72 54                	jb	0xffffffff80004755 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x7d5>
ffffffff80004701: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
ffffffff80004710: 49 8b 4c ec 68       	movq	0x68(%r12,%rbp,8), %rcx
ffffffff80004715: 4c 89 21             	movq	%r12, (%rcx)
ffffffff80004718: 66 89 69 60          	movw	%bp, 0x60(%rcx)
ffffffff8000471c: 49 8b 4c ec 70       	movq	0x70(%r12,%rbp,8), %rcx
ffffffff80004721: 4c 89 21             	movq	%r12, (%rcx)
ffffffff80004724: 8d 55 01             	leal	0x1(%rbp), %edx
ffffffff80004727: 66 89 51 60          	movw	%dx, 0x60(%rcx)
ffffffff8000472b: 49 8b 4c ec 78       	movq	0x78(%r12,%rbp,8), %rcx
ffffffff80004730: 4c 89 21             	movq	%r12, (%rcx)
ffffffff80004733: 8d 55 02             	leal	0x2(%rbp), %edx
ffffffff80004736: 66 89 51 60          	movw	%dx, 0x60(%rcx)
ffffffff8000473a: 49 8b 8c ec 80 00 00 00      	movq	0x80(%r12,%rbp,8), %rcx
ffffffff80004742: 4c 89 21             	movq	%r12, (%rcx)
ffffffff80004745: 8d 55 03             	leal	0x3(%rbp), %edx
ffffffff80004748: 66 89 51 60          	movw	%dx, 0x60(%rcx)
ffffffff8000474c: 48 83 c5 04          	addq	$0x4, %rbp
ffffffff80004750: 48 39 c5             	cmpq	%rax, %rbp
ffffffff80004753: 75 bb                	jne	0xffffffff80004710 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x790>
ffffffff80004755: 4c 8b 6c 24 18       	movq	0x18(%rsp), %r13
ffffffff8000475a: 4c 8b 64 24 28       	movq	0x28(%rsp), %r12
ffffffff8000475f: eb 0e                	jmp	0xffffffff8000476f <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h3ac083bc395b2053+0x7ef>
ffffffff80004761: 4c 8b 6c 24 18       	movq	0x18(%rsp), %r13
ffffffff80004766: 4c 8b 64 24 28       	movq	0x28(%rsp), %r12
ffffffff8000476b: 4c 8b 3c 24          	movq	(%rsp), %r15
ffffffff8000476f: 4c 8b 74 24 20       	movq	0x20(%rsp), %r14
ffffffff80004774: 4d 89 75 00          	movq	%r14, (%r13)
ffffffff80004778: 4d 89 7d 08          	movq	%r15, 0x8(%r13)
ffffffff8000477c: 4d 89 65 10          	movq	%r12, 0x10(%r13)
ffffffff80004780: 4c 89 e8             	movq	%r13, %rax
ffffffff80004783: 48 83 c4 78          	addq	$0x78, %rsp
ffffffff80004787: 5b                   	popq	%rbx
ffffffff80004788: 41 5c                	popq	%r12
ffffffff8000478a: 41 5d                	popq	%r13
ffffffff8000478c: 41 5e                	popq	%r14
ffffffff8000478e: 41 5f                	popq	%r15
ffffffff80004790: 5d                   	popq	%rbp
ffffffff80004791: c3                   	retq
ffffffff80004792: be 35 00 00 00       	movl	$0x35, %esi
ffffffff80004797: 48 c7 c7 98 e0 01 80 	movq	$-0x7ffe1f68, %rdi      # imm = 0x8001E098
ffffffff8000479e: 48 c7 c2 d0 e0 01 80 	movq	$-0x7ffe1f30, %rdx      # imm = 0x8001E0D0
ffffffff800047a5: e8 c6 7c 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff800047aa: be 0b 00 00 00       	movl	$0xb, %esi
ffffffff800047af: 48 89 d7             	movq	%rdx, %rdi
ffffffff800047b2: 48 c7 c2 68 e0 01 80 	movq	$-0x7ffe1f98, %rdx      # imm = 0x8001E068
ffffffff800047b9: e8 c2 77 01 00       	callq	0xffffffff8001bf80 <core::slice::index::slice_end_index_len_fail::h34b67e5519833f02>
ffffffff800047be: be 30 00 00 00       	movl	$0x30, %esi
ffffffff800047c3: 48 c7 c7 33 df 01 80 	movq	$-0x7ffe20cd, %rdi      # imm = 0x8001DF33
ffffffff800047ca: 48 c7 c2 68 df 01 80 	movq	$-0x7ffe2098, %rdx      # imm = 0x8001DF68
ffffffff800047d1: e8 9a 7c 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff800047d6: bf 08 00 00 00       	movl	$0x8, %edi
ffffffff800047db: be 68 00 00 00       	movl	$0x68, %esi
ffffffff800047e0: e8 7d 48 01 00       	callq	0xffffffff80019062 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff800047e5: 48 c7 c7 98 de 01 80 	movq	$-0x7ffe2168, %rdi      # imm = 0x8001DE98
ffffffff800047ec: e8 7f 81 01 00       	callq	0xffffffff8001c970 <core::option::unwrap_failed::hd8ef34c781aa10a4>
ffffffff800047f1: bf 08 00 00 00       	movl	$0x8, %edi
ffffffff800047f6: be c8 00 00 00       	movl	$0xc8, %esi
ffffffff800047fb: e8 62 48 01 00       	callq	0xffffffff80019062 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>

ffffffff80004800 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe>:
ffffffff80004800: 55                   	pushq	%rbp
ffffffff80004801: 41 57                	pushq	%r15
ffffffff80004803: 41 56                	pushq	%r14
ffffffff80004805: 41 55                	pushq	%r13
ffffffff80004807: 41 54                	pushq	%r12
ffffffff80004809: 53                   	pushq	%rbx
ffffffff8000480a: 48 81 ec 28 03 00 00 	subq	$0x328, %rsp            # imm = 0x328
ffffffff80004811: 49 89 f7             	movq	%rsi, %r15
ffffffff80004814: 48 89 fd             	movq	%rdi, %rbp
ffffffff80004817: 48 8b 1e             	movq	(%rsi), %rbx
ffffffff8000481a: 44 0f b7 b3 d6 09 00 00      	movzwl	0x9d6(%rbx), %r14d
ffffffff80004822: 49 83 fe 0b          	cmpq	$0xb, %r14
ffffffff80004826: 73 24                	jae	0xffffffff8000484c <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x4c>
ffffffff80004828: 4d 8b 67 10          	movq	0x10(%r15), %r12
ffffffff8000482c: 4d 8d 6c 24 01       	leaq	0x1(%r12), %r13
ffffffff80004831: 4a 8d 34 a3          	leaq	(%rbx,%r12,4), %rsi
ffffffff80004835: 48 81 c6 a8 09 00 00 	addq	$0x9a8, %rsi            # imm = 0x9A8
ffffffff8000483c: 4d 39 f5             	cmpq	%r14, %r13
ffffffff8000483f: 0f 86 4c 01 00 00    	jbe	0xffffffff80004991 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x191>
ffffffff80004845: 89 16                	movl	%edx, (%rsi)
ffffffff80004847: e9 a9 01 00 00       	jmp	0xffffffff800049f5 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x1f5>
ffffffff8000484c: 4d 89 c5             	movq	%r8, %r13
ffffffff8000484f: 48 89 4c 24 10       	movq	%rcx, 0x10(%rsp)
ffffffff80004854: 48 89 6c 24 30       	movq	%rbp, 0x30(%rsp)
ffffffff80004859: 49 8b 6f 08          	movq	0x8(%r15), %rbp
ffffffff8000485d: 4d 8b 77 10          	movq	0x10(%r15), %r14
ffffffff80004861: 0f b6 05 79 09 02 00 	movzbl	0x20979(%rip), %eax     # 0xffffffff800251e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80004868: b1 01                	movb	$0x1, %cl
ffffffff8000486a: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff80004870: 31 c0                	xorl	%eax, %eax
ffffffff80004872: f0                   	lock
ffffffff80004873: 0f b0 0d d6 07 02 00 	cmpxchgb	%cl, 0x207d6(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000487a: 75 06                	jne	0xffffffff80004882 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x82>
ffffffff8000487c: eb 11                	jmp	0xffffffff8000488f <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x8f>
ffffffff8000487e: 66 90                	nop
ffffffff80004880: f3 90                	pause
ffffffff80004882: 0f b6 05 c7 07 02 00 	movzbl	0x207c7(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80004889: 84 c0                	testb	%al, %al
ffffffff8000488b: 75 f3                	jne	0xffffffff80004880 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x80>
ffffffff8000488d: eb e1                	jmp	0xffffffff80004870 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x70>
ffffffff8000488f: 89 54 24 0c          	movl	%edx, 0xc(%rsp)
ffffffff80004893: be 08 00 00 00       	movl	$0x8, %esi
ffffffff80004898: ba d8 09 00 00       	movl	$0x9d8, %edx            # imm = 0x9D8
ffffffff8000489d: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff800048a4: e8 57 ea ff ff       	callq	0xffffffff80003300 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff800048a9: c6 05 a0 07 02 00 00 	movb	$0x0, 0x207a0(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff800048b0: 48 85 c0             	testq	%rax, %rax
ffffffff800048b3: 0f 84 e5 0c 00 00    	je	0xffffffff8000559e <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0xd9e>
ffffffff800048b9: 49 89 c7             	movq	%rax, %r15
ffffffff800048bc: 48 c7 80 a0 09 00 00 00 00 00 00     	movq	$0x0, 0x9a0(%rax)
ffffffff800048c7: 66 c7 80 d6 09 00 00 00 00   	movw	$0x0, 0x9d6(%rax)
ffffffff800048d0: 49 83 fe 05          	cmpq	$0x5, %r14
ffffffff800048d4: 4c 89 6c 24 50       	movq	%r13, 0x50(%rsp)
ffffffff800048d9: 0f 83 4e 01 00 00    	jae	0xffffffff80004a2d <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x22d>
ffffffff800048df: 4d 89 fd             	movq	%r15, %r13
ffffffff800048e2: 4d 89 f7             	movq	%r14, %r15
ffffffff800048e5: 44 0f b7 a3 d6 09 00 00      	movzwl	0x9d6(%rbx), %r12d
ffffffff800048ed: 49 83 c4 fb          	addq	$-0x5, %r12
ffffffff800048f1: 66 45 89 a5 d6 09 00 00      	movw	%r12w, 0x9d6(%r13)
ffffffff800048f9: 8b 83 b8 09 00 00    	movl	0x9b8(%rbx), %eax
ffffffff800048ff: 89 44 24 08          	movl	%eax, 0x8(%rsp)
ffffffff80004903: 48 8d b3 80 03 00 00 	leaq	0x380(%rbx), %rsi
ffffffff8000490a: 48 8d bc 24 60 01 00 00      	leaq	0x160(%rsp), %rdi
ffffffff80004912: ba e0 00 00 00       	movl	$0xe0, %edx
ffffffff80004917: ff 15 03 1b 03 00    	callq	*0x31b03(%rip)          # 0xffffffff80036420
ffffffff8000491d: 49 83 fc 0c          	cmpq	$0xc, %r12
ffffffff80004921: 0f 83 37 0c 00 00    	jae	0xffffffff8000555e <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0xd5e>
ffffffff80004927: 4c 89 ef             	movq	%r13, %rdi
ffffffff8000492a: 48 81 c7 a8 09 00 00 	addq	$0x9a8, %rdi            # imm = 0x9A8
ffffffff80004931: 48 8d b3 bc 09 00 00 	leaq	0x9bc(%rbx), %rsi
ffffffff80004938: 4a 8d 14 a5 00 00 00 00      	leaq	(,%r12,4), %rdx
ffffffff80004940: 4c 8b 35 d9 1a 03 00 	movq	0x31ad9(%rip), %r14     # 0xffffffff80036420
ffffffff80004947: 41 ff d6             	callq	*%r14
ffffffff8000494a: 48 8d b3 60 04 00 00 	leaq	0x460(%rbx), %rsi
ffffffff80004951: 49 69 d4 e0 00 00 00 	imulq	$0xe0, %r12, %rdx
ffffffff80004958: 4c 89 6c 24 20       	movq	%r13, 0x20(%rsp)
ffffffff8000495d: 4c 89 ef             	movq	%r13, %rdi
ffffffff80004960: 41 ff d6             	callq	*%r14
ffffffff80004963: 66 c7 83 d6 09 00 00 04 00   	movw	$0x4, 0x9d6(%rbx)
ffffffff8000496c: 48 8d 7c 24 5c       	leaq	0x5c(%rsp), %rdi
ffffffff80004971: 48 8d b4 24 60 01 00 00      	leaq	0x160(%rsp), %rsi
ffffffff80004979: ba e0 00 00 00       	movl	$0xe0, %edx
ffffffff8000497e: 41 ff d6             	callq	*%r14
ffffffff80004981: 48 89 6c 24 28       	movq	%rbp, 0x28(%rsp)
ffffffff80004986: 48 89 d8             	movq	%rbx, %rax
ffffffff80004989: 4d 89 fc             	movq	%r15, %r12
ffffffff8000498c: e9 d5 02 00 00       	jmp	0xffffffff80004c66 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x466>
ffffffff80004991: 48 8d 83 a8 09 00 00 	leaq	0x9a8(%rbx), %rax
ffffffff80004998: 4a 8d 3c a8          	leaq	(%rax,%r13,4), %rdi
ffffffff8000499c: 48 89 6c 24 30       	movq	%rbp, 0x30(%rsp)
ffffffff800049a1: 4c 89 f5             	movq	%r14, %rbp
ffffffff800049a4: 4c 29 e5             	subq	%r12, %rbp
ffffffff800049a7: 89 54 24 0c          	movl	%edx, 0xc(%rsp)
ffffffff800049ab: 48 8d 14 ad 00 00 00 00      	leaq	(,%rbp,4), %rdx
ffffffff800049b3: 48 89 4c 24 10       	movq	%rcx, 0x10(%rsp)
ffffffff800049b8: ff 15 6a 1a 03 00    	callq	*0x31a6a(%rip)          # 0xffffffff80036428
ffffffff800049be: 8b 44 24 0c          	movl	0xc(%rsp), %eax
ffffffff800049c2: 42 89 84 a3 a8 09 00 00      	movl	%eax, 0x9a8(%rbx,%r12,4)
ffffffff800049ca: 49 69 f4 e0 00 00 00 	imulq	$0xe0, %r12, %rsi
ffffffff800049d1: 48 01 de             	addq	%rbx, %rsi
ffffffff800049d4: 49 69 fd e0 00 00 00 	imulq	$0xe0, %r13, %rdi
ffffffff800049db: 48 01 df             	addq	%rbx, %rdi
ffffffff800049de: 48 69 d5 e0 00 00 00 	imulq	$0xe0, %rbp, %rdx
ffffffff800049e5: 48 8b 6c 24 30       	movq	0x30(%rsp), %rbp
ffffffff800049ea: ff 15 38 1a 03 00    	callq	*0x31a38(%rip)          # 0xffffffff80036428
ffffffff800049f0: 48 8b 4c 24 10       	movq	0x10(%rsp), %rcx
ffffffff800049f5: 41 ff c6             	incl	%r14d
ffffffff800049f8: 49 69 fc e0 00 00 00 	imulq	$0xe0, %r12, %rdi
ffffffff800049ff: 48 01 df             	addq	%rbx, %rdi
ffffffff80004a02: ba e0 00 00 00       	movl	$0xe0, %edx
ffffffff80004a07: 48 89 ce             	movq	%rcx, %rsi
ffffffff80004a0a: ff 15 10 1a 03 00    	callq	*0x31a10(%rip)          # 0xffffffff80036420
ffffffff80004a10: 66 44 89 b3 d6 09 00 00      	movw	%r14w, 0x9d6(%rbx)
ffffffff80004a18: 49 8b 47 08          	movq	0x8(%r15), %rax
ffffffff80004a1c: 48 89 5d 00          	movq	%rbx, (%rbp)
ffffffff80004a20: 48 89 45 08          	movq	%rax, 0x8(%rbp)
ffffffff80004a24: 4c 89 65 10          	movq	%r12, 0x10(%rbp)
ffffffff80004a28: e9 04 0b 00 00       	jmp	0xffffffff80005531 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0xd31>
ffffffff80004a2d: 0f 84 ba 00 00 00    	je	0xffffffff80004aed <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x2ed>
ffffffff80004a33: 49 83 fe 06          	cmpq	$0x6, %r14
ffffffff80004a37: 4c 89 7c 24 20       	movq	%r15, 0x20(%rsp)
ffffffff80004a3c: 0f 85 74 01 00 00    	jne	0xffffffff80004bb6 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x3b6>
ffffffff80004a42: 44 0f b7 a3 d6 09 00 00      	movzwl	0x9d6(%rbx), %r12d
ffffffff80004a4a: 49 83 c4 fa          	addq	$-0x6, %r12
ffffffff80004a4e: 66 45 89 a7 d6 09 00 00      	movw	%r12w, 0x9d6(%r15)
ffffffff80004a56: 8b 83 bc 09 00 00    	movl	0x9bc(%rbx), %eax
ffffffff80004a5c: 89 44 24 08          	movl	%eax, 0x8(%rsp)
ffffffff80004a60: 48 8d b3 60 04 00 00 	leaq	0x460(%rbx), %rsi
ffffffff80004a67: 48 8d bc 24 60 01 00 00      	leaq	0x160(%rsp), %rdi
ffffffff80004a6f: ba e0 00 00 00       	movl	$0xe0, %edx
ffffffff80004a74: ff 15 a6 19 03 00    	callq	*0x319a6(%rip)          # 0xffffffff80036420
ffffffff80004a7a: 49 83 fc 0c          	cmpq	$0xc, %r12
ffffffff80004a7e: 0f 83 da 0a 00 00    	jae	0xffffffff8000555e <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0xd5e>
ffffffff80004a84: 4c 89 ff             	movq	%r15, %rdi
ffffffff80004a87: 48 81 c7 a8 09 00 00 	addq	$0x9a8, %rdi            # imm = 0x9A8
ffffffff80004a8e: 48 8d b3 c0 09 00 00 	leaq	0x9c0(%rbx), %rsi
ffffffff80004a95: 4a 8d 14 a5 00 00 00 00      	leaq	(,%r12,4), %rdx
ffffffff80004a9d: 4c 8b 35 7c 19 03 00 	movq	0x3197c(%rip), %r14     # 0xffffffff80036420
ffffffff80004aa4: 41 ff d6             	callq	*%r14
ffffffff80004aa7: 48 8d b3 40 05 00 00 	leaq	0x540(%rbx), %rsi
ffffffff80004aae: 49 69 d4 e0 00 00 00 	imulq	$0xe0, %r12, %rdx
ffffffff80004ab5: 4c 89 ff             	movq	%r15, %rdi
ffffffff80004ab8: 41 ff d6             	callq	*%r14
ffffffff80004abb: 66 c7 83 d6 09 00 00 05 00   	movw	$0x5, 0x9d6(%rbx)
ffffffff80004ac4: 48 8d 7c 24 5c       	leaq	0x5c(%rsp), %rdi
ffffffff80004ac9: 48 8d b4 24 60 01 00 00      	leaq	0x160(%rsp), %rsi
ffffffff80004ad1: ba e0 00 00 00       	movl	$0xe0, %edx
ffffffff80004ad6: 41 ff d6             	callq	*%r14
ffffffff80004ad9: 45 31 e4             	xorl	%r12d, %r12d
ffffffff80004adc: 48 c7 44 24 28 00 00 00 00   	movq	$0x0, 0x28(%rsp)
ffffffff80004ae5: 4c 89 f8             	movq	%r15, %rax
ffffffff80004ae8: e9 79 01 00 00       	jmp	0xffffffff80004c66 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x466>
ffffffff80004aed: 44 0f b7 ab d6 09 00 00      	movzwl	0x9d6(%rbx), %r13d
ffffffff80004af5: 49 83 c5 fa          	addq	$-0x6, %r13
ffffffff80004af9: 66 45 89 af d6 09 00 00      	movw	%r13w, 0x9d6(%r15)
ffffffff80004b01: 8b 83 bc 09 00 00    	movl	0x9bc(%rbx), %eax
ffffffff80004b07: 89 44 24 08          	movl	%eax, 0x8(%rsp)
ffffffff80004b0b: 4c 8d a3 60 04 00 00 	leaq	0x460(%rbx), %r12
ffffffff80004b12: 48 8d bc 24 60 01 00 00      	leaq	0x160(%rsp), %rdi
ffffffff80004b1a: ba e0 00 00 00       	movl	$0xe0, %edx
ffffffff80004b1f: 4c 89 e6             	movq	%r12, %rsi
ffffffff80004b22: ff 15 f8 18 03 00    	callq	*0x318f8(%rip)          # 0xffffffff80036420
ffffffff80004b28: 49 83 fd 0c          	cmpq	$0xc, %r13
ffffffff80004b2c: 0f 83 58 0a 00 00    	jae	0xffffffff8000558a <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0xd8a>
ffffffff80004b32: 4c 89 ff             	movq	%r15, %rdi
ffffffff80004b35: 48 81 c7 a8 09 00 00 	addq	$0x9a8, %rdi            # imm = 0x9A8
ffffffff80004b3c: 48 8d b3 c0 09 00 00 	leaq	0x9c0(%rbx), %rsi
ffffffff80004b43: 4a 8d 14 ad 00 00 00 00      	leaq	(,%r13,4), %rdx
ffffffff80004b4b: 4c 8b 35 ce 18 03 00 	movq	0x318ce(%rip), %r14     # 0xffffffff80036420
ffffffff80004b52: 41 ff d6             	callq	*%r14
ffffffff80004b55: 48 8d b3 40 05 00 00 	leaq	0x540(%rbx), %rsi
ffffffff80004b5c: 49 69 d5 e0 00 00 00 	imulq	$0xe0, %r13, %rdx
ffffffff80004b63: 4c 89 ff             	movq	%r15, %rdi
ffffffff80004b66: 41 ff d6             	callq	*%r14
ffffffff80004b69: 48 8d 7c 24 5c       	leaq	0x5c(%rsp), %rdi
ffffffff80004b6e: 48 8d b4 24 60 01 00 00      	leaq	0x160(%rsp), %rsi
ffffffff80004b76: ba e0 00 00 00       	movl	$0xe0, %edx
ffffffff80004b7b: 41 ff d6             	callq	*%r14
ffffffff80004b7e: 8b 44 24 0c          	movl	0xc(%rsp), %eax
ffffffff80004b82: 89 83 bc 09 00 00    	movl	%eax, 0x9bc(%rbx)
ffffffff80004b88: ba e0 00 00 00       	movl	$0xe0, %edx
ffffffff80004b8d: 4c 89 e7             	movq	%r12, %rdi
ffffffff80004b90: 48 8b 74 24 10       	movq	0x10(%rsp), %rsi
ffffffff80004b95: 41 ff d6             	callq	*%r14
ffffffff80004b98: 66 c7 83 d6 09 00 00 06 00   	movw	$0x6, 0x9d6(%rbx)
ffffffff80004ba1: 41 bc 05 00 00 00    	movl	$0x5, %r12d
ffffffff80004ba7: 48 89 6c 24 28       	movq	%rbp, 0x28(%rsp)
ffffffff80004bac: 48 89 5c 24 18       	movq	%rbx, 0x18(%rsp)
ffffffff80004bb1: e9 6d 01 00 00       	jmp	0xffffffff80004d23 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x523>
ffffffff80004bb6: 44 0f b7 a3 d6 09 00 00      	movzwl	0x9d6(%rbx), %r12d
ffffffff80004bbe: 49 83 c4 f9          	addq	$-0x7, %r12
ffffffff80004bc2: 66 45 89 a7 d6 09 00 00      	movw	%r12w, 0x9d6(%r15)
ffffffff80004bca: 8b 83 c0 09 00 00    	movl	0x9c0(%rbx), %eax
ffffffff80004bd0: 89 44 24 08          	movl	%eax, 0x8(%rsp)
ffffffff80004bd4: 48 8d b3 40 05 00 00 	leaq	0x540(%rbx), %rsi
ffffffff80004bdb: 48 8d bc 24 60 01 00 00      	leaq	0x160(%rsp), %rdi
ffffffff80004be3: ba e0 00 00 00       	movl	$0xe0, %edx
ffffffff80004be8: ff 15 32 18 03 00    	callq	*0x31832(%rip)          # 0xffffffff80036420
ffffffff80004bee: 49 83 fc 0c          	cmpq	$0xc, %r12
ffffffff80004bf2: 0f 83 66 09 00 00    	jae	0xffffffff8000555e <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0xd5e>
ffffffff80004bf8: 4d 89 fd             	movq	%r15, %r13
ffffffff80004bfb: 4d 89 f7             	movq	%r14, %r15
ffffffff80004bfe: 49 83 c7 f9          	addq	$-0x7, %r15
ffffffff80004c02: 4c 89 ef             	movq	%r13, %rdi
ffffffff80004c05: 48 81 c7 a8 09 00 00 	addq	$0x9a8, %rdi            # imm = 0x9A8
ffffffff80004c0c: 48 8d b3 c4 09 00 00 	leaq	0x9c4(%rbx), %rsi
ffffffff80004c13: 4a 8d 14 a5 00 00 00 00      	leaq	(,%r12,4), %rdx
ffffffff80004c1b: 4c 8b 35 fe 17 03 00 	movq	0x317fe(%rip), %r14     # 0xffffffff80036420
ffffffff80004c22: 41 ff d6             	callq	*%r14
ffffffff80004c25: 48 8d b3 20 06 00 00 	leaq	0x620(%rbx), %rsi
ffffffff80004c2c: 49 69 d4 e0 00 00 00 	imulq	$0xe0, %r12, %rdx
ffffffff80004c33: 4d 89 fc             	movq	%r15, %r12
ffffffff80004c36: 4c 89 ef             	movq	%r13, %rdi
ffffffff80004c39: 41 ff d6             	callq	*%r14
ffffffff80004c3c: 66 c7 83 d6 09 00 00 06 00   	movw	$0x6, 0x9d6(%rbx)
ffffffff80004c45: 48 8d 7c 24 5c       	leaq	0x5c(%rsp), %rdi
ffffffff80004c4a: 48 8d b4 24 60 01 00 00      	leaq	0x160(%rsp), %rsi
ffffffff80004c52: ba e0 00 00 00       	movl	$0xe0, %edx
ffffffff80004c57: 41 ff d6             	callq	*%r14
ffffffff80004c5a: 48 c7 44 24 28 00 00 00 00   	movq	$0x0, 0x28(%rsp)
ffffffff80004c63: 4c 89 e8             	movq	%r13, %rax
ffffffff80004c66: 44 0f b7 b0 d6 09 00 00      	movzwl	0x9d6(%rax), %r14d
ffffffff80004c6e: 4d 89 f7             	movq	%r14, %r15
ffffffff80004c71: 4a 8d 34 a0          	leaq	(%rax,%r12,4), %rsi
ffffffff80004c75: 48 81 c6 a8 09 00 00 	addq	$0x9a8, %rsi            # imm = 0x9A8
ffffffff80004c7c: 4d 29 e7             	subq	%r12, %r15
ffffffff80004c7f: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff80004c84: 76 6a                	jbe	0xffffffff80004cf0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x4f0>
ffffffff80004c86: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff80004c8b: 48 05 a8 09 00 00    	addq	$0x9a8, %rax            # imm = 0x9A8
ffffffff80004c91: 4a 8d 7c a0 04       	leaq	0x4(%rax,%r12,4), %rdi
ffffffff80004c96: 4a 8d 14 bd 00 00 00 00      	leaq	(,%r15,4), %rdx
ffffffff80004c9e: 4d 89 e5             	movq	%r12, %r13
ffffffff80004ca1: 4c 8b 25 80 17 03 00 	movq	0x31780(%rip), %r12     # 0xffffffff80036428
ffffffff80004ca8: 41 ff d4             	callq	*%r12
ffffffff80004cab: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff80004cb0: 8b 4c 24 0c          	movl	0xc(%rsp), %ecx
ffffffff80004cb4: 42 89 8c a8 a8 09 00 00      	movl	%ecx, 0x9a8(%rax,%r13,4)
ffffffff80004cbc: 49 69 c5 e0 00 00 00 	imulq	$0xe0, %r13, %rax
ffffffff80004cc3: 48 8b 4c 24 18       	movq	0x18(%rsp), %rcx
ffffffff80004cc8: 48 8d 34 01          	leaq	(%rcx,%rax), %rsi
ffffffff80004ccc: 48 8b 4c 24 18       	movq	0x18(%rsp), %rcx
ffffffff80004cd1: 48 8d 3c 01          	leaq	(%rcx,%rax), %rdi
ffffffff80004cd5: 48 81 c7 e0 00 00 00 	addq	$0xe0, %rdi
ffffffff80004cdc: 49 69 d7 e0 00 00 00 	imulq	$0xe0, %r15, %rdx
ffffffff80004ce3: 41 ff d4             	callq	*%r12
ffffffff80004ce6: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff80004ceb: 4d 89 ec             	movq	%r13, %r12
ffffffff80004cee: eb 06                	jmp	0xffffffff80004cf6 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x4f6>
ffffffff80004cf0: 8b 4c 24 0c          	movl	0xc(%rsp), %ecx
ffffffff80004cf4: 89 0e                	movl	%ecx, (%rsi)
ffffffff80004cf6: 48 8b 74 24 10       	movq	0x10(%rsp), %rsi
ffffffff80004cfb: 41 ff c6             	incl	%r14d
ffffffff80004cfe: 49 69 fc e0 00 00 00 	imulq	$0xe0, %r12, %rdi
ffffffff80004d05: 48 01 c7             	addq	%rax, %rdi
ffffffff80004d08: ba e0 00 00 00       	movl	$0xe0, %edx
ffffffff80004d0d: 49 89 c7             	movq	%rax, %r15
ffffffff80004d10: ff 15 0a 17 03 00    	callq	*0x3170a(%rip)          # 0xffffffff80036420
ffffffff80004d16: 66 45 89 b7 d6 09 00 00      	movw	%r14w, 0x9d6(%r15)
ffffffff80004d1e: 4c 8b 7c 24 20       	movq	0x20(%rsp), %r15
ffffffff80004d23: 4c 89 64 24 10       	movq	%r12, 0x10(%rsp)
ffffffff80004d28: 48 8d bc 24 44 02 00 00      	leaq	0x244(%rsp), %rdi
ffffffff80004d30: 48 8d 74 24 58       	leaq	0x58(%rsp), %rsi
ffffffff80004d35: ba e4 00 00 00       	movl	$0xe4, %edx
ffffffff80004d3a: ff 15 e0 16 03 00    	callq	*0x316e0(%rip)          # 0xffffffff80036420
ffffffff80004d40: 4c 8b ab a0 09 00 00 	movq	0x9a0(%rbx), %r13
ffffffff80004d47: 45 31 e4             	xorl	%r12d, %r12d
ffffffff80004d4a: eb 5b                	jmp	0xffffffff80004da7 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x5a7>
ffffffff80004d4c: 0f 1f 40 00          	nopl	(%rax)
ffffffff80004d50: 48 8b 5c 24 58       	movq	0x58(%rsp), %rbx
ffffffff80004d55: 48 8b 6c 24 60       	movq	0x60(%rsp), %rbp
ffffffff80004d5a: 4c 8b 7c 24 68       	movq	0x68(%rsp), %r15
ffffffff80004d5f: 4c 8b 64 24 70       	movq	0x70(%rsp), %r12
ffffffff80004d64: 8b 44 24 78          	movl	0x78(%rsp), %eax
ffffffff80004d68: 89 44 24 08          	movl	%eax, 0x8(%rsp)
ffffffff80004d6c: ba e4 00 00 00       	movl	$0xe4, %edx
ffffffff80004d71: 4c 8d b4 24 60 01 00 00      	leaq	0x160(%rsp), %r14
ffffffff80004d79: 4c 89 f7             	movq	%r14, %rdi
ffffffff80004d7c: 48 8d 74 24 7c       	leaq	0x7c(%rsp), %rsi
ffffffff80004d81: 41 ff d5             	callq	*%r13
ffffffff80004d84: 48 85 db             	testq	%rbx, %rbx
ffffffff80004d87: 0f 84 84 07 00 00    	je	0xffffffff80005511 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0xd11>
ffffffff80004d8d: ba e4 00 00 00       	movl	$0xe4, %edx
ffffffff80004d92: 48 8d bc 24 44 02 00 00      	leaq	0x244(%rsp), %rdi
ffffffff80004d9a: 4c 89 f6             	movq	%r14, %rsi
ffffffff80004d9d: 41 ff d5             	callq	*%r13
ffffffff80004da0: 4c 8b ab a0 09 00 00 	movq	0x9a0(%rbx), %r13
ffffffff80004da7: 4d 85 ed             	testq	%r13, %r13
ffffffff80004daa: 0f 84 92 04 00 00    	je	0xffffffff80005242 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0xa42>
ffffffff80004db0: 4c 39 e5             	cmpq	%r12, %rbp
ffffffff80004db3: 0f 85 8d 07 00 00    	jne	0xffffffff80005546 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0xd46>
ffffffff80004db9: 0f b7 9b d4 09 00 00 	movzwl	0x9d4(%rbx), %ebx
ffffffff80004dc0: 45 0f b7 b5 d6 09 00 00      	movzwl	0x9d6(%r13), %r14d
ffffffff80004dc8: 49 83 fe 0b          	cmpq	$0xb, %r14
ffffffff80004dcc: 4c 89 7c 24 20       	movq	%r15, 0x20(%rsp)
ffffffff80004dd1: 0f 82 77 05 00 00    	jb	0xffffffff8000534e <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0xb4e>
ffffffff80004dd7: 48 ff c5             	incq	%rbp
ffffffff80004dda: 66 83 fb 05          	cmpw	$0x5, %bx
ffffffff80004dde: 73 30                	jae	0xffffffff80004e10 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x610>
ffffffff80004de0: 4c 89 6c 24 38       	movq	%r13, 0x38(%rsp)
ffffffff80004de5: 48 89 6c 24 40       	movq	%rbp, 0x40(%rsp)
ffffffff80004dea: 48 c7 44 24 48 04 00 00 00   	movq	$0x4, 0x48(%rsp)
ffffffff80004df3: 48 8d 7c 24 58       	leaq	0x58(%rsp), %rdi
ffffffff80004df8: 48 8d 74 24 38       	leaq	0x38(%rsp), %rsi
ffffffff80004dfd: e8 3e 15 00 00       	callq	0xffffffff80006340 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h75b80278c1f444c3>
ffffffff80004e02: 4c 8b 74 24 58       	movq	0x58(%rsp), %r14
ffffffff80004e07: e9 1c 01 00 00       	jmp	0xffffffff80004f28 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x728>
ffffffff80004e0c: 0f 1f 40 00          	nopl	(%rax)
ffffffff80004e10: 48 83 fb 05          	cmpq	$0x5, %rbx
ffffffff80004e14: 74 15                	je	0xffffffff80004e2b <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x62b>
ffffffff80004e16: 83 fb 06             	cmpl	$0x6, %ebx
ffffffff80004e19: 0f 85 dd 00 00 00    	jne	0xffffffff80004efc <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x6fc>
ffffffff80004e1f: b8 05 00 00 00       	movl	$0x5, %eax
ffffffff80004e24: 31 db                	xorl	%ebx, %ebx
ffffffff80004e26: e9 da 00 00 00       	jmp	0xffffffff80004f05 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x705>
ffffffff80004e2b: 4c 89 6c 24 38       	movq	%r13, 0x38(%rsp)
ffffffff80004e30: 48 89 6c 24 40       	movq	%rbp, 0x40(%rsp)
ffffffff80004e35: 48 c7 44 24 48 05 00 00 00   	movq	$0x5, 0x48(%rsp)
ffffffff80004e3e: 48 8d 7c 24 58       	leaq	0x58(%rsp), %rdi
ffffffff80004e43: 48 8d 74 24 38       	leaq	0x38(%rsp), %rsi
ffffffff80004e48: e8 f3 14 00 00       	callq	0xffffffff80006340 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h75b80278c1f444c3>
ffffffff80004e4d: 48 8b 5c 24 58       	movq	0x58(%rsp), %rbx
ffffffff80004e52: 44 0f b7 b3 d6 09 00 00      	movzwl	0x9d6(%rbx), %r14d
ffffffff80004e5a: 41 8d 6e 01          	leal	0x1(%r14), %ebp
ffffffff80004e5e: 49 83 fe 06          	cmpq	$0x6, %r14
ffffffff80004e62: 0f 82 8e 02 00 00    	jb	0xffffffff800050f6 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x8f6>
ffffffff80004e68: 48 8d b3 bc 09 00 00 	leaq	0x9bc(%rbx), %rsi
ffffffff80004e6f: 48 8d bb c0 09 00 00 	leaq	0x9c0(%rbx), %rdi
ffffffff80004e76: 4d 8d 7e fb          	leaq	-0x5(%r14), %r15
ffffffff80004e7a: 4a 8d 14 b5 ec ff ff ff      	leaq	-0x14(,%r14,4), %rdx
ffffffff80004e82: 4c 8b 25 9f 15 03 00 	movq	0x3159f(%rip), %r12     # 0xffffffff80036428
ffffffff80004e89: 41 ff d4             	callq	*%r12
ffffffff80004e8c: 8b 44 24 08          	movl	0x8(%rsp), %eax
ffffffff80004e90: 89 83 bc 09 00 00    	movl	%eax, 0x9bc(%rbx)
ffffffff80004e96: 4c 8d ab 60 04 00 00 	leaq	0x460(%rbx), %r13
ffffffff80004e9d: 48 8d bb 40 05 00 00 	leaq	0x540(%rbx), %rdi
ffffffff80004ea4: 49 69 d7 e0 00 00 00 	imulq	$0xe0, %r15, %rdx
ffffffff80004eab: 4c 89 ee             	movq	%r13, %rsi
ffffffff80004eae: 41 ff d4             	callq	*%r12
ffffffff80004eb1: ba e0 00 00 00       	movl	$0xe0, %edx
ffffffff80004eb6: 4c 89 ef             	movq	%r13, %rdi
ffffffff80004eb9: 48 8d b4 24 48 02 00 00      	leaq	0x248(%rsp), %rsi
ffffffff80004ec1: 4c 8b 2d 58 15 03 00 	movq	0x31558(%rip), %r13     # 0xffffffff80036420
ffffffff80004ec8: 41 ff d5             	callq	*%r13
ffffffff80004ecb: 48 8d b3 08 0a 00 00 	leaq	0xa08(%rbx), %rsi
ffffffff80004ed2: 48 8d bb 10 0a 00 00 	leaq	0xa10(%rbx), %rdi
ffffffff80004ed9: 4a 8d 14 f5 d8 ff ff ff      	leaq	-0x28(,%r14,8), %rdx
ffffffff80004ee1: 41 ff d4             	callq	*%r12
ffffffff80004ee4: 48 8b 44 24 20       	movq	0x20(%rsp), %rax
ffffffff80004ee9: 48 89 83 08 0a 00 00 	movq	%rax, 0xa08(%rbx)
ffffffff80004ef0: 66 89 ab d6 09 00 00 	movw	%bp, 0x9d6(%rbx)
ffffffff80004ef7: e9 3a 02 00 00       	jmp	0xffffffff80005136 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x936>
ffffffff80004efc: 48 83 c3 f9          	addq	$-0x7, %rbx
ffffffff80004f00: b8 06 00 00 00       	movl	$0x6, %eax
ffffffff80004f05: 4c 89 6c 24 38       	movq	%r13, 0x38(%rsp)
ffffffff80004f0a: 48 89 6c 24 40       	movq	%rbp, 0x40(%rsp)
ffffffff80004f0f: 48 89 44 24 48       	movq	%rax, 0x48(%rsp)
ffffffff80004f14: 48 8d 7c 24 58       	leaq	0x58(%rsp), %rdi
ffffffff80004f19: 48 8d 74 24 38       	leaq	0x38(%rsp), %rsi
ffffffff80004f1e: e8 1d 14 00 00       	callq	0xffffffff80006340 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h75b80278c1f444c3>
ffffffff80004f23: 4c 8b 74 24 68       	movq	0x68(%rsp), %r14
ffffffff80004f28: 41 0f b7 ae d6 09 00 00      	movzwl	0x9d6(%r14), %ebp
ffffffff80004f30: 4c 8d 63 01          	leaq	0x1(%rbx), %r12
ffffffff80004f34: 49 89 ef             	movq	%rbp, %r15
ffffffff80004f37: 49 29 df             	subq	%rbx, %r15
ffffffff80004f3a: 0f 86 a0 00 00 00    	jbe	0xffffffff80004fe0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x7e0>
ffffffff80004f40: 49 8d 86 a8 09 00 00 	leaq	0x9a8(%r14), %rax
ffffffff80004f47: 49 8d 34 9e          	leaq	(%r14,%rbx,4), %rsi
ffffffff80004f4b: 48 81 c6 a8 09 00 00 	addq	$0x9a8, %rsi            # imm = 0x9A8
ffffffff80004f52: 4a 8d 3c a0          	leaq	(%rax,%r12,4), %rdi
ffffffff80004f56: 4a 8d 14 bd 00 00 00 00      	leaq	(,%r15,4), %rdx
ffffffff80004f5e: 48 8b 05 c3 14 03 00 	movq	0x314c3(%rip), %rax     # 0xffffffff80036428
ffffffff80004f65: ff d0                	callq	*%rax
ffffffff80004f67: 8b 44 24 08          	movl	0x8(%rsp), %eax
ffffffff80004f6b: 41 89 84 9e a8 09 00 00      	movl	%eax, 0x9a8(%r14,%rbx,4)
ffffffff80004f73: 4c 69 eb e0 00 00 00 	imulq	$0xe0, %rbx, %r13
ffffffff80004f7a: 4d 01 f5             	addq	%r14, %r13
ffffffff80004f7d: 49 69 fc e0 00 00 00 	imulq	$0xe0, %r12, %rdi
ffffffff80004f84: 4c 01 f7             	addq	%r14, %rdi
ffffffff80004f87: 49 69 d7 e0 00 00 00 	imulq	$0xe0, %r15, %rdx
ffffffff80004f8e: 4c 89 ee             	movq	%r13, %rsi
ffffffff80004f91: ff 15 91 14 03 00    	callq	*0x31491(%rip)          # 0xffffffff80036428
ffffffff80004f97: ba e0 00 00 00       	movl	$0xe0, %edx
ffffffff80004f9c: 4c 89 ef             	movq	%r13, %rdi
ffffffff80004f9f: 48 8d b4 24 48 02 00 00      	leaq	0x248(%rsp), %rsi
ffffffff80004fa7: 4c 8b 2d 72 14 03 00 	movq	0x31472(%rip), %r13     # 0xffffffff80036420
ffffffff80004fae: 41 ff d5             	callq	*%r13
ffffffff80004fb1: 4b 8d 34 e6          	leaq	(%r14,%r12,8), %rsi
ffffffff80004fb5: 48 81 c6 d8 09 00 00 	addq	$0x9d8, %rsi            # imm = 0x9D8
ffffffff80004fbc: 49 8d 3c de          	leaq	(%r14,%rbx,8), %rdi
ffffffff80004fc0: 48 81 c7 e8 09 00 00 	addq	$0x9e8, %rdi            # imm = 0x9E8
ffffffff80004fc7: 4a 8d 14 fd 00 00 00 00      	leaq	(,%r15,8), %rdx
ffffffff80004fcf: ff 15 53 14 03 00    	callq	*0x31453(%rip)          # 0xffffffff80036428
ffffffff80004fd5: eb 36                	jmp	0xffffffff8000500d <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x80d>
ffffffff80004fd7: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
ffffffff80004fe0: 8b 44 24 08          	movl	0x8(%rsp), %eax
ffffffff80004fe4: 41 89 84 9e a8 09 00 00      	movl	%eax, 0x9a8(%r14,%rbx,4)
ffffffff80004fec: 48 69 fb e0 00 00 00 	imulq	$0xe0, %rbx, %rdi
ffffffff80004ff3: 4c 01 f7             	addq	%r14, %rdi
ffffffff80004ff6: ba e0 00 00 00       	movl	$0xe0, %edx
ffffffff80004ffb: 48 8d b4 24 48 02 00 00      	leaq	0x248(%rsp), %rsi
ffffffff80005003: 4c 8b 2d 16 14 03 00 	movq	0x31416(%rip), %r13     # 0xffffffff80036420
ffffffff8000500a: 41 ff d5             	callq	*%r13
ffffffff8000500d: 8d 4d 01             	leal	0x1(%rbp), %ecx
ffffffff80005010: 48 8d 45 02          	leaq	0x2(%rbp), %rax
ffffffff80005014: 48 8b 54 24 20       	movq	0x20(%rsp), %rdx
ffffffff80005019: 49 89 94 de e0 09 00 00      	movq	%rdx, 0x9e0(%r14,%rbx,8)
ffffffff80005021: 66 41 89 8e d6 09 00 00      	movw	%cx, 0x9d6(%r14)
ffffffff80005029: 49 39 c4             	cmpq	%rax, %r12
ffffffff8000502c: 0f 83 1e fd ff ff    	jae	0xffffffff80004d50 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x550>
ffffffff80005032: 29 dd                	subl	%ebx, %ebp
ffffffff80005034: ff c5                	incl	%ebp
ffffffff80005036: 83 e5 03             	andl	$0x3, %ebp
ffffffff80005039: 74 36                	je	0xffffffff80005071 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x871>
ffffffff8000503b: 49 8d 14 de          	leaq	(%r14,%rbx,8), %rdx
ffffffff8000503f: 48 81 c2 e0 09 00 00 	addq	$0x9e0, %rdx            # imm = 0x9E0
ffffffff80005046: 31 c9                	xorl	%ecx, %ecx
ffffffff80005048: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
ffffffff80005050: 48 8b 34 ca          	movq	(%rdx,%rcx,8), %rsi
ffffffff80005054: 4c 89 b6 a0 09 00 00 	movq	%r14, 0x9a0(%rsi)
ffffffff8000505b: 41 8d 3c 0c          	leal	(%r12,%rcx), %edi
ffffffff8000505f: 66 89 be d4 09 00 00 	movw	%di, 0x9d4(%rsi)
ffffffff80005066: 48 ff c1             	incq	%rcx
ffffffff80005069: 48 39 cd             	cmpq	%rcx, %rbp
ffffffff8000506c: 75 e2                	jne	0xffffffff80005050 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x850>
ffffffff8000506e: 49 01 cc             	addq	%rcx, %r12
ffffffff80005071: 49 83 ff 03          	cmpq	$0x3, %r15
ffffffff80005075: 0f 82 d5 fc ff ff    	jb	0xffffffff80004d50 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x550>
ffffffff8000507b: 0f 1f 44 00 00       	nopl	(%rax,%rax)
ffffffff80005080: 4b 8b 8c e6 d8 09 00 00      	movq	0x9d8(%r14,%r12,8), %rcx
ffffffff80005088: 4c 89 b1 a0 09 00 00 	movq	%r14, 0x9a0(%rcx)
ffffffff8000508f: 66 44 89 a1 d4 09 00 00      	movw	%r12w, 0x9d4(%rcx)
ffffffff80005097: 4b 8b 8c e6 e0 09 00 00      	movq	0x9e0(%r14,%r12,8), %rcx
ffffffff8000509f: 4c 89 b1 a0 09 00 00 	movq	%r14, 0x9a0(%rcx)
ffffffff800050a6: 41 8d 54 24 01       	leal	0x1(%r12), %edx
ffffffff800050ab: 66 89 91 d4 09 00 00 	movw	%dx, 0x9d4(%rcx)
ffffffff800050b2: 4b 8b 8c e6 e8 09 00 00      	movq	0x9e8(%r14,%r12,8), %rcx
ffffffff800050ba: 4c 89 b1 a0 09 00 00 	movq	%r14, 0x9a0(%rcx)
ffffffff800050c1: 41 8d 54 24 02       	leal	0x2(%r12), %edx
ffffffff800050c6: 66 89 91 d4 09 00 00 	movw	%dx, 0x9d4(%rcx)
ffffffff800050cd: 4b 8b 8c e6 f0 09 00 00      	movq	0x9f0(%r14,%r12,8), %rcx
ffffffff800050d5: 4c 89 b1 a0 09 00 00 	movq	%r14, 0x9a0(%rcx)
ffffffff800050dc: 41 8d 54 24 03       	leal	0x3(%r12), %edx
ffffffff800050e1: 66 89 91 d4 09 00 00 	movw	%dx, 0x9d4(%rcx)
ffffffff800050e8: 49 83 c4 04          	addq	$0x4, %r12
ffffffff800050ec: 49 39 c4             	cmpq	%rax, %r12
ffffffff800050ef: 75 8f                	jne	0xffffffff80005080 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x880>
ffffffff800050f1: e9 5a fc ff ff       	jmp	0xffffffff80004d50 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x550>
ffffffff800050f6: 8b 44 24 08          	movl	0x8(%rsp), %eax
ffffffff800050fa: 89 83 bc 09 00 00    	movl	%eax, 0x9bc(%rbx)
ffffffff80005100: 48 8d bb 60 04 00 00 	leaq	0x460(%rbx), %rdi
ffffffff80005107: ba e0 00 00 00       	movl	$0xe0, %edx
ffffffff8000510c: 48 8d b4 24 48 02 00 00      	leaq	0x248(%rsp), %rsi
ffffffff80005114: 4c 8b 2d 05 13 03 00 	movq	0x31305(%rip), %r13     # 0xffffffff80036420
ffffffff8000511b: 41 ff d5             	callq	*%r13
ffffffff8000511e: 4c 89 bb 08 0a 00 00 	movq	%r15, 0xa08(%rbx)
ffffffff80005125: 66 89 ab d6 09 00 00 	movw	%bp, 0x9d6(%rbx)
ffffffff8000512c: 41 83 fe 05          	cmpl	$0x5, %r14d
ffffffff80005130: 0f 85 d8 00 00 00    	jne	0xffffffff8000520e <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0xa0e>
ffffffff80005136: 49 8d 4e fb          	leaq	-0x5(%r14), %rcx
ffffffff8000513a: b8 06 00 00 00       	movl	$0x6, %eax
ffffffff8000513f: 48 83 f9 03          	cmpq	$0x3, %rcx
ffffffff80005143: 0f 82 93 00 00 00    	jb	0xffffffff800051dc <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x9dc>
ffffffff80005149: 44 89 f1             	movl	%r14d, %ecx
ffffffff8000514c: 83 e1 fc             	andl	$-0x4, %ecx
ffffffff8000514f: 48 83 c1 f8          	addq	$-0x8, %rcx
ffffffff80005153: b8 44 01 00 00       	movl	$0x144, %eax            # imm = 0x144
ffffffff80005158: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
ffffffff80005160: 48 89 c2             	movq	%rax, %rdx
ffffffff80005163: 48 8b 44 c3 e8       	movq	-0x18(%rbx,%rax,8), %rax
ffffffff80005168: 48 89 98 a0 09 00 00 	movq	%rbx, 0x9a0(%rax)
ffffffff8000516f: 8d b2 c2 fe ff ff    	leal	-0x13e(%rdx), %esi
ffffffff80005175: 66 89 b0 d4 09 00 00 	movw	%si, 0x9d4(%rax)
ffffffff8000517c: 48 8b 44 d3 f0       	movq	-0x10(%rbx,%rdx,8), %rax
ffffffff80005181: 48 89 98 a0 09 00 00 	movq	%rbx, 0x9a0(%rax)
ffffffff80005188: 8d b2 c3 fe ff ff    	leal	-0x13d(%rdx), %esi
ffffffff8000518e: 66 89 b0 d4 09 00 00 	movw	%si, 0x9d4(%rax)
ffffffff80005195: 48 8b 44 d3 f8       	movq	-0x8(%rbx,%rdx,8), %rax
ffffffff8000519a: 48 89 98 a0 09 00 00 	movq	%rbx, 0x9a0(%rax)
ffffffff800051a1: 8d b2 c4 fe ff ff    	leal	-0x13c(%rdx), %esi
ffffffff800051a7: 66 89 b0 d4 09 00 00 	movw	%si, 0x9d4(%rax)
ffffffff800051ae: 48 8b 04 d3          	movq	(%rbx,%rdx,8), %rax
ffffffff800051b2: 48 89 98 a0 09 00 00 	movq	%rbx, 0x9a0(%rax)
ffffffff800051b9: 8d b2 c5 fe ff ff    	leal	-0x13b(%rdx), %esi
ffffffff800051bf: 66 89 b0 d4 09 00 00 	movw	%si, 0x9d4(%rax)
ffffffff800051c6: 48 8d 42 04          	leaq	0x4(%rdx), %rax
ffffffff800051ca: 48 81 c2 bc fe ff ff 	addq	$-0x144, %rdx           # imm = 0xFEBC
ffffffff800051d1: 48 39 ca             	cmpq	%rcx, %rdx
ffffffff800051d4: 75 8a                	jne	0xffffffff80005160 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x960>
ffffffff800051d6: 48 05 c2 fe ff ff    	addq	$-0x13e, %rax           # imm = 0xFEC2
ffffffff800051dc: 41 83 e6 03          	andl	$0x3, %r14d
ffffffff800051e0: 74 2c                	je	0xffffffff8000520e <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0xa0e>
ffffffff800051e2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
ffffffff800051f0: 48 8b 8c c3 d8 09 00 00      	movq	0x9d8(%rbx,%rax,8), %rcx
ffffffff800051f8: 48 89 99 a0 09 00 00 	movq	%rbx, 0x9a0(%rcx)
ffffffff800051ff: 66 89 81 d4 09 00 00 	movw	%ax, 0x9d4(%rcx)
ffffffff80005206: 48 ff c0             	incq	%rax
ffffffff80005209: 49 ff ce             	decq	%r14
ffffffff8000520c: 75 e2                	jne	0xffffffff800051f0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x9f0>
ffffffff8000520e: 48 8b 6c 24 60       	movq	0x60(%rsp), %rbp
ffffffff80005213: 4c 8b 7c 24 68       	movq	0x68(%rsp), %r15
ffffffff80005218: 4c 8b 64 24 70       	movq	0x70(%rsp), %r12
ffffffff8000521d: 8b 44 24 78          	movl	0x78(%rsp), %eax
ffffffff80005221: 89 44 24 08          	movl	%eax, 0x8(%rsp)
ffffffff80005225: ba e4 00 00 00       	movl	$0xe4, %edx
ffffffff8000522a: 4c 8d b4 24 60 01 00 00      	leaq	0x160(%rsp), %r14
ffffffff80005232: 4c 89 f7             	movq	%r14, %rdi
ffffffff80005235: 48 8d 74 24 7c       	leaq	0x7c(%rsp), %rsi
ffffffff8000523a: 41 ff d5             	callq	*%r13
ffffffff8000523d: e9 4b fb ff ff       	jmp	0xffffffff80004d8d <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0x58d>
ffffffff80005242: 4c 89 7c 24 20       	movq	%r15, 0x20(%rsp)
ffffffff80005247: 48 8b 44 24 50       	movq	0x50(%rsp), %rax
ffffffff8000524c: 48 8b 18             	movq	(%rax), %rbx
ffffffff8000524f: 4c 8b 3b             	movq	(%rbx), %r15
ffffffff80005252: 4d 85 ff             	testq	%r15, %r15
ffffffff80005255: 0f 84 52 03 00 00    	je	0xffffffff800055ad <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0xdad>
ffffffff8000525b: 4c 8b 6b 08          	movq	0x8(%rbx), %r13
ffffffff8000525f: 0f b6 05 7b ff 01 00 	movzbl	0x1ff7b(%rip), %eax     # 0xffffffff800251e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80005266: b1 01                	movb	$0x1, %cl
ffffffff80005268: 31 c0                	xorl	%eax, %eax
ffffffff8000526a: f0                   	lock
ffffffff8000526b: 0f b0 0d de fd 01 00 	cmpxchgb	%cl, 0x1fdde(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80005272: 48 8b 6c 24 30       	movq	0x30(%rsp), %rbp
ffffffff80005277: 75 09                	jne	0xffffffff80005282 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0xa82>
ffffffff80005279: eb 1e                	jmp	0xffffffff80005299 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0xa99>
ffffffff8000527b: 0f 1f 44 00 00       	nopl	(%rax,%rax)
ffffffff80005280: f3 90                	pause
ffffffff80005282: 0f b6 05 c7 fd 01 00 	movzbl	0x1fdc7(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80005289: 84 c0                	testb	%al, %al
ffffffff8000528b: 75 f3                	jne	0xffffffff80005280 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0xa80>
ffffffff8000528d: 31 c0                	xorl	%eax, %eax
ffffffff8000528f: f0                   	lock
ffffffff80005290: 0f b0 0d b9 fd 01 00 	cmpxchgb	%cl, 0x1fdb9(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80005297: 75 e9                	jne	0xffffffff80005282 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0xa82>
ffffffff80005299: be 08 00 00 00       	movl	$0x8, %esi
ffffffff8000529e: ba 38 0a 00 00       	movl	$0xa38, %edx            # imm = 0xA38
ffffffff800052a3: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff800052aa: e8 51 e0 ff ff       	callq	0xffffffff80003300 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff800052af: c6 05 9a fd 01 00 00 	movb	$0x0, 0x1fd9a(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff800052b6: 48 85 c0             	testq	%rax, %rax
ffffffff800052b9: 0f 84 fa 02 00 00    	je	0xffffffff800055b9 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0xdb9>
ffffffff800052bf: 49 89 c6             	movq	%rax, %r14
ffffffff800052c2: 48 c7 80 a0 09 00 00 00 00 00 00     	movq	$0x0, 0x9a0(%rax)
ffffffff800052cd: 66 c7 80 d6 09 00 00 00 00   	movw	$0x0, 0x9d6(%rax)
ffffffff800052d6: 4c 89 b8 d8 09 00 00 	movq	%r15, 0x9d8(%rax)
ffffffff800052dd: 49 8d 45 01          	leaq	0x1(%r13), %rax
ffffffff800052e1: 4d 89 b7 a0 09 00 00 	movq	%r14, 0x9a0(%r15)
ffffffff800052e8: 66 41 c7 87 d4 09 00 00 00 00	movw	$0x0, 0x9d4(%r15)
ffffffff800052f2: 4c 89 33             	movq	%r14, (%rbx)
ffffffff800052f5: 48 89 43 08          	movq	%rax, 0x8(%rbx)
ffffffff800052f9: 4d 39 e5             	cmpq	%r12, %r13
ffffffff800052fc: 0f 85 70 02 00 00    	jne	0xffffffff80005572 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0xd72>
ffffffff80005302: 66 41 c7 86 d6 09 00 00 01 00	movw	$0x1, 0x9d6(%r14)
ffffffff8000530c: 8b 44 24 08          	movl	0x8(%rsp), %eax
ffffffff80005310: 41 89 86 a8 09 00 00 	movl	%eax, 0x9a8(%r14)
ffffffff80005317: 48 8d b4 24 48 02 00 00      	leaq	0x248(%rsp), %rsi
ffffffff8000531f: ba e0 00 00 00       	movl	$0xe0, %edx
ffffffff80005324: 4c 89 f7             	movq	%r14, %rdi
ffffffff80005327: ff 15 f3 10 03 00    	callq	*0x310f3(%rip)          # 0xffffffff80036420
ffffffff8000532d: 48 8b 44 24 20       	movq	0x20(%rsp), %rax
ffffffff80005332: 49 89 86 e0 09 00 00 	movq	%rax, 0x9e0(%r14)
ffffffff80005339: 4c 89 b0 a0 09 00 00 	movq	%r14, 0x9a0(%rax)
ffffffff80005340: 66 c7 80 d4 09 00 00 01 00   	movw	$0x1, 0x9d4(%rax)
ffffffff80005349: e9 c8 01 00 00       	jmp	0xffffffff80005516 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0xd16>
ffffffff8000534e: 41 8d 6e 01          	leal	0x1(%r14), %ebp
ffffffff80005352: 4c 8d 63 01          	leaq	0x1(%rbx), %r12
ffffffff80005356: 66 44 39 f3          	cmpw	%r14w, %bx
ffffffff8000535a: 0f 83 a0 00 00 00    	jae	0xffffffff80005400 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0xc00>
ffffffff80005360: 49 8d 85 a8 09 00 00 	leaq	0x9a8(%r13), %rax
ffffffff80005367: 48 8d 34 9d a8 09 00 00      	leaq	0x9a8(,%rbx,4), %rsi
ffffffff8000536f: 4c 01 ee             	addq	%r13, %rsi
ffffffff80005372: 4a 8d 3c a0          	leaq	(%rax,%r12,4), %rdi
ffffffff80005376: 4d 89 f7             	movq	%r14, %r15
ffffffff80005379: 49 29 df             	subq	%rbx, %r15
ffffffff8000537c: 4a 8d 14 bd 00 00 00 00      	leaq	(,%r15,4), %rdx
ffffffff80005384: 48 8b 05 9d 10 03 00 	movq	0x3109d(%rip), %rax     # 0xffffffff80036428
ffffffff8000538b: ff d0                	callq	*%rax
ffffffff8000538d: 8b 44 24 08          	movl	0x8(%rsp), %eax
ffffffff80005391: 41 89 84 9d a8 09 00 00      	movl	%eax, 0x9a8(%r13,%rbx,4)
ffffffff80005399: 89 6c 24 08          	movl	%ebp, 0x8(%rsp)
ffffffff8000539d: 48 69 eb e0 00 00 00 	imulq	$0xe0, %rbx, %rbp
ffffffff800053a4: 4c 01 ed             	addq	%r13, %rbp
ffffffff800053a7: 49 69 fc e0 00 00 00 	imulq	$0xe0, %r12, %rdi
ffffffff800053ae: 4c 01 ef             	addq	%r13, %rdi
ffffffff800053b1: 49 69 d7 e0 00 00 00 	imulq	$0xe0, %r15, %rdx
ffffffff800053b8: 48 89 ee             	movq	%rbp, %rsi
ffffffff800053bb: ff 15 67 10 03 00    	callq	*0x31067(%rip)          # 0xffffffff80036428
ffffffff800053c1: ba e0 00 00 00       	movl	$0xe0, %edx
ffffffff800053c6: 48 89 ef             	movq	%rbp, %rdi
ffffffff800053c9: 8b 6c 24 08          	movl	0x8(%rsp), %ebp
ffffffff800053cd: 48 8d b4 24 48 02 00 00      	leaq	0x248(%rsp), %rsi
ffffffff800053d5: ff 15 45 10 03 00    	callq	*0x31045(%rip)          # 0xffffffff80036420
ffffffff800053db: 4a 8d 34 e5 d8 09 00 00      	leaq	0x9d8(,%r12,8), %rsi
ffffffff800053e3: 4c 01 ee             	addq	%r13, %rsi
ffffffff800053e6: 48 8d 3c dd e8 09 00 00      	leaq	0x9e8(,%rbx,8), %rdi
ffffffff800053ee: 4c 01 ef             	addq	%r13, %rdi
ffffffff800053f1: 49 c1 e7 03          	shlq	$0x3, %r15
ffffffff800053f5: 4c 89 fa             	movq	%r15, %rdx
ffffffff800053f8: ff 15 2a 10 03 00    	callq	*0x3102a(%rip)          # 0xffffffff80036428
ffffffff800053fe: eb 29                	jmp	0xffffffff80005429 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0xc29>
ffffffff80005400: 8b 44 24 08          	movl	0x8(%rsp), %eax
ffffffff80005404: 41 89 84 9d a8 09 00 00      	movl	%eax, 0x9a8(%r13,%rbx,4)
ffffffff8000540c: 48 69 fb e0 00 00 00 	imulq	$0xe0, %rbx, %rdi
ffffffff80005413: 4c 01 ef             	addq	%r13, %rdi
ffffffff80005416: ba e0 00 00 00       	movl	$0xe0, %edx
ffffffff8000541b: 48 8d b4 24 48 02 00 00      	leaq	0x248(%rsp), %rsi
ffffffff80005423: ff 15 f7 0f 03 00    	callq	*0x30ff7(%rip)          # 0xffffffff80036420
ffffffff80005429: 49 8d 46 02          	leaq	0x2(%r14), %rax
ffffffff8000542d: 48 8b 4c 24 20       	movq	0x20(%rsp), %rcx
ffffffff80005432: 49 89 8c dd e0 09 00 00      	movq	%rcx, 0x9e0(%r13,%rbx,8)
ffffffff8000543a: 66 41 89 ad d6 09 00 00      	movw	%bp, 0x9d6(%r13)
ffffffff80005442: 41 39 c4             	cmpl	%eax, %r12d
ffffffff80005445: 0f 83 c6 00 00 00    	jae	0xffffffff80005511 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0xd11>
ffffffff8000544b: 44 89 f1             	movl	%r14d, %ecx
ffffffff8000544e: 29 d9                	subl	%ebx, %ecx
ffffffff80005450: ff c1                	incl	%ecx
ffffffff80005452: 49 29 de             	subq	%rbx, %r14
ffffffff80005455: 83 e1 03             	andl	$0x3, %ecx
ffffffff80005458: 74 38                	je	0xffffffff80005492 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0xc92>
ffffffff8000545a: 48 8d 34 dd e0 09 00 00      	leaq	0x9e0(,%rbx,8), %rsi
ffffffff80005462: 4c 01 ee             	addq	%r13, %rsi
ffffffff80005465: 31 d2                	xorl	%edx, %edx
ffffffff80005467: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
ffffffff80005470: 48 8b 3c d6          	movq	(%rsi,%rdx,8), %rdi
ffffffff80005474: 4c 89 af a0 09 00 00 	movq	%r13, 0x9a0(%rdi)
ffffffff8000547b: 45 8d 04 14          	leal	(%r12,%rdx), %r8d
ffffffff8000547f: 66 44 89 87 d4 09 00 00      	movw	%r8w, 0x9d4(%rdi)
ffffffff80005487: 48 ff c2             	incq	%rdx
ffffffff8000548a: 48 39 d1             	cmpq	%rdx, %rcx
ffffffff8000548d: 75 e1                	jne	0xffffffff80005470 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0xc70>
ffffffff8000548f: 49 01 d4             	addq	%rdx, %r12
ffffffff80005492: 49 83 fe 03          	cmpq	$0x3, %r14
ffffffff80005496: 72 79                	jb	0xffffffff80005511 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0xd11>
ffffffff80005498: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
ffffffff800054a0: 4b 8b 8c e5 d8 09 00 00      	movq	0x9d8(%r13,%r12,8), %rcx
ffffffff800054a8: 4c 89 a9 a0 09 00 00 	movq	%r13, 0x9a0(%rcx)
ffffffff800054af: 66 44 89 a1 d4 09 00 00      	movw	%r12w, 0x9d4(%rcx)
ffffffff800054b7: 4b 8b 8c e5 e0 09 00 00      	movq	0x9e0(%r13,%r12,8), %rcx
ffffffff800054bf: 4c 89 a9 a0 09 00 00 	movq	%r13, 0x9a0(%rcx)
ffffffff800054c6: 41 8d 54 24 01       	leal	0x1(%r12), %edx
ffffffff800054cb: 66 89 91 d4 09 00 00 	movw	%dx, 0x9d4(%rcx)
ffffffff800054d2: 4b 8b 8c e5 e8 09 00 00      	movq	0x9e8(%r13,%r12,8), %rcx
ffffffff800054da: 4c 89 a9 a0 09 00 00 	movq	%r13, 0x9a0(%rcx)
ffffffff800054e1: 41 8d 54 24 02       	leal	0x2(%r12), %edx
ffffffff800054e6: 66 89 91 d4 09 00 00 	movw	%dx, 0x9d4(%rcx)
ffffffff800054ed: 4b 8b 8c e5 f0 09 00 00      	movq	0x9f0(%r13,%r12,8), %rcx
ffffffff800054f5: 4c 89 a9 a0 09 00 00 	movq	%r13, 0x9a0(%rcx)
ffffffff800054fc: 41 8d 54 24 03       	leal	0x3(%r12), %edx
ffffffff80005501: 66 89 91 d4 09 00 00 	movw	%dx, 0x9d4(%rcx)
ffffffff80005508: 49 83 c4 04          	addq	$0x4, %r12
ffffffff8000550c: 49 39 c4             	cmpq	%rax, %r12
ffffffff8000550f: 75 8f                	jne	0xffffffff800054a0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::h9aa0a45ebe1ef5fe+0xca0>
ffffffff80005511: 48 8b 6c 24 30       	movq	0x30(%rsp), %rbp
ffffffff80005516: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff8000551b: 48 89 45 00          	movq	%rax, (%rbp)
ffffffff8000551f: 48 8b 44 24 28       	movq	0x28(%rsp), %rax
ffffffff80005524: 48 89 45 08          	movq	%rax, 0x8(%rbp)
ffffffff80005528: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff8000552d: 48 89 45 10          	movq	%rax, 0x10(%rbp)
ffffffff80005531: 48 89 e8             	movq	%rbp, %rax
ffffffff80005534: 48 81 c4 28 03 00 00 	addq	$0x328, %rsp            # imm = 0x328
ffffffff8000553b: 5b                   	popq	%rbx
ffffffff8000553c: 41 5c                	popq	%r12
ffffffff8000553e: 41 5d                	popq	%r13
ffffffff80005540: 41 5e                	popq	%r14
ffffffff80005542: 41 5f                	popq	%r15
ffffffff80005544: 5d                   	popq	%rbp
ffffffff80005545: c3                   	retq
ffffffff80005546: be 35 00 00 00       	movl	$0x35, %esi
ffffffff8000554b: 48 c7 c7 98 e0 01 80 	movq	$-0x7ffe1f68, %rdi      # imm = 0x8001E098
ffffffff80005552: 48 c7 c2 d0 e0 01 80 	movq	$-0x7ffe1f30, %rdx      # imm = 0x8001E0D0
ffffffff80005559: e8 12 6f 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000555e: be 0b 00 00 00       	movl	$0xb, %esi
ffffffff80005563: 4c 89 e7             	movq	%r12, %rdi
ffffffff80005566: 48 c7 c2 68 e0 01 80 	movq	$-0x7ffe1f98, %rdx      # imm = 0x8001E068
ffffffff8000556d: e8 0e 6a 01 00       	callq	0xffffffff8001bf80 <core::slice::index::slice_end_index_len_fail::h34b67e5519833f02>
ffffffff80005572: be 30 00 00 00       	movl	$0x30, %esi
ffffffff80005577: 48 c7 c7 33 df 01 80 	movq	$-0x7ffe20cd, %rdi      # imm = 0x8001DF33
ffffffff8000557e: 48 c7 c2 68 df 01 80 	movq	$-0x7ffe2098, %rdx      # imm = 0x8001DF68
ffffffff80005585: e8 e6 6e 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000558a: be 0b 00 00 00       	movl	$0xb, %esi
ffffffff8000558f: 4c 89 ef             	movq	%r13, %rdi
ffffffff80005592: 48 c7 c2 68 e0 01 80 	movq	$-0x7ffe1f98, %rdx      # imm = 0x8001E068
ffffffff80005599: e8 e2 69 01 00       	callq	0xffffffff8001bf80 <core::slice::index::slice_end_index_len_fail::h34b67e5519833f02>
ffffffff8000559e: bf 08 00 00 00       	movl	$0x8, %edi
ffffffff800055a3: be d8 09 00 00       	movl	$0x9d8, %esi            # imm = 0x9D8
ffffffff800055a8: e8 b5 3a 01 00       	callq	0xffffffff80019062 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff800055ad: 48 c7 c7 98 de 01 80 	movq	$-0x7ffe2168, %rdi      # imm = 0x8001DE98
ffffffff800055b4: e8 b7 73 01 00       	callq	0xffffffff8001c970 <core::option::unwrap_failed::hd8ef34c781aa10a4>
ffffffff800055b9: bf 08 00 00 00       	movl	$0x8, %edi
ffffffff800055be: be 38 0a 00 00       	movl	$0xa38, %esi            # imm = 0xA38
ffffffff800055c3: e8 9a 3a 01 00       	callq	0xffffffff80019062 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff800055c8: cc                   	int3
ffffffff800055c9: cc                   	int3
ffffffff800055ca: cc                   	int3
ffffffff800055cb: cc                   	int3
ffffffff800055cc: cc                   	int3
ffffffff800055cd: cc                   	int3
ffffffff800055ce: cc                   	int3
ffffffff800055cf: cc                   	int3

ffffffff800055d0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392>:
ffffffff800055d0: 55                   	pushq	%rbp
ffffffff800055d1: 41 57                	pushq	%r15
ffffffff800055d3: 41 56                	pushq	%r14
ffffffff800055d5: 41 55                	pushq	%r13
ffffffff800055d7: 41 54                	pushq	%r12
ffffffff800055d9: 53                   	pushq	%rbx
ffffffff800055da: 48 81 ec a8 00 00 00 	subq	$0xa8, %rsp
ffffffff800055e1: 49 89 fe             	movq	%rdi, %r14
ffffffff800055e4: 4c 8b 26             	movq	(%rsi), %r12
ffffffff800055e7: 41 0f b7 9c 24 8e 00 00 00   	movzwl	0x8e(%r12), %ebx
ffffffff800055f0: 48 83 fb 0b          	cmpq	$0xb, %rbx
ffffffff800055f4: 73 20                	jae	0xffffffff80005616 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x46>
ffffffff800055f6: 4c 8b 6e 10          	movq	0x10(%rsi), %r13
ffffffff800055fa: 4d 8d 7d 01          	leaq	0x1(%r13), %r15
ffffffff800055fe: 4b 8d 04 ac          	leaq	(%r12,%r13,4), %rax
ffffffff80005602: 48 83 c0 60          	addq	$0x60, %rax
ffffffff80005606: 49 39 df             	cmpq	%rbx, %r15
ffffffff80005609: 0f 86 e7 00 00 00    	jbe	0xffffffff800056f6 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x126>
ffffffff8000560f: 89 10                	movl	%edx, (%rax)
ffffffff80005611: e9 42 01 00 00       	jmp	0xffffffff80005758 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x188>
ffffffff80005616: 4d 89 c7             	movq	%r8, %r15
ffffffff80005619: 48 89 4c 24 28       	movq	%rcx, 0x28(%rsp)
ffffffff8000561e: 48 8b 6e 08          	movq	0x8(%rsi), %rbp
ffffffff80005622: 48 8b 5e 10          	movq	0x10(%rsi), %rbx
ffffffff80005626: 0f b6 05 b4 fb 01 00 	movzbl	0x1fbb4(%rip), %eax     # 0xffffffff800251e1 <__rust_no_alloc_shim_is_unstable>
ffffffff8000562d: b1 01                	movb	$0x1, %cl
ffffffff8000562f: 90                   	nop
ffffffff80005630: 31 c0                	xorl	%eax, %eax
ffffffff80005632: f0                   	lock
ffffffff80005633: 0f b0 0d 16 fa 01 00 	cmpxchgb	%cl, 0x1fa16(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000563a: 75 06                	jne	0xffffffff80005642 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x72>
ffffffff8000563c: eb 11                	jmp	0xffffffff8000564f <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x7f>
ffffffff8000563e: 66 90                	nop
ffffffff80005640: f3 90                	pause
ffffffff80005642: 0f b6 05 07 fa 01 00 	movzbl	0x1fa07(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80005649: 84 c0                	testb	%al, %al
ffffffff8000564b: 75 f3                	jne	0xffffffff80005640 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x70>
ffffffff8000564d: eb e1                	jmp	0xffffffff80005630 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x60>
ffffffff8000564f: 89 54 24 24          	movl	%edx, 0x24(%rsp)
ffffffff80005653: be 08 00 00 00       	movl	$0x8, %esi
ffffffff80005658: ba 90 00 00 00       	movl	$0x90, %edx
ffffffff8000565d: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff80005664: e8 97 dc ff ff       	callq	0xffffffff80003300 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80005669: c6 05 e0 f9 01 00 00 	movb	$0x0, 0x1f9e0(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80005670: 48 85 c0             	testq	%rax, %rax
ffffffff80005673: 0f 84 7d 0a 00 00    	je	0xffffffff800060f6 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xb26>
ffffffff80005679: 48 c7 00 00 00 00 00 	movq	$0x0, (%rax)
ffffffff80005680: 66 c7 80 8e 00 00 00 00 00   	movw	$0x0, 0x8e(%rax)
ffffffff80005689: 48 83 fb 05          	cmpq	$0x5, %rbx
ffffffff8000568d: 4c 89 74 24 48       	movq	%r14, 0x48(%rsp)
ffffffff80005692: 4c 89 bc 24 a0 00 00 00      	movq	%r15, 0xa0(%rsp)
ffffffff8000569a: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff8000569f: 0f 83 cc 00 00 00    	jae	0xffffffff80005771 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x1a1>
ffffffff800056a5: 45 0f b7 ac 24 8e 00 00 00   	movzwl	0x8e(%r12), %r13d
ffffffff800056ae: 49 83 c5 fb          	addq	$-0x5, %r13
ffffffff800056b2: 66 44 89 a8 8e 00 00 00      	movw	%r13w, 0x8e(%rax)
ffffffff800056ba: 49 83 fd 0c          	cmpq	$0xc, %r13
ffffffff800056be: 0f 83 f2 09 00 00    	jae	0xffffffff800060b6 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xae6>
ffffffff800056c4: 49 8d 7c 24 28       	leaq	0x28(%r12), %rdi
ffffffff800056c9: 49 8d 4c 24 70       	leaq	0x70(%r12), %rcx
ffffffff800056ce: 66 c7 44 24 0e 04 00 	movw	$0x4, 0xe(%rsp)
ffffffff800056d5: ba 30 00 00 00       	movl	$0x30, %edx
ffffffff800056da: 48 89 54 24 50       	movq	%rdx, 0x50(%rsp)
ffffffff800056df: be 74 00 00 00       	movl	$0x74, %esi
ffffffff800056e4: 48 89 6c 24 40       	movq	%rbp, 0x40(%rsp)
ffffffff800056e9: 4d 89 e7             	movq	%r12, %r15
ffffffff800056ec: 48 89 5c 24 38       	movq	%rbx, 0x38(%rsp)
ffffffff800056f1: e9 d1 02 00 00       	jmp	0xffffffff800059c7 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x3f7>
ffffffff800056f6: 48 89 4c 24 28       	movq	%rcx, 0x28(%rsp)
ffffffff800056fb: 49 8d 4c 24 60       	leaq	0x60(%r12), %rcx
ffffffff80005700: 4a 8d 3c b9          	leaq	(%rcx,%r15,4), %rdi
ffffffff80005704: 4c 89 74 24 48       	movq	%r14, 0x48(%rsp)
ffffffff80005709: 49 89 de             	movq	%rbx, %r14
ffffffff8000570c: 4d 29 ee             	subq	%r13, %r14
ffffffff8000570f: 89 d5                	movl	%edx, %ebp
ffffffff80005711: 4a 8d 14 b5 00 00 00 00      	leaq	(,%r14,4), %rdx
ffffffff80005719: 48 89 74 24 18       	movq	%rsi, 0x18(%rsp)
ffffffff8000571e: 48 89 c6             	movq	%rax, %rsi
ffffffff80005721: ff 15 01 0d 03 00    	callq	*0x30d01(%rip)          # 0xffffffff80036428
ffffffff80005727: 43 89 6c ac 60       	movl	%ebp, 0x60(%r12,%r13,4)
ffffffff8000572c: 4b 8d 34 ec          	leaq	(%r12,%r13,8), %rsi
ffffffff80005730: 48 83 c6 08          	addq	$0x8, %rsi
ffffffff80005734: 4b 8d 3c fc          	leaq	(%r12,%r15,8), %rdi
ffffffff80005738: 48 83 c7 08          	addq	$0x8, %rdi
ffffffff8000573c: 49 c1 e6 03          	shlq	$0x3, %r14
ffffffff80005740: 4c 89 f2             	movq	%r14, %rdx
ffffffff80005743: 4c 8b 74 24 48       	movq	0x48(%rsp), %r14
ffffffff80005748: ff 15 da 0c 03 00    	callq	*0x30cda(%rip)          # 0xffffffff80036428
ffffffff8000574e: 48 8b 4c 24 28       	movq	0x28(%rsp), %rcx
ffffffff80005753: 48 8b 74 24 18       	movq	0x18(%rsp), %rsi
ffffffff80005758: ff c3                	incl	%ebx
ffffffff8000575a: 4b 89 4c ec 08       	movq	%rcx, 0x8(%r12,%r13,8)
ffffffff8000575f: 66 41 89 9c 24 8e 00 00 00   	movw	%bx, 0x8e(%r12)
ffffffff80005768: 48 8b 6e 08          	movq	0x8(%rsi), %rbp
ffffffff8000576c: e9 0d 09 00 00       	jmp	0xffffffff8000607e <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xaae>
ffffffff80005771: 74 57                	je	0xffffffff800057ca <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x1fa>
ffffffff80005773: 48 83 fb 06          	cmpq	$0x6, %rbx
ffffffff80005777: 0f 85 f6 01 00 00    	jne	0xffffffff80005973 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x3a3>
ffffffff8000577d: 45 0f b7 ac 24 8e 00 00 00   	movzwl	0x8e(%r12), %r13d
ffffffff80005786: 49 83 c5 fa          	addq	$-0x6, %r13
ffffffff8000578a: 66 44 89 a8 8e 00 00 00      	movw	%r13w, 0x8e(%rax)
ffffffff80005792: 49 83 fd 0c          	cmpq	$0xc, %r13
ffffffff80005796: 0f 83 1a 09 00 00    	jae	0xffffffff800060b6 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xae6>
ffffffff8000579c: 49 8d 7c 24 30       	leaq	0x30(%r12), %rdi
ffffffff800057a1: 49 8d 4c 24 74       	leaq	0x74(%r12), %rcx
ffffffff800057a6: 66 c7 44 24 0e 05 00 	movw	$0x5, 0xe(%rsp)
ffffffff800057ad: ba 38 00 00 00       	movl	$0x38, %edx
ffffffff800057b2: 48 89 54 24 50       	movq	%rdx, 0x50(%rsp)
ffffffff800057b7: be 78 00 00 00       	movl	$0x78, %esi
ffffffff800057bc: 48 c7 44 24 38 00 00 00 00   	movq	$0x0, 0x38(%rsp)
ffffffff800057c5: e9 f1 01 00 00       	jmp	0xffffffff800059bb <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x3eb>
ffffffff800057ca: 45 0f b7 b4 24 8e 00 00 00   	movzwl	0x8e(%r12), %r14d
ffffffff800057d3: 49 83 c6 fa          	addq	$-0x6, %r14
ffffffff800057d7: 66 44 89 b0 8e 00 00 00      	movw	%r14w, 0x8e(%rax)
ffffffff800057df: 49 83 fe 0c          	cmpq	$0xc, %r14
ffffffff800057e3: 0f 83 f9 08 00 00    	jae	0xffffffff800060e2 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xb12>
ffffffff800057e9: 49 8b 4c 24 30       	movq	0x30(%r12), %rcx
ffffffff800057ee: 48 89 4c 24 18       	movq	%rcx, 0x18(%rsp)
ffffffff800057f3: 41 8b 4c 24 74       	movl	0x74(%r12), %ecx
ffffffff800057f8: 89 4c 24 10          	movl	%ecx, 0x10(%rsp)
ffffffff800057fc: 49 89 c7             	movq	%rax, %r15
ffffffff800057ff: 48 8d 78 60          	leaq	0x60(%rax), %rdi
ffffffff80005803: 49 8d 74 24 78       	leaq	0x78(%r12), %rsi
ffffffff80005808: 4a 8d 14 b5 00 00 00 00      	leaq	(,%r14,4), %rdx
ffffffff80005810: 48 8b 1d 09 0c 03 00 	movq	0x30c09(%rip), %rbx     # 0xffffffff80036420
ffffffff80005817: ff d3                	callq	*%rbx
ffffffff80005819: 49 8d 74 24 38       	leaq	0x38(%r12), %rsi
ffffffff8000581e: 4c 89 ff             	movq	%r15, %rdi
ffffffff80005821: 48 83 c7 08          	addq	$0x8, %rdi
ffffffff80005825: 49 c1 e6 03          	shlq	$0x3, %r14
ffffffff80005829: 4c 89 f2             	movq	%r14, %rdx
ffffffff8000582c: ff d3                	callq	*%rbx
ffffffff8000582e: 8b 44 24 24          	movl	0x24(%rsp), %eax
ffffffff80005832: 41 89 44 24 74       	movl	%eax, 0x74(%r12)
ffffffff80005837: 48 8b 44 24 28       	movq	0x28(%rsp), %rax
ffffffff8000583c: 49 89 44 24 30       	movq	%rax, 0x30(%r12)
ffffffff80005841: 66 41 c7 84 24 8e 00 00 00 06 00     	movw	$0x6, 0x8e(%r12)
ffffffff8000584c: b8 05 00 00 00       	movl	$0x5, %eax
ffffffff80005851: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff80005856: 48 89 6c 24 40       	movq	%rbp, 0x40(%rsp)
ffffffff8000585b: 4c 89 64 24 28       	movq	%r12, 0x28(%rsp)
ffffffff80005860: 4d 8b 2c 24          	movq	(%r12), %r13
ffffffff80005864: 45 31 f6             	xorl	%r14d, %r14d
ffffffff80005867: 4d 85 ed             	testq	%r13, %r13
ffffffff8000586a: 0f 85 36 02 00 00    	jne	0xffffffff80005aa6 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x4d6>
ffffffff80005870: 48 8b 4c 24 30       	movq	0x30(%rsp), %rcx
ffffffff80005875: 48 8b 84 24 a0 00 00 00      	movq	0xa0(%rsp), %rax
ffffffff8000587d: 48 8b 18             	movq	(%rax), %rbx
ffffffff80005880: 4c 8b 3b             	movq	(%rbx), %r15
ffffffff80005883: 4d 85 ff             	testq	%r15, %r15
ffffffff80005886: 0f 84 79 08 00 00    	je	0xffffffff80006105 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xb35>
ffffffff8000588c: 48 89 4c 24 30       	movq	%rcx, 0x30(%rsp)
ffffffff80005891: 4c 8b 63 08          	movq	0x8(%rbx), %r12
ffffffff80005895: 0f b6 05 45 f9 01 00 	movzbl	0x1f945(%rip), %eax     # 0xffffffff800251e1 <__rust_no_alloc_shim_is_unstable>
ffffffff8000589c: b1 01                	movb	$0x1, %cl
ffffffff8000589e: 31 c0                	xorl	%eax, %eax
ffffffff800058a0: f0                   	lock
ffffffff800058a1: 0f b0 0d a8 f7 01 00 	cmpxchgb	%cl, 0x1f7a8(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff800058a8: 4c 8b 6c 24 38       	movq	0x38(%rsp), %r13
ffffffff800058ad: 48 8b 6c 24 40       	movq	0x40(%rsp), %rbp
ffffffff800058b2: 75 0e                	jne	0xffffffff800058c2 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x2f2>
ffffffff800058b4: eb 23                	jmp	0xffffffff800058d9 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x309>
ffffffff800058b6: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
ffffffff800058c0: f3 90                	pause
ffffffff800058c2: 0f b6 05 87 f7 01 00 	movzbl	0x1f787(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff800058c9: 84 c0                	testb	%al, %al
ffffffff800058cb: 75 f3                	jne	0xffffffff800058c0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x2f0>
ffffffff800058cd: 31 c0                	xorl	%eax, %eax
ffffffff800058cf: f0                   	lock
ffffffff800058d0: 0f b0 0d 79 f7 01 00 	cmpxchgb	%cl, 0x1f779(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff800058d7: 75 e9                	jne	0xffffffff800058c2 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x2f2>
ffffffff800058d9: be 08 00 00 00       	movl	$0x8, %esi
ffffffff800058de: ba f0 00 00 00       	movl	$0xf0, %edx
ffffffff800058e3: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff800058ea: e8 11 da ff ff       	callq	0xffffffff80003300 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff800058ef: c6 05 5a f7 01 00 00 	movb	$0x0, 0x1f75a(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff800058f6: 48 85 c0             	testq	%rax, %rax
ffffffff800058f9: 0f 84 12 08 00 00    	je	0xffffffff80006111 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xb41>
ffffffff800058ff: 48 c7 00 00 00 00 00 	movq	$0x0, (%rax)
ffffffff80005906: 66 c7 80 8e 00 00 00 00 00   	movw	$0x0, 0x8e(%rax)
ffffffff8000590f: 4c 89 b8 90 00 00 00 	movq	%r15, 0x90(%rax)
ffffffff80005916: 49 8d 4c 24 01       	leaq	0x1(%r12), %rcx
ffffffff8000591b: 49 89 07             	movq	%rax, (%r15)
ffffffff8000591e: 66 41 c7 87 8c 00 00 00 00 00	movw	$0x0, 0x8c(%r15)
ffffffff80005928: 48 89 03             	movq	%rax, (%rbx)
ffffffff8000592b: 48 89 4b 08          	movq	%rcx, 0x8(%rbx)
ffffffff8000592f: 4d 39 f4             	cmpq	%r14, %r12
ffffffff80005932: 48 8b 4c 24 30       	movq	0x30(%rsp), %rcx
ffffffff80005937: 0f 85 8d 07 00 00    	jne	0xffffffff800060ca <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xafa>
ffffffff8000593d: 66 c7 80 8e 00 00 00 01 00   	movw	$0x1, 0x8e(%rax)
ffffffff80005946: 8b 54 24 10          	movl	0x10(%rsp), %edx
ffffffff8000594a: 89 50 60             	movl	%edx, 0x60(%rax)
ffffffff8000594d: 48 8b 54 24 18       	movq	0x18(%rsp), %rdx
ffffffff80005952: 48 89 50 08          	movq	%rdx, 0x8(%rax)
ffffffff80005956: 48 89 88 98 00 00 00 	movq	%rcx, 0x98(%rax)
ffffffff8000595d: 48 89 01             	movq	%rax, (%rcx)
ffffffff80005960: 66 c7 81 8c 00 00 00 01 00   	movw	$0x1, 0x8c(%rcx)
ffffffff80005969: 4c 8b 74 24 48       	movq	0x48(%rsp), %r14
ffffffff8000596e: e9 06 07 00 00       	jmp	0xffffffff80006079 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xaa9>
ffffffff80005973: 45 0f b7 ac 24 8e 00 00 00   	movzwl	0x8e(%r12), %r13d
ffffffff8000597c: 49 83 c5 f9          	addq	$-0x7, %r13
ffffffff80005980: 66 44 89 a8 8e 00 00 00      	movw	%r13w, 0x8e(%rax)
ffffffff80005988: 49 83 fd 0c          	cmpq	$0xc, %r13
ffffffff8000598c: 0f 83 24 07 00 00    	jae	0xffffffff800060b6 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xae6>
ffffffff80005992: 49 8d 7c 24 38       	leaq	0x38(%r12), %rdi
ffffffff80005997: 49 8d 4c 24 78       	leaq	0x78(%r12), %rcx
ffffffff8000599c: 48 83 c3 f9          	addq	$-0x7, %rbx
ffffffff800059a0: 48 89 5c 24 38       	movq	%rbx, 0x38(%rsp)
ffffffff800059a5: 66 c7 44 24 0e 06 00 	movw	$0x6, 0xe(%rsp)
ffffffff800059ac: ba 40 00 00 00       	movl	$0x40, %edx
ffffffff800059b1: 48 89 54 24 50       	movq	%rdx, 0x50(%rsp)
ffffffff800059b6: be 7c 00 00 00       	movl	$0x7c, %esi
ffffffff800059bb: 48 c7 44 24 40 00 00 00 00   	movq	$0x0, 0x40(%rsp)
ffffffff800059c4: 49 89 c7             	movq	%rax, %r15
ffffffff800059c7: 8b 09                	movl	(%rcx), %ecx
ffffffff800059c9: 89 4c 24 10          	movl	%ecx, 0x10(%rsp)
ffffffff800059cd: 48 8b 0f             	movq	(%rdi), %rcx
ffffffff800059d0: 48 89 4c 24 18       	movq	%rcx, 0x18(%rsp)
ffffffff800059d5: 48 89 c3             	movq	%rax, %rbx
ffffffff800059d8: 48 8d 78 60          	leaq	0x60(%rax), %rdi
ffffffff800059dc: 4c 01 e6             	addq	%r12, %rsi
ffffffff800059df: 4a 8d 14 ad 00 00 00 00      	leaq	(,%r13,4), %rdx
ffffffff800059e7: 4c 8b 35 32 0a 03 00 	movq	0x30a32(%rip), %r14     # 0xffffffff80036420
ffffffff800059ee: 41 ff d6             	callq	*%r14
ffffffff800059f1: 48 8b 74 24 50       	movq	0x50(%rsp), %rsi
ffffffff800059f6: 4c 01 e6             	addq	%r12, %rsi
ffffffff800059f9: 48 83 c3 08          	addq	$0x8, %rbx
ffffffff800059fd: 49 c1 e5 03          	shlq	$0x3, %r13
ffffffff80005a01: 48 89 df             	movq	%rbx, %rdi
ffffffff80005a04: 4c 89 ea             	movq	%r13, %rdx
ffffffff80005a07: 41 ff d6             	callq	*%r14
ffffffff80005a0a: 0f b7 44 24 0e       	movzwl	0xe(%rsp), %eax
ffffffff80005a0f: 66 41 89 84 24 8e 00 00 00   	movw	%ax, 0x8e(%r12)
ffffffff80005a18: 41 0f b7 9f 8e 00 00 00      	movzwl	0x8e(%r15), %ebx
ffffffff80005a20: 49 89 de             	movq	%rbx, %r14
ffffffff80005a23: 4c 8b 6c 24 38       	movq	0x38(%rsp), %r13
ffffffff80005a28: 4b 8d 34 af          	leaq	(%r15,%r13,4), %rsi
ffffffff80005a2c: 48 83 c6 60          	addq	$0x60, %rsi
ffffffff80005a30: 4d 29 ee             	subq	%r13, %r14
ffffffff80005a33: 76 42                	jbe	0xffffffff80005a77 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x4a7>
ffffffff80005a35: 49 8d 47 60          	leaq	0x60(%r15), %rax
ffffffff80005a39: 4a 8d 3c a8          	leaq	(%rax,%r13,4), %rdi
ffffffff80005a3d: 48 83 c7 04          	addq	$0x4, %rdi
ffffffff80005a41: 4a 8d 14 b5 00 00 00 00      	leaq	(,%r14,4), %rdx
ffffffff80005a49: ff 15 d9 09 03 00    	callq	*0x309d9(%rip)          # 0xffffffff80036428
ffffffff80005a4f: 8b 44 24 24          	movl	0x24(%rsp), %eax
ffffffff80005a53: 43 89 44 af 60       	movl	%eax, 0x60(%r15,%r13,4)
ffffffff80005a58: 4b 8d 34 ef          	leaq	(%r15,%r13,8), %rsi
ffffffff80005a5c: 48 83 c6 08          	addq	$0x8, %rsi
ffffffff80005a60: 4b 8d 3c ef          	leaq	(%r15,%r13,8), %rdi
ffffffff80005a64: 48 83 c7 10          	addq	$0x10, %rdi
ffffffff80005a68: 49 c1 e6 03          	shlq	$0x3, %r14
ffffffff80005a6c: 4c 89 f2             	movq	%r14, %rdx
ffffffff80005a6f: ff 15 b3 09 03 00    	callq	*0x309b3(%rip)          # 0xffffffff80036428
ffffffff80005a75: eb 06                	jmp	0xffffffff80005a7d <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x4ad>
ffffffff80005a77: 8b 44 24 24          	movl	0x24(%rsp), %eax
ffffffff80005a7b: 89 06                	movl	%eax, (%rsi)
ffffffff80005a7d: 48 8b 44 24 28       	movq	0x28(%rsp), %rax
ffffffff80005a82: ff c3                	incl	%ebx
ffffffff80005a84: 4b 89 44 ef 08       	movq	%rax, 0x8(%r15,%r13,8)
ffffffff80005a89: 4c 89 7c 24 28       	movq	%r15, 0x28(%rsp)
ffffffff80005a8e: 66 41 89 9f 8e 00 00 00      	movw	%bx, 0x8e(%r15)
ffffffff80005a96: 4d 8b 2c 24          	movq	(%r12), %r13
ffffffff80005a9a: 45 31 f6             	xorl	%r14d, %r14d
ffffffff80005a9d: 4d 85 ed             	testq	%r13, %r13
ffffffff80005aa0: 0f 84 ca fd ff ff    	je	0xffffffff80005870 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x2a0>
ffffffff80005aa6: 48 8b 4c 24 30       	movq	0x30(%rsp), %rcx
ffffffff80005aab: eb 4b                	jmp	0xffffffff80005af8 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x528>
ffffffff80005aad: 0f 1f 00             	nopl	(%rax)
ffffffff80005ab0: 4c 8b 64 24 70       	movq	0x70(%rsp), %r12
ffffffff80005ab5: 4d 85 e4             	testq	%r12, %r12
ffffffff80005ab8: 0f 84 ac 05 00 00    	je	0xffffffff8000606a <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xa9a>
ffffffff80005abe: 48 8b 6c 24 78       	movq	0x78(%rsp), %rbp
ffffffff80005ac3: 48 8b 8c 24 80 00 00 00      	movq	0x80(%rsp), %rcx
ffffffff80005acb: 4c 8b b4 24 88 00 00 00      	movq	0x88(%rsp), %r14
ffffffff80005ad3: 8b 84 24 90 00 00 00 	movl	0x90(%rsp), %eax
ffffffff80005ada: 89 44 24 10          	movl	%eax, 0x10(%rsp)
ffffffff80005ade: 48 8b 84 24 98 00 00 00      	movq	0x98(%rsp), %rax
ffffffff80005ae6: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff80005aeb: 4d 8b 2c 24          	movq	(%r12), %r13
ffffffff80005aef: 4d 85 ed             	testq	%r13, %r13
ffffffff80005af2: 0f 84 7d fd ff ff    	je	0xffffffff80005875 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x2a5>
ffffffff80005af8: 4c 39 f5             	cmpq	%r14, %rbp
ffffffff80005afb: 0f 85 9d 05 00 00    	jne	0xffffffff8000609e <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xace>
ffffffff80005b01: 45 0f b7 a4 24 8c 00 00 00   	movzwl	0x8c(%r12), %r12d
ffffffff80005b0a: 45 0f b7 b5 8e 00 00 00      	movzwl	0x8e(%r13), %r14d
ffffffff80005b12: 49 83 fe 0b          	cmpq	$0xb, %r14
ffffffff80005b16: 0f 82 b3 03 00 00    	jb	0xffffffff80005ecf <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x8ff>
ffffffff80005b1c: 48 ff c5             	incq	%rbp
ffffffff80005b1f: 66 41 83 fc 05       	cmpw	$0x5, %r12w
ffffffff80005b24: 73 3a                	jae	0xffffffff80005b60 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x590>
ffffffff80005b26: 48 89 4c 24 30       	movq	%rcx, 0x30(%rsp)
ffffffff80005b2b: 4c 89 6c 24 58       	movq	%r13, 0x58(%rsp)
ffffffff80005b30: 48 89 6c 24 60       	movq	%rbp, 0x60(%rsp)
ffffffff80005b35: 48 c7 44 24 68 04 00 00 00   	movq	$0x4, 0x68(%rsp)
ffffffff80005b3e: 48 8d 7c 24 70       	leaq	0x70(%rsp), %rdi
ffffffff80005b43: 48 8d 74 24 58       	leaq	0x58(%rsp), %rsi
ffffffff80005b48: e8 d3 05 00 00       	callq	0xffffffff80006120 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0ab4f6d5b4b4dfa2>
ffffffff80005b4d: 4c 8b 6c 24 70       	movq	0x70(%rsp), %r13
ffffffff80005b52: e9 0b 01 00 00       	jmp	0xffffffff80005c62 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x692>
ffffffff80005b57: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
ffffffff80005b60: 49 83 fc 05          	cmpq	$0x5, %r12
ffffffff80005b64: 74 1c                	je	0xffffffff80005b82 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x5b2>
ffffffff80005b66: 41 83 fc 06          	cmpl	$0x6, %r12d
ffffffff80005b6a: 48 89 4c 24 30       	movq	%rcx, 0x30(%rsp)
ffffffff80005b6f: 0f 85 be 00 00 00    	jne	0xffffffff80005c33 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x663>
ffffffff80005b75: b8 05 00 00 00       	movl	$0x5, %eax
ffffffff80005b7a: 45 31 e4             	xorl	%r12d, %r12d
ffffffff80005b7d: e9 ba 00 00 00       	jmp	0xffffffff80005c3c <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x66c>
ffffffff80005b82: 49 89 cf             	movq	%rcx, %r15
ffffffff80005b85: 4c 89 6c 24 58       	movq	%r13, 0x58(%rsp)
ffffffff80005b8a: 48 89 6c 24 60       	movq	%rbp, 0x60(%rsp)
ffffffff80005b8f: 48 c7 44 24 68 05 00 00 00   	movq	$0x5, 0x68(%rsp)
ffffffff80005b98: 48 8d 7c 24 70       	leaq	0x70(%rsp), %rdi
ffffffff80005b9d: 48 8d 74 24 58       	leaq	0x58(%rsp), %rsi
ffffffff80005ba2: e8 79 05 00 00       	callq	0xffffffff80006120 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0ab4f6d5b4b4dfa2>
ffffffff80005ba7: 4c 8b 64 24 70       	movq	0x70(%rsp), %r12
ffffffff80005bac: 45 0f b7 ac 24 8e 00 00 00   	movzwl	0x8e(%r12), %r13d
ffffffff80005bb5: 41 8d 5d 01          	leal	0x1(%r13), %ebx
ffffffff80005bb9: 49 83 fd 06          	cmpq	$0x6, %r13
ffffffff80005bbd: 0f 82 2c 02 00 00    	jb	0xffffffff80005def <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x81f>
ffffffff80005bc3: 49 8d 74 24 74       	leaq	0x74(%r12), %rsi
ffffffff80005bc8: 49 8d 7c 24 78       	leaq	0x78(%r12), %rdi
ffffffff80005bcd: 4a 8d 14 ad ec ff ff ff      	leaq	-0x14(,%r13,4), %rdx
ffffffff80005bd5: 48 8b 2d 4c 08 03 00 	movq	0x3084c(%rip), %rbp     # 0xffffffff80036428
ffffffff80005bdc: ff d5                	callq	*%rbp
ffffffff80005bde: 8b 44 24 10          	movl	0x10(%rsp), %eax
ffffffff80005be2: 41 89 44 24 74       	movl	%eax, 0x74(%r12)
ffffffff80005be7: 49 8d 74 24 30       	leaq	0x30(%r12), %rsi
ffffffff80005bec: 49 8d 7c 24 38       	leaq	0x38(%r12), %rdi
ffffffff80005bf1: 4e 8d 34 ed d8 ff ff ff      	leaq	-0x28(,%r13,8), %r14
ffffffff80005bf9: 4c 89 f2             	movq	%r14, %rdx
ffffffff80005bfc: ff d5                	callq	*%rbp
ffffffff80005bfe: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff80005c03: 49 89 44 24 30       	movq	%rax, 0x30(%r12)
ffffffff80005c08: 49 8d b4 24 c0 00 00 00      	leaq	0xc0(%r12), %rsi
ffffffff80005c10: 49 8d bc 24 c8 00 00 00      	leaq	0xc8(%r12), %rdi
ffffffff80005c18: 4c 89 f2             	movq	%r14, %rdx
ffffffff80005c1b: ff d5                	callq	*%rbp
ffffffff80005c1d: 4d 89 bc 24 c0 00 00 00      	movq	%r15, 0xc0(%r12)
ffffffff80005c25: 66 41 89 9c 24 8e 00 00 00   	movw	%bx, 0x8e(%r12)
ffffffff80005c2e: e9 ea 01 00 00       	jmp	0xffffffff80005e1d <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x84d>
ffffffff80005c33: 49 83 c4 f9          	addq	$-0x7, %r12
ffffffff80005c37: b8 06 00 00 00       	movl	$0x6, %eax
ffffffff80005c3c: 4c 89 6c 24 58       	movq	%r13, 0x58(%rsp)
ffffffff80005c41: 48 89 6c 24 60       	movq	%rbp, 0x60(%rsp)
ffffffff80005c46: 48 89 44 24 68       	movq	%rax, 0x68(%rsp)
ffffffff80005c4b: 48 8d 7c 24 70       	leaq	0x70(%rsp), %rdi
ffffffff80005c50: 48 8d 74 24 58       	leaq	0x58(%rsp), %rsi
ffffffff80005c55: e8 c6 04 00 00       	callq	0xffffffff80006120 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0ab4f6d5b4b4dfa2>
ffffffff80005c5a: 4c 8b ac 24 80 00 00 00      	movq	0x80(%rsp), %r13
ffffffff80005c62: 45 0f b7 bd 8e 00 00 00      	movzwl	0x8e(%r13), %r15d
ffffffff80005c6a: 49 8d 6c 24 01       	leaq	0x1(%r12), %rbp
ffffffff80005c6f: 4c 89 fb             	movq	%r15, %rbx
ffffffff80005c72: 4c 29 e3             	subq	%r12, %rbx
ffffffff80005c75: 0f 86 85 00 00 00    	jbe	0xffffffff80005d00 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x730>
ffffffff80005c7b: 49 8d 45 60          	leaq	0x60(%r13), %rax
ffffffff80005c7f: 4a 8d 34 a5 60 00 00 00      	leaq	0x60(,%r12,4), %rsi
ffffffff80005c87: 4c 01 ee             	addq	%r13, %rsi
ffffffff80005c8a: 48 8d 3c a8          	leaq	(%rax,%rbp,4), %rdi
ffffffff80005c8e: 48 8d 14 9d 00 00 00 00      	leaq	(,%rbx,4), %rdx
ffffffff80005c96: 48 8b 05 8b 07 03 00 	movq	0x3078b(%rip), %rax     # 0xffffffff80036428
ffffffff80005c9d: ff d0                	callq	*%rax
ffffffff80005c9f: 8b 44 24 10          	movl	0x10(%rsp), %eax
ffffffff80005ca3: 43 89 44 a5 60       	movl	%eax, 0x60(%r13,%r12,4)
ffffffff80005ca8: 4a 8d 34 e5 08 00 00 00      	leaq	0x8(,%r12,8), %rsi
ffffffff80005cb0: 4c 01 ee             	addq	%r13, %rsi
ffffffff80005cb3: 48 8d 3c ed 08 00 00 00      	leaq	0x8(,%rbp,8), %rdi
ffffffff80005cbb: 4c 01 ef             	addq	%r13, %rdi
ffffffff80005cbe: 4c 8d 34 dd 00 00 00 00      	leaq	(,%rbx,8), %r14
ffffffff80005cc6: 4c 89 f2             	movq	%r14, %rdx
ffffffff80005cc9: ff 15 59 07 03 00    	callq	*0x30759(%rip)          # 0xffffffff80036428
ffffffff80005ccf: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff80005cd4: 4b 89 44 e5 08       	movq	%rax, 0x8(%r13,%r12,8)
ffffffff80005cd9: 48 8d 34 ed 90 00 00 00      	leaq	0x90(,%rbp,8), %rsi
ffffffff80005ce1: 4c 01 ee             	addq	%r13, %rsi
ffffffff80005ce4: 4a 8d 3c e5 a0 00 00 00      	leaq	0xa0(,%r12,8), %rdi
ffffffff80005cec: 4c 01 ef             	addq	%r13, %rdi
ffffffff80005cef: 4c 89 f2             	movq	%r14, %rdx
ffffffff80005cf2: ff 15 30 07 03 00    	callq	*0x30730(%rip)          # 0xffffffff80036428
ffffffff80005cf8: eb 19                	jmp	0xffffffff80005d13 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x743>
ffffffff80005cfa: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff80005d00: 8b 44 24 10          	movl	0x10(%rsp), %eax
ffffffff80005d04: 43 89 44 a5 60       	movl	%eax, 0x60(%r13,%r12,4)
ffffffff80005d09: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff80005d0e: 4b 89 44 e5 08       	movq	%rax, 0x8(%r13,%r12,8)
ffffffff80005d13: 48 8b 54 24 30       	movq	0x30(%rsp), %rdx
ffffffff80005d18: 41 8d 4f 01          	leal	0x1(%r15), %ecx
ffffffff80005d1c: 49 8d 47 02          	leaq	0x2(%r15), %rax
ffffffff80005d20: 4b 89 94 e5 98 00 00 00      	movq	%rdx, 0x98(%r13,%r12,8)
ffffffff80005d28: 66 41 89 8d 8e 00 00 00      	movw	%cx, 0x8e(%r13)
ffffffff80005d30: 48 39 c5             	cmpq	%rax, %rbp
ffffffff80005d33: 0f 83 77 fd ff ff    	jae	0xffffffff80005ab0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x4e0>
ffffffff80005d39: 45 29 e7             	subl	%r12d, %r15d
ffffffff80005d3c: 41 ff c7             	incl	%r15d
ffffffff80005d3f: 41 83 e7 03          	andl	$0x3, %r15d
ffffffff80005d43: 74 37                	je	0xffffffff80005d7c <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x7ac>
ffffffff80005d45: 4a 8d 14 e5 98 00 00 00      	leaq	0x98(,%r12,8), %rdx
ffffffff80005d4d: 4c 01 ea             	addq	%r13, %rdx
ffffffff80005d50: 31 c9                	xorl	%ecx, %ecx
ffffffff80005d52: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
ffffffff80005d60: 48 8b 34 ca          	movq	(%rdx,%rcx,8), %rsi
ffffffff80005d64: 4c 89 2e             	movq	%r13, (%rsi)
ffffffff80005d67: 8d 3c 29             	leal	(%rcx,%rbp), %edi
ffffffff80005d6a: 66 89 be 8c 00 00 00 	movw	%di, 0x8c(%rsi)
ffffffff80005d71: 48 ff c1             	incq	%rcx
ffffffff80005d74: 49 39 cf             	cmpq	%rcx, %r15
ffffffff80005d77: 75 e7                	jne	0xffffffff80005d60 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x790>
ffffffff80005d79: 48 01 cd             	addq	%rcx, %rbp
ffffffff80005d7c: 48 83 fb 03          	cmpq	$0x3, %rbx
ffffffff80005d80: 0f 82 2a fd ff ff    	jb	0xffffffff80005ab0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x4e0>
ffffffff80005d86: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
ffffffff80005d90: 49 8b 8c ed 90 00 00 00      	movq	0x90(%r13,%rbp,8), %rcx
ffffffff80005d98: 4c 89 29             	movq	%r13, (%rcx)
ffffffff80005d9b: 66 89 a9 8c 00 00 00 	movw	%bp, 0x8c(%rcx)
ffffffff80005da2: 49 8b 8c ed 98 00 00 00      	movq	0x98(%r13,%rbp,8), %rcx
ffffffff80005daa: 4c 89 29             	movq	%r13, (%rcx)
ffffffff80005dad: 8d 55 01             	leal	0x1(%rbp), %edx
ffffffff80005db0: 66 89 91 8c 00 00 00 	movw	%dx, 0x8c(%rcx)
ffffffff80005db7: 49 8b 8c ed a0 00 00 00      	movq	0xa0(%r13,%rbp,8), %rcx
ffffffff80005dbf: 4c 89 29             	movq	%r13, (%rcx)
ffffffff80005dc2: 8d 55 02             	leal	0x2(%rbp), %edx
ffffffff80005dc5: 66 89 91 8c 00 00 00 	movw	%dx, 0x8c(%rcx)
ffffffff80005dcc: 49 8b 8c ed a8 00 00 00      	movq	0xa8(%r13,%rbp,8), %rcx
ffffffff80005dd4: 4c 89 29             	movq	%r13, (%rcx)
ffffffff80005dd7: 8d 55 03             	leal	0x3(%rbp), %edx
ffffffff80005dda: 66 89 91 8c 00 00 00 	movw	%dx, 0x8c(%rcx)
ffffffff80005de1: 48 83 c5 04          	addq	$0x4, %rbp
ffffffff80005de5: 48 39 c5             	cmpq	%rax, %rbp
ffffffff80005de8: 75 a6                	jne	0xffffffff80005d90 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x7c0>
ffffffff80005dea: e9 c1 fc ff ff       	jmp	0xffffffff80005ab0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x4e0>
ffffffff80005def: 8b 44 24 10          	movl	0x10(%rsp), %eax
ffffffff80005df3: 41 89 44 24 74       	movl	%eax, 0x74(%r12)
ffffffff80005df8: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff80005dfd: 49 89 44 24 30       	movq	%rax, 0x30(%r12)
ffffffff80005e02: 4d 89 bc 24 c0 00 00 00      	movq	%r15, 0xc0(%r12)
ffffffff80005e0a: 66 41 89 9c 24 8e 00 00 00   	movw	%bx, 0x8e(%r12)
ffffffff80005e13: 41 83 fd 05          	cmpl	$0x5, %r13d
ffffffff80005e17: 0f 85 a1 fc ff ff    	jne	0xffffffff80005abe <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x4ee>
ffffffff80005e1d: 49 8d 4d fb          	leaq	-0x5(%r13), %rcx
ffffffff80005e21: b8 06 00 00 00       	movl	$0x6, %eax
ffffffff80005e26: 48 83 f9 03          	cmpq	$0x3, %rcx
ffffffff80005e2a: 72 6f                	jb	0xffffffff80005e9b <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x8cb>
ffffffff80005e2c: 44 89 e9             	movl	%r13d, %ecx
ffffffff80005e2f: 83 e1 fc             	andl	$-0x4, %ecx
ffffffff80005e32: 48 83 c1 f8          	addq	$-0x8, %rcx
ffffffff80005e36: b8 1b 00 00 00       	movl	$0x1b, %eax
ffffffff80005e3b: 0f 1f 44 00 00       	nopl	(%rax,%rax)
ffffffff80005e40: 48 89 c2             	movq	%rax, %rdx
ffffffff80005e43: 49 8b 44 c4 e8       	movq	-0x18(%r12,%rax,8), %rax
ffffffff80005e48: 4c 89 20             	movq	%r12, (%rax)
ffffffff80005e4b: 8d 72 eb             	leal	-0x15(%rdx), %esi
ffffffff80005e4e: 66 89 b0 8c 00 00 00 	movw	%si, 0x8c(%rax)
ffffffff80005e55: 49 8b 44 d4 f0       	movq	-0x10(%r12,%rdx,8), %rax
ffffffff80005e5a: 4c 89 20             	movq	%r12, (%rax)
ffffffff80005e5d: 8d 72 ec             	leal	-0x14(%rdx), %esi
ffffffff80005e60: 66 89 b0 8c 00 00 00 	movw	%si, 0x8c(%rax)
ffffffff80005e67: 49 8b 44 d4 f8       	movq	-0x8(%r12,%rdx,8), %rax
ffffffff80005e6c: 4c 89 20             	movq	%r12, (%rax)
ffffffff80005e6f: 8d 72 ed             	leal	-0x13(%rdx), %esi
ffffffff80005e72: 66 89 b0 8c 00 00 00 	movw	%si, 0x8c(%rax)
ffffffff80005e79: 49 8b 04 d4          	movq	(%r12,%rdx,8), %rax
ffffffff80005e7d: 4c 89 20             	movq	%r12, (%rax)
ffffffff80005e80: 8d 72 ee             	leal	-0x12(%rdx), %esi
ffffffff80005e83: 66 89 b0 8c 00 00 00 	movw	%si, 0x8c(%rax)
ffffffff80005e8a: 48 8d 42 04          	leaq	0x4(%rdx), %rax
ffffffff80005e8e: 48 83 c2 e5          	addq	$-0x1b, %rdx
ffffffff80005e92: 48 39 ca             	cmpq	%rcx, %rdx
ffffffff80005e95: 75 a9                	jne	0xffffffff80005e40 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x870>
ffffffff80005e97: 48 83 c0 eb          	addq	$-0x15, %rax
ffffffff80005e9b: 41 83 e5 03          	andl	$0x3, %r13d
ffffffff80005e9f: 0f 84 19 fc ff ff    	je	0xffffffff80005abe <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x4ee>
ffffffff80005ea5: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff80005eb0: 49 8b 8c c4 90 00 00 00      	movq	0x90(%r12,%rax,8), %rcx
ffffffff80005eb8: 4c 89 21             	movq	%r12, (%rcx)
ffffffff80005ebb: 66 89 81 8c 00 00 00 	movw	%ax, 0x8c(%rcx)
ffffffff80005ec2: 48 ff c0             	incq	%rax
ffffffff80005ec5: 49 ff cd             	decq	%r13
ffffffff80005ec8: 75 e6                	jne	0xffffffff80005eb0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x8e0>
ffffffff80005eca: e9 ef fb ff ff       	jmp	0xffffffff80005abe <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x4ee>
ffffffff80005ecf: 41 8d 56 01          	leal	0x1(%r14), %edx
ffffffff80005ed3: 49 8d 6c 24 01       	leaq	0x1(%r12), %rbp
ffffffff80005ed8: 66 45 39 f4          	cmpw	%r14w, %r12w
ffffffff80005edc: 0f 83 a6 00 00 00    	jae	0xffffffff80005f88 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x9b8>
ffffffff80005ee2: 49 8d 45 60          	leaq	0x60(%r13), %rax
ffffffff80005ee6: 4a 8d 34 a5 60 00 00 00      	leaq	0x60(,%r12,4), %rsi
ffffffff80005eee: 4c 01 ee             	addq	%r13, %rsi
ffffffff80005ef1: 48 89 4c 24 30       	movq	%rcx, 0x30(%rsp)
ffffffff80005ef6: 48 8d 3c a8          	leaq	(%rax,%rbp,4), %rdi
ffffffff80005efa: 4c 89 f3             	movq	%r14, %rbx
ffffffff80005efd: 4c 29 e3             	subq	%r12, %rbx
ffffffff80005f00: 89 54 24 24          	movl	%edx, 0x24(%rsp)
ffffffff80005f04: 48 8d 14 9d 00 00 00 00      	leaq	(,%rbx,4), %rdx
ffffffff80005f0c: 48 8b 05 15 05 03 00 	movq	0x30515(%rip), %rax     # 0xffffffff80036428
ffffffff80005f13: ff d0                	callq	*%rax
ffffffff80005f15: 8b 44 24 10          	movl	0x10(%rsp), %eax
ffffffff80005f19: 43 89 44 a5 60       	movl	%eax, 0x60(%r13,%r12,4)
ffffffff80005f1e: 46 8d 3c e5 00 00 00 00      	leal	(,%r12,8), %r15d
ffffffff80005f26: 4b 8d 34 2f          	leaq	(%r15,%r13), %rsi
ffffffff80005f2a: 48 83 c6 08          	addq	$0x8, %rsi
ffffffff80005f2e: 8d 04 ed 00 00 00 00 	leal	(,%rbp,8), %eax
ffffffff80005f35: 48 89 44 24 10       	movq	%rax, 0x10(%rsp)
ffffffff80005f3a: 4a 8d 3c 28          	leaq	(%rax,%r13), %rdi
ffffffff80005f3e: 48 83 c7 08          	addq	$0x8, %rdi
ffffffff80005f42: 48 c1 e3 03          	shlq	$0x3, %rbx
ffffffff80005f46: 48 89 da             	movq	%rbx, %rdx
ffffffff80005f49: ff 15 d9 04 03 00    	callq	*0x304d9(%rip)          # 0xffffffff80036428
ffffffff80005f4f: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff80005f54: 4b 89 44 3d 08       	movq	%rax, 0x8(%r13,%r15)
ffffffff80005f59: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff80005f5e: 4a 8d 34 28          	leaq	(%rax,%r13), %rsi
ffffffff80005f62: 48 81 c6 90 00 00 00 	addq	$0x90, %rsi
ffffffff80005f69: 4b 8d 3c 2f          	leaq	(%r15,%r13), %rdi
ffffffff80005f6d: 48 81 c7 a0 00 00 00 	addq	$0xa0, %rdi
ffffffff80005f74: 48 89 da             	movq	%rbx, %rdx
ffffffff80005f77: ff 15 ab 04 03 00    	callq	*0x304ab(%rip)          # 0xffffffff80036428
ffffffff80005f7d: 8b 54 24 24          	movl	0x24(%rsp), %edx
ffffffff80005f81: 48 8b 4c 24 30       	movq	0x30(%rsp), %rcx
ffffffff80005f86: eb 13                	jmp	0xffffffff80005f9b <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0x9cb>
ffffffff80005f88: 8b 44 24 10          	movl	0x10(%rsp), %eax
ffffffff80005f8c: 43 89 44 a5 60       	movl	%eax, 0x60(%r13,%r12,4)
ffffffff80005f91: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff80005f96: 4b 89 44 e5 08       	movq	%rax, 0x8(%r13,%r12,8)
ffffffff80005f9b: 49 8d 46 02          	leaq	0x2(%r14), %rax
ffffffff80005f9f: 4b 89 8c e5 98 00 00 00      	movq	%rcx, 0x98(%r13,%r12,8)
ffffffff80005fa7: 66 41 89 95 8e 00 00 00      	movw	%dx, 0x8e(%r13)
ffffffff80005faf: 39 c5                	cmpl	%eax, %ebp
ffffffff80005fb1: 0f 83 b3 00 00 00    	jae	0xffffffff8000606a <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xa9a>
ffffffff80005fb7: 44 89 f1             	movl	%r14d, %ecx
ffffffff80005fba: 44 29 e1             	subl	%r12d, %ecx
ffffffff80005fbd: ff c1                	incl	%ecx
ffffffff80005fbf: 4d 29 e6             	subq	%r12, %r14
ffffffff80005fc2: 83 e1 03             	andl	$0x3, %ecx
ffffffff80005fc5: 74 37                	je	0xffffffff80005ffe <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xa2e>
ffffffff80005fc7: 4a 8d 34 e5 98 00 00 00      	leaq	0x98(,%r12,8), %rsi
ffffffff80005fcf: 4c 01 ee             	addq	%r13, %rsi
ffffffff80005fd2: 31 d2                	xorl	%edx, %edx
ffffffff80005fd4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
ffffffff80005fe0: 48 8b 3c d6          	movq	(%rsi,%rdx,8), %rdi
ffffffff80005fe4: 4c 89 2f             	movq	%r13, (%rdi)
ffffffff80005fe7: 44 8d 04 2a          	leal	(%rdx,%rbp), %r8d
ffffffff80005feb: 66 44 89 87 8c 00 00 00      	movw	%r8w, 0x8c(%rdi)
ffffffff80005ff3: 48 ff c2             	incq	%rdx
ffffffff80005ff6: 48 39 d1             	cmpq	%rdx, %rcx
ffffffff80005ff9: 75 e5                	jne	0xffffffff80005fe0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xa10>
ffffffff80005ffb: 48 01 d5             	addq	%rdx, %rbp
ffffffff80005ffe: 49 83 fe 03          	cmpq	$0x3, %r14
ffffffff80006002: 72 66                	jb	0xffffffff8000606a <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xa9a>
ffffffff80006004: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
ffffffff80006010: 49 8b 8c ed 90 00 00 00      	movq	0x90(%r13,%rbp,8), %rcx
ffffffff80006018: 4c 89 29             	movq	%r13, (%rcx)
ffffffff8000601b: 66 89 a9 8c 00 00 00 	movw	%bp, 0x8c(%rcx)
ffffffff80006022: 49 8b 8c ed 98 00 00 00      	movq	0x98(%r13,%rbp,8), %rcx
ffffffff8000602a: 4c 89 29             	movq	%r13, (%rcx)
ffffffff8000602d: 8d 55 01             	leal	0x1(%rbp), %edx
ffffffff80006030: 66 89 91 8c 00 00 00 	movw	%dx, 0x8c(%rcx)
ffffffff80006037: 49 8b 8c ed a0 00 00 00      	movq	0xa0(%r13,%rbp,8), %rcx
ffffffff8000603f: 4c 89 29             	movq	%r13, (%rcx)
ffffffff80006042: 8d 55 02             	leal	0x2(%rbp), %edx
ffffffff80006045: 66 89 91 8c 00 00 00 	movw	%dx, 0x8c(%rcx)
ffffffff8000604c: 49 8b 8c ed a8 00 00 00      	movq	0xa8(%r13,%rbp,8), %rcx
ffffffff80006054: 4c 89 29             	movq	%r13, (%rcx)
ffffffff80006057: 8d 55 03             	leal	0x3(%rbp), %edx
ffffffff8000605a: 66 89 91 8c 00 00 00 	movw	%dx, 0x8c(%rcx)
ffffffff80006061: 48 83 c5 04          	addq	$0x4, %rbp
ffffffff80006065: 48 39 c5             	cmpq	%rax, %rbp
ffffffff80006068: 75 a6                	jne	0xffffffff80006010 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing::hbf2f8d8b15b35392+0xa40>
ffffffff8000606a: 4c 8b 74 24 48       	movq	0x48(%rsp), %r14
ffffffff8000606f: 4c 8b 6c 24 38       	movq	0x38(%rsp), %r13
ffffffff80006074: 48 8b 6c 24 40       	movq	0x40(%rsp), %rbp
ffffffff80006079: 4c 8b 64 24 28       	movq	0x28(%rsp), %r12
ffffffff8000607e: 4d 89 26             	movq	%r12, (%r14)
ffffffff80006081: 49 89 6e 08          	movq	%rbp, 0x8(%r14)
ffffffff80006085: 4d 89 6e 10          	movq	%r13, 0x10(%r14)
ffffffff80006089: 4c 89 f0             	movq	%r14, %rax
ffffffff8000608c: 48 81 c4 a8 00 00 00 	addq	$0xa8, %rsp
ffffffff80006093: 5b                   	popq	%rbx
ffffffff80006094: 41 5c                	popq	%r12
ffffffff80006096: 41 5d                	popq	%r13
ffffffff80006098: 41 5e                	popq	%r14
ffffffff8000609a: 41 5f                	popq	%r15
ffffffff8000609c: 5d                   	popq	%rbp
ffffffff8000609d: c3                   	retq
ffffffff8000609e: be 35 00 00 00       	movl	$0x35, %esi
ffffffff800060a3: 48 c7 c7 98 e0 01 80 	movq	$-0x7ffe1f68, %rdi      # imm = 0x8001E098
ffffffff800060aa: 48 c7 c2 d0 e0 01 80 	movq	$-0x7ffe1f30, %rdx      # imm = 0x8001E0D0
ffffffff800060b1: e8 ba 63 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff800060b6: be 0b 00 00 00       	movl	$0xb, %esi
ffffffff800060bb: 4c 89 ef             	movq	%r13, %rdi
ffffffff800060be: 48 c7 c2 68 e0 01 80 	movq	$-0x7ffe1f98, %rdx      # imm = 0x8001E068
ffffffff800060c5: e8 b6 5e 01 00       	callq	0xffffffff8001bf80 <core::slice::index::slice_end_index_len_fail::h34b67e5519833f02>
ffffffff800060ca: be 30 00 00 00       	movl	$0x30, %esi
ffffffff800060cf: 48 c7 c7 33 df 01 80 	movq	$-0x7ffe20cd, %rdi      # imm = 0x8001DF33
ffffffff800060d6: 48 c7 c2 68 df 01 80 	movq	$-0x7ffe2098, %rdx      # imm = 0x8001DF68
ffffffff800060dd: e8 8e 63 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff800060e2: be 0b 00 00 00       	movl	$0xb, %esi
ffffffff800060e7: 4c 89 f7             	movq	%r14, %rdi
ffffffff800060ea: 48 c7 c2 68 e0 01 80 	movq	$-0x7ffe1f98, %rdx      # imm = 0x8001E068
ffffffff800060f1: e8 8a 5e 01 00       	callq	0xffffffff8001bf80 <core::slice::index::slice_end_index_len_fail::h34b67e5519833f02>
ffffffff800060f6: bf 08 00 00 00       	movl	$0x8, %edi
ffffffff800060fb: be 90 00 00 00       	movl	$0x90, %esi
ffffffff80006100: e8 5d 2f 01 00       	callq	0xffffffff80019062 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff80006105: 48 c7 c7 98 de 01 80 	movq	$-0x7ffe2168, %rdi      # imm = 0x8001DE98
ffffffff8000610c: e8 5f 68 01 00       	callq	0xffffffff8001c970 <core::option::unwrap_failed::hd8ef34c781aa10a4>
ffffffff80006111: bf 08 00 00 00       	movl	$0x8, %edi
ffffffff80006116: be f0 00 00 00       	movl	$0xf0, %esi
ffffffff8000611b: e8 42 2f 01 00       	callq	0xffffffff80019062 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>

ffffffff80006120 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0ab4f6d5b4b4dfa2>:
ffffffff80006120: 55                   	pushq	%rbp
ffffffff80006121: 41 57                	pushq	%r15
ffffffff80006123: 41 56                	pushq	%r14
ffffffff80006125: 41 55                	pushq	%r13
ffffffff80006127: 41 54                	pushq	%r12
ffffffff80006129: 53                   	pushq	%rbx
ffffffff8000612a: 48 83 ec 28          	subq	$0x28, %rsp
ffffffff8000612e: 48 89 f3             	movq	%rsi, %rbx
ffffffff80006131: 49 89 ff             	movq	%rdi, %r15
ffffffff80006134: 48 8b 2e             	movq	(%rsi), %rbp
ffffffff80006137: 0f b7 95 8e 00 00 00 	movzwl	0x8e(%rbp), %edx
ffffffff8000613e: 0f b6 05 9c f0 01 00 	movzbl	0x1f09c(%rip), %eax     # 0xffffffff800251e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80006145: b1 01                	movb	$0x1, %cl
ffffffff80006147: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
ffffffff80006150: 31 c0                	xorl	%eax, %eax
ffffffff80006152: f0                   	lock
ffffffff80006153: 0f b0 0d f6 ee 01 00 	cmpxchgb	%cl, 0x1eef6(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000615a: 75 06                	jne	0xffffffff80006162 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0ab4f6d5b4b4dfa2+0x42>
ffffffff8000615c: eb 11                	jmp	0xffffffff8000616f <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0ab4f6d5b4b4dfa2+0x4f>
ffffffff8000615e: 66 90                	nop
ffffffff80006160: f3 90                	pause
ffffffff80006162: 0f b6 05 e7 ee 01 00 	movzbl	0x1eee7(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80006169: 84 c0                	testb	%al, %al
ffffffff8000616b: 75 f3                	jne	0xffffffff80006160 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0ab4f6d5b4b4dfa2+0x40>
ffffffff8000616d: eb e1                	jmp	0xffffffff80006150 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0ab4f6d5b4b4dfa2+0x30>
ffffffff8000616f: 48 89 54 24 20       	movq	%rdx, 0x20(%rsp)
ffffffff80006174: be 08 00 00 00       	movl	$0x8, %esi
ffffffff80006179: ba f0 00 00 00       	movl	$0xf0, %edx
ffffffff8000617e: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff80006185: e8 76 d1 ff ff       	callq	0xffffffff80003300 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff8000618a: c6 05 bf ee 01 00 00 	movb	$0x0, 0x1eebf(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80006191: 48 85 c0             	testq	%rax, %rax
ffffffff80006194: 0f 84 8c 01 00 00    	je	0xffffffff80006326 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0ab4f6d5b4b4dfa2+0x206>
ffffffff8000619a: 49 89 c4             	movq	%rax, %r12
ffffffff8000619d: 48 c7 00 00 00 00 00 	movq	$0x0, (%rax)
ffffffff800061a4: 4c 8b 73 10          	movq	0x10(%rbx), %r14
ffffffff800061a8: 0f b7 85 8e 00 00 00 	movzwl	0x8e(%rbp), %eax
ffffffff800061af: 4d 89 f5             	movq	%r14, %r13
ffffffff800061b2: 49 f7 d5             	notq	%r13
ffffffff800061b5: 49 01 c5             	addq	%rax, %r13
ffffffff800061b8: 66 45 89 ac 24 8e 00 00 00   	movw	%r13w, 0x8e(%r12)
ffffffff800061c1: 49 83 fd 0c          	cmpq	$0xc, %r13
ffffffff800061c5: 0f 83 36 01 00 00    	jae	0xffffffff80006301 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0ab4f6d5b4b4dfa2+0x1e1>
ffffffff800061cb: 48 89 5c 24 18       	movq	%rbx, 0x18(%rsp)
ffffffff800061d0: 49 8d 5e 01          	leaq	0x1(%r14), %rbx
ffffffff800061d4: 48 29 d8             	subq	%rbx, %rax
ffffffff800061d7: 4c 39 e8             	cmpq	%r13, %rax
ffffffff800061da: 0f 85 09 01 00 00    	jne	0xffffffff800062e9 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0ab4f6d5b4b4dfa2+0x1c9>
ffffffff800061e0: 4c 89 7c 24 10       	movq	%r15, 0x10(%rsp)
ffffffff800061e5: 48 8d 45 60          	leaq	0x60(%rbp), %rax
ffffffff800061e9: 42 8b 4c b5 60       	movl	0x60(%rbp,%r14,4), %ecx
ffffffff800061ee: 89 4c 24 04          	movl	%ecx, 0x4(%rsp)
ffffffff800061f2: 4c 8d 7d 08          	leaq	0x8(%rbp), %r15
ffffffff800061f6: 4a 8b 4c f5 08       	movq	0x8(%rbp,%r14,8), %rcx
ffffffff800061fb: 48 89 4c 24 08       	movq	%rcx, 0x8(%rsp)
ffffffff80006200: 49 8d 7c 24 60       	leaq	0x60(%r12), %rdi
ffffffff80006205: 48 8d 34 98          	leaq	(%rax,%rbx,4), %rsi
ffffffff80006209: 4a 8d 14 ad 00 00 00 00      	leaq	(,%r13,4), %rdx
ffffffff80006211: ff 15 09 02 03 00    	callq	*0x30209(%rip)          # 0xffffffff80036420
ffffffff80006217: 49 8d 34 df          	leaq	(%r15,%rbx,8), %rsi
ffffffff8000621b: 49 8d 7c 24 08       	leaq	0x8(%r12), %rdi
ffffffff80006220: 49 c1 e5 03          	shlq	$0x3, %r13
ffffffff80006224: 4c 89 ea             	movq	%r13, %rdx
ffffffff80006227: ff 15 f3 01 03 00    	callq	*0x301f3(%rip)          # 0xffffffff80036420
ffffffff8000622d: 66 44 89 b5 8e 00 00 00      	movw	%r14w, 0x8e(%rbp)
ffffffff80006235: 45 0f b7 ac 24 8e 00 00 00   	movzwl	0x8e(%r12), %r13d
ffffffff8000623e: 49 8d 7d 01          	leaq	0x1(%r13), %rdi
ffffffff80006242: 49 83 fd 0c          	cmpq	$0xc, %r13
ffffffff80006246: 0f 83 c9 00 00 00    	jae	0xffffffff80006315 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0ab4f6d5b4b4dfa2+0x1f5>
ffffffff8000624c: 48 8b 54 24 20       	movq	0x20(%rsp), %rdx
ffffffff80006251: 4c 29 f2             	subq	%r14, %rdx
ffffffff80006254: 48 39 fa             	cmpq	%rdi, %rdx
ffffffff80006257: 0f 85 8c 00 00 00    	jne	0xffffffff800062e9 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0ab4f6d5b4b4dfa2+0x1c9>
ffffffff8000625d: 4c 89 e7             	movq	%r12, %rdi
ffffffff80006260: 48 81 c7 90 00 00 00 	addq	$0x90, %rdi
ffffffff80006267: 4a 8d 34 f5 98 00 00 00      	leaq	0x98(,%r14,8), %rsi
ffffffff8000626f: 48 01 ee             	addq	%rbp, %rsi
ffffffff80006272: 48 c1 e2 03          	shlq	$0x3, %rdx
ffffffff80006276: ff 15 a4 01 03 00    	callq	*0x301a4(%rip)          # 0xffffffff80036420
ffffffff8000627c: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff80006281: 48 8b 40 08          	movq	0x8(%rax), %rax
ffffffff80006285: 31 c9                	xorl	%ecx, %ecx
ffffffff80006287: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
ffffffff80006290: 48 89 ca             	movq	%rcx, %rdx
ffffffff80006293: 4c 39 e9             	cmpq	%r13, %rcx
ffffffff80006296: 48 83 d1 00          	adcq	$0x0, %rcx
ffffffff8000629a: 49 8b b4 d4 90 00 00 00      	movq	0x90(%r12,%rdx,8), %rsi
ffffffff800062a2: 4c 89 26             	movq	%r12, (%rsi)
ffffffff800062a5: 66 89 96 8c 00 00 00 	movw	%dx, 0x8c(%rsi)
ffffffff800062ac: 4c 39 ea             	cmpq	%r13, %rdx
ffffffff800062af: 73 05                	jae	0xffffffff800062b6 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0ab4f6d5b4b4dfa2+0x196>
ffffffff800062b1: 4c 39 e9             	cmpq	%r13, %rcx
ffffffff800062b4: 76 da                	jbe	0xffffffff80006290 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h0ab4f6d5b4b4dfa2+0x170>
ffffffff800062b6: 48 8b 4c 24 10       	movq	0x10(%rsp), %rcx
ffffffff800062bb: 48 89 29             	movq	%rbp, (%rcx)
ffffffff800062be: 48 89 41 08          	movq	%rax, 0x8(%rcx)
ffffffff800062c2: 8b 54 24 04          	movl	0x4(%rsp), %edx
ffffffff800062c6: 89 51 20             	movl	%edx, 0x20(%rcx)
ffffffff800062c9: 48 8b 54 24 08       	movq	0x8(%rsp), %rdx
ffffffff800062ce: 48 89 51 28          	movq	%rdx, 0x28(%rcx)
ffffffff800062d2: 4c 89 61 10          	movq	%r12, 0x10(%rcx)
ffffffff800062d6: 48 89 41 18          	movq	%rax, 0x18(%rcx)
ffffffff800062da: 48 83 c4 28          	addq	$0x28, %rsp
ffffffff800062de: 5b                   	popq	%rbx
ffffffff800062df: 41 5c                	popq	%r12
ffffffff800062e1: 41 5d                	popq	%r13
ffffffff800062e3: 41 5e                	popq	%r14
ffffffff800062e5: 41 5f                	popq	%r15
ffffffff800062e7: 5d                   	popq	%rbp
ffffffff800062e8: c3                   	retq
ffffffff800062e9: be 28 00 00 00       	movl	$0x28, %esi
ffffffff800062ee: 48 c7 c7 28 e0 01 80 	movq	$-0x7ffe1fd8, %rdi      # imm = 0x8001E028
ffffffff800062f5: 48 c7 c2 50 e0 01 80 	movq	$-0x7ffe1fb0, %rdx      # imm = 0x8001E050
ffffffff800062fc: e8 6f 61 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80006301: be 0b 00 00 00       	movl	$0xb, %esi
ffffffff80006306: 4c 89 ef             	movq	%r13, %rdi
ffffffff80006309: 48 c7 c2 68 e0 01 80 	movq	$-0x7ffe1f98, %rdx      # imm = 0x8001E068
ffffffff80006310: e8 6b 5c 01 00       	callq	0xffffffff8001bf80 <core::slice::index::slice_end_index_len_fail::h34b67e5519833f02>
ffffffff80006315: be 0c 00 00 00       	movl	$0xc, %esi
ffffffff8000631a: 48 c7 c2 80 e0 01 80 	movq	$-0x7ffe1f80, %rdx      # imm = 0x8001E080
ffffffff80006321: e8 5a 5c 01 00       	callq	0xffffffff8001bf80 <core::slice::index::slice_end_index_len_fail::h34b67e5519833f02>
ffffffff80006326: bf 08 00 00 00       	movl	$0x8, %edi
ffffffff8000632b: be f0 00 00 00       	movl	$0xf0, %esi
ffffffff80006330: e8 2d 2d 01 00       	callq	0xffffffff80019062 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff80006335: cc                   	int3
ffffffff80006336: cc                   	int3
ffffffff80006337: cc                   	int3
ffffffff80006338: cc                   	int3
ffffffff80006339: cc                   	int3
ffffffff8000633a: cc                   	int3
ffffffff8000633b: cc                   	int3
ffffffff8000633c: cc                   	int3
ffffffff8000633d: cc                   	int3
ffffffff8000633e: cc                   	int3
ffffffff8000633f: cc                   	int3

ffffffff80006340 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h75b80278c1f444c3>:
ffffffff80006340: 55                   	pushq	%rbp
ffffffff80006341: 41 57                	pushq	%r15
ffffffff80006343: 41 56                	pushq	%r14
ffffffff80006345: 41 55                	pushq	%r13
ffffffff80006347: 41 54                	pushq	%r12
ffffffff80006349: 53                   	pushq	%rbx
ffffffff8000634a: 48 81 ec e8 01 00 00 	subq	$0x1e8, %rsp            # imm = 0x1E8
ffffffff80006351: 48 89 f3             	movq	%rsi, %rbx
ffffffff80006354: 49 89 fc             	movq	%rdi, %r12
ffffffff80006357: 48 8b 2e             	movq	(%rsi), %rbp
ffffffff8000635a: 0f b7 95 d6 09 00 00 	movzwl	0x9d6(%rbp), %edx
ffffffff80006361: 0f b6 05 79 ee 01 00 	movzbl	0x1ee79(%rip), %eax     # 0xffffffff800251e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80006368: b1 01                	movb	$0x1, %cl
ffffffff8000636a: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff80006370: 31 c0                	xorl	%eax, %eax
ffffffff80006372: f0                   	lock
ffffffff80006373: 0f b0 0d d6 ec 01 00 	cmpxchgb	%cl, 0x1ecd6(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000637a: 75 06                	jne	0xffffffff80006382 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h75b80278c1f444c3+0x42>
ffffffff8000637c: eb 11                	jmp	0xffffffff8000638f <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h75b80278c1f444c3+0x4f>
ffffffff8000637e: 66 90                	nop
ffffffff80006380: f3 90                	pause
ffffffff80006382: 0f b6 05 c7 ec 01 00 	movzbl	0x1ecc7(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80006389: 84 c0                	testb	%al, %al
ffffffff8000638b: 75 f3                	jne	0xffffffff80006380 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h75b80278c1f444c3+0x40>
ffffffff8000638d: eb e1                	jmp	0xffffffff80006370 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h75b80278c1f444c3+0x30>
ffffffff8000638f: 48 89 54 24 18       	movq	%rdx, 0x18(%rsp)
ffffffff80006394: be 08 00 00 00       	movl	$0x8, %esi
ffffffff80006399: ba 38 0a 00 00       	movl	$0xa38, %edx            # imm = 0xA38
ffffffff8000639e: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff800063a5: e8 56 cf ff ff       	callq	0xffffffff80003300 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff800063aa: c6 05 9f ec 01 00 00 	movb	$0x0, 0x1ec9f(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff800063b1: 48 85 c0             	testq	%rax, %rax
ffffffff800063b4: 0f 84 d1 01 00 00    	je	0xffffffff8000658b <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h75b80278c1f444c3+0x24b>
ffffffff800063ba: 49 89 c7             	movq	%rax, %r15
ffffffff800063bd: 48 c7 80 a0 09 00 00 00 00 00 00     	movq	$0x0, 0x9a0(%rax)
ffffffff800063c8: 48 89 5c 24 10       	movq	%rbx, 0x10(%rsp)
ffffffff800063cd: 4c 8b 73 10          	movq	0x10(%rbx), %r14
ffffffff800063d1: 0f b7 9d d6 09 00 00 	movzwl	0x9d6(%rbp), %ebx
ffffffff800063d8: 4d 89 f5             	movq	%r14, %r13
ffffffff800063db: 49 f7 d5             	notq	%r13
ffffffff800063de: 49 01 dd             	addq	%rbx, %r13
ffffffff800063e1: 66 44 89 a8 d6 09 00 00      	movw	%r13w, 0x9d6(%rax)
ffffffff800063e9: 42 8b 84 b5 a8 09 00 00      	movl	0x9a8(%rbp,%r14,4), %eax
ffffffff800063f1: 89 44 24 04          	movl	%eax, 0x4(%rsp)
ffffffff800063f5: 49 69 f6 e0 00 00 00 	imulq	$0xe0, %r14, %rsi
ffffffff800063fc: 48 01 ee             	addq	%rbp, %rsi
ffffffff800063ff: 48 8d 7c 24 20       	leaq	0x20(%rsp), %rdi
ffffffff80006404: ba e0 00 00 00       	movl	$0xe0, %edx
ffffffff80006409: ff 15 11 00 03 00    	callq	*0x30011(%rip)          # 0xffffffff80036420
ffffffff8000640f: 49 83 fd 0c          	cmpq	$0xc, %r13
ffffffff80006413: 0f 83 4d 01 00 00    	jae	0xffffffff80006566 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h75b80278c1f444c3+0x226>
ffffffff80006419: 4c 89 64 24 08       	movq	%r12, 0x8(%rsp)
ffffffff8000641e: 4d 8d 66 01          	leaq	0x1(%r14), %r12
ffffffff80006422: 4c 29 e3             	subq	%r12, %rbx
ffffffff80006425: 4c 39 eb             	cmpq	%r13, %rbx
ffffffff80006428: 0f 85 20 01 00 00    	jne	0xffffffff8000654e <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h75b80278c1f444c3+0x20e>
ffffffff8000642e: 48 8d 85 a8 09 00 00 	leaq	0x9a8(%rbp), %rax
ffffffff80006435: 49 8d bf a8 09 00 00 	leaq	0x9a8(%r15), %rdi
ffffffff8000643c: 4a 8d 34 a0          	leaq	(%rax,%r12,4), %rsi
ffffffff80006440: 4a 8d 14 ad 00 00 00 00      	leaq	(,%r13,4), %rdx
ffffffff80006448: 48 8b 1d d1 ff 02 00 	movq	0x2ffd1(%rip), %rbx     # 0xffffffff80036420
ffffffff8000644f: ff d3                	callq	*%rbx
ffffffff80006451: 49 69 f4 e0 00 00 00 	imulq	$0xe0, %r12, %rsi
ffffffff80006458: 48 01 ee             	addq	%rbp, %rsi
ffffffff8000645b: 49 69 d5 e0 00 00 00 	imulq	$0xe0, %r13, %rdx
ffffffff80006462: 4c 89 ff             	movq	%r15, %rdi
ffffffff80006465: ff d3                	callq	*%rbx
ffffffff80006467: 66 44 89 b5 d6 09 00 00      	movw	%r14w, 0x9d6(%rbp)
ffffffff8000646f: 48 8d bc 24 08 01 00 00      	leaq	0x108(%rsp), %rdi
ffffffff80006477: 48 8d 74 24 20       	leaq	0x20(%rsp), %rsi
ffffffff8000647c: ba e0 00 00 00       	movl	$0xe0, %edx
ffffffff80006481: ff d3                	callq	*%rbx
ffffffff80006483: 45 0f b7 af d6 09 00 00      	movzwl	0x9d6(%r15), %r13d
ffffffff8000648b: 49 8d 7d 01          	leaq	0x1(%r13), %rdi
ffffffff8000648f: 49 83 fd 0c          	cmpq	$0xc, %r13
ffffffff80006493: 0f 83 e1 00 00 00    	jae	0xffffffff8000657a <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h75b80278c1f444c3+0x23a>
ffffffff80006499: 48 8b 54 24 18       	movq	0x18(%rsp), %rdx
ffffffff8000649e: 4c 29 f2             	subq	%r14, %rdx
ffffffff800064a1: 48 39 fa             	cmpq	%rdi, %rdx
ffffffff800064a4: 0f 85 a4 00 00 00    	jne	0xffffffff8000654e <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h75b80278c1f444c3+0x20e>
ffffffff800064aa: 4c 89 ff             	movq	%r15, %rdi
ffffffff800064ad: 48 81 c7 d8 09 00 00 	addq	$0x9d8, %rdi            # imm = 0x9D8
ffffffff800064b4: 4a 8d 34 f5 e0 09 00 00      	leaq	0x9e0(,%r14,8), %rsi
ffffffff800064bc: 48 01 ee             	addq	%rbp, %rsi
ffffffff800064bf: 48 c1 e2 03          	shlq	$0x3, %rdx
ffffffff800064c3: ff 15 57 ff 02 00    	callq	*0x2ff57(%rip)          # 0xffffffff80036420
ffffffff800064c9: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff800064ce: 4c 8b 70 08          	movq	0x8(%rax), %r14
ffffffff800064d2: 31 c0                	xorl	%eax, %eax
ffffffff800064d4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
ffffffff800064e0: 48 89 c1             	movq	%rax, %rcx
ffffffff800064e3: 4c 39 e8             	cmpq	%r13, %rax
ffffffff800064e6: 48 83 d0 00          	adcq	$0x0, %rax
ffffffff800064ea: 49 8b 94 cf d8 09 00 00      	movq	0x9d8(%r15,%rcx,8), %rdx
ffffffff800064f2: 4c 89 ba a0 09 00 00 	movq	%r15, 0x9a0(%rdx)
ffffffff800064f9: 66 89 8a d4 09 00 00 	movw	%cx, 0x9d4(%rdx)
ffffffff80006500: 4c 39 e9             	cmpq	%r13, %rcx
ffffffff80006503: 73 05                	jae	0xffffffff8000650a <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h75b80278c1f444c3+0x1ca>
ffffffff80006505: 4c 39 e8             	cmpq	%r13, %rax
ffffffff80006508: 76 d6                	jbe	0xffffffff800064e0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::h75b80278c1f444c3+0x1a0>
ffffffff8000650a: 48 8b 5c 24 08       	movq	0x8(%rsp), %rbx
ffffffff8000650f: 48 89 2b             	movq	%rbp, (%rbx)
ffffffff80006512: 4c 89 73 08          	movq	%r14, 0x8(%rbx)
ffffffff80006516: 8b 44 24 04          	movl	0x4(%rsp), %eax
ffffffff8000651a: 89 43 20             	movl	%eax, 0x20(%rbx)
ffffffff8000651d: 48 8d 7b 24          	leaq	0x24(%rbx), %rdi
ffffffff80006521: 48 8d b4 24 04 01 00 00      	leaq	0x104(%rsp), %rsi
ffffffff80006529: ba e4 00 00 00       	movl	$0xe4, %edx
ffffffff8000652e: ff 15 ec fe 02 00    	callq	*0x2feec(%rip)          # 0xffffffff80036420
ffffffff80006534: 4c 89 7b 10          	movq	%r15, 0x10(%rbx)
ffffffff80006538: 4c 89 73 18          	movq	%r14, 0x18(%rbx)
ffffffff8000653c: 48 81 c4 e8 01 00 00 	addq	$0x1e8, %rsp            # imm = 0x1E8
ffffffff80006543: 5b                   	popq	%rbx
ffffffff80006544: 41 5c                	popq	%r12
ffffffff80006546: 41 5d                	popq	%r13
ffffffff80006548: 41 5e                	popq	%r14
ffffffff8000654a: 41 5f                	popq	%r15
ffffffff8000654c: 5d                   	popq	%rbp
ffffffff8000654d: c3                   	retq
ffffffff8000654e: be 28 00 00 00       	movl	$0x28, %esi
ffffffff80006553: 48 c7 c7 28 e0 01 80 	movq	$-0x7ffe1fd8, %rdi      # imm = 0x8001E028
ffffffff8000655a: 48 c7 c2 50 e0 01 80 	movq	$-0x7ffe1fb0, %rdx      # imm = 0x8001E050
ffffffff80006561: e8 0a 5f 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80006566: be 0b 00 00 00       	movl	$0xb, %esi
ffffffff8000656b: 4c 89 ef             	movq	%r13, %rdi
ffffffff8000656e: 48 c7 c2 68 e0 01 80 	movq	$-0x7ffe1f98, %rdx      # imm = 0x8001E068
ffffffff80006575: e8 06 5a 01 00       	callq	0xffffffff8001bf80 <core::slice::index::slice_end_index_len_fail::h34b67e5519833f02>
ffffffff8000657a: be 0c 00 00 00       	movl	$0xc, %esi
ffffffff8000657f: 48 c7 c2 80 e0 01 80 	movq	$-0x7ffe1f80, %rdx      # imm = 0x8001E080
ffffffff80006586: e8 f5 59 01 00       	callq	0xffffffff8001bf80 <core::slice::index::slice_end_index_len_fail::h34b67e5519833f02>
ffffffff8000658b: bf 08 00 00 00       	movl	$0x8, %edi
ffffffff80006590: be 38 0a 00 00       	movl	$0xa38, %esi            # imm = 0xA38
ffffffff80006595: e8 c8 2a 01 00       	callq	0xffffffff80019062 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff8000659a: cc                   	int3
ffffffff8000659b: cc                   	int3
ffffffff8000659c: cc                   	int3
ffffffff8000659d: cc                   	int3
ffffffff8000659e: cc                   	int3
ffffffff8000659f: cc                   	int3

ffffffff800065a0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::hc2421bb864a2d4b1>:
ffffffff800065a0: 55                   	pushq	%rbp
ffffffff800065a1: 41 57                	pushq	%r15
ffffffff800065a3: 41 56                	pushq	%r14
ffffffff800065a5: 41 55                	pushq	%r13
ffffffff800065a7: 41 54                	pushq	%r12
ffffffff800065a9: 53                   	pushq	%rbx
ffffffff800065aa: 48 83 ec 18          	subq	$0x18, %rsp
ffffffff800065ae: 49 89 f6             	movq	%rsi, %r14
ffffffff800065b1: 48 89 fb             	movq	%rdi, %rbx
ffffffff800065b4: 4c 8b 2e             	movq	(%rsi), %r13
ffffffff800065b7: 45 0f b7 7d 62       	movzwl	0x62(%r13), %r15d
ffffffff800065bc: 0f b6 05 1e ec 01 00 	movzbl	0x1ec1e(%rip), %eax     # 0xffffffff800251e1 <__rust_no_alloc_shim_is_unstable>
ffffffff800065c3: b1 01                	movb	$0x1, %cl
ffffffff800065c5: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff800065d0: 31 c0                	xorl	%eax, %eax
ffffffff800065d2: f0                   	lock
ffffffff800065d3: 0f b0 0d 76 ea 01 00 	cmpxchgb	%cl, 0x1ea76(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff800065da: 75 06                	jne	0xffffffff800065e2 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::hc2421bb864a2d4b1+0x42>
ffffffff800065dc: eb 11                	jmp	0xffffffff800065ef <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::hc2421bb864a2d4b1+0x4f>
ffffffff800065de: 66 90                	nop
ffffffff800065e0: f3 90                	pause
ffffffff800065e2: 0f b6 05 67 ea 01 00 	movzbl	0x1ea67(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff800065e9: 84 c0                	testb	%al, %al
ffffffff800065eb: 75 f3                	jne	0xffffffff800065e0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::hc2421bb864a2d4b1+0x40>
ffffffff800065ed: eb e1                	jmp	0xffffffff800065d0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::hc2421bb864a2d4b1+0x30>
ffffffff800065ef: be 08 00 00 00       	movl	$0x8, %esi
ffffffff800065f4: ba c8 00 00 00       	movl	$0xc8, %edx
ffffffff800065f9: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff80006600: e8 fb cc ff ff       	callq	0xffffffff80003300 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80006605: c6 05 44 ea 01 00 00 	movb	$0x0, 0x1ea44(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000660c: 48 85 c0             	testq	%rax, %rax
ffffffff8000660f: 0f 84 3f 01 00 00    	je	0xffffffff80006754 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::hc2421bb864a2d4b1+0x1b4>
ffffffff80006615: 49 89 c4             	movq	%rax, %r12
ffffffff80006618: 48 c7 00 00 00 00 00 	movq	$0x0, (%rax)
ffffffff8000661f: 49 8b 6e 10          	movq	0x10(%r14), %rbp
ffffffff80006623: 41 0f b7 45 62       	movzwl	0x62(%r13), %eax
ffffffff80006628: 48 89 ea             	movq	%rbp, %rdx
ffffffff8000662b: 48 f7 d2             	notq	%rdx
ffffffff8000662e: 48 01 c2             	addq	%rax, %rdx
ffffffff80006631: 66 41 89 54 24 62    	movw	%dx, 0x62(%r12)
ffffffff80006637: 48 83 fa 0c          	cmpq	$0xc, %rdx
ffffffff8000663b: 0f 83 ee 00 00 00    	jae	0xffffffff8000672f <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::hc2421bb864a2d4b1+0x18f>
ffffffff80006641: 48 8d 4d 01          	leaq	0x1(%rbp), %rcx
ffffffff80006645: 48 29 c8             	subq	%rcx, %rax
ffffffff80006648: 48 39 d0             	cmpq	%rdx, %rax
ffffffff8000664b: 0f 85 c6 00 00 00    	jne	0xffffffff80006717 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::hc2421bb864a2d4b1+0x177>
ffffffff80006651: 4c 89 74 24 10       	movq	%r14, 0x10(%rsp)
ffffffff80006656: 49 8d 45 08          	leaq	0x8(%r13), %rax
ffffffff8000665a: 49 8b 74 ed 08       	movq	0x8(%r13,%rbp,8), %rsi
ffffffff8000665f: 48 89 74 24 08       	movq	%rsi, 0x8(%rsp)
ffffffff80006664: 49 8d 7c 24 08       	leaq	0x8(%r12), %rdi
ffffffff80006669: 48 8d 34 c8          	leaq	(%rax,%rcx,8), %rsi
ffffffff8000666d: 48 c1 e2 03          	shlq	$0x3, %rdx
ffffffff80006671: ff 15 a9 fd 02 00    	callq	*0x2fda9(%rip)          # 0xffffffff80036420
ffffffff80006677: 66 41 89 6d 62       	movw	%bp, 0x62(%r13)
ffffffff8000667c: 45 0f b7 74 24 62    	movzwl	0x62(%r12), %r14d
ffffffff80006682: 49 8d 7e 01          	leaq	0x1(%r14), %rdi
ffffffff80006686: 49 83 fe 0c          	cmpq	$0xc, %r14
ffffffff8000668a: 0f 83 b3 00 00 00    	jae	0xffffffff80006743 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::hc2421bb864a2d4b1+0x1a3>
ffffffff80006690: 49 29 ef             	subq	%rbp, %r15
ffffffff80006693: 49 39 ff             	cmpq	%rdi, %r15
ffffffff80006696: 75 7f                	jne	0xffffffff80006717 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::hc2421bb864a2d4b1+0x177>
ffffffff80006698: 4c 89 e7             	movq	%r12, %rdi
ffffffff8000669b: 48 83 c7 68          	addq	$0x68, %rdi
ffffffff8000669f: 48 8d 34 ed 70 00 00 00      	leaq	0x70(,%rbp,8), %rsi
ffffffff800066a7: 4c 01 ee             	addq	%r13, %rsi
ffffffff800066aa: 49 c1 e7 03          	shlq	$0x3, %r15
ffffffff800066ae: 4c 89 fa             	movq	%r15, %rdx
ffffffff800066b1: ff 15 69 fd 02 00    	callq	*0x2fd69(%rip)          # 0xffffffff80036420
ffffffff800066b7: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff800066bc: 48 8b 40 08          	movq	0x8(%rax), %rax
ffffffff800066c0: 31 c9                	xorl	%ecx, %ecx
ffffffff800066c2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
ffffffff800066d0: 48 89 ca             	movq	%rcx, %rdx
ffffffff800066d3: 4c 39 f1             	cmpq	%r14, %rcx
ffffffff800066d6: 48 83 d1 00          	adcq	$0x0, %rcx
ffffffff800066da: 49 8b 74 d4 68       	movq	0x68(%r12,%rdx,8), %rsi
ffffffff800066df: 4c 89 26             	movq	%r12, (%rsi)
ffffffff800066e2: 66 89 56 60          	movw	%dx, 0x60(%rsi)
ffffffff800066e6: 4c 39 f2             	cmpq	%r14, %rdx
ffffffff800066e9: 73 05                	jae	0xffffffff800066f0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::hc2421bb864a2d4b1+0x150>
ffffffff800066eb: 4c 39 f1             	cmpq	%r14, %rcx
ffffffff800066ee: 76 e0                	jbe	0xffffffff800066d0 <alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split::hc2421bb864a2d4b1+0x130>
ffffffff800066f0: 4c 89 2b             	movq	%r13, (%rbx)
ffffffff800066f3: 48 89 43 08          	movq	%rax, 0x8(%rbx)
ffffffff800066f7: 48 8b 4c 24 08       	movq	0x8(%rsp), %rcx
ffffffff800066fc: 48 89 4b 20          	movq	%rcx, 0x20(%rbx)
ffffffff80006700: 4c 89 63 10          	movq	%r12, 0x10(%rbx)
ffffffff80006704: 48 89 43 18          	movq	%rax, 0x18(%rbx)
ffffffff80006708: 48 83 c4 18          	addq	$0x18, %rsp
ffffffff8000670c: 5b                   	popq	%rbx
ffffffff8000670d: 41 5c                	popq	%r12
ffffffff8000670f: 41 5d                	popq	%r13
ffffffff80006711: 41 5e                	popq	%r14
ffffffff80006713: 41 5f                	popq	%r15
ffffffff80006715: 5d                   	popq	%rbp
ffffffff80006716: c3                   	retq
ffffffff80006717: be 28 00 00 00       	movl	$0x28, %esi
ffffffff8000671c: 48 c7 c7 28 e0 01 80 	movq	$-0x7ffe1fd8, %rdi      # imm = 0x8001E028
ffffffff80006723: 48 c7 c2 50 e0 01 80 	movq	$-0x7ffe1fb0, %rdx      # imm = 0x8001E050
ffffffff8000672a: e8 41 5d 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000672f: be 0b 00 00 00       	movl	$0xb, %esi
ffffffff80006734: 48 89 d7             	movq	%rdx, %rdi
ffffffff80006737: 48 c7 c2 68 e0 01 80 	movq	$-0x7ffe1f98, %rdx      # imm = 0x8001E068
ffffffff8000673e: e8 3d 58 01 00       	callq	0xffffffff8001bf80 <core::slice::index::slice_end_index_len_fail::h34b67e5519833f02>
ffffffff80006743: be 0c 00 00 00       	movl	$0xc, %esi
ffffffff80006748: 48 c7 c2 80 e0 01 80 	movq	$-0x7ffe1f80, %rdx      # imm = 0x8001E080
ffffffff8000674f: e8 2c 58 01 00       	callq	0xffffffff8001bf80 <core::slice::index::slice_end_index_len_fail::h34b67e5519833f02>
ffffffff80006754: bf 08 00 00 00       	movl	$0x8, %edi
ffffffff80006759: be c8 00 00 00       	movl	$0xc8, %esi
ffffffff8000675e: e8 ff 28 01 00       	callq	0xffffffff80019062 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff80006763: cc                   	int3
ffffffff80006764: cc                   	int3
ffffffff80006765: cc                   	int3
ffffffff80006766: cc                   	int3
ffffffff80006767: cc                   	int3
ffffffff80006768: cc                   	int3
ffffffff80006769: cc                   	int3
ffffffff8000676a: cc                   	int3
ffffffff8000676b: cc                   	int3
ffffffff8000676c: cc                   	int3
ffffffff8000676d: cc                   	int3
ffffffff8000676e: cc                   	int3
ffffffff8000676f: cc                   	int3

ffffffff80006770 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::hda6288e802b68f69>:
ffffffff80006770: 55                   	pushq	%rbp
ffffffff80006771: 41 57                	pushq	%r15
ffffffff80006773: 41 56                	pushq	%r14
ffffffff80006775: 41 55                	pushq	%r13
ffffffff80006777: 41 54                	pushq	%r12
ffffffff80006779: 53                   	pushq	%rbx
ffffffff8000677a: 48 83 ec 28          	subq	$0x28, %rsp
ffffffff8000677e: 48 8b 6f 28          	movq	0x28(%rdi), %rbp
ffffffff80006782: 0f b7 4d 62          	movzwl	0x62(%rbp), %ecx
ffffffff80006786: 48 8d 04 31          	leaq	(%rcx,%rsi), %rax
ffffffff8000678a: 48 83 f8 0c          	cmpq	$0xc, %rax
ffffffff8000678e: 0f 83 af 01 00 00    	jae	0xffffffff80006943 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::hda6288e802b68f69+0x1d3>
ffffffff80006794: 48 89 f3             	movq	%rsi, %rbx
ffffffff80006797: 49 89 fe             	movq	%rdi, %r14
ffffffff8000679a: 4c 8b 7f 18          	movq	0x18(%rdi), %r15
ffffffff8000679e: 45 0f b7 67 62       	movzwl	0x62(%r15), %r12d
ffffffff800067a3: 4d 89 e5             	movq	%r12, %r13
ffffffff800067a6: 49 29 f5             	subq	%rsi, %r13
ffffffff800067a9: 0f 82 ac 01 00 00    	jb	0xffffffff8000695b <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::hda6288e802b68f69+0x1eb>
ffffffff800067af: 66 45 89 6f 62       	movw	%r13w, 0x62(%r15)
ffffffff800067b4: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff800067b9: 66 89 45 62          	movw	%ax, 0x62(%rbp)
ffffffff800067bd: 48 8d 75 08          	leaq	0x8(%rbp), %rsi
ffffffff800067c1: 48 8d 3c dd 08 00 00 00      	leaq	0x8(,%rbx,8), %rdi
ffffffff800067c9: 48 01 ef             	addq	%rbp, %rdi
ffffffff800067cc: 48 89 4c 24 10       	movq	%rcx, 0x10(%rsp)
ffffffff800067d1: 8d 14 cd 00 00 00 00 	leal	(,%rcx,8), %edx
ffffffff800067d8: 48 89 74 24 20       	movq	%rsi, 0x20(%rsp)
ffffffff800067dd: 48 89 54 24 08       	movq	%rdx, 0x8(%rsp)
ffffffff800067e2: ff 15 40 fc 02 00    	callq	*0x2fc40(%rip)          # 0xffffffff80036428
ffffffff800067e8: 49 8d 4d 01          	leaq	0x1(%r13), %rcx
ffffffff800067ec: 49 29 cc             	subq	%rcx, %r12
ffffffff800067ef: 48 8d 43 ff          	leaq	-0x1(%rbx), %rax
ffffffff800067f3: 49 39 c4             	cmpq	%rax, %r12
ffffffff800067f6: 0f 85 77 01 00 00    	jne	0xffffffff80006973 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::hda6288e802b68f69+0x203>
ffffffff800067fc: 48 89 0c 24          	movq	%rcx, (%rsp)
ffffffff80006800: 49 8d 34 cf          	leaq	(%r15,%rcx,8), %rsi
ffffffff80006804: 48 83 c6 08          	addq	$0x8, %rsi
ffffffff80006808: 41 c1 e4 03          	shll	$0x3, %r12d
ffffffff8000680c: 48 8b 7c 24 20       	movq	0x20(%rsp), %rdi
ffffffff80006811: 4c 89 e2             	movq	%r12, %rdx
ffffffff80006814: ff 15 06 fc 02 00    	callq	*0x2fc06(%rip)          # 0xffffffff80036420
ffffffff8000681a: 4b 8b 44 ef 08       	movq	0x8(%r15,%r13,8), %rax
ffffffff8000681f: 49 8b 0e             	movq	(%r14), %rcx
ffffffff80006822: 49 8b 56 10          	movq	0x10(%r14), %rdx
ffffffff80006826: 48 8b 74 d1 08       	movq	0x8(%rcx,%rdx,8), %rsi
ffffffff8000682b: 48 89 44 d1 08       	movq	%rax, 0x8(%rcx,%rdx,8)
ffffffff80006830: 48 89 74 dd 00       	movq	%rsi, (%rbp,%rbx,8)
ffffffff80006835: 49 83 7e 20 00       	cmpq	$0x0, 0x20(%r14)
ffffffff8000683a: 49 8b 46 30          	movq	0x30(%r14), %rax
ffffffff8000683e: 74 60                	je	0xffffffff800068a0 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::hda6288e802b68f69+0x130>
ffffffff80006840: 48 85 c0             	testq	%rax, %rax
ffffffff80006843: 74 64                	je	0xffffffff800068a9 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::hda6288e802b68f69+0x139>
ffffffff80006845: 4c 8d 75 68          	leaq	0x68(%rbp), %r14
ffffffff80006849: 48 8d 3c dd 68 00 00 00      	leaq	0x68(,%rbx,8), %rdi
ffffffff80006851: 48 01 ef             	addq	%rbp, %rdi
ffffffff80006854: 48 8b 54 24 08       	movq	0x8(%rsp), %rdx
ffffffff80006859: 48 83 c2 08          	addq	$0x8, %rdx
ffffffff8000685d: 4c 89 f6             	movq	%r14, %rsi
ffffffff80006860: ff 15 c2 fb 02 00    	callq	*0x2fbc2(%rip)          # 0xffffffff80036428
ffffffff80006866: 48 8b 04 24          	movq	(%rsp), %rax
ffffffff8000686a: 49 8d 34 c7          	leaq	(%r15,%rax,8), %rsi
ffffffff8000686e: 48 83 c6 68          	addq	$0x68, %rsi
ffffffff80006872: 48 8d 14 dd 00 00 00 00      	leaq	(,%rbx,8), %rdx
ffffffff8000687a: 4c 89 f7             	movq	%r14, %rdi
ffffffff8000687d: ff 15 9d fb 02 00    	callq	*0x2fb9d(%rip)          # 0xffffffff80036420
ffffffff80006883: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff80006888: 48 8d 14 18          	leaq	(%rax,%rbx), %rdx
ffffffff8000688c: 48 ff c2             	incq	%rdx
ffffffff8000688f: 89 d0                	movl	%edx, %eax
ffffffff80006891: 83 e0 03             	andl	$0x3, %eax
ffffffff80006894: 48 83 7c 24 18 03    	cmpq	$0x3, 0x18(%rsp)
ffffffff8000689a: 73 25                	jae	0xffffffff800068c1 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::hda6288e802b68f69+0x151>
ffffffff8000689c: 31 c9                	xorl	%ecx, %ecx
ffffffff8000689e: eb 7b                	jmp	0xffffffff8000691b <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::hda6288e802b68f69+0x1ab>
ffffffff800068a0: 48 85 c0             	testq	%rax, %rax
ffffffff800068a3: 0f 84 8b 00 00 00    	je	0xffffffff80006934 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::hda6288e802b68f69+0x1c4>
ffffffff800068a9: be 28 00 00 00       	movl	$0x28, %esi
ffffffff800068ae: 48 c7 c7 78 e1 01 80 	movq	$-0x7ffe1e88, %rdi      # imm = 0x8001E178
ffffffff800068b5: 48 c7 c2 a0 e1 01 80 	movq	$-0x7ffe1e60, %rdx      # imm = 0x8001E1A0
ffffffff800068bc: e8 af 5b 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff800068c1: 83 e2 3c             	andl	$0x3c, %edx
ffffffff800068c4: 31 c9                	xorl	%ecx, %ecx
ffffffff800068c6: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
ffffffff800068d0: 48 8b 74 cd 68       	movq	0x68(%rbp,%rcx,8), %rsi
ffffffff800068d5: 48 89 2e             	movq	%rbp, (%rsi)
ffffffff800068d8: 89 cf                	movl	%ecx, %edi
ffffffff800068da: 66 89 4e 60          	movw	%cx, 0x60(%rsi)
ffffffff800068de: 48 8b 74 cd 70       	movq	0x70(%rbp,%rcx,8), %rsi
ffffffff800068e3: 48 89 2e             	movq	%rbp, (%rsi)
ffffffff800068e6: 44 8d 47 01          	leal	0x1(%rdi), %r8d
ffffffff800068ea: 66 44 89 46 60       	movw	%r8w, 0x60(%rsi)
ffffffff800068ef: 48 8b 74 cd 78       	movq	0x78(%rbp,%rcx,8), %rsi
ffffffff800068f4: 48 89 2e             	movq	%rbp, (%rsi)
ffffffff800068f7: 44 8d 47 02          	leal	0x2(%rdi), %r8d
ffffffff800068fb: 66 44 89 46 60       	movw	%r8w, 0x60(%rsi)
ffffffff80006900: 48 8b b4 cd 80 00 00 00      	movq	0x80(%rbp,%rcx,8), %rsi
ffffffff80006908: 48 83 c1 04          	addq	$0x4, %rcx
ffffffff8000690c: 48 89 2e             	movq	%rbp, (%rsi)
ffffffff8000690f: 83 c7 03             	addl	$0x3, %edi
ffffffff80006912: 66 89 7e 60          	movw	%di, 0x60(%rsi)
ffffffff80006916: 48 39 d1             	cmpq	%rdx, %rcx
ffffffff80006919: 75 b5                	jne	0xffffffff800068d0 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::hda6288e802b68f69+0x160>
ffffffff8000691b: 48 85 c0             	testq	%rax, %rax
ffffffff8000691e: 74 14                	je	0xffffffff80006934 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::hda6288e802b68f69+0x1c4>
ffffffff80006920: 48 8b 54 cd 68       	movq	0x68(%rbp,%rcx,8), %rdx
ffffffff80006925: 48 89 2a             	movq	%rbp, (%rdx)
ffffffff80006928: 66 89 4a 60          	movw	%cx, 0x60(%rdx)
ffffffff8000692c: 48 ff c1             	incq	%rcx
ffffffff8000692f: 48 ff c8             	decq	%rax
ffffffff80006932: 75 ec                	jne	0xffffffff80006920 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::hda6288e802b68f69+0x1b0>
ffffffff80006934: 48 83 c4 28          	addq	$0x28, %rsp
ffffffff80006938: 5b                   	popq	%rbx
ffffffff80006939: 41 5c                	popq	%r12
ffffffff8000693b: 41 5d                	popq	%r13
ffffffff8000693d: 41 5e                	popq	%r14
ffffffff8000693f: 41 5f                	popq	%r15
ffffffff80006941: 5d                   	popq	%rbp
ffffffff80006942: c3                   	retq
ffffffff80006943: be 33 00 00 00       	movl	$0x33, %esi
ffffffff80006948: 48 c7 c7 e8 e0 01 80 	movq	$-0x7ffe1f18, %rdi      # imm = 0x8001E0E8
ffffffff8000694f: 48 c7 c2 20 e1 01 80 	movq	$-0x7ffe1ee0, %rdx      # imm = 0x8001E120
ffffffff80006956: e8 15 5b 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000695b: be 27 00 00 00       	movl	$0x27, %esi
ffffffff80006960: 48 c7 c7 38 e1 01 80 	movq	$-0x7ffe1ec8, %rdi      # imm = 0x8001E138
ffffffff80006967: 48 c7 c2 60 e1 01 80 	movq	$-0x7ffe1ea0, %rdx      # imm = 0x8001E160
ffffffff8000696e: e8 fd 5a 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80006973: be 28 00 00 00       	movl	$0x28, %esi
ffffffff80006978: 48 c7 c7 28 e0 01 80 	movq	$-0x7ffe1fd8, %rdi      # imm = 0x8001E028
ffffffff8000697f: 48 c7 c2 50 e0 01 80 	movq	$-0x7ffe1fb0, %rdx      # imm = 0x8001E050
ffffffff80006986: e8 e5 5a 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000698b: cc                   	int3
ffffffff8000698c: cc                   	int3
ffffffff8000698d: cc                   	int3
ffffffff8000698e: cc                   	int3
ffffffff8000698f: cc                   	int3

ffffffff80006990 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::he59c1e99e1ca0e33>:
ffffffff80006990: 55                   	pushq	%rbp
ffffffff80006991: 41 57                	pushq	%r15
ffffffff80006993: 41 56                	pushq	%r14
ffffffff80006995: 41 55                	pushq	%r13
ffffffff80006997: 41 54                	pushq	%r12
ffffffff80006999: 53                   	pushq	%rbx
ffffffff8000699a: 48 83 ec 38          	subq	$0x38, %rsp
ffffffff8000699e: 4c 8b 6f 28          	movq	0x28(%rdi), %r13
ffffffff800069a2: 41 0f b7 ad 8e 00 00 00      	movzwl	0x8e(%r13), %ebp
ffffffff800069aa: 48 8d 04 2e          	leaq	(%rsi,%rbp), %rax
ffffffff800069ae: 48 83 f8 0c          	cmpq	$0xc, %rax
ffffffff800069b2: 0f 83 51 02 00 00    	jae	0xffffffff80006c09 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::he59c1e99e1ca0e33+0x279>
ffffffff800069b8: 48 89 f3             	movq	%rsi, %rbx
ffffffff800069bb: 4c 8b 77 18          	movq	0x18(%rdi), %r14
ffffffff800069bf: 45 0f b7 a6 8e 00 00 00      	movzwl	0x8e(%r14), %r12d
ffffffff800069c7: 4d 89 e7             	movq	%r12, %r15
ffffffff800069ca: 49 29 f7             	subq	%rsi, %r15
ffffffff800069cd: 0f 82 4e 02 00 00    	jb	0xffffffff80006c21 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::he59c1e99e1ca0e33+0x291>
ffffffff800069d3: 48 89 7c 24 30       	movq	%rdi, 0x30(%rsp)
ffffffff800069d8: 66 45 89 be 8e 00 00 00      	movw	%r15w, 0x8e(%r14)
ffffffff800069e0: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff800069e5: 66 41 89 85 8e 00 00 00      	movw	%ax, 0x8e(%r13)
ffffffff800069ed: 49 8d 75 60          	leaq	0x60(%r13), %rsi
ffffffff800069f1: 48 8d 3c 9d 60 00 00 00      	leaq	0x60(,%rbx,4), %rdi
ffffffff800069f9: 4c 01 ef             	addq	%r13, %rdi
ffffffff800069fc: 8d 14 ad 00 00 00 00 	leal	(,%rbp,4), %edx
ffffffff80006a03: 48 89 34 24          	movq	%rsi, (%rsp)
ffffffff80006a07: ff 15 1b fa 02 00    	callq	*0x2fa1b(%rip)          # 0xffffffff80036428
ffffffff80006a0d: 49 8d 75 08          	leaq	0x8(%r13), %rsi
ffffffff80006a11: 48 8d 3c dd 08 00 00 00      	leaq	0x8(,%rbx,8), %rdi
ffffffff80006a19: 4c 01 ef             	addq	%r13, %rdi
ffffffff80006a1c: 48 89 6c 24 10       	movq	%rbp, 0x10(%rsp)
ffffffff80006a21: 8d 2c ed 00 00 00 00 	leal	(,%rbp,8), %ebp
ffffffff80006a28: 48 89 74 24 28       	movq	%rsi, 0x28(%rsp)
ffffffff80006a2d: 48 89 ea             	movq	%rbp, %rdx
ffffffff80006a30: ff 15 f2 f9 02 00    	callq	*0x2f9f2(%rip)          # 0xffffffff80036428
ffffffff80006a36: 49 8d 4f 01          	leaq	0x1(%r15), %rcx
ffffffff80006a3a: 49 29 cc             	subq	%rcx, %r12
ffffffff80006a3d: 48 8d 43 ff          	leaq	-0x1(%rbx), %rax
ffffffff80006a41: 49 39 c4             	cmpq	%rax, %r12
ffffffff80006a44: 0f 85 ef 01 00 00    	jne	0xffffffff80006c39 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::he59c1e99e1ca0e33+0x2a9>
ffffffff80006a4a: 48 89 6c 24 08       	movq	%rbp, 0x8(%rsp)
ffffffff80006a4f: 49 8d 34 8e          	leaq	(%r14,%rcx,4), %rsi
ffffffff80006a53: 48 83 c6 60          	addq	$0x60, %rsi
ffffffff80006a57: 42 8d 14 a5 00 00 00 00      	leal	(,%r12,4), %edx
ffffffff80006a5f: 48 89 54 24 20       	movq	%rdx, 0x20(%rsp)
ffffffff80006a64: 48 8b 3c 24          	movq	(%rsp), %rdi
ffffffff80006a68: 48 89 cd             	movq	%rcx, %rbp
ffffffff80006a6b: ff 15 af f9 02 00    	callq	*0x2f9af(%rip)          # 0xffffffff80036420
ffffffff80006a71: 48 89 2c 24          	movq	%rbp, (%rsp)
ffffffff80006a75: 49 8d 34 ee          	leaq	(%r14,%rbp,8), %rsi
ffffffff80006a79: 48 83 c6 08          	addq	$0x8, %rsi
ffffffff80006a7d: 41 c1 e4 03          	shll	$0x3, %r12d
ffffffff80006a81: 48 8b 7c 24 28       	movq	0x28(%rsp), %rdi
ffffffff80006a86: 4c 89 e2             	movq	%r12, %rdx
ffffffff80006a89: ff 15 91 f9 02 00    	callq	*0x2f991(%rip)          # 0xffffffff80036420
ffffffff80006a8f: 43 8b 44 be 60       	movl	0x60(%r14,%r15,4), %eax
ffffffff80006a94: 4b 8b 4c fe 08       	movq	0x8(%r14,%r15,8), %rcx
ffffffff80006a99: 4c 8b 44 24 30       	movq	0x30(%rsp), %r8
ffffffff80006a9e: 49 8b 10             	movq	(%r8), %rdx
ffffffff80006aa1: 49 8b 70 10          	movq	0x10(%r8), %rsi
ffffffff80006aa5: 8b 7c b2 60          	movl	0x60(%rdx,%rsi,4), %edi
ffffffff80006aa9: 89 44 b2 60          	movl	%eax, 0x60(%rdx,%rsi,4)
ffffffff80006aad: 48 8b 44 f2 08       	movq	0x8(%rdx,%rsi,8), %rax
ffffffff80006ab2: 48 89 4c f2 08       	movq	%rcx, 0x8(%rdx,%rsi,8)
ffffffff80006ab7: 48 8b 4c 24 20       	movq	0x20(%rsp), %rcx
ffffffff80006abc: 41 89 7c 0d 60       	movl	%edi, 0x60(%r13,%rcx)
ffffffff80006ac1: 49 89 44 dd 00       	movq	%rax, (%r13,%rbx,8)
ffffffff80006ac6: 49 83 78 20 00       	cmpq	$0x0, 0x20(%r8)
ffffffff80006acb: 49 8b 40 30          	movq	0x30(%r8), %rax
ffffffff80006acf: 74 6c                	je	0xffffffff80006b3d <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::he59c1e99e1ca0e33+0x1ad>
ffffffff80006ad1: 48 85 c0             	testq	%rax, %rax
ffffffff80006ad4: 74 70                	je	0xffffffff80006b46 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::he59c1e99e1ca0e33+0x1b6>
ffffffff80006ad6: 4d 89 f7             	movq	%r14, %r15
ffffffff80006ad9: 4d 8d b5 90 00 00 00 	leaq	0x90(%r13), %r14
ffffffff80006ae0: 48 8d 3c dd 90 00 00 00      	leaq	0x90(,%rbx,8), %rdi
ffffffff80006ae8: 4c 01 ef             	addq	%r13, %rdi
ffffffff80006aeb: 48 8b 54 24 08       	movq	0x8(%rsp), %rdx
ffffffff80006af0: 48 83 c2 08          	addq	$0x8, %rdx
ffffffff80006af4: 4c 89 f6             	movq	%r14, %rsi
ffffffff80006af7: ff 15 2b f9 02 00    	callq	*0x2f92b(%rip)          # 0xffffffff80036428
ffffffff80006afd: 48 8b 04 24          	movq	(%rsp), %rax
ffffffff80006b01: 49 8d 34 c7          	leaq	(%r15,%rax,8), %rsi
ffffffff80006b05: 48 81 c6 90 00 00 00 	addq	$0x90, %rsi
ffffffff80006b0c: 48 8d 14 dd 00 00 00 00      	leaq	(,%rbx,8), %rdx
ffffffff80006b14: 4c 89 f7             	movq	%r14, %rdi
ffffffff80006b17: ff 15 03 f9 02 00    	callq	*0x2f903(%rip)          # 0xffffffff80036420
ffffffff80006b1d: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff80006b22: 48 8d 14 18          	leaq	(%rax,%rbx), %rdx
ffffffff80006b26: 48 ff c2             	incq	%rdx
ffffffff80006b29: 89 d0                	movl	%edx, %eax
ffffffff80006b2b: 83 e0 03             	andl	$0x3, %eax
ffffffff80006b2e: 48 83 7c 24 18 03    	cmpq	$0x3, 0x18(%rsp)
ffffffff80006b34: 73 28                	jae	0xffffffff80006b5e <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::he59c1e99e1ca0e33+0x1ce>
ffffffff80006b36: 31 c9                	xorl	%ecx, %ecx
ffffffff80006b38: e9 93 00 00 00       	jmp	0xffffffff80006bd0 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::he59c1e99e1ca0e33+0x240>
ffffffff80006b3d: 48 85 c0             	testq	%rax, %rax
ffffffff80006b40: 0f 84 b4 00 00 00    	je	0xffffffff80006bfa <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::he59c1e99e1ca0e33+0x26a>
ffffffff80006b46: be 28 00 00 00       	movl	$0x28, %esi
ffffffff80006b4b: 48 c7 c7 78 e1 01 80 	movq	$-0x7ffe1e88, %rdi      # imm = 0x8001E178
ffffffff80006b52: 48 c7 c2 a0 e1 01 80 	movq	$-0x7ffe1e60, %rdx      # imm = 0x8001E1A0
ffffffff80006b59: e8 12 59 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80006b5e: 83 e2 3c             	andl	$0x3c, %edx
ffffffff80006b61: 31 c9                	xorl	%ecx, %ecx
ffffffff80006b63: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
ffffffff80006b70: 49 8b b4 cd 90 00 00 00      	movq	0x90(%r13,%rcx,8), %rsi
ffffffff80006b78: 4c 89 2e             	movq	%r13, (%rsi)
ffffffff80006b7b: 89 cf                	movl	%ecx, %edi
ffffffff80006b7d: 66 89 8e 8c 00 00 00 	movw	%cx, 0x8c(%rsi)
ffffffff80006b84: 49 8b b4 cd 98 00 00 00      	movq	0x98(%r13,%rcx,8), %rsi
ffffffff80006b8c: 4c 89 2e             	movq	%r13, (%rsi)
ffffffff80006b8f: 44 8d 47 01          	leal	0x1(%rdi), %r8d
ffffffff80006b93: 66 44 89 86 8c 00 00 00      	movw	%r8w, 0x8c(%rsi)
ffffffff80006b9b: 49 8b b4 cd a0 00 00 00      	movq	0xa0(%r13,%rcx,8), %rsi
ffffffff80006ba3: 4c 89 2e             	movq	%r13, (%rsi)
ffffffff80006ba6: 44 8d 47 02          	leal	0x2(%rdi), %r8d
ffffffff80006baa: 66 44 89 86 8c 00 00 00      	movw	%r8w, 0x8c(%rsi)
ffffffff80006bb2: 49 8b b4 cd a8 00 00 00      	movq	0xa8(%r13,%rcx,8), %rsi
ffffffff80006bba: 48 83 c1 04          	addq	$0x4, %rcx
ffffffff80006bbe: 4c 89 2e             	movq	%r13, (%rsi)
ffffffff80006bc1: 83 c7 03             	addl	$0x3, %edi
ffffffff80006bc4: 66 89 be 8c 00 00 00 	movw	%di, 0x8c(%rsi)
ffffffff80006bcb: 48 39 d1             	cmpq	%rdx, %rcx
ffffffff80006bce: 75 a0                	jne	0xffffffff80006b70 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::he59c1e99e1ca0e33+0x1e0>
ffffffff80006bd0: 48 85 c0             	testq	%rax, %rax
ffffffff80006bd3: 74 25                	je	0xffffffff80006bfa <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::he59c1e99e1ca0e33+0x26a>
ffffffff80006bd5: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff80006be0: 49 8b 94 cd 90 00 00 00      	movq	0x90(%r13,%rcx,8), %rdx
ffffffff80006be8: 4c 89 2a             	movq	%r13, (%rdx)
ffffffff80006beb: 66 89 8a 8c 00 00 00 	movw	%cx, 0x8c(%rdx)
ffffffff80006bf2: 48 ff c1             	incq	%rcx
ffffffff80006bf5: 48 ff c8             	decq	%rax
ffffffff80006bf8: 75 e6                	jne	0xffffffff80006be0 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::he59c1e99e1ca0e33+0x250>
ffffffff80006bfa: 48 83 c4 38          	addq	$0x38, %rsp
ffffffff80006bfe: 5b                   	popq	%rbx
ffffffff80006bff: 41 5c                	popq	%r12
ffffffff80006c01: 41 5d                	popq	%r13
ffffffff80006c03: 41 5e                	popq	%r14
ffffffff80006c05: 41 5f                	popq	%r15
ffffffff80006c07: 5d                   	popq	%rbp
ffffffff80006c08: c3                   	retq
ffffffff80006c09: be 33 00 00 00       	movl	$0x33, %esi
ffffffff80006c0e: 48 c7 c7 e8 e0 01 80 	movq	$-0x7ffe1f18, %rdi      # imm = 0x8001E0E8
ffffffff80006c15: 48 c7 c2 20 e1 01 80 	movq	$-0x7ffe1ee0, %rdx      # imm = 0x8001E120
ffffffff80006c1c: e8 4f 58 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80006c21: be 27 00 00 00       	movl	$0x27, %esi
ffffffff80006c26: 48 c7 c7 38 e1 01 80 	movq	$-0x7ffe1ec8, %rdi      # imm = 0x8001E138
ffffffff80006c2d: 48 c7 c2 60 e1 01 80 	movq	$-0x7ffe1ea0, %rdx      # imm = 0x8001E160
ffffffff80006c34: e8 37 58 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80006c39: be 28 00 00 00       	movl	$0x28, %esi
ffffffff80006c3e: 48 c7 c7 28 e0 01 80 	movq	$-0x7ffe1fd8, %rdi      # imm = 0x8001E028
ffffffff80006c45: 48 c7 c2 50 e0 01 80 	movq	$-0x7ffe1fb0, %rdx      # imm = 0x8001E050
ffffffff80006c4c: e8 1f 58 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80006c51: cc                   	int3
ffffffff80006c52: cc                   	int3
ffffffff80006c53: cc                   	int3
ffffffff80006c54: cc                   	int3
ffffffff80006c55: cc                   	int3
ffffffff80006c56: cc                   	int3
ffffffff80006c57: cc                   	int3
ffffffff80006c58: cc                   	int3
ffffffff80006c59: cc                   	int3
ffffffff80006c5a: cc                   	int3
ffffffff80006c5b: cc                   	int3
ffffffff80006c5c: cc                   	int3
ffffffff80006c5d: cc                   	int3
ffffffff80006c5e: cc                   	int3
ffffffff80006c5f: cc                   	int3

ffffffff80006c60 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e>:
ffffffff80006c60: 55                   	pushq	%rbp
ffffffff80006c61: 41 57                	pushq	%r15
ffffffff80006c63: 41 56                	pushq	%r14
ffffffff80006c65: 41 55                	pushq	%r13
ffffffff80006c67: 41 54                	pushq	%r12
ffffffff80006c69: 53                   	pushq	%rbx
ffffffff80006c6a: 48 83 ec 38          	subq	$0x38, %rsp
ffffffff80006c6e: 48 8b 6f 18          	movq	0x18(%rdi), %rbp
ffffffff80006c72: 44 0f b7 9d 8e 00 00 00      	movzwl	0x8e(%rbp), %r11d
ffffffff80006c7a: 4d 8d 0c 33          	leaq	(%r11,%rsi), %r9
ffffffff80006c7e: 49 83 f9 0c          	cmpq	$0xc, %r9
ffffffff80006c82: 0f 83 31 03 00 00    	jae	0xffffffff80006fb9 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x359>
ffffffff80006c88: 48 89 f3             	movq	%rsi, %rbx
ffffffff80006c8b: 49 89 ff             	movq	%rdi, %r15
ffffffff80006c8e: 4c 8b 6f 28          	movq	0x28(%rdi), %r13
ffffffff80006c92: 45 0f b7 a5 8e 00 00 00      	movzwl	0x8e(%r13), %r12d
ffffffff80006c9a: 49 29 f4             	subq	%rsi, %r12
ffffffff80006c9d: 0f 82 2e 03 00 00    	jb	0xffffffff80006fd1 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x371>
ffffffff80006ca3: 66 44 89 8d 8e 00 00 00      	movw	%r9w, 0x8e(%rbp)
ffffffff80006cab: 66 45 89 a5 8e 00 00 00      	movw	%r12w, 0x8e(%r13)
ffffffff80006cb3: 4c 8d 53 ff          	leaq	-0x1(%rbx), %r10
ffffffff80006cb7: 41 8b 44 9d 5c       	movl	0x5c(%r13,%rbx,4), %eax
ffffffff80006cbc: 49 8b 4c dd 00       	movq	(%r13,%rbx,8), %rcx
ffffffff80006cc1: 49 8b 17             	movq	(%r15), %rdx
ffffffff80006cc4: 49 8b 77 10          	movq	0x10(%r15), %rsi
ffffffff80006cc8: 8b 7c b2 60          	movl	0x60(%rdx,%rsi,4), %edi
ffffffff80006ccc: 89 44 b2 60          	movl	%eax, 0x60(%rdx,%rsi,4)
ffffffff80006cd0: 48 8b 44 f2 08       	movq	0x8(%rdx,%rsi,8), %rax
ffffffff80006cd5: 48 89 4c f2 08       	movq	%rcx, 0x8(%rdx,%rsi,8)
ffffffff80006cda: 42 89 7c 9d 60       	movl	%edi, 0x60(%rbp,%r11,4)
ffffffff80006cdf: 4a 89 44 dd 08       	movq	%rax, 0x8(%rbp,%r11,8)
ffffffff80006ce4: 4d 8d 73 01          	leaq	0x1(%r11), %r14
ffffffff80006ce8: 4c 89 c8             	movq	%r9, %rax
ffffffff80006ceb: 4c 29 f0             	subq	%r14, %rax
ffffffff80006cee: 49 39 c2             	cmpq	%rax, %r10
ffffffff80006cf1: 0f 85 f2 02 00 00    	jne	0xffffffff80006fe9 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x389>
ffffffff80006cf7: 4c 89 5c 24 20       	movq	%r11, 0x20(%rsp)
ffffffff80006cfc: 4c 89 4c 24 18       	movq	%r9, 0x18(%rsp)
ffffffff80006d01: 49 8d 75 60          	leaq	0x60(%r13), %rsi
ffffffff80006d05: 48 89 74 24 08       	movq	%rsi, 0x8(%rsp)
ffffffff80006d0a: 48 8d 45 60          	leaq	0x60(%rbp), %rax
ffffffff80006d0e: 48 8d 4d 08          	leaq	0x8(%rbp), %rcx
ffffffff80006d12: 48 89 4c 24 10       	movq	%rcx, 0x10(%rsp)
ffffffff80006d17: 4a 8d 3c b0          	leaq	(%rax,%r14,4), %rdi
ffffffff80006d1b: 4a 8d 14 95 00 00 00 00      	leaq	(,%r10,4), %rdx
ffffffff80006d23: 4c 89 7c 24 30       	movq	%r15, 0x30(%rsp)
ffffffff80006d28: 4d 89 d7             	movq	%r10, %r15
ffffffff80006d2b: ff 15 ef f6 02 00    	callq	*0x2f6ef(%rip)          # 0xffffffff80036420
ffffffff80006d31: 49 8d 75 08          	leaq	0x8(%r13), %rsi
ffffffff80006d35: 48 89 74 24 28       	movq	%rsi, 0x28(%rsp)
ffffffff80006d3a: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff80006d3f: 4a 8d 3c f0          	leaq	(%rax,%r14,8), %rdi
ffffffff80006d43: 4c 89 7c 24 10       	movq	%r15, 0x10(%rsp)
ffffffff80006d48: 4a 8d 14 fd 00 00 00 00      	leaq	(,%r15,8), %rdx
ffffffff80006d50: ff 15 ca f6 02 00    	callq	*0x2f6ca(%rip)          # 0xffffffff80036420
ffffffff80006d56: 48 8b 7c 24 08       	movq	0x8(%rsp), %rdi
ffffffff80006d5b: 48 8d 34 9f          	leaq	(%rdi,%rbx,4), %rsi
ffffffff80006d5f: 4a 8d 14 a5 00 00 00 00      	leaq	(,%r12,4), %rdx
ffffffff80006d67: 4c 8b 3d ba f6 02 00 	movq	0x2f6ba(%rip), %r15     # 0xffffffff80036428
ffffffff80006d6e: 41 ff d7             	callq	*%r15
ffffffff80006d71: 4c 89 f8             	movq	%r15, %rax
ffffffff80006d74: 48 8d 34 dd 08 00 00 00      	leaq	0x8(,%rbx,8), %rsi
ffffffff80006d7c: 4c 01 ee             	addq	%r13, %rsi
ffffffff80006d7f: 4c 89 64 24 08       	movq	%r12, 0x8(%rsp)
ffffffff80006d84: 4e 8d 3c e5 00 00 00 00      	leaq	(,%r12,8), %r15
ffffffff80006d8c: 48 8b 7c 24 28       	movq	0x28(%rsp), %rdi
ffffffff80006d91: 4c 89 fa             	movq	%r15, %rdx
ffffffff80006d94: ff d0                	callq	*%rax
ffffffff80006d96: 48 8b 44 24 30       	movq	0x30(%rsp), %rax
ffffffff80006d9b: 48 83 78 20 00       	cmpq	$0x0, 0x20(%rax)
ffffffff80006da0: 48 8b 40 30          	movq	0x30(%rax), %rax
ffffffff80006da4: 0f 84 29 01 00 00    	je	0xffffffff80006ed3 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x273>
ffffffff80006daa: 48 85 c0             	testq	%rax, %rax
ffffffff80006dad: 0f 84 29 01 00 00    	je	0xffffffff80006edc <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x27c>
ffffffff80006db3: 4d 8d a5 90 00 00 00 	leaq	0x90(%r13), %r12
ffffffff80006dba: 4a 8d 3c f5 90 00 00 00      	leaq	0x90(,%r14,8), %rdi
ffffffff80006dc2: 48 01 ef             	addq	%rbp, %rdi
ffffffff80006dc5: 48 8d 14 dd 00 00 00 00      	leaq	(,%rbx,8), %rdx
ffffffff80006dcd: 4c 89 e6             	movq	%r12, %rsi
ffffffff80006dd0: ff 15 4a f6 02 00    	callq	*0x2f64a(%rip)          # 0xffffffff80036420
ffffffff80006dd6: 48 8d 34 dd 90 00 00 00      	leaq	0x90(,%rbx,8), %rsi
ffffffff80006dde: 4c 01 ee             	addq	%r13, %rsi
ffffffff80006de1: 49 83 c7 08          	addq	$0x8, %r15
ffffffff80006de5: 4c 89 e7             	movq	%r12, %rdi
ffffffff80006de8: 4c 89 fa             	movq	%r15, %rdx
ffffffff80006deb: ff 15 37 f6 02 00    	callq	*0x2f637(%rip)          # 0xffffffff80036428
ffffffff80006df1: 48 83 e3 03          	andq	$0x3, %rbx
ffffffff80006df5: 0f 84 f9 00 00 00    	je	0xffffffff80006ef4 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x294>
ffffffff80006dfb: 48 8b 44 24 20       	movq	0x20(%rsp), %rax
ffffffff80006e00: 48 8d 0c c5 98 00 00 00      	leaq	0x98(,%rax,8), %rcx
ffffffff80006e08: 48 01 e9             	addq	%rbp, %rcx
ffffffff80006e0b: 31 c0                	xorl	%eax, %eax
ffffffff80006e0d: 48 8b 7c 24 18       	movq	0x18(%rsp), %rdi
ffffffff80006e12: 4c 8b 44 24 10       	movq	0x10(%rsp), %r8
ffffffff80006e17: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
ffffffff80006e20: 48 8b 14 c1          	movq	(%rcx,%rax,8), %rdx
ffffffff80006e24: 48 89 2a             	movq	%rbp, (%rdx)
ffffffff80006e27: 41 8d 34 06          	leal	(%r14,%rax), %esi
ffffffff80006e2b: 66 89 b2 8c 00 00 00 	movw	%si, 0x8c(%rdx)
ffffffff80006e32: 48 ff c0             	incq	%rax
ffffffff80006e35: 48 39 c3             	cmpq	%rax, %rbx
ffffffff80006e38: 75 e6                	jne	0xffffffff80006e20 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x1c0>
ffffffff80006e3a: 49 01 c6             	addq	%rax, %r14
ffffffff80006e3d: 48 8b 54 24 08       	movq	0x8(%rsp), %rdx
ffffffff80006e42: 49 83 f8 03          	cmpq	$0x3, %r8
ffffffff80006e46: 72 66                	jb	0xffffffff80006eae <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x24e>
ffffffff80006e48: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
ffffffff80006e50: 4a 8b 84 f5 90 00 00 00      	movq	0x90(%rbp,%r14,8), %rax
ffffffff80006e58: 48 89 28             	movq	%rbp, (%rax)
ffffffff80006e5b: 66 44 89 b0 8c 00 00 00      	movw	%r14w, 0x8c(%rax)
ffffffff80006e63: 4a 8b 84 f5 98 00 00 00      	movq	0x98(%rbp,%r14,8), %rax
ffffffff80006e6b: 48 89 28             	movq	%rbp, (%rax)
ffffffff80006e6e: 41 8d 4e 01          	leal	0x1(%r14), %ecx
ffffffff80006e72: 66 89 88 8c 00 00 00 	movw	%cx, 0x8c(%rax)
ffffffff80006e79: 4a 8b 84 f5 a0 00 00 00      	movq	0xa0(%rbp,%r14,8), %rax
ffffffff80006e81: 48 89 28             	movq	%rbp, (%rax)
ffffffff80006e84: 41 8d 4e 02          	leal	0x2(%r14), %ecx
ffffffff80006e88: 66 89 88 8c 00 00 00 	movw	%cx, 0x8c(%rax)
ffffffff80006e8f: 4a 8b 84 f5 a8 00 00 00      	movq	0xa8(%rbp,%r14,8), %rax
ffffffff80006e97: 48 89 28             	movq	%rbp, (%rax)
ffffffff80006e9a: 49 8d 4e 03          	leaq	0x3(%r14), %rcx
ffffffff80006e9e: 66 89 88 8c 00 00 00 	movw	%cx, 0x8c(%rax)
ffffffff80006ea5: 49 83 c6 04          	addq	$0x4, %r14
ffffffff80006ea9: 48 39 f9             	cmpq	%rdi, %rcx
ffffffff80006eac: 75 a2                	jne	0xffffffff80006e50 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x1f0>
ffffffff80006eae: 48 83 fa ff          	cmpq	$-0x1, %rdx
ffffffff80006eb2: 0f 84 f2 00 00 00    	je	0xffffffff80006faa <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x34a>
ffffffff80006eb8: 48 8b 4c 24 08       	movq	0x8(%rsp), %rcx
ffffffff80006ebd: 48 8d 51 01          	leaq	0x1(%rcx), %rdx
ffffffff80006ec1: 89 d0                	movl	%edx, %eax
ffffffff80006ec3: 83 e0 03             	andl	$0x3, %eax
ffffffff80006ec6: 48 83 f9 03          	cmpq	$0x3, %rcx
ffffffff80006eca: 73 43                	jae	0xffffffff80006f0f <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x2af>
ffffffff80006ecc: 31 c9                	xorl	%ecx, %ecx
ffffffff80006ece: e9 ad 00 00 00       	jmp	0xffffffff80006f80 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x320>
ffffffff80006ed3: 48 85 c0             	testq	%rax, %rax
ffffffff80006ed6: 0f 84 ce 00 00 00    	je	0xffffffff80006faa <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x34a>
ffffffff80006edc: be 28 00 00 00       	movl	$0x28, %esi
ffffffff80006ee1: 48 c7 c7 78 e1 01 80 	movq	$-0x7ffe1e88, %rdi      # imm = 0x8001E178
ffffffff80006ee8: 48 c7 c2 48 e2 01 80 	movq	$-0x7ffe1db8, %rdx      # imm = 0x8001E248
ffffffff80006eef: e8 7c 55 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80006ef4: 48 8b 54 24 08       	movq	0x8(%rsp), %rdx
ffffffff80006ef9: 48 8b 7c 24 18       	movq	0x18(%rsp), %rdi
ffffffff80006efe: 4c 8b 44 24 10       	movq	0x10(%rsp), %r8
ffffffff80006f03: 49 83 f8 03          	cmpq	$0x3, %r8
ffffffff80006f07: 0f 83 43 ff ff ff    	jae	0xffffffff80006e50 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x1f0>
ffffffff80006f0d: eb 9f                	jmp	0xffffffff80006eae <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x24e>
ffffffff80006f0f: 48 83 e2 fc          	andq	$-0x4, %rdx
ffffffff80006f13: 31 c9                	xorl	%ecx, %ecx
ffffffff80006f15: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff80006f20: 49 8b b4 cd 90 00 00 00      	movq	0x90(%r13,%rcx,8), %rsi
ffffffff80006f28: 4c 89 2e             	movq	%r13, (%rsi)
ffffffff80006f2b: 89 cf                	movl	%ecx, %edi
ffffffff80006f2d: 66 89 8e 8c 00 00 00 	movw	%cx, 0x8c(%rsi)
ffffffff80006f34: 49 8b b4 cd 98 00 00 00      	movq	0x98(%r13,%rcx,8), %rsi
ffffffff80006f3c: 4c 89 2e             	movq	%r13, (%rsi)
ffffffff80006f3f: 44 8d 47 01          	leal	0x1(%rdi), %r8d
ffffffff80006f43: 66 44 89 86 8c 00 00 00      	movw	%r8w, 0x8c(%rsi)
ffffffff80006f4b: 49 8b b4 cd a0 00 00 00      	movq	0xa0(%r13,%rcx,8), %rsi
ffffffff80006f53: 4c 89 2e             	movq	%r13, (%rsi)
ffffffff80006f56: 44 8d 47 02          	leal	0x2(%rdi), %r8d
ffffffff80006f5a: 66 44 89 86 8c 00 00 00      	movw	%r8w, 0x8c(%rsi)
ffffffff80006f62: 49 8b b4 cd a8 00 00 00      	movq	0xa8(%r13,%rcx,8), %rsi
ffffffff80006f6a: 48 83 c1 04          	addq	$0x4, %rcx
ffffffff80006f6e: 4c 89 2e             	movq	%r13, (%rsi)
ffffffff80006f71: 83 c7 03             	addl	$0x3, %edi
ffffffff80006f74: 66 89 be 8c 00 00 00 	movw	%di, 0x8c(%rsi)
ffffffff80006f7b: 48 39 d1             	cmpq	%rdx, %rcx
ffffffff80006f7e: 75 a0                	jne	0xffffffff80006f20 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x2c0>
ffffffff80006f80: 48 85 c0             	testq	%rax, %rax
ffffffff80006f83: 74 25                	je	0xffffffff80006faa <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x34a>
ffffffff80006f85: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff80006f90: 49 8b 94 cd 90 00 00 00      	movq	0x90(%r13,%rcx,8), %rdx
ffffffff80006f98: 4c 89 2a             	movq	%r13, (%rdx)
ffffffff80006f9b: 66 89 8a 8c 00 00 00 	movw	%cx, 0x8c(%rdx)
ffffffff80006fa2: 48 ff c1             	incq	%rcx
ffffffff80006fa5: 48 ff c8             	decq	%rax
ffffffff80006fa8: 75 e6                	jne	0xffffffff80006f90 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e+0x330>
ffffffff80006faa: 48 83 c4 38          	addq	$0x38, %rsp
ffffffff80006fae: 5b                   	popq	%rbx
ffffffff80006faf: 41 5c                	popq	%r12
ffffffff80006fb1: 41 5d                	popq	%r13
ffffffff80006fb3: 41 5e                	popq	%r14
ffffffff80006fb5: 41 5f                	popq	%r15
ffffffff80006fb7: 5d                   	popq	%rbp
ffffffff80006fb8: c3                   	retq
ffffffff80006fb9: be 32 00 00 00       	movl	$0x32, %esi
ffffffff80006fbe: 48 c7 c7 b8 e1 01 80 	movq	$-0x7ffe1e48, %rdi      # imm = 0x8001E1B8
ffffffff80006fc5: 48 c7 c2 f0 e1 01 80 	movq	$-0x7ffe1e10, %rdx      # imm = 0x8001E1F0
ffffffff80006fcc: e8 9f 54 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80006fd1: be 28 00 00 00       	movl	$0x28, %esi
ffffffff80006fd6: 48 c7 c7 08 e2 01 80 	movq	$-0x7ffe1df8, %rdi      # imm = 0x8001E208
ffffffff80006fdd: 48 c7 c2 30 e2 01 80 	movq	$-0x7ffe1dd0, %rdx      # imm = 0x8001E230
ffffffff80006fe4: e8 87 54 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80006fe9: be 28 00 00 00       	movl	$0x28, %esi
ffffffff80006fee: 48 c7 c7 28 e0 01 80 	movq	$-0x7ffe1fd8, %rdi      # imm = 0x8001E028
ffffffff80006ff5: 48 c7 c2 50 e0 01 80 	movq	$-0x7ffe1fb0, %rdx      # imm = 0x8001E050
ffffffff80006ffc: e8 6f 54 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80007001: cc                   	int3
ffffffff80007002: cc                   	int3
ffffffff80007003: cc                   	int3
ffffffff80007004: cc                   	int3
ffffffff80007005: cc                   	int3
ffffffff80007006: cc                   	int3
ffffffff80007007: cc                   	int3
ffffffff80007008: cc                   	int3
ffffffff80007009: cc                   	int3
ffffffff8000700a: cc                   	int3
ffffffff8000700b: cc                   	int3
ffffffff8000700c: cc                   	int3
ffffffff8000700d: cc                   	int3
ffffffff8000700e: cc                   	int3
ffffffff8000700f: cc                   	int3

ffffffff80007010 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193>:
ffffffff80007010: 55                   	pushq	%rbp
ffffffff80007011: 41 57                	pushq	%r15
ffffffff80007013: 41 56                	pushq	%r14
ffffffff80007015: 41 55                	pushq	%r13
ffffffff80007017: 41 54                	pushq	%r12
ffffffff80007019: 53                   	pushq	%rbx
ffffffff8000701a: 48 83 ec 28          	subq	$0x28, %rsp
ffffffff8000701e: 49 89 fe             	movq	%rdi, %r14
ffffffff80007021: 48 8b 6f 18          	movq	0x18(%rdi), %rbp
ffffffff80007025: 44 0f b7 55 62       	movzwl	0x62(%rbp), %r10d
ffffffff8000702a: 49 8d 3c 32          	leaq	(%r10,%rsi), %rdi
ffffffff8000702e: 48 83 ff 0c          	cmpq	$0xc, %rdi
ffffffff80007032: 0f 83 6b 02 00 00    	jae	0xffffffff800072a3 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x293>
ffffffff80007038: 48 89 f3             	movq	%rsi, %rbx
ffffffff8000703b: 4d 8b 6e 28          	movq	0x28(%r14), %r13
ffffffff8000703f: 45 0f b7 65 62       	movzwl	0x62(%r13), %r12d
ffffffff80007044: 49 29 f4             	subq	%rsi, %r12
ffffffff80007047: 0f 82 6e 02 00 00    	jb	0xffffffff800072bb <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x2ab>
ffffffff8000704d: 66 89 7d 62          	movw	%di, 0x62(%rbp)
ffffffff80007051: 66 45 89 65 62       	movw	%r12w, 0x62(%r13)
ffffffff80007056: 4c 8d 4b ff          	leaq	-0x1(%rbx), %r9
ffffffff8000705a: 49 8b 44 dd 00       	movq	(%r13,%rbx,8), %rax
ffffffff8000705f: 49 8b 0e             	movq	(%r14), %rcx
ffffffff80007062: 49 8b 56 10          	movq	0x10(%r14), %rdx
ffffffff80007066: 48 8b 74 d1 08       	movq	0x8(%rcx,%rdx,8), %rsi
ffffffff8000706b: 48 89 44 d1 08       	movq	%rax, 0x8(%rcx,%rdx,8)
ffffffff80007070: 4a 89 74 d5 08       	movq	%rsi, 0x8(%rbp,%r10,8)
ffffffff80007075: 4d 8d 7a 01          	leaq	0x1(%r10), %r15
ffffffff80007079: 48 89 f8             	movq	%rdi, %rax
ffffffff8000707c: 4c 29 f8             	subq	%r15, %rax
ffffffff8000707f: 49 39 c1             	cmpq	%rax, %r9
ffffffff80007082: 0f 85 4b 02 00 00    	jne	0xffffffff800072d3 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x2c3>
ffffffff80007088: 4c 89 54 24 10       	movq	%r10, 0x10(%rsp)
ffffffff8000708d: 48 89 7c 24 08       	movq	%rdi, 0x8(%rsp)
ffffffff80007092: 48 8d 45 08          	leaq	0x8(%rbp), %rax
ffffffff80007096: 4a 8d 3c f8          	leaq	(%rax,%r15,8), %rdi
ffffffff8000709a: 49 8d 75 08          	leaq	0x8(%r13), %rsi
ffffffff8000709e: 48 89 74 24 20       	movq	%rsi, 0x20(%rsp)
ffffffff800070a3: 4c 89 0c 24          	movq	%r9, (%rsp)
ffffffff800070a7: 4a 8d 14 cd 00 00 00 00      	leaq	(,%r9,8), %rdx
ffffffff800070af: ff 15 6b f3 02 00    	callq	*0x2f36b(%rip)          # 0xffffffff80036420
ffffffff800070b5: 48 8d 34 dd 08 00 00 00      	leaq	0x8(,%rbx,8), %rsi
ffffffff800070bd: 4c 01 ee             	addq	%r13, %rsi
ffffffff800070c0: 4c 89 64 24 18       	movq	%r12, 0x18(%rsp)
ffffffff800070c5: 4e 8d 24 e5 00 00 00 00      	leaq	(,%r12,8), %r12
ffffffff800070cd: 48 8b 7c 24 20       	movq	0x20(%rsp), %rdi
ffffffff800070d2: 4c 89 e2             	movq	%r12, %rdx
ffffffff800070d5: ff 15 4d f3 02 00    	callq	*0x2f34d(%rip)          # 0xffffffff80036428
ffffffff800070db: 49 83 7e 20 00       	cmpq	$0x0, 0x20(%r14)
ffffffff800070e0: 49 8b 46 30          	movq	0x30(%r14), %rax
ffffffff800070e4: 0f 84 04 01 00 00    	je	0xffffffff800071ee <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x1de>
ffffffff800070ea: 48 85 c0             	testq	%rax, %rax
ffffffff800070ed: 0f 84 04 01 00 00    	je	0xffffffff800071f7 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x1e7>
ffffffff800070f3: 4d 8d 75 68          	leaq	0x68(%r13), %r14
ffffffff800070f7: 4a 8d 3c fd 68 00 00 00      	leaq	0x68(,%r15,8), %rdi
ffffffff800070ff: 48 01 ef             	addq	%rbp, %rdi
ffffffff80007102: 48 8d 14 dd 00 00 00 00      	leaq	(,%rbx,8), %rdx
ffffffff8000710a: 4c 89 f6             	movq	%r14, %rsi
ffffffff8000710d: ff 15 0d f3 02 00    	callq	*0x2f30d(%rip)          # 0xffffffff80036420
ffffffff80007113: 48 8d 34 dd 68 00 00 00      	leaq	0x68(,%rbx,8), %rsi
ffffffff8000711b: 4c 01 ee             	addq	%r13, %rsi
ffffffff8000711e: 49 83 c4 08          	addq	$0x8, %r12
ffffffff80007122: 4c 89 f7             	movq	%r14, %rdi
ffffffff80007125: 4c 89 e2             	movq	%r12, %rdx
ffffffff80007128: ff 15 fa f2 02 00    	callq	*0x2f2fa(%rip)          # 0xffffffff80036428
ffffffff8000712e: 48 83 e3 03          	andq	$0x3, %rbx
ffffffff80007132: 0f 84 d7 00 00 00    	je	0xffffffff8000720f <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x1ff>
ffffffff80007138: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff8000713d: 48 8d 0c c5 70 00 00 00      	leaq	0x70(,%rax,8), %rcx
ffffffff80007145: 48 01 e9             	addq	%rbp, %rcx
ffffffff80007148: 31 c0                	xorl	%eax, %eax
ffffffff8000714a: 48 8b 7c 24 08       	movq	0x8(%rsp), %rdi
ffffffff8000714f: 4c 8b 04 24          	movq	(%rsp), %r8
ffffffff80007153: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
ffffffff80007160: 48 8b 14 c1          	movq	(%rcx,%rax,8), %rdx
ffffffff80007164: 48 89 2a             	movq	%rbp, (%rdx)
ffffffff80007167: 41 8d 34 07          	leal	(%r15,%rax), %esi
ffffffff8000716b: 66 89 72 60          	movw	%si, 0x60(%rdx)
ffffffff8000716f: 48 ff c0             	incq	%rax
ffffffff80007172: 48 39 c3             	cmpq	%rax, %rbx
ffffffff80007175: 75 e9                	jne	0xffffffff80007160 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x150>
ffffffff80007177: 49 01 c7             	addq	%rax, %r15
ffffffff8000717a: 49 83 f8 03          	cmpq	$0x3, %r8
ffffffff8000717e: 72 49                	jb	0xffffffff800071c9 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x1b9>
ffffffff80007180: 4a 8b 44 fd 68       	movq	0x68(%rbp,%r15,8), %rax
ffffffff80007185: 48 89 28             	movq	%rbp, (%rax)
ffffffff80007188: 66 44 89 78 60       	movw	%r15w, 0x60(%rax)
ffffffff8000718d: 4a 8b 44 fd 70       	movq	0x70(%rbp,%r15,8), %rax
ffffffff80007192: 48 89 28             	movq	%rbp, (%rax)
ffffffff80007195: 41 8d 4f 01          	leal	0x1(%r15), %ecx
ffffffff80007199: 66 89 48 60          	movw	%cx, 0x60(%rax)
ffffffff8000719d: 4a 8b 44 fd 78       	movq	0x78(%rbp,%r15,8), %rax
ffffffff800071a2: 48 89 28             	movq	%rbp, (%rax)
ffffffff800071a5: 41 8d 4f 02          	leal	0x2(%r15), %ecx
ffffffff800071a9: 66 89 48 60          	movw	%cx, 0x60(%rax)
ffffffff800071ad: 4a 8b 84 fd 80 00 00 00      	movq	0x80(%rbp,%r15,8), %rax
ffffffff800071b5: 48 89 28             	movq	%rbp, (%rax)
ffffffff800071b8: 49 8d 4f 03          	leaq	0x3(%r15), %rcx
ffffffff800071bc: 66 89 48 60          	movw	%cx, 0x60(%rax)
ffffffff800071c0: 49 83 c7 04          	addq	$0x4, %r15
ffffffff800071c4: 48 39 f9             	cmpq	%rdi, %rcx
ffffffff800071c7: 75 b7                	jne	0xffffffff80007180 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x170>
ffffffff800071c9: 48 8b 4c 24 18       	movq	0x18(%rsp), %rcx
ffffffff800071ce: 48 83 f9 ff          	cmpq	$-0x1, %rcx
ffffffff800071d2: 0f 84 bc 00 00 00    	je	0xffffffff80007294 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x284>
ffffffff800071d8: 48 8d 51 01          	leaq	0x1(%rcx), %rdx
ffffffff800071dc: 89 d0                	movl	%edx, %eax
ffffffff800071de: 83 e0 03             	andl	$0x3, %eax
ffffffff800071e1: 48 83 f9 03          	cmpq	$0x3, %rcx
ffffffff800071e5: 73 3d                	jae	0xffffffff80007224 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x214>
ffffffff800071e7: 31 c9                	xorl	%ecx, %ecx
ffffffff800071e9: e9 8d 00 00 00       	jmp	0xffffffff8000727b <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x26b>
ffffffff800071ee: 48 85 c0             	testq	%rax, %rax
ffffffff800071f1: 0f 84 9d 00 00 00    	je	0xffffffff80007294 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x284>
ffffffff800071f7: be 28 00 00 00       	movl	$0x28, %esi
ffffffff800071fc: 48 c7 c7 78 e1 01 80 	movq	$-0x7ffe1e88, %rdi      # imm = 0x8001E178
ffffffff80007203: 48 c7 c2 48 e2 01 80 	movq	$-0x7ffe1db8, %rdx      # imm = 0x8001E248
ffffffff8000720a: e8 61 52 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000720f: 48 8b 7c 24 08       	movq	0x8(%rsp), %rdi
ffffffff80007214: 4c 8b 04 24          	movq	(%rsp), %r8
ffffffff80007218: 49 83 f8 03          	cmpq	$0x3, %r8
ffffffff8000721c: 0f 83 5e ff ff ff    	jae	0xffffffff80007180 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x170>
ffffffff80007222: eb a5                	jmp	0xffffffff800071c9 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x1b9>
ffffffff80007224: 48 83 e2 fc          	andq	$-0x4, %rdx
ffffffff80007228: 31 c9                	xorl	%ecx, %ecx
ffffffff8000722a: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff80007230: 49 8b 74 cd 68       	movq	0x68(%r13,%rcx,8), %rsi
ffffffff80007235: 4c 89 2e             	movq	%r13, (%rsi)
ffffffff80007238: 89 cf                	movl	%ecx, %edi
ffffffff8000723a: 66 89 4e 60          	movw	%cx, 0x60(%rsi)
ffffffff8000723e: 49 8b 74 cd 70       	movq	0x70(%r13,%rcx,8), %rsi
ffffffff80007243: 4c 89 2e             	movq	%r13, (%rsi)
ffffffff80007246: 44 8d 47 01          	leal	0x1(%rdi), %r8d
ffffffff8000724a: 66 44 89 46 60       	movw	%r8w, 0x60(%rsi)
ffffffff8000724f: 49 8b 74 cd 78       	movq	0x78(%r13,%rcx,8), %rsi
ffffffff80007254: 4c 89 2e             	movq	%r13, (%rsi)
ffffffff80007257: 44 8d 47 02          	leal	0x2(%rdi), %r8d
ffffffff8000725b: 66 44 89 46 60       	movw	%r8w, 0x60(%rsi)
ffffffff80007260: 49 8b b4 cd 80 00 00 00      	movq	0x80(%r13,%rcx,8), %rsi
ffffffff80007268: 48 83 c1 04          	addq	$0x4, %rcx
ffffffff8000726c: 4c 89 2e             	movq	%r13, (%rsi)
ffffffff8000726f: 83 c7 03             	addl	$0x3, %edi
ffffffff80007272: 66 89 7e 60          	movw	%di, 0x60(%rsi)
ffffffff80007276: 48 39 d1             	cmpq	%rdx, %rcx
ffffffff80007279: 75 b5                	jne	0xffffffff80007230 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x220>
ffffffff8000727b: 48 85 c0             	testq	%rax, %rax
ffffffff8000727e: 74 14                	je	0xffffffff80007294 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x284>
ffffffff80007280: 49 8b 54 cd 68       	movq	0x68(%r13,%rcx,8), %rdx
ffffffff80007285: 4c 89 2a             	movq	%r13, (%rdx)
ffffffff80007288: 66 89 4a 60          	movw	%cx, 0x60(%rdx)
ffffffff8000728c: 48 ff c1             	incq	%rcx
ffffffff8000728f: 48 ff c8             	decq	%rax
ffffffff80007292: 75 ec                	jne	0xffffffff80007280 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193+0x270>
ffffffff80007294: 48 83 c4 28          	addq	$0x28, %rsp
ffffffff80007298: 5b                   	popq	%rbx
ffffffff80007299: 41 5c                	popq	%r12
ffffffff8000729b: 41 5d                	popq	%r13
ffffffff8000729d: 41 5e                	popq	%r14
ffffffff8000729f: 41 5f                	popq	%r15
ffffffff800072a1: 5d                   	popq	%rbp
ffffffff800072a2: c3                   	retq
ffffffff800072a3: be 32 00 00 00       	movl	$0x32, %esi
ffffffff800072a8: 48 c7 c7 b8 e1 01 80 	movq	$-0x7ffe1e48, %rdi      # imm = 0x8001E1B8
ffffffff800072af: 48 c7 c2 f0 e1 01 80 	movq	$-0x7ffe1e10, %rdx      # imm = 0x8001E1F0
ffffffff800072b6: e8 b5 51 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff800072bb: be 28 00 00 00       	movl	$0x28, %esi
ffffffff800072c0: 48 c7 c7 08 e2 01 80 	movq	$-0x7ffe1df8, %rdi      # imm = 0x8001E208
ffffffff800072c7: 48 c7 c2 30 e2 01 80 	movq	$-0x7ffe1dd0, %rdx      # imm = 0x8001E230
ffffffff800072ce: e8 9d 51 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff800072d3: be 28 00 00 00       	movl	$0x28, %esi
ffffffff800072d8: 48 c7 c7 28 e0 01 80 	movq	$-0x7ffe1fd8, %rdi      # imm = 0x8001E028
ffffffff800072df: 48 c7 c2 50 e0 01 80 	movq	$-0x7ffe1fb0, %rdx      # imm = 0x8001E050
ffffffff800072e6: e8 85 51 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff800072eb: cc                   	int3
ffffffff800072ec: cc                   	int3
ffffffff800072ed: cc                   	int3
ffffffff800072ee: cc                   	int3
ffffffff800072ef: cc                   	int3

ffffffff800072f0 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7>:
ffffffff800072f0: 55                   	pushq	%rbp
ffffffff800072f1: 41 57                	pushq	%r15
ffffffff800072f3: 41 56                	pushq	%r14
ffffffff800072f5: 41 55                	pushq	%r13
ffffffff800072f7: 41 54                	pushq	%r12
ffffffff800072f9: 53                   	pushq	%rbx
ffffffff800072fa: 48 83 ec 48          	subq	$0x48, %rsp
ffffffff800072fe: 48 8b 5f 18          	movq	0x18(%rdi), %rbx
ffffffff80007302: 44 0f b7 63 62       	movzwl	0x62(%rbx), %r12d
ffffffff80007307: 48 8b 6f 28          	movq	0x28(%rdi), %rbp
ffffffff8000730b: 0f b7 45 62          	movzwl	0x62(%rbp), %eax
ffffffff8000730f: 49 8d 0c 04          	leaq	(%r12,%rax), %rcx
ffffffff80007313: 48 ff c1             	incq	%rcx
ffffffff80007316: 48 83 f9 0c          	cmpq	$0xc, %rcx
ffffffff8000731a: 0f 83 91 02 00 00    	jae	0xffffffff800075b1 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x2c1>
ffffffff80007320: 4c 8b 37             	movq	(%rdi), %r14
ffffffff80007323: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff80007328: 48 8b 47 08          	movq	0x8(%rdi), %rax
ffffffff8000732c: 48 89 44 24 40       	movq	%rax, 0x40(%rsp)
ffffffff80007331: 48 8b 47 20          	movq	0x20(%rdi), %rax
ffffffff80007335: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff8000733a: 4d 8d 7c 24 01       	leaq	0x1(%r12), %r15
ffffffff8000733f: 41 0f b7 46 62       	movzwl	0x62(%r14), %eax
ffffffff80007344: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff80007349: 4c 8b 6f 10          	movq	0x10(%rdi), %r13
ffffffff8000734d: 48 89 4c 24 28       	movq	%rcx, 0x28(%rsp)
ffffffff80007352: 66 89 4b 62          	movw	%cx, 0x62(%rbx)
ffffffff80007356: 4c 89 6c 24 18       	movq	%r13, 0x18(%rsp)
ffffffff8000735b: 4b 8d 7c ee 08       	leaq	0x8(%r14,%r13,8), %rdi
ffffffff80007360: 4b 8b 4c ee 08       	movq	0x8(%r14,%r13,8), %rcx
ffffffff80007365: 48 89 4c 24 08       	movq	%rcx, 0x8(%rsp)
ffffffff8000736a: 4b 8d 34 ee          	leaq	(%r14,%r13,8), %rsi
ffffffff8000736e: 48 83 c6 10          	addq	$0x10, %rsi
ffffffff80007372: 49 f7 d5             	notq	%r13
ffffffff80007375: 49 01 c5             	addq	%rax, %r13
ffffffff80007378: 49 c1 e5 03          	shlq	$0x3, %r13
ffffffff8000737c: 4c 89 ea             	movq	%r13, %rdx
ffffffff8000737f: ff 15 a3 f0 02 00    	callq	*0x2f0a3(%rip)          # 0xffffffff80036428
ffffffff80007385: 4c 89 64 24 10       	movq	%r12, 0x10(%rsp)
ffffffff8000738a: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff8000738f: 4a 89 44 e3 08       	movq	%rax, 0x8(%rbx,%r12,8)
ffffffff80007394: 48 89 6c 24 08       	movq	%rbp, 0x8(%rsp)
ffffffff80007399: 48 8d 75 08          	leaq	0x8(%rbp), %rsi
ffffffff8000739d: 4a 8d 3c fb          	leaq	(%rbx,%r15,8), %rdi
ffffffff800073a1: 48 83 c7 08          	addq	$0x8, %rdi
ffffffff800073a5: 48 8b 44 24 20       	movq	0x20(%rsp), %rax
ffffffff800073aa: 8d 14 c5 00 00 00 00 	leal	(,%rax,8), %edx
ffffffff800073b1: ff 15 69 f0 02 00    	callq	*0x2f069(%rip)          # 0xffffffff80036420
ffffffff800073b7: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff800073bc: 48 8d 68 01          	leaq	0x1(%rax), %rbp
ffffffff800073c0: 4d 8d 24 c6          	leaq	(%r14,%rax,8), %r12
ffffffff800073c4: 49 83 c4 70          	addq	$0x70, %r12
ffffffff800073c8: 49 8d 34 c6          	leaq	(%r14,%rax,8), %rsi
ffffffff800073cc: 48 83 c6 78          	addq	$0x78, %rsi
ffffffff800073d0: 4c 89 e7             	movq	%r12, %rdi
ffffffff800073d3: 4c 89 ea             	movq	%r13, %rdx
ffffffff800073d6: ff 15 4c f0 02 00    	callq	*0x2f04c(%rip)          # 0xffffffff80036428
ffffffff800073dc: 4c 8b 44 24 38       	movq	0x38(%rsp), %r8
ffffffff800073e1: 4c 39 c5             	cmpq	%r8, %rbp
ffffffff800073e4: 0f 83 8b 00 00 00    	jae	0xffffffff80007475 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x185>
ffffffff800073ea: 48 8b 54 24 18       	movq	0x18(%rsp), %rdx
ffffffff800073ef: 89 d0                	movl	%edx, %eax
ffffffff800073f1: f7 d0                	notl	%eax
ffffffff800073f3: 41 8d 0c 00          	leal	(%r8,%rax), %ecx
ffffffff800073f7: 4c 89 c0             	movq	%r8, %rax
ffffffff800073fa: 48 29 d0             	subq	%rdx, %rax
ffffffff800073fd: 48 83 c0 fe          	addq	$-0x2, %rax
ffffffff80007401: 83 e1 03             	andl	$0x3, %ecx
ffffffff80007404: 74 23                	je	0xffffffff80007429 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x139>
ffffffff80007406: 31 d2                	xorl	%edx, %edx
ffffffff80007408: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
ffffffff80007410: 49 8b 34 d4          	movq	(%r12,%rdx,8), %rsi
ffffffff80007414: 4c 89 36             	movq	%r14, (%rsi)
ffffffff80007417: 8d 3c 2a             	leal	(%rdx,%rbp), %edi
ffffffff8000741a: 66 89 7e 60          	movw	%di, 0x60(%rsi)
ffffffff8000741e: 48 ff c2             	incq	%rdx
ffffffff80007421: 48 39 d1             	cmpq	%rdx, %rcx
ffffffff80007424: 75 ea                	jne	0xffffffff80007410 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x120>
ffffffff80007426: 48 01 d5             	addq	%rdx, %rbp
ffffffff80007429: 48 83 f8 03          	cmpq	$0x3, %rax
ffffffff8000742d: 72 46                	jb	0xffffffff80007475 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x185>
ffffffff8000742f: 90                   	nop
ffffffff80007430: 49 8b 44 ee 68       	movq	0x68(%r14,%rbp,8), %rax
ffffffff80007435: 4c 89 30             	movq	%r14, (%rax)
ffffffff80007438: 66 89 68 60          	movw	%bp, 0x60(%rax)
ffffffff8000743c: 49 8b 44 ee 70       	movq	0x70(%r14,%rbp,8), %rax
ffffffff80007441: 4c 89 30             	movq	%r14, (%rax)
ffffffff80007444: 8d 4d 01             	leal	0x1(%rbp), %ecx
ffffffff80007447: 66 89 48 60          	movw	%cx, 0x60(%rax)
ffffffff8000744b: 49 8b 44 ee 78       	movq	0x78(%r14,%rbp,8), %rax
ffffffff80007450: 4c 89 30             	movq	%r14, (%rax)
ffffffff80007453: 8d 4d 02             	leal	0x2(%rbp), %ecx
ffffffff80007456: 66 89 48 60          	movw	%cx, 0x60(%rax)
ffffffff8000745a: 49 8b 84 ee 80 00 00 00      	movq	0x80(%r14,%rbp,8), %rax
ffffffff80007462: 4c 89 30             	movq	%r14, (%rax)
ffffffff80007465: 8d 4d 03             	leal	0x3(%rbp), %ecx
ffffffff80007468: 66 89 48 60          	movw	%cx, 0x60(%rax)
ffffffff8000746c: 48 83 c5 04          	addq	$0x4, %rbp
ffffffff80007470: 4c 39 c5             	cmpq	%r8, %rbp
ffffffff80007473: 75 bb                	jne	0xffffffff80007430 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x140>
ffffffff80007475: 66 41 ff 4e 62       	decw	0x62(%r14)
ffffffff8000747a: b9 68 00 00 00       	movl	$0x68, %ecx
ffffffff8000747f: 48 83 7c 24 40 02    	cmpq	$0x2, 0x40(%rsp)
ffffffff80007485: 4c 8b 64 24 08       	movq	0x8(%rsp), %r12
ffffffff8000748a: 0f 82 c9 00 00 00    	jb	0xffffffff80007559 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x269>
ffffffff80007490: 48 8b 6c 24 20       	movq	0x20(%rsp), %rbp
ffffffff80007495: 4c 8d 75 01          	leaq	0x1(%rbp), %r14
ffffffff80007499: 4c 8b 6c 24 28       	movq	0x28(%rsp), %r13
ffffffff8000749e: 4c 89 e8             	movq	%r13, %rax
ffffffff800074a1: 48 2b 44 24 10       	subq	0x10(%rsp), %rax
ffffffff800074a6: 49 39 c6             	cmpq	%rax, %r14
ffffffff800074a9: 0f 85 1a 01 00 00    	jne	0xffffffff800075c9 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x2d9>
ffffffff800074af: 48 8d 43 68          	leaq	0x68(%rbx), %rax
ffffffff800074b3: 4a 8d 3c f8          	leaq	(%rax,%r15,8), %rdi
ffffffff800074b7: 49 8d 74 24 68       	leaq	0x68(%r12), %rsi
ffffffff800074bc: 42 8d 14 f5 00 00 00 00      	leal	(,%r14,8), %edx
ffffffff800074c4: ff 15 56 ef 02 00    	callq	*0x2ef56(%rip)          # 0xffffffff80036420
ffffffff800074ca: 49 83 e6 03          	andq	$0x3, %r14
ffffffff800074ce: 74 2a                	je	0xffffffff800074fa <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x20a>
ffffffff800074d0: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff800074d5: 48 8d 0c c3          	leaq	(%rbx,%rax,8), %rcx
ffffffff800074d9: 48 83 c1 70          	addq	$0x70, %rcx
ffffffff800074dd: 31 c0                	xorl	%eax, %eax
ffffffff800074df: 90                   	nop
ffffffff800074e0: 48 8b 14 c1          	movq	(%rcx,%rax,8), %rdx
ffffffff800074e4: 48 89 1a             	movq	%rbx, (%rdx)
ffffffff800074e7: 41 8d 34 07          	leal	(%r15,%rax), %esi
ffffffff800074eb: 66 89 72 60          	movw	%si, 0x60(%rdx)
ffffffff800074ef: 48 ff c0             	incq	%rax
ffffffff800074f2: 49 39 c6             	cmpq	%rax, %r14
ffffffff800074f5: 75 e9                	jne	0xffffffff800074e0 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x1f0>
ffffffff800074f7: 49 01 c7             	addq	%rax, %r15
ffffffff800074fa: b9 c8 00 00 00       	movl	$0xc8, %ecx
ffffffff800074ff: 66 83 fd 03          	cmpw	$0x3, %bp
ffffffff80007503: 72 54                	jb	0xffffffff80007559 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x269>
ffffffff80007505: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff80007510: 4a 8b 44 fb 68       	movq	0x68(%rbx,%r15,8), %rax
ffffffff80007515: 48 89 18             	movq	%rbx, (%rax)
ffffffff80007518: 66 44 89 78 60       	movw	%r15w, 0x60(%rax)
ffffffff8000751d: 4a 8b 44 fb 70       	movq	0x70(%rbx,%r15,8), %rax
ffffffff80007522: 48 89 18             	movq	%rbx, (%rax)
ffffffff80007525: 41 8d 57 01          	leal	0x1(%r15), %edx
ffffffff80007529: 66 89 50 60          	movw	%dx, 0x60(%rax)
ffffffff8000752d: 4a 8b 44 fb 78       	movq	0x78(%rbx,%r15,8), %rax
ffffffff80007532: 48 89 18             	movq	%rbx, (%rax)
ffffffff80007535: 41 8d 57 02          	leal	0x2(%r15), %edx
ffffffff80007539: 66 89 50 60          	movw	%dx, 0x60(%rax)
ffffffff8000753d: 4a 8b 84 fb 80 00 00 00      	movq	0x80(%rbx,%r15,8), %rax
ffffffff80007545: 48 89 18             	movq	%rbx, (%rax)
ffffffff80007548: 49 8d 57 03          	leaq	0x3(%r15), %rdx
ffffffff8000754c: 66 89 50 60          	movw	%dx, 0x60(%rax)
ffffffff80007550: 49 83 c7 04          	addq	$0x4, %r15
ffffffff80007554: 4c 39 ea             	cmpq	%r13, %rdx
ffffffff80007557: 75 b7                	jne	0xffffffff80007510 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x220>
ffffffff80007559: b2 01                	movb	$0x1, %dl
ffffffff8000755b: 0f 1f 44 00 00       	nopl	(%rax,%rax)
ffffffff80007560: 31 c0                	xorl	%eax, %eax
ffffffff80007562: f0                   	lock
ffffffff80007563: 0f b0 15 e6 da 01 00 	cmpxchgb	%dl, 0x1dae6(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000756a: 75 06                	jne	0xffffffff80007572 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x282>
ffffffff8000756c: eb 11                	jmp	0xffffffff8000757f <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x28f>
ffffffff8000756e: 66 90                	nop
ffffffff80007570: f3 90                	pause
ffffffff80007572: 0f b6 05 d7 da 01 00 	movzbl	0x1dad7(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80007579: 84 c0                	testb	%al, %al
ffffffff8000757b: 75 f3                	jne	0xffffffff80007570 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x280>
ffffffff8000757d: eb e1                	jmp	0xffffffff80007560 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7+0x270>
ffffffff8000757f: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff80007584: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000758b: 4c 89 e6             	movq	%r12, %rsi
ffffffff8000758e: e8 0d bb ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80007593: c6 05 b6 da 01 00 00 	movb	$0x0, 0x1dab6(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000759a: 48 89 d8             	movq	%rbx, %rax
ffffffff8000759d: 48 8b 54 24 30       	movq	0x30(%rsp), %rdx
ffffffff800075a2: 48 83 c4 48          	addq	$0x48, %rsp
ffffffff800075a6: 5b                   	popq	%rbx
ffffffff800075a7: 41 5c                	popq	%r12
ffffffff800075a9: 41 5d                	popq	%r13
ffffffff800075ab: 41 5e                	popq	%r14
ffffffff800075ad: 41 5f                	popq	%r15
ffffffff800075af: 5d                   	popq	%rbp
ffffffff800075b0: c3                   	retq
ffffffff800075b1: be 2a 00 00 00       	movl	$0x2a, %esi
ffffffff800075b6: 48 c7 c7 08 e3 01 80 	movq	$-0x7ffe1cf8, %rdi      # imm = 0x8001E308
ffffffff800075bd: 48 c7 c2 38 e3 01 80 	movq	$-0x7ffe1cc8, %rdx      # imm = 0x8001E338
ffffffff800075c4: e8 a7 4e 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff800075c9: be 28 00 00 00       	movl	$0x28, %esi
ffffffff800075ce: 48 c7 c7 28 e0 01 80 	movq	$-0x7ffe1fd8, %rdi      # imm = 0x8001E028
ffffffff800075d5: 48 c7 c2 50 e0 01 80 	movq	$-0x7ffe1fb0, %rdx      # imm = 0x8001E050
ffffffff800075dc: e8 8f 4e 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff800075e1: cc                   	int3
ffffffff800075e2: cc                   	int3
ffffffff800075e3: cc                   	int3
ffffffff800075e4: cc                   	int3
ffffffff800075e5: cc                   	int3
ffffffff800075e6: cc                   	int3
ffffffff800075e7: cc                   	int3
ffffffff800075e8: cc                   	int3
ffffffff800075e9: cc                   	int3
ffffffff800075ea: cc                   	int3
ffffffff800075eb: cc                   	int3
ffffffff800075ec: cc                   	int3
ffffffff800075ed: cc                   	int3
ffffffff800075ee: cc                   	int3
ffffffff800075ef: cc                   	int3

ffffffff800075f0 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb>:
ffffffff800075f0: 55                   	pushq	%rbp
ffffffff800075f1: 41 57                	pushq	%r15
ffffffff800075f3: 41 56                	pushq	%r14
ffffffff800075f5: 41 55                	pushq	%r13
ffffffff800075f7: 41 54                	pushq	%r12
ffffffff800075f9: 53                   	pushq	%rbx
ffffffff800075fa: 48 83 ec 48          	subq	$0x48, %rsp
ffffffff800075fe: 48 8b 5f 18          	movq	0x18(%rdi), %rbx
ffffffff80007602: 0f b7 93 8e 00 00 00 	movzwl	0x8e(%rbx), %edx
ffffffff80007609: 48 8b 77 28          	movq	0x28(%rdi), %rsi
ffffffff8000760d: 44 0f b7 ae 8e 00 00 00      	movzwl	0x8e(%rsi), %r13d
ffffffff80007615: 4a 8d 0c 2a          	leaq	(%rdx,%r13), %rcx
ffffffff80007619: 48 ff c1             	incq	%rcx
ffffffff8000761c: 48 83 f9 0c          	cmpq	$0xc, %rcx
ffffffff80007620: 0f 83 3b 03 00 00    	jae	0xffffffff80007961 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x371>
ffffffff80007626: 4c 8b 37             	movq	(%rdi), %r14
ffffffff80007629: 48 8b 47 08          	movq	0x8(%rdi), %rax
ffffffff8000762d: 48 89 44 24 40       	movq	%rax, 0x40(%rsp)
ffffffff80007632: 48 8b 47 20          	movq	0x20(%rdi), %rax
ffffffff80007636: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff8000763b: 4c 8d 7a 01          	leaq	0x1(%rdx), %r15
ffffffff8000763f: 41 0f b7 86 8e 00 00 00      	movzwl	0x8e(%r14), %eax
ffffffff80007647: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff8000764c: 4c 8b 67 10          	movq	0x10(%rdi), %r12
ffffffff80007650: 48 89 4c 24 28       	movq	%rcx, 0x28(%rsp)
ffffffff80007655: 66 89 8b 8e 00 00 00 	movw	%cx, 0x8e(%rbx)
ffffffff8000765c: 4b 8d 7c a6 60       	leaq	0x60(%r14,%r12,4), %rdi
ffffffff80007661: 48 89 74 24 20       	movq	%rsi, 0x20(%rsp)
ffffffff80007666: 4c 89 6c 24 18       	movq	%r13, 0x18(%rsp)
ffffffff8000766b: 43 8b 4c a6 60       	movl	0x60(%r14,%r12,4), %ecx
ffffffff80007670: 89 0c 24             	movl	%ecx, (%rsp)
ffffffff80007673: 4b 8d 34 a6          	leaq	(%r14,%r12,4), %rsi
ffffffff80007677: 48 83 c6 64          	addq	$0x64, %rsi
ffffffff8000767b: 4c 89 e1             	movq	%r12, %rcx
ffffffff8000767e: 48 f7 d1             	notq	%rcx
ffffffff80007681: 48 01 c1             	addq	%rax, %rcx
ffffffff80007684: 48 89 4c 24 08       	movq	%rcx, 0x8(%rsp)
ffffffff80007689: 48 89 d5             	movq	%rdx, %rbp
ffffffff8000768c: 48 8d 14 8d 00 00 00 00      	leaq	(,%rcx,4), %rdx
ffffffff80007694: ff 15 8e ed 02 00    	callq	*0x2ed8e(%rip)          # 0xffffffff80036428
ffffffff8000769a: 8b 04 24             	movl	(%rsp), %eax
ffffffff8000769d: 89 44 ab 60          	movl	%eax, 0x60(%rbx,%rbp,4)
ffffffff800076a1: 48 8b 44 24 20       	movq	0x20(%rsp), %rax
ffffffff800076a6: 48 8d 70 60          	leaq	0x60(%rax), %rsi
ffffffff800076aa: 4a 8d 3c bb          	leaq	(%rbx,%r15,4), %rdi
ffffffff800076ae: 48 83 c7 60          	addq	$0x60, %rdi
ffffffff800076b2: 42 8d 14 ad 00 00 00 00      	leal	(,%r13,4), %edx
ffffffff800076ba: 49 89 c5             	movq	%rax, %r13
ffffffff800076bd: ff 15 5d ed 02 00    	callq	*0x2ed5d(%rip)          # 0xffffffff80036420
ffffffff800076c3: 4b 8d 3c e6          	leaq	(%r14,%r12,8), %rdi
ffffffff800076c7: 48 83 c7 08          	addq	$0x8, %rdi
ffffffff800076cb: 4b 8b 44 e6 08       	movq	0x8(%r14,%r12,8), %rax
ffffffff800076d0: 48 89 04 24          	movq	%rax, (%rsp)
ffffffff800076d4: 4b 8d 34 e6          	leaq	(%r14,%r12,8), %rsi
ffffffff800076d8: 48 83 c6 10          	addq	$0x10, %rsi
ffffffff800076dc: 48 8b 54 24 08       	movq	0x8(%rsp), %rdx
ffffffff800076e1: 48 c1 e2 03          	shlq	$0x3, %rdx
ffffffff800076e5: 48 89 54 24 08       	movq	%rdx, 0x8(%rsp)
ffffffff800076ea: ff 15 38 ed 02 00    	callq	*0x2ed38(%rip)          # 0xffffffff80036428
ffffffff800076f0: 48 89 6c 24 10       	movq	%rbp, 0x10(%rsp)
ffffffff800076f5: 48 8b 04 24          	movq	(%rsp), %rax
ffffffff800076f9: 48 89 44 eb 08       	movq	%rax, 0x8(%rbx,%rbp,8)
ffffffff800076fe: 49 8d 75 08          	leaq	0x8(%r13), %rsi
ffffffff80007702: 4a 8d 3c fb          	leaq	(%rbx,%r15,8), %rdi
ffffffff80007706: 48 83 c7 08          	addq	$0x8, %rdi
ffffffff8000770a: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff8000770f: 8d 14 c5 00 00 00 00 	leal	(,%rax,8), %edx
ffffffff80007716: ff 15 04 ed 02 00    	callq	*0x2ed04(%rip)          # 0xffffffff80036420
ffffffff8000771c: 49 8d 6c 24 01       	leaq	0x1(%r12), %rbp
ffffffff80007721: 4f 8d 2c e6          	leaq	(%r14,%r12,8), %r13
ffffffff80007725: 49 81 c5 98 00 00 00 	addq	$0x98, %r13
ffffffff8000772c: 4c 89 24 24          	movq	%r12, (%rsp)
ffffffff80007730: 4b 8d 34 e6          	leaq	(%r14,%r12,8), %rsi
ffffffff80007734: 48 81 c6 a0 00 00 00 	addq	$0xa0, %rsi
ffffffff8000773b: 4c 89 ef             	movq	%r13, %rdi
ffffffff8000773e: 48 8b 54 24 08       	movq	0x8(%rsp), %rdx
ffffffff80007743: ff 15 df ec 02 00    	callq	*0x2ecdf(%rip)          # 0xffffffff80036428
ffffffff80007749: 4c 8b 44 24 38       	movq	0x38(%rsp), %r8
ffffffff8000774e: 4c 39 c5             	cmpq	%r8, %rbp
ffffffff80007751: 0f 83 b3 00 00 00    	jae	0xffffffff8000780a <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x21a>
ffffffff80007757: 48 8b 14 24          	movq	(%rsp), %rdx
ffffffff8000775b: 89 d0                	movl	%edx, %eax
ffffffff8000775d: f7 d0                	notl	%eax
ffffffff8000775f: 41 8d 0c 00          	leal	(%r8,%rax), %ecx
ffffffff80007763: 4c 89 c0             	movq	%r8, %rax
ffffffff80007766: 48 29 d0             	subq	%rdx, %rax
ffffffff80007769: 48 83 c0 fe          	addq	$-0x2, %rax
ffffffff8000776d: 83 e1 03             	andl	$0x3, %ecx
ffffffff80007770: 74 2b                	je	0xffffffff8000779d <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x1ad>
ffffffff80007772: 31 d2                	xorl	%edx, %edx
ffffffff80007774: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
ffffffff80007780: 49 8b 74 d5 00       	movq	(%r13,%rdx,8), %rsi
ffffffff80007785: 4c 89 36             	movq	%r14, (%rsi)
ffffffff80007788: 8d 3c 2a             	leal	(%rdx,%rbp), %edi
ffffffff8000778b: 66 89 be 8c 00 00 00 	movw	%di, 0x8c(%rsi)
ffffffff80007792: 48 ff c2             	incq	%rdx
ffffffff80007795: 48 39 d1             	cmpq	%rdx, %rcx
ffffffff80007798: 75 e6                	jne	0xffffffff80007780 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x190>
ffffffff8000779a: 48 01 d5             	addq	%rdx, %rbp
ffffffff8000779d: 48 83 f8 03          	cmpq	$0x3, %rax
ffffffff800077a1: 72 67                	jb	0xffffffff8000780a <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x21a>
ffffffff800077a3: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
ffffffff800077b0: 49 8b 84 ee 90 00 00 00      	movq	0x90(%r14,%rbp,8), %rax
ffffffff800077b8: 4c 89 30             	movq	%r14, (%rax)
ffffffff800077bb: 66 89 a8 8c 00 00 00 	movw	%bp, 0x8c(%rax)
ffffffff800077c2: 49 8b 84 ee 98 00 00 00      	movq	0x98(%r14,%rbp,8), %rax
ffffffff800077ca: 4c 89 30             	movq	%r14, (%rax)
ffffffff800077cd: 8d 4d 01             	leal	0x1(%rbp), %ecx
ffffffff800077d0: 66 89 88 8c 00 00 00 	movw	%cx, 0x8c(%rax)
ffffffff800077d7: 49 8b 84 ee a0 00 00 00      	movq	0xa0(%r14,%rbp,8), %rax
ffffffff800077df: 4c 89 30             	movq	%r14, (%rax)
ffffffff800077e2: 8d 4d 02             	leal	0x2(%rbp), %ecx
ffffffff800077e5: 66 89 88 8c 00 00 00 	movw	%cx, 0x8c(%rax)
ffffffff800077ec: 49 8b 84 ee a8 00 00 00      	movq	0xa8(%r14,%rbp,8), %rax
ffffffff800077f4: 4c 89 30             	movq	%r14, (%rax)
ffffffff800077f7: 8d 4d 03             	leal	0x3(%rbp), %ecx
ffffffff800077fa: 66 89 88 8c 00 00 00 	movw	%cx, 0x8c(%rax)
ffffffff80007801: 48 83 c5 04          	addq	$0x4, %rbp
ffffffff80007805: 4c 39 c5             	cmpq	%r8, %rbp
ffffffff80007808: 75 a6                	jne	0xffffffff800077b0 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x1c0>
ffffffff8000780a: 66 41 ff 8e 8e 00 00 00      	decw	0x8e(%r14)
ffffffff80007812: b9 90 00 00 00       	movl	$0x90, %ecx
ffffffff80007817: 48 83 7c 24 40 02    	cmpq	$0x2, 0x40(%rsp)
ffffffff8000781d: 4c 8b 64 24 20       	movq	0x20(%rsp), %r12
ffffffff80007822: 0f 82 e6 00 00 00    	jb	0xffffffff8000790e <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x31e>
ffffffff80007828: 48 8b 6c 24 18       	movq	0x18(%rsp), %rbp
ffffffff8000782d: 4c 8d 75 01          	leaq	0x1(%rbp), %r14
ffffffff80007831: 4c 8b 6c 24 28       	movq	0x28(%rsp), %r13
ffffffff80007836: 4c 89 e8             	movq	%r13, %rax
ffffffff80007839: 48 2b 44 24 10       	subq	0x10(%rsp), %rax
ffffffff8000783e: 49 39 c6             	cmpq	%rax, %r14
ffffffff80007841: 0f 85 32 01 00 00    	jne	0xffffffff80007979 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x389>
ffffffff80007847: 48 8d 83 90 00 00 00 	leaq	0x90(%rbx), %rax
ffffffff8000784e: 4a 8d 3c f8          	leaq	(%rax,%r15,8), %rdi
ffffffff80007852: 49 8d b4 24 90 00 00 00      	leaq	0x90(%r12), %rsi
ffffffff8000785a: 42 8d 14 f5 00 00 00 00      	leal	(,%r14,8), %edx
ffffffff80007862: ff 15 b8 eb 02 00    	callq	*0x2ebb8(%rip)          # 0xffffffff80036420
ffffffff80007868: 49 83 e6 03          	andq	$0x3, %r14
ffffffff8000786c: 74 2f                	je	0xffffffff8000789d <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x2ad>
ffffffff8000786e: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff80007873: 48 8d 0c c3          	leaq	(%rbx,%rax,8), %rcx
ffffffff80007877: 48 81 c1 98 00 00 00 	addq	$0x98, %rcx
ffffffff8000787e: 31 c0                	xorl	%eax, %eax
ffffffff80007880: 48 8b 14 c1          	movq	(%rcx,%rax,8), %rdx
ffffffff80007884: 48 89 1a             	movq	%rbx, (%rdx)
ffffffff80007887: 41 8d 34 07          	leal	(%r15,%rax), %esi
ffffffff8000788b: 66 89 b2 8c 00 00 00 	movw	%si, 0x8c(%rdx)
ffffffff80007892: 48 ff c0             	incq	%rax
ffffffff80007895: 49 39 c6             	cmpq	%rax, %r14
ffffffff80007898: 75 e6                	jne	0xffffffff80007880 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x290>
ffffffff8000789a: 49 01 c7             	addq	%rax, %r15
ffffffff8000789d: b9 f0 00 00 00       	movl	$0xf0, %ecx
ffffffff800078a2: 66 83 fd 03          	cmpw	$0x3, %bp
ffffffff800078a6: 72 66                	jb	0xffffffff8000790e <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x31e>
ffffffff800078a8: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
ffffffff800078b0: 4a 8b 84 fb 90 00 00 00      	movq	0x90(%rbx,%r15,8), %rax
ffffffff800078b8: 48 89 18             	movq	%rbx, (%rax)
ffffffff800078bb: 66 44 89 b8 8c 00 00 00      	movw	%r15w, 0x8c(%rax)
ffffffff800078c3: 4a 8b 84 fb 98 00 00 00      	movq	0x98(%rbx,%r15,8), %rax
ffffffff800078cb: 48 89 18             	movq	%rbx, (%rax)
ffffffff800078ce: 41 8d 57 01          	leal	0x1(%r15), %edx
ffffffff800078d2: 66 89 90 8c 00 00 00 	movw	%dx, 0x8c(%rax)
ffffffff800078d9: 4a 8b 84 fb a0 00 00 00      	movq	0xa0(%rbx,%r15,8), %rax
ffffffff800078e1: 48 89 18             	movq	%rbx, (%rax)
ffffffff800078e4: 41 8d 57 02          	leal	0x2(%r15), %edx
ffffffff800078e8: 66 89 90 8c 00 00 00 	movw	%dx, 0x8c(%rax)
ffffffff800078ef: 4a 8b 84 fb a8 00 00 00      	movq	0xa8(%rbx,%r15,8), %rax
ffffffff800078f7: 48 89 18             	movq	%rbx, (%rax)
ffffffff800078fa: 49 8d 57 03          	leaq	0x3(%r15), %rdx
ffffffff800078fe: 66 89 90 8c 00 00 00 	movw	%dx, 0x8c(%rax)
ffffffff80007905: 49 83 c7 04          	addq	$0x4, %r15
ffffffff80007909: 4c 39 ea             	cmpq	%r13, %rdx
ffffffff8000790c: 75 a2                	jne	0xffffffff800078b0 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x2c0>
ffffffff8000790e: b2 01                	movb	$0x1, %dl
ffffffff80007910: 31 c0                	xorl	%eax, %eax
ffffffff80007912: f0                   	lock
ffffffff80007913: 0f b0 15 36 d7 01 00 	cmpxchgb	%dl, 0x1d736(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000791a: 75 06                	jne	0xffffffff80007922 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x332>
ffffffff8000791c: eb 11                	jmp	0xffffffff8000792f <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x33f>
ffffffff8000791e: 66 90                	nop
ffffffff80007920: f3 90                	pause
ffffffff80007922: 0f b6 05 27 d7 01 00 	movzbl	0x1d727(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80007929: 84 c0                	testb	%al, %al
ffffffff8000792b: 75 f3                	jne	0xffffffff80007920 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x330>
ffffffff8000792d: eb e1                	jmp	0xffffffff80007910 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb+0x320>
ffffffff8000792f: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff80007934: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000793b: 4c 89 e6             	movq	%r12, %rsi
ffffffff8000793e: e8 5d b7 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80007943: c6 05 06 d7 01 00 00 	movb	$0x0, 0x1d706(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000794a: 48 89 d8             	movq	%rbx, %rax
ffffffff8000794d: 48 8b 54 24 30       	movq	0x30(%rsp), %rdx
ffffffff80007952: 48 83 c4 48          	addq	$0x48, %rsp
ffffffff80007956: 5b                   	popq	%rbx
ffffffff80007957: 41 5c                	popq	%r12
ffffffff80007959: 41 5d                	popq	%r13
ffffffff8000795b: 41 5e                	popq	%r14
ffffffff8000795d: 41 5f                	popq	%r15
ffffffff8000795f: 5d                   	popq	%rbp
ffffffff80007960: c3                   	retq
ffffffff80007961: be 2a 00 00 00       	movl	$0x2a, %esi
ffffffff80007966: 48 c7 c7 08 e3 01 80 	movq	$-0x7ffe1cf8, %rdi      # imm = 0x8001E308
ffffffff8000796d: 48 c7 c2 38 e3 01 80 	movq	$-0x7ffe1cc8, %rdx      # imm = 0x8001E338
ffffffff80007974: e8 f7 4a 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80007979: be 28 00 00 00       	movl	$0x28, %esi
ffffffff8000797e: 48 c7 c7 28 e0 01 80 	movq	$-0x7ffe1fd8, %rdi      # imm = 0x8001E028
ffffffff80007985: 48 c7 c2 50 e0 01 80 	movq	$-0x7ffe1fb0, %rdx      # imm = 0x8001E050
ffffffff8000798c: e8 df 4a 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80007991: cc                   	int3
ffffffff80007992: cc                   	int3
ffffffff80007993: cc                   	int3
ffffffff80007994: cc                   	int3
ffffffff80007995: cc                   	int3
ffffffff80007996: cc                   	int3
ffffffff80007997: cc                   	int3
ffffffff80007998: cc                   	int3
ffffffff80007999: cc                   	int3
ffffffff8000799a: cc                   	int3
ffffffff8000799b: cc                   	int3
ffffffff8000799c: cc                   	int3
ffffffff8000799d: cc                   	int3
ffffffff8000799e: cc                   	int3
ffffffff8000799f: cc                   	int3

ffffffff800079a0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192>:
ffffffff800079a0: 55                   	pushq	%rbp
ffffffff800079a1: 41 57                	pushq	%r15
ffffffff800079a3: 41 56                	pushq	%r14
ffffffff800079a5: 41 55                	pushq	%r13
ffffffff800079a7: 41 54                	pushq	%r12
ffffffff800079a9: 53                   	pushq	%rbx
ffffffff800079aa: 48 81 ec 78 01 00 00 	subq	$0x178, %rsp            # imm = 0x178
ffffffff800079b1: 48 89 54 24 50       	movq	%rdx, 0x50(%rsp)
ffffffff800079b6: 49 89 f7             	movq	%rsi, %r15
ffffffff800079b9: 48 89 7c 24 18       	movq	%rdi, 0x18(%rsp)
ffffffff800079be: 4c 8b 36             	movq	(%rsi), %r14
ffffffff800079c1: 4c 8b 66 10          	movq	0x10(%rsi), %r12
ffffffff800079c5: 41 0f b7 5e 62       	movzwl	0x62(%r14), %ebx
ffffffff800079ca: 4b 8d 7c e6 08       	leaq	0x8(%r14,%r12,8), %rdi
ffffffff800079cf: 4b 8b 44 e6 08       	movq	0x8(%r14,%r12,8), %rax
ffffffff800079d4: 48 89 44 24 10       	movq	%rax, 0x10(%rsp)
ffffffff800079d9: 4b 8d 34 e6          	leaq	(%r14,%r12,8), %rsi
ffffffff800079dd: 48 83 c6 10          	addq	$0x10, %rsi
ffffffff800079e1: 4c 89 e2             	movq	%r12, %rdx
ffffffff800079e4: 48 f7 d2             	notq	%rdx
ffffffff800079e7: 48 01 da             	addq	%rbx, %rdx
ffffffff800079ea: 48 c1 e2 03          	shlq	$0x3, %rdx
ffffffff800079ee: ff 15 34 ea 02 00    	callq	*0x2ea34(%rip)          # 0xffffffff80036428
ffffffff800079f4: 8d 43 ff             	leal	-0x1(%rbx), %eax
ffffffff800079f7: 4c 89 f3             	movq	%r14, %rbx
ffffffff800079fa: 66 41 89 46 62       	movw	%ax, 0x62(%r14)
ffffffff800079ff: 49 8b 57 08          	movq	0x8(%r15), %rdx
ffffffff80007a03: 66 83 f8 04          	cmpw	$0x4, %ax
ffffffff80007a07: 0f 87 3c 05 00 00    	ja	0xffffffff80007f49 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x5a9>
ffffffff80007a0d: 48 8b 0b             	movq	(%rbx), %rcx
ffffffff80007a10: 48 85 c9             	testq	%rcx, %rcx
ffffffff80007a13: 0f 84 30 05 00 00    	je	0xffffffff80007f49 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x5a9>
ffffffff80007a19: 49 89 d0             	movq	%rdx, %r8
ffffffff80007a1c: 48 ff c2             	incq	%rdx
ffffffff80007a1f: 0f b7 73 60          	movzwl	0x60(%rbx), %esi
ffffffff80007a23: 48 85 f6             	testq	%rsi, %rsi
ffffffff80007a26: 74 76                	je	0xffffffff80007a9e <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0xfe>
ffffffff80007a28: 48 8b 7c f1 60       	movq	0x60(%rcx,%rsi,8), %rdi
ffffffff80007a2d: 48 ff ce             	decq	%rsi
ffffffff80007a30: 48 89 8c 24 a0 00 00 00      	movq	%rcx, 0xa0(%rsp)
ffffffff80007a38: 48 89 94 24 a8 00 00 00      	movq	%rdx, 0xa8(%rsp)
ffffffff80007a40: 48 89 b4 24 b0 00 00 00      	movq	%rsi, 0xb0(%rsp)
ffffffff80007a48: 48 89 bc 24 b8 00 00 00      	movq	%rdi, 0xb8(%rsp)
ffffffff80007a50: 4c 89 84 24 c0 00 00 00      	movq	%r8, 0xc0(%rsp)
ffffffff80007a58: 49 89 de             	movq	%rbx, %r14
ffffffff80007a5b: 48 89 9c 24 c8 00 00 00      	movq	%rbx, 0xc8(%rsp)
ffffffff80007a63: 4c 89 84 24 d0 00 00 00      	movq	%r8, 0xd0(%rsp)
ffffffff80007a6b: 0f b7 5f 62          	movzwl	0x62(%rdi), %ebx
ffffffff80007a6f: 0f b7 c0             	movzwl	%ax, %eax
ffffffff80007a72: 8d 0c 03             	leal	(%rbx,%rax), %ecx
ffffffff80007a75: ff c1                	incl	%ecx
ffffffff80007a77: 83 f9 0c             	cmpl	$0xc, %ecx
ffffffff80007a7a: 0f 83 a6 00 00 00    	jae	0xffffffff80007b26 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x186>
ffffffff80007a80: 49 39 c4             	cmpq	%rax, %r12
ffffffff80007a83: 0f 87 99 05 00 00    	ja	0xffffffff80008022 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x682>
ffffffff80007a89: 48 8d bc 24 a0 00 00 00      	leaq	0xa0(%rsp), %rdi
ffffffff80007a91: e8 5a f8 ff ff       	callq	0xffffffff800072f0 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7>
ffffffff80007a96: 49 01 dc             	addq	%rbx, %r12
ffffffff80007a99: 49 ff c4             	incq	%r12
ffffffff80007a9c: eb 78                	jmp	0xffffffff80007b16 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x176>
ffffffff80007a9e: 66 83 79 62 00       	cmpw	$0x0, 0x62(%rcx)
ffffffff80007aa3: 0f 84 91 05 00 00    	je	0xffffffff8000803a <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x69a>
ffffffff80007aa9: 4d 89 c6             	movq	%r8, %r14
ffffffff80007aac: 48 8b 71 70          	movq	0x70(%rcx), %rsi
ffffffff80007ab0: 48 89 8c 24 d8 00 00 00      	movq	%rcx, 0xd8(%rsp)
ffffffff80007ab8: 48 89 94 24 e0 00 00 00      	movq	%rdx, 0xe0(%rsp)
ffffffff80007ac0: 48 c7 84 24 e8 00 00 00 00 00 00 00  	movq	$0x0, 0xe8(%rsp)
ffffffff80007acc: 48 89 9c 24 f0 00 00 00      	movq	%rbx, 0xf0(%rsp)
ffffffff80007ad4: 4c 89 b4 24 f8 00 00 00      	movq	%r14, 0xf8(%rsp)
ffffffff80007adc: 48 89 b4 24 00 01 00 00      	movq	%rsi, 0x100(%rsp)
ffffffff80007ae4: 4c 89 b4 24 08 01 00 00      	movq	%r14, 0x108(%rsp)
ffffffff80007aec: 0f b7 c0             	movzwl	%ax, %eax
ffffffff80007aef: 0f b7 4e 62          	movzwl	0x62(%rsi), %ecx
ffffffff80007af3: 01 c1                	addl	%eax, %ecx
ffffffff80007af5: ff c1                	incl	%ecx
ffffffff80007af7: 83 f9 0c             	cmpl	$0xc, %ecx
ffffffff80007afa: 0f 83 28 04 00 00    	jae	0xffffffff80007f28 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x588>
ffffffff80007b00: 49 39 c4             	cmpq	%rax, %r12
ffffffff80007b03: 0f 87 19 05 00 00    	ja	0xffffffff80008022 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x682>
ffffffff80007b09: 48 8d bc 24 d8 00 00 00      	leaq	0xd8(%rsp), %rdi
ffffffff80007b11: e8 da f7 ff ff       	callq	0xffffffff800072f0 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::h6af0383b26d94be7>
ffffffff80007b16: 48 89 c3             	movq	%rax, %rbx
ffffffff80007b19: 48 8b 03             	movq	(%rbx), %rax
ffffffff80007b1c: 48 85 c0             	testq	%rax, %rax
ffffffff80007b1f: 75 2f                	jne	0xffffffff80007b50 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x1b0>
ffffffff80007b21: e9 23 04 00 00       	jmp	0xffffffff80007f49 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x5a9>
ffffffff80007b26: 48 8d bc 24 a0 00 00 00      	leaq	0xa0(%rsp), %rdi
ffffffff80007b2e: be 01 00 00 00       	movl	$0x1, %esi
ffffffff80007b33: 4c 89 c3             	movq	%r8, %rbx
ffffffff80007b36: e8 35 ec ff ff       	callq	0xffffffff80006770 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::hda6288e802b68f69>
ffffffff80007b3b: 48 89 da             	movq	%rbx, %rdx
ffffffff80007b3e: 49 ff c4             	incq	%r12
ffffffff80007b41: 4c 89 f3             	movq	%r14, %rbx
ffffffff80007b44: 48 8b 03             	movq	(%rbx), %rax
ffffffff80007b47: 48 85 c0             	testq	%rax, %rax
ffffffff80007b4a: 0f 84 f9 03 00 00    	je	0xffffffff80007f49 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x5a9>
ffffffff80007b50: 48 89 54 24 20       	movq	%rdx, 0x20(%rsp)
ffffffff80007b55: 48 89 5c 24 40       	movq	%rbx, 0x40(%rsp)
ffffffff80007b5a: 0f b7 48 62          	movzwl	0x62(%rax), %ecx
ffffffff80007b5e: 66 83 f9 04          	cmpw	$0x4, %cx
ffffffff80007b62: 76 19                	jbe	0xffffffff80007b7d <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x1dd>
ffffffff80007b64: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff80007b69: 48 8b 4c 24 10       	movq	0x10(%rsp), %rcx
ffffffff80007b6e: 48 8b 5c 24 40       	movq	0x40(%rsp), %rbx
ffffffff80007b73: 48 8b 54 24 20       	movq	0x20(%rsp), %rdx
ffffffff80007b78: e9 d6 03 00 00       	jmp	0xffffffff80007f53 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x5b3>
ffffffff80007b7d: 48 8b 54 24 20       	movq	0x20(%rsp), %rdx
ffffffff80007b82: 48 ff c2             	incq	%rdx
ffffffff80007b85: 4c 89 64 24 58       	movq	%r12, 0x58(%rsp)
ffffffff80007b8a: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff80007b90: 0f b7 c9             	movzwl	%cx, %ecx
ffffffff80007b93: 48 8b 18             	movq	(%rax), %rbx
ffffffff80007b96: 48 85 db             	testq	%rbx, %rbx
ffffffff80007b99: 0f 84 d5 03 00 00    	je	0xffffffff80007f74 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x5d4>
ffffffff80007b9f: 48 8d 7a 01          	leaq	0x1(%rdx), %rdi
ffffffff80007ba3: 44 0f b7 78 60       	movzwl	0x60(%rax), %r15d
ffffffff80007ba8: 4d 85 ff             	testq	%r15, %r15
ffffffff80007bab: 48 89 7c 24 60       	movq	%rdi, 0x60(%rsp)
ffffffff80007bb0: 0f 84 7a 00 00 00    	je	0xffffffff80007c30 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x290>
ffffffff80007bb6: 4e 8b 74 fb 60       	movq	0x60(%rbx,%r15,8), %r14
ffffffff80007bbb: 49 ff cf             	decq	%r15
ffffffff80007bbe: 48 89 9c 24 10 01 00 00      	movq	%rbx, 0x110(%rsp)
ffffffff80007bc6: 48 89 bc 24 18 01 00 00      	movq	%rdi, 0x118(%rsp)
ffffffff80007bce: 4c 89 bc 24 20 01 00 00      	movq	%r15, 0x120(%rsp)
ffffffff80007bd6: 4c 89 b4 24 28 01 00 00      	movq	%r14, 0x128(%rsp)
ffffffff80007bde: 48 89 94 24 30 01 00 00      	movq	%rdx, 0x130(%rsp)
ffffffff80007be6: 48 89 84 24 38 01 00 00      	movq	%rax, 0x138(%rsp)
ffffffff80007bee: 48 89 94 24 40 01 00 00      	movq	%rdx, 0x140(%rsp)
ffffffff80007bf6: 41 0f b7 76 62       	movzwl	0x62(%r14), %esi
ffffffff80007bfb: 8d 14 31             	leal	(%rcx,%rsi), %edx
ffffffff80007bfe: ff c2                	incl	%edx
ffffffff80007c00: 83 fa 0c             	cmpl	$0xc, %edx
ffffffff80007c03: 0f 83 81 03 00 00    	jae	0xffffffff80007f8a <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x5ea>
ffffffff80007c09: 48 8d 56 01          	leaq	0x1(%rsi), %rdx
ffffffff80007c0d: 48 89 54 24 28       	movq	%rdx, 0x28(%rsp)
ffffffff80007c12: 48 8d 14 0e          	leaq	(%rsi,%rcx), %rdx
ffffffff80007c16: 48 ff c2             	incq	%rdx
ffffffff80007c19: 48 89 74 24 30       	movq	%rsi, 0x30(%rsp)
ffffffff80007c1e: 0f b7 73 62          	movzwl	0x62(%rbx), %esi
ffffffff80007c22: 48 89 44 24 08       	movq	%rax, 0x8(%rsp)
ffffffff80007c27: 48 89 4c 24 38       	movq	%rcx, 0x38(%rsp)
ffffffff80007c2c: eb 7a                	jmp	0xffffffff80007ca8 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x308>
ffffffff80007c2e: 66 90                	nop
ffffffff80007c30: 0f b7 73 62          	movzwl	0x62(%rbx), %esi
ffffffff80007c34: 66 85 f6             	testw	%si, %si
ffffffff80007c37: 0f 84 96 03 00 00    	je	0xffffffff80007fd3 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x633>
ffffffff80007c3d: 4c 8b 43 70          	movq	0x70(%rbx), %r8
ffffffff80007c41: 48 89 5c 24 68       	movq	%rbx, 0x68(%rsp)
ffffffff80007c46: 48 89 7c 24 70       	movq	%rdi, 0x70(%rsp)
ffffffff80007c4b: 48 c7 44 24 78 00 00 00 00   	movq	$0x0, 0x78(%rsp)
ffffffff80007c54: 48 89 84 24 80 00 00 00      	movq	%rax, 0x80(%rsp)
ffffffff80007c5c: 48 89 94 24 88 00 00 00      	movq	%rdx, 0x88(%rsp)
ffffffff80007c64: 4c 89 84 24 90 00 00 00      	movq	%r8, 0x90(%rsp)
ffffffff80007c6c: 48 89 94 24 98 00 00 00      	movq	%rdx, 0x98(%rsp)
ffffffff80007c74: 45 0f b7 48 62       	movzwl	0x62(%r8), %r9d
ffffffff80007c79: 4a 8d 14 09          	leaq	(%rcx,%r9), %rdx
ffffffff80007c7d: 48 ff c2             	incq	%rdx
ffffffff80007c80: 48 83 fa 0c          	cmpq	$0xc, %rdx
ffffffff80007c84: 0f 83 1a 03 00 00    	jae	0xffffffff80007fa4 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x604>
ffffffff80007c8a: 48 8d 79 01          	leaq	0x1(%rcx), %rdi
ffffffff80007c8e: 48 89 7c 24 28       	movq	%rdi, 0x28(%rsp)
ffffffff80007c93: 49 89 c6             	movq	%rax, %r14
ffffffff80007c96: 45 31 ff             	xorl	%r15d, %r15d
ffffffff80007c99: 48 89 4c 24 30       	movq	%rcx, 0x30(%rsp)
ffffffff80007c9e: 4c 89 44 24 08       	movq	%r8, 0x8(%rsp)
ffffffff80007ca3: 4c 89 4c 24 38       	movq	%r9, 0x38(%rsp)
ffffffff80007ca8: 0f b7 ee             	movzwl	%si, %ebp
ffffffff80007cab: 48 89 54 24 48       	movq	%rdx, 0x48(%rsp)
ffffffff80007cb0: 66 41 89 56 62       	movw	%dx, 0x62(%r14)
ffffffff80007cb5: 4a 8d 3c fb          	leaq	(%rbx,%r15,8), %rdi
ffffffff80007cb9: 48 83 c7 08          	addq	$0x8, %rdi
ffffffff80007cbd: 4e 8b 6c fb 08       	movq	0x8(%rbx,%r15,8), %r13
ffffffff80007cc2: 4a 8d 34 fb          	leaq	(%rbx,%r15,8), %rsi
ffffffff80007cc6: 48 83 c6 10          	addq	$0x10, %rsi
ffffffff80007cca: 4d 89 fc             	movq	%r15, %r12
ffffffff80007ccd: 49 f7 d4             	notq	%r12
ffffffff80007cd0: 49 01 ec             	addq	%rbp, %r12
ffffffff80007cd3: 49 c1 e4 03          	shlq	$0x3, %r12
ffffffff80007cd7: 4c 89 e2             	movq	%r12, %rdx
ffffffff80007cda: 48 8b 05 47 e7 02 00 	movq	0x2e747(%rip), %rax     # 0xffffffff80036428
ffffffff80007ce1: ff d0                	callq	*%rax
ffffffff80007ce3: 48 8b 44 24 30       	movq	0x30(%rsp), %rax
ffffffff80007ce8: 4d 89 6c c6 08       	movq	%r13, 0x8(%r14,%rax,8)
ffffffff80007ced: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff80007cf2: 48 8d 70 08          	leaq	0x8(%rax), %rsi
ffffffff80007cf6: 48 8b 44 24 28       	movq	0x28(%rsp), %rax
ffffffff80007cfb: 49 8d 3c c6          	leaq	(%r14,%rax,8), %rdi
ffffffff80007cff: 48 83 c7 08          	addq	$0x8, %rdi
ffffffff80007d03: 48 8b 44 24 38       	movq	0x38(%rsp), %rax
ffffffff80007d08: 8d 14 c5 00 00 00 00 	leal	(,%rax,8), %edx
ffffffff80007d0f: ff 15 0b e7 02 00    	callq	*0x2e70b(%rip)          # 0xffffffff80036420
ffffffff80007d15: 4d 8d 6f 01          	leaq	0x1(%r15), %r13
ffffffff80007d19: 4a 8d 3c fb          	leaq	(%rbx,%r15,8), %rdi
ffffffff80007d1d: 48 83 c7 70          	addq	$0x70, %rdi
ffffffff80007d21: 4a 8d 34 fb          	leaq	(%rbx,%r15,8), %rsi
ffffffff80007d25: 48 83 c6 78          	addq	$0x78, %rsi
ffffffff80007d29: 4c 89 e2             	movq	%r12, %rdx
ffffffff80007d2c: ff 15 f6 e6 02 00    	callq	*0x2e6f6(%rip)          # 0xffffffff80036428
ffffffff80007d32: 4c 39 ed             	cmpq	%r13, %rbp
ffffffff80007d35: 0f 86 8a 00 00 00    	jbe	0xffffffff80007dc5 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x425>
ffffffff80007d3b: 89 e9                	movl	%ebp, %ecx
ffffffff80007d3d: 44 29 e9             	subl	%r13d, %ecx
ffffffff80007d40: 83 e1 03             	andl	$0x3, %ecx
ffffffff80007d43: 0f 84 c2 01 00 00    	je	0xffffffff80007f0b <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x56b>
ffffffff80007d49: 0f 1f 80 00 00 00 00 	nopl	(%rax)
ffffffff80007d50: 49 8d 45 01          	leaq	0x1(%r13), %rax
ffffffff80007d54: 4a 8b 54 eb 68       	movq	0x68(%rbx,%r13,8), %rdx
ffffffff80007d59: 48 89 1a             	movq	%rbx, (%rdx)
ffffffff80007d5c: 66 44 89 6a 60       	movw	%r13w, 0x60(%rdx)
ffffffff80007d61: 49 89 c5             	movq	%rax, %r13
ffffffff80007d64: 48 ff c9             	decq	%rcx
ffffffff80007d67: 75 e7                	jne	0xffffffff80007d50 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x3b0>
ffffffff80007d69: 49 f7 df             	negq	%r15
ffffffff80007d6c: 49 8d 0c 2f          	leaq	(%r15,%rbp), %rcx
ffffffff80007d70: 48 83 c1 fe          	addq	$-0x2, %rcx
ffffffff80007d74: 48 83 f9 03          	cmpq	$0x3, %rcx
ffffffff80007d78: 72 4b                	jb	0xffffffff80007dc5 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x425>
ffffffff80007d7a: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff80007d80: 48 8b 4c c3 68       	movq	0x68(%rbx,%rax,8), %rcx
ffffffff80007d85: 48 89 19             	movq	%rbx, (%rcx)
ffffffff80007d88: 66 89 41 60          	movw	%ax, 0x60(%rcx)
ffffffff80007d8c: 48 8b 4c c3 70       	movq	0x70(%rbx,%rax,8), %rcx
ffffffff80007d91: 48 89 19             	movq	%rbx, (%rcx)
ffffffff80007d94: 8d 50 01             	leal	0x1(%rax), %edx
ffffffff80007d97: 66 89 51 60          	movw	%dx, 0x60(%rcx)
ffffffff80007d9b: 48 8b 4c c3 78       	movq	0x78(%rbx,%rax,8), %rcx
ffffffff80007da0: 48 89 19             	movq	%rbx, (%rcx)
ffffffff80007da3: 8d 50 02             	leal	0x2(%rax), %edx
ffffffff80007da6: 66 89 51 60          	movw	%dx, 0x60(%rcx)
ffffffff80007daa: 48 8b 8c c3 80 00 00 00      	movq	0x80(%rbx,%rax,8), %rcx
ffffffff80007db2: 48 89 19             	movq	%rbx, (%rcx)
ffffffff80007db5: 8d 50 03             	leal	0x3(%rax), %edx
ffffffff80007db8: 66 89 51 60          	movw	%dx, 0x60(%rcx)
ffffffff80007dbc: 48 83 c0 04          	addq	$0x4, %rax
ffffffff80007dc0: 48 39 e8             	cmpq	%rbp, %rax
ffffffff80007dc3: 75 bb                	jne	0xffffffff80007d80 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x3e0>
ffffffff80007dc5: 66 ff 4b 62          	decw	0x62(%rbx)
ffffffff80007dc9: b9 68 00 00 00       	movl	$0x68, %ecx
ffffffff80007dce: 4c 8b 7c 24 60       	movq	0x60(%rsp), %r15
ffffffff80007dd3: 49 83 ff 02          	cmpq	$0x2, %r15
ffffffff80007dd7: 4c 8b 64 24 58       	movq	0x58(%rsp), %r12
ffffffff80007ddc: 40 b5 01             	movb	$0x1, %bpl
ffffffff80007ddf: 48 8b 74 24 08       	movq	0x8(%rsp), %rsi
ffffffff80007de4: 0f 82 e3 00 00 00    	jb	0xffffffff80007ecd <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x52d>
ffffffff80007dea: 48 8b 54 24 38       	movq	0x38(%rsp), %rdx
ffffffff80007def: 48 ff c2             	incq	%rdx
ffffffff80007df2: 48 8b 44 24 48       	movq	0x48(%rsp), %rax
ffffffff80007df7: 48 2b 44 24 30       	subq	0x30(%rsp), %rax
ffffffff80007dfc: 48 39 c2             	cmpq	%rax, %rdx
ffffffff80007dff: 0f 85 b6 01 00 00    	jne	0xffffffff80007fbb <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x61b>
ffffffff80007e05: 49 8d 46 68          	leaq	0x68(%r14), %rax
ffffffff80007e09: 4c 8b 6c 24 28       	movq	0x28(%rsp), %r13
ffffffff80007e0e: 4a 8d 3c e8          	leaq	(%rax,%r13,8), %rdi
ffffffff80007e12: 48 89 74 24 08       	movq	%rsi, 0x8(%rsp)
ffffffff80007e17: 48 83 c6 68          	addq	$0x68, %rsi
ffffffff80007e1b: c1 e2 03             	shll	$0x3, %edx
ffffffff80007e1e: ff 15 fc e5 02 00    	callq	*0x2e5fc(%rip)          # 0xffffffff80036420
ffffffff80007e24: 48 8b 7c 24 48       	movq	0x48(%rsp), %rdi
ffffffff80007e29: 89 f9                	movl	%edi, %ecx
ffffffff80007e2b: 44 29 e9             	subl	%r13d, %ecx
ffffffff80007e2e: ff c1                	incl	%ecx
ffffffff80007e30: 4c 89 e8             	movq	%r13, %rax
ffffffff80007e33: 83 e1 03             	andl	$0x3, %ecx
ffffffff80007e36: 74 20                	je	0xffffffff80007e58 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x4b8>
ffffffff80007e38: 4c 89 ea             	movq	%r13, %rdx
ffffffff80007e3b: 0f 1f 44 00 00       	nopl	(%rax,%rax)
ffffffff80007e40: 48 8d 42 01          	leaq	0x1(%rdx), %rax
ffffffff80007e44: 49 8b 74 d6 68       	movq	0x68(%r14,%rdx,8), %rsi
ffffffff80007e49: 4c 89 36             	movq	%r14, (%rsi)
ffffffff80007e4c: 66 89 56 60          	movw	%dx, 0x60(%rsi)
ffffffff80007e50: 48 89 c2             	movq	%rax, %rdx
ffffffff80007e53: 48 ff c9             	decq	%rcx
ffffffff80007e56: 75 e8                	jne	0xffffffff80007e40 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x4a0>
ffffffff80007e58: 48 89 fa             	movq	%rdi, %rdx
ffffffff80007e5b: 4c 29 ea             	subq	%r13, %rdx
ffffffff80007e5e: b9 c8 00 00 00       	movl	$0xc8, %ecx
ffffffff80007e63: 48 83 fa 03          	cmpq	$0x3, %rdx
ffffffff80007e67: 72 4d                	jb	0xffffffff80007eb6 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x516>
ffffffff80007e69: 0f 1f 80 00 00 00 00 	nopl	(%rax)
ffffffff80007e70: 49 8b 54 c6 68       	movq	0x68(%r14,%rax,8), %rdx
ffffffff80007e75: 4c 89 32             	movq	%r14, (%rdx)
ffffffff80007e78: 66 89 42 60          	movw	%ax, 0x60(%rdx)
ffffffff80007e7c: 49 8b 54 c6 70       	movq	0x70(%r14,%rax,8), %rdx
ffffffff80007e81: 4c 89 32             	movq	%r14, (%rdx)
ffffffff80007e84: 8d 70 01             	leal	0x1(%rax), %esi
ffffffff80007e87: 66 89 72 60          	movw	%si, 0x60(%rdx)
ffffffff80007e8b: 49 8b 54 c6 78       	movq	0x78(%r14,%rax,8), %rdx
ffffffff80007e90: 4c 89 32             	movq	%r14, (%rdx)
ffffffff80007e93: 8d 70 02             	leal	0x2(%rax), %esi
ffffffff80007e96: 66 89 72 60          	movw	%si, 0x60(%rdx)
ffffffff80007e9a: 49 8b 94 c6 80 00 00 00      	movq	0x80(%r14,%rax,8), %rdx
ffffffff80007ea2: 4c 89 32             	movq	%r14, (%rdx)
ffffffff80007ea5: 48 8d 70 03          	leaq	0x3(%rax), %rsi
ffffffff80007ea9: 66 89 72 60          	movw	%si, 0x60(%rdx)
ffffffff80007ead: 48 83 c0 04          	addq	$0x4, %rax
ffffffff80007eb1: 48 39 fe             	cmpq	%rdi, %rsi
ffffffff80007eb4: 75 ba                	jne	0xffffffff80007e70 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x4d0>
ffffffff80007eb6: 48 8b 74 24 08       	movq	0x8(%rsp), %rsi
ffffffff80007ebb: eb 10                	jmp	0xffffffff80007ecd <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x52d>
ffffffff80007ebd: 0f 1f 00             	nopl	(%rax)
ffffffff80007ec0: f3 90                	pause
ffffffff80007ec2: 0f b6 05 87 d1 01 00 	movzbl	0x1d187(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80007ec9: 84 c0                	testb	%al, %al
ffffffff80007ecb: 75 f3                	jne	0xffffffff80007ec0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x520>
ffffffff80007ecd: 31 c0                	xorl	%eax, %eax
ffffffff80007ecf: f0                   	lock
ffffffff80007ed0: 40 0f b0 2d 78 d1 01 00      	cmpxchgb	%bpl, 0x1d178(%rip) # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80007ed8: 75 e8                	jne	0xffffffff80007ec2 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x522>
ffffffff80007eda: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff80007edf: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff80007ee6: e8 b5 b1 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80007eeb: c6 05 5e d1 01 00 00 	movb	$0x0, 0x1d15e(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80007ef2: 0f b7 4b 62          	movzwl	0x62(%rbx), %ecx
ffffffff80007ef6: 48 89 d8             	movq	%rbx, %rax
ffffffff80007ef9: 4c 89 fa             	movq	%r15, %rdx
ffffffff80007efc: 66 83 f9 04          	cmpw	$0x4, %cx
ffffffff80007f00: 0f 86 8a fc ff ff    	jbe	0xffffffff80007b90 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x1f0>
ffffffff80007f06: e9 59 fc ff ff       	jmp	0xffffffff80007b64 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x1c4>
ffffffff80007f0b: 4c 89 e8             	movq	%r13, %rax
ffffffff80007f0e: 49 f7 df             	negq	%r15
ffffffff80007f11: 49 8d 0c 2f          	leaq	(%r15,%rbp), %rcx
ffffffff80007f15: 48 83 c1 fe          	addq	$-0x2, %rcx
ffffffff80007f19: 48 83 f9 03          	cmpq	$0x3, %rcx
ffffffff80007f1d: 0f 83 5d fe ff ff    	jae	0xffffffff80007d80 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x3e0>
ffffffff80007f23: e9 9d fe ff ff       	jmp	0xffffffff80007dc5 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x425>
ffffffff80007f28: 48 8d bc 24 d8 00 00 00      	leaq	0xd8(%rsp), %rdi
ffffffff80007f30: be 01 00 00 00       	movl	$0x1, %esi
ffffffff80007f35: e8 d6 f0 ff ff       	callq	0xffffffff80007010 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193>
ffffffff80007f3a: 4c 89 f2             	movq	%r14, %rdx
ffffffff80007f3d: 48 8b 03             	movq	(%rbx), %rax
ffffffff80007f40: 48 85 c0             	testq	%rax, %rax
ffffffff80007f43: 0f 85 07 fc ff ff    	jne	0xffffffff80007b50 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x1b0>
ffffffff80007f49: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff80007f4e: 48 8b 4c 24 10       	movq	0x10(%rsp), %rcx
ffffffff80007f53: 48 89 08             	movq	%rcx, (%rax)
ffffffff80007f56: 48 89 58 08          	movq	%rbx, 0x8(%rax)
ffffffff80007f5a: 48 89 50 10          	movq	%rdx, 0x10(%rax)
ffffffff80007f5e: 4c 89 60 18          	movq	%r12, 0x18(%rax)
ffffffff80007f62: 48 81 c4 78 01 00 00 	addq	$0x178, %rsp            # imm = 0x178
ffffffff80007f69: 5b                   	popq	%rbx
ffffffff80007f6a: 41 5c                	popq	%r12
ffffffff80007f6c: 41 5d                	popq	%r13
ffffffff80007f6e: 41 5e                	popq	%r14
ffffffff80007f70: 41 5f                	popq	%r15
ffffffff80007f72: 5d                   	popq	%rbp
ffffffff80007f73: c3                   	retq
ffffffff80007f74: 48 85 c9             	testq	%rcx, %rcx
ffffffff80007f77: 0f 85 e7 fb ff ff    	jne	0xffffffff80007b64 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x1c4>
ffffffff80007f7d: 48 8b 44 24 50       	movq	0x50(%rsp), %rax
ffffffff80007f82: c6 00 01             	movb	$0x1, (%rax)
ffffffff80007f85: e9 da fb ff ff       	jmp	0xffffffff80007b64 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x1c4>
ffffffff80007f8a: be 05 00 00 00       	movl	$0x5, %esi
ffffffff80007f8f: 48 29 ce             	subq	%rcx, %rsi
ffffffff80007f92: 48 8d bc 24 10 01 00 00      	leaq	0x110(%rsp), %rdi
ffffffff80007f9a: e8 d1 e7 ff ff       	callq	0xffffffff80006770 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::hda6288e802b68f69>
ffffffff80007f9f: e9 c0 fb ff ff       	jmp	0xffffffff80007b64 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x1c4>
ffffffff80007fa4: be 05 00 00 00       	movl	$0x5, %esi
ffffffff80007fa9: 48 29 ce             	subq	%rcx, %rsi
ffffffff80007fac: 48 8d 7c 24 68       	leaq	0x68(%rsp), %rdi
ffffffff80007fb1: e8 5a f0 ff ff       	callq	0xffffffff80007010 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0c5dc12a4b2d0193>
ffffffff80007fb6: e9 a9 fb ff ff       	jmp	0xffffffff80007b64 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192+0x1c4>
ffffffff80007fbb: be 28 00 00 00       	movl	$0x28, %esi
ffffffff80007fc0: 48 c7 c7 28 e0 01 80 	movq	$-0x7ffe1fd8, %rdi      # imm = 0x8001E028
ffffffff80007fc7: 48 c7 c2 50 e0 01 80 	movq	$-0x7ffe1fb0, %rdx      # imm = 0x8001E050
ffffffff80007fce: e8 9d 44 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80007fd3: 48 c7 84 24 48 01 00 00 c0 df 01 80  	movq	$-0x7ffe2040, 0x148(%rsp) # imm = 0x8001DFC0
ffffffff80007fdf: 48 c7 84 24 50 01 00 00 01 00 00 00  	movq	$0x1, 0x150(%rsp)
ffffffff80007feb: 48 c7 84 24 68 01 00 00 00 00 00 00  	movq	$0x0, 0x168(%rsp)
ffffffff80007ff7: 48 89 e0             	movq	%rsp, %rax
ffffffff80007ffa: 48 89 84 24 58 01 00 00      	movq	%rax, 0x158(%rsp)
ffffffff80008002: 48 c7 84 24 60 01 00 00 00 00 00 00  	movq	$0x0, 0x160(%rsp)
ffffffff8000800e: 48 8d bc 24 48 01 00 00      	leaq	0x148(%rsp), %rdi
ffffffff80008016: 48 c7 c6 d0 df 01 80 	movq	$-0x7ffe2030, %rsi      # imm = 0x8001DFD0
ffffffff8000801d: e8 ce 43 01 00       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff80008022: be 8e 00 00 00       	movl	$0x8e, %esi
ffffffff80008027: 48 c7 c7 60 e2 01 80 	movq	$-0x7ffe1da0, %rdi      # imm = 0x8001E260
ffffffff8000802e: 48 c7 c2 f0 e2 01 80 	movq	$-0x7ffe1d10, %rdx      # imm = 0x8001E2F0
ffffffff80008035: e8 36 44 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000803a: 48 c7 44 24 68 c0 df 01 80   	movq	$-0x7ffe2040, 0x68(%rsp) # imm = 0x8001DFC0
ffffffff80008043: 48 c7 44 24 70 01 00 00 00   	movq	$0x1, 0x70(%rsp)
ffffffff8000804c: 48 c7 84 24 88 00 00 00 00 00 00 00  	movq	$0x0, 0x88(%rsp)
ffffffff80008058: 48 89 e0             	movq	%rsp, %rax
ffffffff8000805b: 48 89 44 24 78       	movq	%rax, 0x78(%rsp)
ffffffff80008060: 48 c7 84 24 80 00 00 00 00 00 00 00  	movq	$0x0, 0x80(%rsp)
ffffffff8000806c: 48 8d 7c 24 68       	leaq	0x68(%rsp), %rdi
ffffffff80008071: 48 c7 c6 d0 df 01 80 	movq	$-0x7ffe2030, %rsi      # imm = 0x8001DFD0
ffffffff80008078: e8 73 43 01 00       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8000807d: cc                   	int3
ffffffff8000807e: cc                   	int3
ffffffff8000807f: cc                   	int3

ffffffff80008080 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25>:
ffffffff80008080: 55                   	pushq	%rbp
ffffffff80008081: 41 57                	pushq	%r15
ffffffff80008083: 41 56                	pushq	%r14
ffffffff80008085: 41 55                	pushq	%r13
ffffffff80008087: 41 54                	pushq	%r12
ffffffff80008089: 53                   	pushq	%rbx
ffffffff8000808a: 48 81 ec 88 01 00 00 	subq	$0x188, %rsp            # imm = 0x188
ffffffff80008091: 48 89 54 24 58       	movq	%rdx, 0x58(%rsp)
ffffffff80008096: 49 89 f7             	movq	%rsi, %r15
ffffffff80008099: 48 89 7c 24 10       	movq	%rdi, 0x10(%rsp)
ffffffff8000809e: 4c 8b 2e             	movq	(%rsi), %r13
ffffffff800080a1: 4c 8b 76 10          	movq	0x10(%rsi), %r14
ffffffff800080a5: 41 0f b7 9d 8e 00 00 00      	movzwl	0x8e(%r13), %ebx
ffffffff800080ad: 4b 8d 7c b5 60       	leaq	0x60(%r13,%r14,4), %rdi
ffffffff800080b2: 43 8b 44 b5 60       	movl	0x60(%r13,%r14,4), %eax
ffffffff800080b7: 89 44 24 04          	movl	%eax, 0x4(%rsp)
ffffffff800080bb: 4a 8d 34 b5 64 00 00 00      	leaq	0x64(,%r14,4), %rsi
ffffffff800080c3: 4c 01 ee             	addq	%r13, %rsi
ffffffff800080c6: 4d 89 f4             	movq	%r14, %r12
ffffffff800080c9: 49 f7 d4             	notq	%r12
ffffffff800080cc: 49 01 dc             	addq	%rbx, %r12
ffffffff800080cf: 4a 8d 14 a5 00 00 00 00      	leaq	(,%r12,4), %rdx
ffffffff800080d7: 48 8b 2d 4a e3 02 00 	movq	0x2e34a(%rip), %rbp     # 0xffffffff80036428
ffffffff800080de: ff d5                	callq	*%rbp
ffffffff800080e0: 4a 8d 3c f5 08 00 00 00      	leaq	0x8(,%r14,8), %rdi
ffffffff800080e8: 4c 01 ef             	addq	%r13, %rdi
ffffffff800080eb: 4b 8b 44 f5 08       	movq	0x8(%r13,%r14,8), %rax
ffffffff800080f0: 48 89 44 24 08       	movq	%rax, 0x8(%rsp)
ffffffff800080f5: 4a 8d 34 f5 10 00 00 00      	leaq	0x10(,%r14,8), %rsi
ffffffff800080fd: 4c 01 ee             	addq	%r13, %rsi
ffffffff80008100: 49 c1 e4 03          	shlq	$0x3, %r12
ffffffff80008104: 4c 89 e2             	movq	%r12, %rdx
ffffffff80008107: ff d5                	callq	*%rbp
ffffffff80008109: 8d 43 ff             	leal	-0x1(%rbx), %eax
ffffffff8000810c: 4c 89 eb             	movq	%r13, %rbx
ffffffff8000810f: 66 41 89 85 8e 00 00 00      	movw	%ax, 0x8e(%r13)
ffffffff80008117: 49 8b 6f 08          	movq	0x8(%r15), %rbp
ffffffff8000811b: 66 83 f8 04          	cmpw	$0x4, %ax
ffffffff8000811f: 0f 87 39 06 00 00    	ja	0xffffffff8000875e <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x6de>
ffffffff80008125: 48 8b 0b             	movq	(%rbx), %rcx
ffffffff80008128: 48 85 c9             	testq	%rcx, %rcx
ffffffff8000812b: 0f 84 2d 06 00 00    	je	0xffffffff8000875e <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x6de>
ffffffff80008131: 48 8d 55 01          	leaq	0x1(%rbp), %rdx
ffffffff80008135: 0f b7 b3 8c 00 00 00 	movzwl	0x8c(%rbx), %esi
ffffffff8000813c: 48 85 f6             	testq	%rsi, %rsi
ffffffff8000813f: 0f 84 91 00 00 00    	je	0xffffffff800081d6 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x156>
ffffffff80008145: 48 8b bc f1 88 00 00 00      	movq	0x88(%rcx,%rsi,8), %rdi
ffffffff8000814d: 48 ff ce             	decq	%rsi
ffffffff80008150: 48 89 8c 24 b0 00 00 00      	movq	%rcx, 0xb0(%rsp)
ffffffff80008158: 48 89 94 24 b8 00 00 00      	movq	%rdx, 0xb8(%rsp)
ffffffff80008160: 48 89 b4 24 c0 00 00 00      	movq	%rsi, 0xc0(%rsp)
ffffffff80008168: 48 89 bc 24 c8 00 00 00      	movq	%rdi, 0xc8(%rsp)
ffffffff80008170: 48 89 ac 24 d0 00 00 00      	movq	%rbp, 0xd0(%rsp)
ffffffff80008178: 49 89 df             	movq	%rbx, %r15
ffffffff8000817b: 48 89 9c 24 d8 00 00 00      	movq	%rbx, 0xd8(%rsp)
ffffffff80008183: 48 89 ac 24 e0 00 00 00      	movq	%rbp, 0xe0(%rsp)
ffffffff8000818b: 0f b7 9f 8e 00 00 00 	movzwl	0x8e(%rdi), %ebx
ffffffff80008192: 0f b7 c0             	movzwl	%ax, %eax
ffffffff80008195: 8d 0c 03             	leal	(%rbx,%rax), %ecx
ffffffff80008198: ff c1                	incl	%ecx
ffffffff8000819a: 83 f9 0c             	cmpl	$0xc, %ecx
ffffffff8000819d: 0f 83 c4 00 00 00    	jae	0xffffffff80008267 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x1e7>
ffffffff800081a3: 49 39 c6             	cmpq	%rax, %r14
ffffffff800081a6: 0f 87 92 06 00 00    	ja	0xffffffff8000883e <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x7be>
ffffffff800081ac: 48 8d bc 24 b0 00 00 00      	leaq	0xb0(%rsp), %rdi
ffffffff800081b4: e8 37 f4 ff ff       	callq	0xffffffff800075f0 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb>
ffffffff800081b9: 48 89 d5             	movq	%rdx, %rbp
ffffffff800081bc: 49 01 de             	addq	%rbx, %r14
ffffffff800081bf: 49 ff c6             	incq	%r14
ffffffff800081c2: 48 89 c3             	movq	%rax, %rbx
ffffffff800081c5: 48 8b 03             	movq	(%rbx), %rax
ffffffff800081c8: 48 85 c0             	testq	%rax, %rax
ffffffff800081cb: 0f 85 ba 00 00 00    	jne	0xffffffff8000828b <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x20b>
ffffffff800081d1: e9 88 05 00 00       	jmp	0xffffffff8000875e <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x6de>
ffffffff800081d6: 66 83 b9 8e 00 00 00 00      	cmpw	$0x0, 0x8e(%rcx)
ffffffff800081de: 0f 84 72 06 00 00    	je	0xffffffff80008856 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x7d6>
ffffffff800081e4: 48 8b b1 98 00 00 00 	movq	0x98(%rcx), %rsi
ffffffff800081eb: 48 89 8c 24 e8 00 00 00      	movq	%rcx, 0xe8(%rsp)
ffffffff800081f3: 48 89 94 24 f0 00 00 00      	movq	%rdx, 0xf0(%rsp)
ffffffff800081fb: 48 c7 84 24 f8 00 00 00 00 00 00 00  	movq	$0x0, 0xf8(%rsp)
ffffffff80008207: 48 89 9c 24 00 01 00 00      	movq	%rbx, 0x100(%rsp)
ffffffff8000820f: 48 89 ac 24 08 01 00 00      	movq	%rbp, 0x108(%rsp)
ffffffff80008217: 48 89 b4 24 10 01 00 00      	movq	%rsi, 0x110(%rsp)
ffffffff8000821f: 48 89 ac 24 18 01 00 00      	movq	%rbp, 0x118(%rsp)
ffffffff80008227: 0f b7 c0             	movzwl	%ax, %eax
ffffffff8000822a: 0f b7 8e 8e 00 00 00 	movzwl	0x8e(%rsi), %ecx
ffffffff80008231: 01 c1                	addl	%eax, %ecx
ffffffff80008233: ff c1                	incl	%ecx
ffffffff80008235: 83 f9 0c             	cmpl	$0xc, %ecx
ffffffff80008238: 0f 83 02 05 00 00    	jae	0xffffffff80008740 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x6c0>
ffffffff8000823e: 49 39 c6             	cmpq	%rax, %r14
ffffffff80008241: 0f 87 f7 05 00 00    	ja	0xffffffff8000883e <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x7be>
ffffffff80008247: 48 8d bc 24 e8 00 00 00      	leaq	0xe8(%rsp), %rdi
ffffffff8000824f: e8 9c f3 ff ff       	callq	0xffffffff800075f0 <alloc::collections::btree::node::BalancingContext<K,V>::do_merge::hd204a56ac0e550fb>
ffffffff80008254: 48 89 c3             	movq	%rax, %rbx
ffffffff80008257: 48 89 d5             	movq	%rdx, %rbp
ffffffff8000825a: 48 8b 03             	movq	(%rbx), %rax
ffffffff8000825d: 48 85 c0             	testq	%rax, %rax
ffffffff80008260: 75 29                	jne	0xffffffff8000828b <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x20b>
ffffffff80008262: e9 f7 04 00 00       	jmp	0xffffffff8000875e <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x6de>
ffffffff80008267: 48 8d bc 24 b0 00 00 00      	leaq	0xb0(%rsp), %rdi
ffffffff8000826f: be 01 00 00 00       	movl	$0x1, %esi
ffffffff80008274: e8 17 e7 ff ff       	callq	0xffffffff80006990 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::he59c1e99e1ca0e33>
ffffffff80008279: 49 ff c6             	incq	%r14
ffffffff8000827c: 4c 89 fb             	movq	%r15, %rbx
ffffffff8000827f: 48 8b 03             	movq	(%rbx), %rax
ffffffff80008282: 48 85 c0             	testq	%rax, %rax
ffffffff80008285: 0f 84 d3 04 00 00    	je	0xffffffff8000875e <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x6de>
ffffffff8000828b: 48 89 5c 24 38       	movq	%rbx, 0x38(%rsp)
ffffffff80008290: 0f b7 88 8e 00 00 00 	movzwl	0x8e(%rax), %ecx
ffffffff80008297: 66 83 f9 04          	cmpw	$0x4, %cx
ffffffff8000829b: 76 18                	jbe	0xffffffff800082b5 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x235>
ffffffff8000829d: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff800082a2: 8b 4c 24 04          	movl	0x4(%rsp), %ecx
ffffffff800082a6: 48 8b 54 24 08       	movq	0x8(%rsp), %rdx
ffffffff800082ab: 48 8b 5c 24 38       	movq	0x38(%rsp), %rbx
ffffffff800082b0: e9 b7 04 00 00       	jmp	0xffffffff8000876c <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x6ec>
ffffffff800082b5: 48 8d 55 01          	leaq	0x1(%rbp), %rdx
ffffffff800082b9: 4c 89 74 24 60       	movq	%r14, 0x60(%rsp)
ffffffff800082be: 48 89 6c 24 40       	movq	%rbp, 0x40(%rsp)
ffffffff800082c3: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
ffffffff800082d0: 0f b7 c9             	movzwl	%cx, %ecx
ffffffff800082d3: 48 8b 18             	movq	(%rax), %rbx
ffffffff800082d6: 48 85 db             	testq	%rbx, %rbx
ffffffff800082d9: 0f 84 b1 04 00 00    	je	0xffffffff80008790 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x710>
ffffffff800082df: 48 8d 7a 01          	leaq	0x1(%rdx), %rdi
ffffffff800082e3: 44 0f b7 a0 8c 00 00 00      	movzwl	0x8c(%rax), %r12d
ffffffff800082eb: 4d 85 e4             	testq	%r12, %r12
ffffffff800082ee: 48 89 7c 24 50       	movq	%rdi, 0x50(%rsp)
ffffffff800082f3: 0f 84 87 00 00 00    	je	0xffffffff80008380 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x300>
ffffffff800082f9: 4e 8b ac e3 88 00 00 00      	movq	0x88(%rbx,%r12,8), %r13
ffffffff80008301: 49 ff cc             	decq	%r12
ffffffff80008304: 48 89 9c 24 20 01 00 00      	movq	%rbx, 0x120(%rsp)
ffffffff8000830c: 48 89 bc 24 28 01 00 00      	movq	%rdi, 0x128(%rsp)
ffffffff80008314: 4c 89 a4 24 30 01 00 00      	movq	%r12, 0x130(%rsp)
ffffffff8000831c: 4c 89 ac 24 38 01 00 00      	movq	%r13, 0x138(%rsp)
ffffffff80008324: 48 89 94 24 40 01 00 00      	movq	%rdx, 0x140(%rsp)
ffffffff8000832c: 48 89 84 24 48 01 00 00      	movq	%rax, 0x148(%rsp)
ffffffff80008334: 48 89 94 24 50 01 00 00      	movq	%rdx, 0x150(%rsp)
ffffffff8000833c: 41 0f b7 b5 8e 00 00 00      	movzwl	0x8e(%r13), %esi
ffffffff80008344: 8d 14 31             	leal	(%rcx,%rsi), %edx
ffffffff80008347: ff c2                	incl	%edx
ffffffff80008349: 83 fa 0c             	cmpl	$0xc, %edx
ffffffff8000834c: 0f 83 54 04 00 00    	jae	0xffffffff800087a6 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x726>
ffffffff80008352: 48 8d 56 01          	leaq	0x1(%rsi), %rdx
ffffffff80008356: 48 89 54 24 18       	movq	%rdx, 0x18(%rsp)
ffffffff8000835b: 48 8d 14 0e          	leaq	(%rsi,%rcx), %rdx
ffffffff8000835f: 48 ff c2             	incq	%rdx
ffffffff80008362: 48 89 74 24 28       	movq	%rsi, 0x28(%rsp)
ffffffff80008367: 0f b7 b3 8e 00 00 00 	movzwl	0x8e(%rbx), %esi
ffffffff8000836e: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff80008373: 48 89 4c 24 30       	movq	%rcx, 0x30(%rsp)
ffffffff80008378: e9 8a 00 00 00       	jmp	0xffffffff80008407 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x387>
ffffffff8000837d: 0f 1f 00             	nopl	(%rax)
ffffffff80008380: 0f b7 b3 8e 00 00 00 	movzwl	0x8e(%rbx), %esi
ffffffff80008387: 66 85 f6             	testw	%si, %si
ffffffff8000838a: 0f 84 5f 04 00 00    	je	0xffffffff800087ef <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x76f>
ffffffff80008390: 4c 8b 83 98 00 00 00 	movq	0x98(%rbx), %r8
ffffffff80008397: 48 89 5c 24 78       	movq	%rbx, 0x78(%rsp)
ffffffff8000839c: 48 89 bc 24 80 00 00 00      	movq	%rdi, 0x80(%rsp)
ffffffff800083a4: 48 c7 84 24 88 00 00 00 00 00 00 00  	movq	$0x0, 0x88(%rsp)
ffffffff800083b0: 48 89 84 24 90 00 00 00      	movq	%rax, 0x90(%rsp)
ffffffff800083b8: 48 89 94 24 98 00 00 00      	movq	%rdx, 0x98(%rsp)
ffffffff800083c0: 4c 89 84 24 a0 00 00 00      	movq	%r8, 0xa0(%rsp)
ffffffff800083c8: 48 89 94 24 a8 00 00 00      	movq	%rdx, 0xa8(%rsp)
ffffffff800083d0: 45 0f b7 88 8e 00 00 00      	movzwl	0x8e(%r8), %r9d
ffffffff800083d8: 4a 8d 14 09          	leaq	(%rcx,%r9), %rdx
ffffffff800083dc: 48 ff c2             	incq	%rdx
ffffffff800083df: 48 83 fa 0c          	cmpq	$0xc, %rdx
ffffffff800083e3: 0f 83 d7 03 00 00    	jae	0xffffffff800087c0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x740>
ffffffff800083e9: 48 8d 79 01          	leaq	0x1(%rcx), %rdi
ffffffff800083ed: 48 89 7c 24 18       	movq	%rdi, 0x18(%rsp)
ffffffff800083f2: 49 89 c5             	movq	%rax, %r13
ffffffff800083f5: 4c 89 44 24 20       	movq	%r8, 0x20(%rsp)
ffffffff800083fa: 45 31 e4             	xorl	%r12d, %r12d
ffffffff800083fd: 48 89 4c 24 28       	movq	%rcx, 0x28(%rsp)
ffffffff80008402: 4c 89 4c 24 30       	movq	%r9, 0x30(%rsp)
ffffffff80008407: 0f b7 c6             	movzwl	%si, %eax
ffffffff8000840a: 48 89 44 24 70       	movq	%rax, 0x70(%rsp)
ffffffff8000840f: 48 89 54 24 48       	movq	%rdx, 0x48(%rsp)
ffffffff80008414: 66 41 89 95 8e 00 00 00      	movw	%dx, 0x8e(%r13)
ffffffff8000841c: 4a 8d 3c a3          	leaq	(%rbx,%r12,4), %rdi
ffffffff80008420: 48 83 c7 60          	addq	$0x60, %rdi
ffffffff80008424: 46 8b 74 a3 60       	movl	0x60(%rbx,%r12,4), %r14d
ffffffff80008429: 4a 8d 34 a3          	leaq	(%rbx,%r12,4), %rsi
ffffffff8000842d: 48 83 c6 64          	addq	$0x64, %rsi
ffffffff80008431: 4d 89 e7             	movq	%r12, %r15
ffffffff80008434: 49 f7 d7             	notq	%r15
ffffffff80008437: 49 01 c7             	addq	%rax, %r15
ffffffff8000843a: 4a 8d 14 bd 00 00 00 00      	leaq	(,%r15,4), %rdx
ffffffff80008442: 48 8b 05 df df 02 00 	movq	0x2dfdf(%rip), %rax     # 0xffffffff80036428
ffffffff80008449: ff d0                	callq	*%rax
ffffffff8000844b: 48 8b 6c 24 28       	movq	0x28(%rsp), %rbp
ffffffff80008450: 45 89 74 ad 60       	movl	%r14d, 0x60(%r13,%rbp,4)
ffffffff80008455: 48 8b 44 24 20       	movq	0x20(%rsp), %rax
ffffffff8000845a: 48 8d 70 60          	leaq	0x60(%rax), %rsi
ffffffff8000845e: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff80008463: 48 8d 3c 85 60 00 00 00      	leaq	0x60(,%rax,4), %rdi
ffffffff8000846b: 4c 01 ef             	addq	%r13, %rdi
ffffffff8000846e: 4c 8b 74 24 30       	movq	0x30(%rsp), %r14
ffffffff80008473: 42 8d 14 b5 00 00 00 00      	leal	(,%r14,4), %edx
ffffffff8000847b: ff 15 9f df 02 00    	callq	*0x2df9f(%rip)          # 0xffffffff80036420
ffffffff80008481: 4a 8d 3c e3          	leaq	(%rbx,%r12,8), %rdi
ffffffff80008485: 48 83 c7 08          	addq	$0x8, %rdi
ffffffff80008489: 4a 8b 44 e3 08       	movq	0x8(%rbx,%r12,8), %rax
ffffffff8000848e: 48 89 44 24 68       	movq	%rax, 0x68(%rsp)
ffffffff80008493: 4a 8d 34 e3          	leaq	(%rbx,%r12,8), %rsi
ffffffff80008497: 48 83 c6 10          	addq	$0x10, %rsi
ffffffff8000849b: 49 c1 e7 03          	shlq	$0x3, %r15
ffffffff8000849f: 4c 89 fa             	movq	%r15, %rdx
ffffffff800084a2: ff 15 80 df 02 00    	callq	*0x2df80(%rip)          # 0xffffffff80036428
ffffffff800084a8: 48 8b 44 24 68       	movq	0x68(%rsp), %rax
ffffffff800084ad: 49 89 44 ed 08       	movq	%rax, 0x8(%r13,%rbp,8)
ffffffff800084b2: 48 8b 44 24 20       	movq	0x20(%rsp), %rax
ffffffff800084b7: 48 8d 70 08          	leaq	0x8(%rax), %rsi
ffffffff800084bb: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff800084c0: 48 8d 3c c5 08 00 00 00      	leaq	0x8(,%rax,8), %rdi
ffffffff800084c8: 4c 01 ef             	addq	%r13, %rdi
ffffffff800084cb: 42 8d 14 f5 00 00 00 00      	leal	(,%r14,8), %edx
ffffffff800084d3: ff 15 47 df 02 00    	callq	*0x2df47(%rip)          # 0xffffffff80036420
ffffffff800084d9: 4d 8d 74 24 01       	leaq	0x1(%r12), %r14
ffffffff800084de: 4a 8d 3c e3          	leaq	(%rbx,%r12,8), %rdi
ffffffff800084e2: 48 81 c7 98 00 00 00 	addq	$0x98, %rdi
ffffffff800084e9: 4a 8d 34 e3          	leaq	(%rbx,%r12,8), %rsi
ffffffff800084ed: 48 81 c6 a0 00 00 00 	addq	$0xa0, %rsi
ffffffff800084f4: 4c 89 fa             	movq	%r15, %rdx
ffffffff800084f7: ff 15 2b df 02 00    	callq	*0x2df2b(%rip)          # 0xffffffff80036428
ffffffff800084fd: 48 8b 74 24 70       	movq	0x70(%rsp), %rsi
ffffffff80008502: 4c 39 f6             	cmpq	%r14, %rsi
ffffffff80008505: 41 b7 01             	movb	$0x1, %r15b
ffffffff80008508: 0f 86 9c 00 00 00    	jbe	0xffffffff800085aa <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x52a>
ffffffff8000850e: 89 f1                	movl	%esi, %ecx
ffffffff80008510: 44 29 f1             	subl	%r14d, %ecx
ffffffff80008513: 83 e1 03             	andl	$0x3, %ecx
ffffffff80008516: 0f 84 07 02 00 00    	je	0xffffffff80008723 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x6a3>
ffffffff8000851c: 0f 1f 40 00          	nopl	(%rax)
ffffffff80008520: 49 8d 46 01          	leaq	0x1(%r14), %rax
ffffffff80008524: 4a 8b 94 f3 90 00 00 00      	movq	0x90(%rbx,%r14,8), %rdx
ffffffff8000852c: 48 89 1a             	movq	%rbx, (%rdx)
ffffffff8000852f: 66 44 89 b2 8c 00 00 00      	movw	%r14w, 0x8c(%rdx)
ffffffff80008537: 49 89 c6             	movq	%rax, %r14
ffffffff8000853a: 48 ff c9             	decq	%rcx
ffffffff8000853d: 75 e1                	jne	0xffffffff80008520 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x4a0>
ffffffff8000853f: 49 f7 dc             	negq	%r12
ffffffff80008542: 4a 8d 0c 26          	leaq	(%rsi,%r12), %rcx
ffffffff80008546: 48 83 c1 fe          	addq	$-0x2, %rcx
ffffffff8000854a: 48 83 f9 03          	cmpq	$0x3, %rcx
ffffffff8000854e: 72 5a                	jb	0xffffffff800085aa <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x52a>
ffffffff80008550: 48 8b 8c c3 90 00 00 00      	movq	0x90(%rbx,%rax,8), %rcx
ffffffff80008558: 48 89 19             	movq	%rbx, (%rcx)
ffffffff8000855b: 66 89 81 8c 00 00 00 	movw	%ax, 0x8c(%rcx)
ffffffff80008562: 48 8b 8c c3 98 00 00 00      	movq	0x98(%rbx,%rax,8), %rcx
ffffffff8000856a: 48 89 19             	movq	%rbx, (%rcx)
ffffffff8000856d: 8d 50 01             	leal	0x1(%rax), %edx
ffffffff80008570: 66 89 91 8c 00 00 00 	movw	%dx, 0x8c(%rcx)
ffffffff80008577: 48 8b 8c c3 a0 00 00 00      	movq	0xa0(%rbx,%rax,8), %rcx
ffffffff8000857f: 48 89 19             	movq	%rbx, (%rcx)
ffffffff80008582: 8d 50 02             	leal	0x2(%rax), %edx
ffffffff80008585: 66 89 91 8c 00 00 00 	movw	%dx, 0x8c(%rcx)
ffffffff8000858c: 48 8b 8c c3 a8 00 00 00      	movq	0xa8(%rbx,%rax,8), %rcx
ffffffff80008594: 48 89 19             	movq	%rbx, (%rcx)
ffffffff80008597: 8d 50 03             	leal	0x3(%rax), %edx
ffffffff8000859a: 66 89 91 8c 00 00 00 	movw	%dx, 0x8c(%rcx)
ffffffff800085a1: 48 83 c0 04          	addq	$0x4, %rax
ffffffff800085a5: 48 39 f0             	cmpq	%rsi, %rax
ffffffff800085a8: 75 a6                	jne	0xffffffff80008550 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x4d0>
ffffffff800085aa: 66 ff 8b 8e 00 00 00 	decw	0x8e(%rbx)
ffffffff800085b1: b9 90 00 00 00       	movl	$0x90, %ecx
ffffffff800085b6: 48 83 7c 24 50 02    	cmpq	$0x2, 0x50(%rsp)
ffffffff800085bc: 4c 8b 74 24 60       	movq	0x60(%rsp), %r14
ffffffff800085c1: 48 8b 6c 24 40       	movq	0x40(%rsp), %rbp
ffffffff800085c6: 4c 8b 64 24 20       	movq	0x20(%rsp), %r12
ffffffff800085cb: 0f 82 0c 01 00 00    	jb	0xffffffff800086dd <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x65d>
ffffffff800085d1: 48 8b 54 24 30       	movq	0x30(%rsp), %rdx
ffffffff800085d6: 48 ff c2             	incq	%rdx
ffffffff800085d9: 48 8b 44 24 48       	movq	0x48(%rsp), %rax
ffffffff800085de: 48 2b 44 24 28       	subq	0x28(%rsp), %rax
ffffffff800085e3: 48 39 c2             	cmpq	%rax, %rdx
ffffffff800085e6: 0f 85 eb 01 00 00    	jne	0xffffffff800087d7 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x757>
ffffffff800085ec: 49 8d 85 90 00 00 00 	leaq	0x90(%r13), %rax
ffffffff800085f3: 48 8b 6c 24 18       	movq	0x18(%rsp), %rbp
ffffffff800085f8: 48 8d 3c e8          	leaq	(%rax,%rbp,8), %rdi
ffffffff800085fc: 49 8d b4 24 90 00 00 00      	leaq	0x90(%r12), %rsi
ffffffff80008604: c1 e2 03             	shll	$0x3, %edx
ffffffff80008607: ff 15 13 de 02 00    	callq	*0x2de13(%rip)          # 0xffffffff80036420
ffffffff8000860d: 48 8b 7c 24 48       	movq	0x48(%rsp), %rdi
ffffffff80008612: 89 f9                	movl	%edi, %ecx
ffffffff80008614: 29 e9                	subl	%ebp, %ecx
ffffffff80008616: ff c1                	incl	%ecx
ffffffff80008618: 48 89 e8             	movq	%rbp, %rax
ffffffff8000861b: 83 e1 03             	andl	$0x3, %ecx
ffffffff8000861e: 74 2e                	je	0xffffffff8000864e <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x5ce>
ffffffff80008620: 48 89 ea             	movq	%rbp, %rdx
ffffffff80008623: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
ffffffff80008630: 48 8d 42 01          	leaq	0x1(%rdx), %rax
ffffffff80008634: 49 8b b4 d5 90 00 00 00      	movq	0x90(%r13,%rdx,8), %rsi
ffffffff8000863c: 4c 89 2e             	movq	%r13, (%rsi)
ffffffff8000863f: 66 89 96 8c 00 00 00 	movw	%dx, 0x8c(%rsi)
ffffffff80008646: 48 89 c2             	movq	%rax, %rdx
ffffffff80008649: 48 ff c9             	decq	%rcx
ffffffff8000864c: 75 e2                	jne	0xffffffff80008630 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x5b0>
ffffffff8000864e: 48 89 fa             	movq	%rdi, %rdx
ffffffff80008651: 48 29 ea             	subq	%rbp, %rdx
ffffffff80008654: b9 f0 00 00 00       	movl	$0xf0, %ecx
ffffffff80008659: 48 83 fa 03          	cmpq	$0x3, %rdx
ffffffff8000865d: 48 8b 6c 24 40       	movq	0x40(%rsp), %rbp
ffffffff80008662: 72 79                	jb	0xffffffff800086dd <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x65d>
ffffffff80008664: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
ffffffff80008670: 49 8b 94 c5 90 00 00 00      	movq	0x90(%r13,%rax,8), %rdx
ffffffff80008678: 4c 89 2a             	movq	%r13, (%rdx)
ffffffff8000867b: 66 89 82 8c 00 00 00 	movw	%ax, 0x8c(%rdx)
ffffffff80008682: 49 8b 94 c5 98 00 00 00      	movq	0x98(%r13,%rax,8), %rdx
ffffffff8000868a: 4c 89 2a             	movq	%r13, (%rdx)
ffffffff8000868d: 8d 70 01             	leal	0x1(%rax), %esi
ffffffff80008690: 66 89 b2 8c 00 00 00 	movw	%si, 0x8c(%rdx)
ffffffff80008697: 49 8b 94 c5 a0 00 00 00      	movq	0xa0(%r13,%rax,8), %rdx
ffffffff8000869f: 4c 89 2a             	movq	%r13, (%rdx)
ffffffff800086a2: 8d 70 02             	leal	0x2(%rax), %esi
ffffffff800086a5: 66 89 b2 8c 00 00 00 	movw	%si, 0x8c(%rdx)
ffffffff800086ac: 49 8b 94 c5 a8 00 00 00      	movq	0xa8(%r13,%rax,8), %rdx
ffffffff800086b4: 4c 89 2a             	movq	%r13, (%rdx)
ffffffff800086b7: 48 8d 70 03          	leaq	0x3(%rax), %rsi
ffffffff800086bb: 66 89 b2 8c 00 00 00 	movw	%si, 0x8c(%rdx)
ffffffff800086c2: 48 83 c0 04          	addq	$0x4, %rax
ffffffff800086c6: 48 39 fe             	cmpq	%rdi, %rsi
ffffffff800086c9: 75 a5                	jne	0xffffffff80008670 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x5f0>
ffffffff800086cb: eb 10                	jmp	0xffffffff800086dd <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x65d>
ffffffff800086cd: 0f 1f 00             	nopl	(%rax)
ffffffff800086d0: f3 90                	pause
ffffffff800086d2: 0f b6 05 77 c9 01 00 	movzbl	0x1c977(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff800086d9: 84 c0                	testb	%al, %al
ffffffff800086db: 75 f3                	jne	0xffffffff800086d0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x650>
ffffffff800086dd: 31 c0                	xorl	%eax, %eax
ffffffff800086df: f0                   	lock
ffffffff800086e0: 44 0f b0 3d 68 c9 01 00      	cmpxchgb	%r15b, 0x1c968(%rip) # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff800086e8: 75 e8                	jne	0xffffffff800086d2 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x652>
ffffffff800086ea: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff800086ef: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff800086f6: 4c 89 e6             	movq	%r12, %rsi
ffffffff800086f9: e8 a2 a9 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff800086fe: c6 05 4b c9 01 00 00 	movb	$0x0, 0x1c94b(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80008705: 0f b7 8b 8e 00 00 00 	movzwl	0x8e(%rbx), %ecx
ffffffff8000870c: 48 89 d8             	movq	%rbx, %rax
ffffffff8000870f: 48 8b 54 24 50       	movq	0x50(%rsp), %rdx
ffffffff80008714: 66 83 f9 04          	cmpw	$0x4, %cx
ffffffff80008718: 0f 86 b2 fb ff ff    	jbe	0xffffffff800082d0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x250>
ffffffff8000871e: e9 7a fb ff ff       	jmp	0xffffffff8000829d <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x21d>
ffffffff80008723: 4c 89 f0             	movq	%r14, %rax
ffffffff80008726: 49 f7 dc             	negq	%r12
ffffffff80008729: 4a 8d 0c 26          	leaq	(%rsi,%r12), %rcx
ffffffff8000872d: 48 83 c1 fe          	addq	$-0x2, %rcx
ffffffff80008731: 48 83 f9 03          	cmpq	$0x3, %rcx
ffffffff80008735: 0f 83 15 fe ff ff    	jae	0xffffffff80008550 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x4d0>
ffffffff8000873b: e9 6a fe ff ff       	jmp	0xffffffff800085aa <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x52a>
ffffffff80008740: 48 8d bc 24 e8 00 00 00      	leaq	0xe8(%rsp), %rdi
ffffffff80008748: be 01 00 00 00       	movl	$0x1, %esi
ffffffff8000874d: e8 0e e5 ff ff       	callq	0xffffffff80006c60 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e>
ffffffff80008752: 48 8b 03             	movq	(%rbx), %rax
ffffffff80008755: 48 85 c0             	testq	%rax, %rax
ffffffff80008758: 0f 85 2d fb ff ff    	jne	0xffffffff8000828b <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x20b>
ffffffff8000875e: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff80008763: 8b 4c 24 04          	movl	0x4(%rsp), %ecx
ffffffff80008767: 48 8b 54 24 08       	movq	0x8(%rsp), %rdx
ffffffff8000876c: 89 08                	movl	%ecx, (%rax)
ffffffff8000876e: 48 89 50 08          	movq	%rdx, 0x8(%rax)
ffffffff80008772: 48 89 58 10          	movq	%rbx, 0x10(%rax)
ffffffff80008776: 48 89 68 18          	movq	%rbp, 0x18(%rax)
ffffffff8000877a: 4c 89 70 20          	movq	%r14, 0x20(%rax)
ffffffff8000877e: 48 81 c4 88 01 00 00 	addq	$0x188, %rsp            # imm = 0x188
ffffffff80008785: 5b                   	popq	%rbx
ffffffff80008786: 41 5c                	popq	%r12
ffffffff80008788: 41 5d                	popq	%r13
ffffffff8000878a: 41 5e                	popq	%r14
ffffffff8000878c: 41 5f                	popq	%r15
ffffffff8000878e: 5d                   	popq	%rbp
ffffffff8000878f: c3                   	retq
ffffffff80008790: 48 85 c9             	testq	%rcx, %rcx
ffffffff80008793: 0f 85 04 fb ff ff    	jne	0xffffffff8000829d <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x21d>
ffffffff80008799: 48 8b 44 24 58       	movq	0x58(%rsp), %rax
ffffffff8000879e: c6 00 01             	movb	$0x1, (%rax)
ffffffff800087a1: e9 f7 fa ff ff       	jmp	0xffffffff8000829d <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x21d>
ffffffff800087a6: be 05 00 00 00       	movl	$0x5, %esi
ffffffff800087ab: 48 29 ce             	subq	%rcx, %rsi
ffffffff800087ae: 48 8d bc 24 20 01 00 00      	leaq	0x120(%rsp), %rdi
ffffffff800087b6: e8 d5 e1 ff ff       	callq	0xffffffff80006990 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_left::he59c1e99e1ca0e33>
ffffffff800087bb: e9 dd fa ff ff       	jmp	0xffffffff8000829d <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x21d>
ffffffff800087c0: be 05 00 00 00       	movl	$0x5, %esi
ffffffff800087c5: 48 29 ce             	subq	%rcx, %rsi
ffffffff800087c8: 48 8d 7c 24 78       	leaq	0x78(%rsp), %rdi
ffffffff800087cd: e8 8e e4 ff ff       	callq	0xffffffff80006c60 <alloc::collections::btree::node::BalancingContext<K,V>::bulk_steal_right::h0accfdf68b5acc2e>
ffffffff800087d2: e9 c6 fa ff ff       	jmp	0xffffffff8000829d <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25+0x21d>
ffffffff800087d7: be 28 00 00 00       	movl	$0x28, %esi
ffffffff800087dc: 48 c7 c7 28 e0 01 80 	movq	$-0x7ffe1fd8, %rdi      # imm = 0x8001E028
ffffffff800087e3: 48 c7 c2 50 e0 01 80 	movq	$-0x7ffe1fb0, %rdx      # imm = 0x8001E050
ffffffff800087ea: e8 81 3c 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff800087ef: 48 c7 84 24 58 01 00 00 c0 df 01 80  	movq	$-0x7ffe2040, 0x158(%rsp) # imm = 0x8001DFC0
ffffffff800087fb: 48 c7 84 24 60 01 00 00 01 00 00 00  	movq	$0x1, 0x160(%rsp)
ffffffff80008807: 48 c7 84 24 78 01 00 00 00 00 00 00  	movq	$0x0, 0x178(%rsp)
ffffffff80008813: 48 89 e0             	movq	%rsp, %rax
ffffffff80008816: 48 89 84 24 68 01 00 00      	movq	%rax, 0x168(%rsp)
ffffffff8000881e: 48 c7 84 24 70 01 00 00 00 00 00 00  	movq	$0x0, 0x170(%rsp)
ffffffff8000882a: 48 8d bc 24 58 01 00 00      	leaq	0x158(%rsp), %rdi
ffffffff80008832: 48 c7 c6 d0 df 01 80 	movq	$-0x7ffe2030, %rsi      # imm = 0x8001DFD0
ffffffff80008839: e8 b2 3b 01 00       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8000883e: be 8e 00 00 00       	movl	$0x8e, %esi
ffffffff80008843: 48 c7 c7 60 e2 01 80 	movq	$-0x7ffe1da0, %rdi      # imm = 0x8001E260
ffffffff8000884a: 48 c7 c2 f0 e2 01 80 	movq	$-0x7ffe1d10, %rdx      # imm = 0x8001E2F0
ffffffff80008851: e8 1a 3c 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80008856: 48 c7 44 24 78 c0 df 01 80   	movq	$-0x7ffe2040, 0x78(%rsp) # imm = 0x8001DFC0
ffffffff8000885f: 48 c7 84 24 80 00 00 00 01 00 00 00  	movq	$0x1, 0x80(%rsp)
ffffffff8000886b: 48 c7 84 24 98 00 00 00 00 00 00 00  	movq	$0x0, 0x98(%rsp)
ffffffff80008877: 48 89 e0             	movq	%rsp, %rax
ffffffff8000887a: 48 89 84 24 88 00 00 00      	movq	%rax, 0x88(%rsp)
ffffffff80008882: 48 c7 84 24 90 00 00 00 00 00 00 00  	movq	$0x0, 0x90(%rsp)
ffffffff8000888e: 48 8d 7c 24 78       	leaq	0x78(%rsp), %rdi
ffffffff80008893: 48 c7 c6 d0 df 01 80 	movq	$-0x7ffe2030, %rsi      # imm = 0x8001DFD0
ffffffff8000889a: e8 51 3b 01 00       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8000889f: cc                   	int3

ffffffff800088a0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7>:
ffffffff800088a0: 53                   	pushq	%rbx
ffffffff800088a1: 48 83 ec 60          	subq	$0x60, %rsp
ffffffff800088a5: 48 89 fb             	movq	%rdi, %rbx
ffffffff800088a8: 48 8b 06             	movq	(%rsi), %rax
ffffffff800088ab: 48 8b 7e 08          	movq	0x8(%rsi), %rdi
ffffffff800088af: 48 8b 4e 10          	movq	0x10(%rsi), %rcx
ffffffff800088b3: 48 85 ff             	testq	%rdi, %rdi
ffffffff800088b6: 0f 84 e4 01 00 00    	je	0xffffffff80008aa0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0x200>
ffffffff800088bc: 48 8b 8c c8 90 00 00 00      	movq	0x90(%rax,%rcx,8), %rcx
ffffffff800088c4: 48 89 f8             	movq	%rdi, %rax
ffffffff800088c7: 48 ff c8             	decq	%rax
ffffffff800088ca: 0f 84 be 00 00 00    	je	0xffffffff8000898e <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0xee>
ffffffff800088d0: 48 83 c7 fe          	addq	$-0x2, %rdi
ffffffff800088d4: 48 89 c6             	movq	%rax, %rsi
ffffffff800088d7: 48 83 e6 07          	andq	$0x7, %rsi
ffffffff800088db: 74 1e                	je	0xffffffff800088fb <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0x5b>
ffffffff800088dd: 45 31 c0             	xorl	%r8d, %r8d
ffffffff800088e0: 44 0f b7 89 8e 00 00 00      	movzwl	0x8e(%rcx), %r9d
ffffffff800088e8: 4a 8b 8c c9 90 00 00 00      	movq	0x90(%rcx,%r9,8), %rcx
ffffffff800088f0: 49 ff c0             	incq	%r8
ffffffff800088f3: 4c 39 c6             	cmpq	%r8, %rsi
ffffffff800088f6: 75 e8                	jne	0xffffffff800088e0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0x40>
ffffffff800088f8: 4c 29 c0             	subq	%r8, %rax
ffffffff800088fb: 48 83 ff 07          	cmpq	$0x7, %rdi
ffffffff800088ff: 0f 82 89 00 00 00    	jb	0xffffffff8000898e <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0xee>
ffffffff80008905: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff80008910: 0f b7 b1 8e 00 00 00 	movzwl	0x8e(%rcx), %esi
ffffffff80008917: 48 8b 8c f1 90 00 00 00      	movq	0x90(%rcx,%rsi,8), %rcx
ffffffff8000891f: 0f b7 b1 8e 00 00 00 	movzwl	0x8e(%rcx), %esi
ffffffff80008926: 48 8b 8c f1 90 00 00 00      	movq	0x90(%rcx,%rsi,8), %rcx
ffffffff8000892e: 0f b7 b1 8e 00 00 00 	movzwl	0x8e(%rcx), %esi
ffffffff80008935: 48 8b 8c f1 90 00 00 00      	movq	0x90(%rcx,%rsi,8), %rcx
ffffffff8000893d: 0f b7 b1 8e 00 00 00 	movzwl	0x8e(%rcx), %esi
ffffffff80008944: 48 8b 8c f1 90 00 00 00      	movq	0x90(%rcx,%rsi,8), %rcx
ffffffff8000894c: 0f b7 b1 8e 00 00 00 	movzwl	0x8e(%rcx), %esi
ffffffff80008953: 48 8b 8c f1 90 00 00 00      	movq	0x90(%rcx,%rsi,8), %rcx
ffffffff8000895b: 0f b7 b1 8e 00 00 00 	movzwl	0x8e(%rcx), %esi
ffffffff80008962: 48 8b 8c f1 90 00 00 00      	movq	0x90(%rcx,%rsi,8), %rcx
ffffffff8000896a: 0f b7 b1 8e 00 00 00 	movzwl	0x8e(%rcx), %esi
ffffffff80008971: 48 8b 8c f1 90 00 00 00      	movq	0x90(%rcx,%rsi,8), %rcx
ffffffff80008979: 0f b7 b1 8e 00 00 00 	movzwl	0x8e(%rcx), %esi
ffffffff80008980: 48 8b 8c f1 90 00 00 00      	movq	0x90(%rcx,%rsi,8), %rcx
ffffffff80008988: 48 83 c0 f8          	addq	$-0x8, %rax
ffffffff8000898c: 75 82                	jne	0xffffffff80008910 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0x70>
ffffffff8000898e: 0f b7 81 8e 00 00 00 	movzwl	0x8e(%rcx), %eax
ffffffff80008995: 48 ff c8             	decq	%rax
ffffffff80008998: 48 89 4c 24 20       	movq	%rcx, 0x20(%rsp)
ffffffff8000899d: 48 c7 44 24 28 00 00 00 00   	movq	$0x0, 0x28(%rsp)
ffffffff800089a6: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff800089ab: 48 8d 7c 24 38       	leaq	0x38(%rsp), %rdi
ffffffff800089b0: 48 8d 74 24 20       	leaq	0x20(%rsp), %rsi
ffffffff800089b5: e8 c6 f6 ff ff       	callq	0xffffffff80008080 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25>
ffffffff800089ba: 8b 54 24 38          	movl	0x38(%rsp), %edx
ffffffff800089be: 4c 8b 44 24 40       	movq	0x40(%rsp), %r8
ffffffff800089c3: 48 8b 44 24 48       	movq	0x48(%rsp), %rax
ffffffff800089c8: 48 8b 74 24 50       	movq	0x50(%rsp), %rsi
ffffffff800089cd: 48 8b 7c 24 58       	movq	0x58(%rsp), %rdi
ffffffff800089d2: 0f b7 88 8e 00 00 00 	movzwl	0x8e(%rax), %ecx
ffffffff800089d9: 48 39 cf             	cmpq	%rcx, %rdi
ffffffff800089dc: 72 18                	jb	0xffffffff800089f6 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0x156>
ffffffff800089de: 66 90                	nop
ffffffff800089e0: 0f b7 b8 8c 00 00 00 	movzwl	0x8c(%rax), %edi
ffffffff800089e7: 48 8b 00             	movq	(%rax), %rax
ffffffff800089ea: 48 ff c6             	incq	%rsi
ffffffff800089ed: 66 3b b8 8e 00 00 00 	cmpw	0x8e(%rax), %di
ffffffff800089f4: 73 ea                	jae	0xffffffff800089e0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0x140>
ffffffff800089f6: 8b 4c b8 60          	movl	0x60(%rax,%rdi,4), %ecx
ffffffff800089fa: 89 54 b8 60          	movl	%edx, 0x60(%rax,%rdi,4)
ffffffff800089fe: 48 8b 54 f8 08       	movq	0x8(%rax,%rdi,8), %rdx
ffffffff80008a03: 4c 89 44 f8 08       	movq	%r8, 0x8(%rax,%rdi,8)
ffffffff80008a08: 48 85 f6             	testq	%rsi, %rsi
ffffffff80008a0b: 0f 84 b8 00 00 00    	je	0xffffffff80008ac9 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0x229>
ffffffff80008a11: 48 8b 84 f8 98 00 00 00      	movq	0x98(%rax,%rdi,8), %rax
ffffffff80008a19: 49 89 f0             	movq	%rsi, %r8
ffffffff80008a1c: 49 ff c8             	decq	%r8
ffffffff80008a1f: 0f 84 a9 00 00 00    	je	0xffffffff80008ace <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0x22e>
ffffffff80008a25: 48 83 c6 fe          	addq	$-0x2, %rsi
ffffffff80008a29: 4c 89 c7             	movq	%r8, %rdi
ffffffff80008a2c: 48 83 e7 07          	andq	$0x7, %rdi
ffffffff80008a30: 74 20                	je	0xffffffff80008a52 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0x1b2>
ffffffff80008a32: 45 31 c9             	xorl	%r9d, %r9d
ffffffff80008a35: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff80008a40: 48 8b 80 90 00 00 00 	movq	0x90(%rax), %rax
ffffffff80008a47: 49 ff c1             	incq	%r9
ffffffff80008a4a: 4c 39 cf             	cmpq	%r9, %rdi
ffffffff80008a4d: 75 f1                	jne	0xffffffff80008a40 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0x1a0>
ffffffff80008a4f: 4d 29 c8             	subq	%r9, %r8
ffffffff80008a52: 31 ff                	xorl	%edi, %edi
ffffffff80008a54: 48 83 fe 07          	cmpq	$0x7, %rsi
ffffffff80008a58: 72 76                	jb	0xffffffff80008ad0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0x230>
ffffffff80008a5a: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff80008a60: 48 8b 80 90 00 00 00 	movq	0x90(%rax), %rax
ffffffff80008a67: 48 8b 80 90 00 00 00 	movq	0x90(%rax), %rax
ffffffff80008a6e: 48 8b 80 90 00 00 00 	movq	0x90(%rax), %rax
ffffffff80008a75: 48 8b 80 90 00 00 00 	movq	0x90(%rax), %rax
ffffffff80008a7c: 48 8b 80 90 00 00 00 	movq	0x90(%rax), %rax
ffffffff80008a83: 48 8b 80 90 00 00 00 	movq	0x90(%rax), %rax
ffffffff80008a8a: 48 8b 80 90 00 00 00 	movq	0x90(%rax), %rax
ffffffff80008a91: 48 8b 80 90 00 00 00 	movq	0x90(%rax), %rax
ffffffff80008a98: 49 83 c0 f8          	addq	$-0x8, %r8
ffffffff80008a9c: 75 c2                	jne	0xffffffff80008a60 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0x1c0>
ffffffff80008a9e: eb 30                	jmp	0xffffffff80008ad0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0x230>
ffffffff80008aa0: 48 89 44 24 08       	movq	%rax, 0x8(%rsp)
ffffffff80008aa5: 48 c7 44 24 10 00 00 00 00   	movq	$0x0, 0x10(%rsp)
ffffffff80008aae: 48 89 4c 24 18       	movq	%rcx, 0x18(%rsp)
ffffffff80008ab3: 48 8d 74 24 08       	leaq	0x8(%rsp), %rsi
ffffffff80008ab8: 48 89 df             	movq	%rbx, %rdi
ffffffff80008abb: e8 c0 f5 ff ff       	callq	0xffffffff80008080 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::he58b7bca09f42d25>
ffffffff80008ac0: 48 89 d8             	movq	%rbx, %rax
ffffffff80008ac3: 48 83 c4 60          	addq	$0x60, %rsp
ffffffff80008ac7: 5b                   	popq	%rbx
ffffffff80008ac8: c3                   	retq
ffffffff80008ac9: 48 ff c7             	incq	%rdi
ffffffff80008acc: eb 02                	jmp	0xffffffff80008ad0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::h7e16026ffac32bf7+0x230>
ffffffff80008ace: 31 ff                	xorl	%edi, %edi
ffffffff80008ad0: 89 0b                	movl	%ecx, (%rbx)
ffffffff80008ad2: 48 89 53 08          	movq	%rdx, 0x8(%rbx)
ffffffff80008ad6: 48 89 43 10          	movq	%rax, 0x10(%rbx)
ffffffff80008ada: 48 c7 43 18 00 00 00 00      	movq	$0x0, 0x18(%rbx)
ffffffff80008ae2: 48 89 7b 20          	movq	%rdi, 0x20(%rbx)
ffffffff80008ae6: 48 89 d8             	movq	%rbx, %rax
ffffffff80008ae9: 48 83 c4 60          	addq	$0x60, %rsp
ffffffff80008aed: 5b                   	popq	%rbx
ffffffff80008aee: c3                   	retq
ffffffff80008aef: cc                   	int3

ffffffff80008af0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c>:
ffffffff80008af0: 53                   	pushq	%rbx
ffffffff80008af1: 48 83 ec 50          	subq	$0x50, %rsp
ffffffff80008af5: 48 89 fb             	movq	%rdi, %rbx
ffffffff80008af8: 48 8b 06             	movq	(%rsi), %rax
ffffffff80008afb: 48 8b 7e 08          	movq	0x8(%rsi), %rdi
ffffffff80008aff: 48 8b 4e 10          	movq	0x10(%rsi), %rcx
ffffffff80008b03: 48 85 ff             	testq	%rdi, %rdi
ffffffff80008b06: 0f 84 7c 01 00 00    	je	0xffffffff80008c88 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0x198>
ffffffff80008b0c: 48 8b 4c c8 68       	movq	0x68(%rax,%rcx,8), %rcx
ffffffff80008b11: 48 89 f8             	movq	%rdi, %rax
ffffffff80008b14: 48 ff c8             	decq	%rax
ffffffff80008b17: 0f 84 81 00 00 00    	je	0xffffffff80008b9e <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0xae>
ffffffff80008b1d: 48 83 c7 fe          	addq	$-0x2, %rdi
ffffffff80008b21: 48 89 c6             	movq	%rax, %rsi
ffffffff80008b24: 48 83 e6 07          	andq	$0x7, %rsi
ffffffff80008b28: 74 1b                	je	0xffffffff80008b45 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0x55>
ffffffff80008b2a: 45 31 c0             	xorl	%r8d, %r8d
ffffffff80008b2d: 0f 1f 00             	nopl	(%rax)
ffffffff80008b30: 44 0f b7 49 62       	movzwl	0x62(%rcx), %r9d
ffffffff80008b35: 4a 8b 4c c9 68       	movq	0x68(%rcx,%r9,8), %rcx
ffffffff80008b3a: 49 ff c0             	incq	%r8
ffffffff80008b3d: 4c 39 c6             	cmpq	%r8, %rsi
ffffffff80008b40: 75 ee                	jne	0xffffffff80008b30 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0x40>
ffffffff80008b42: 4c 29 c0             	subq	%r8, %rax
ffffffff80008b45: 48 83 ff 07          	cmpq	$0x7, %rdi
ffffffff80008b49: 72 53                	jb	0xffffffff80008b9e <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0xae>
ffffffff80008b4b: 0f 1f 44 00 00       	nopl	(%rax,%rax)
ffffffff80008b50: 0f b7 71 62          	movzwl	0x62(%rcx), %esi
ffffffff80008b54: 48 8b 4c f1 68       	movq	0x68(%rcx,%rsi,8), %rcx
ffffffff80008b59: 0f b7 71 62          	movzwl	0x62(%rcx), %esi
ffffffff80008b5d: 48 8b 4c f1 68       	movq	0x68(%rcx,%rsi,8), %rcx
ffffffff80008b62: 0f b7 71 62          	movzwl	0x62(%rcx), %esi
ffffffff80008b66: 48 8b 4c f1 68       	movq	0x68(%rcx,%rsi,8), %rcx
ffffffff80008b6b: 0f b7 71 62          	movzwl	0x62(%rcx), %esi
ffffffff80008b6f: 48 8b 4c f1 68       	movq	0x68(%rcx,%rsi,8), %rcx
ffffffff80008b74: 0f b7 71 62          	movzwl	0x62(%rcx), %esi
ffffffff80008b78: 48 8b 4c f1 68       	movq	0x68(%rcx,%rsi,8), %rcx
ffffffff80008b7d: 0f b7 71 62          	movzwl	0x62(%rcx), %esi
ffffffff80008b81: 48 8b 4c f1 68       	movq	0x68(%rcx,%rsi,8), %rcx
ffffffff80008b86: 0f b7 71 62          	movzwl	0x62(%rcx), %esi
ffffffff80008b8a: 48 8b 4c f1 68       	movq	0x68(%rcx,%rsi,8), %rcx
ffffffff80008b8f: 0f b7 71 62          	movzwl	0x62(%rcx), %esi
ffffffff80008b93: 48 8b 4c f1 68       	movq	0x68(%rcx,%rsi,8), %rcx
ffffffff80008b98: 48 83 c0 f8          	addq	$-0x8, %rax
ffffffff80008b9c: 75 b2                	jne	0xffffffff80008b50 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0x60>
ffffffff80008b9e: 0f b7 41 62          	movzwl	0x62(%rcx), %eax
ffffffff80008ba2: 48 ff c8             	decq	%rax
ffffffff80008ba5: 48 89 4c 24 18       	movq	%rcx, 0x18(%rsp)
ffffffff80008baa: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff80008bb3: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff80008bb8: 48 8d 7c 24 30       	leaq	0x30(%rsp), %rdi
ffffffff80008bbd: 48 8d 74 24 18       	leaq	0x18(%rsp), %rsi
ffffffff80008bc2: e8 d9 ed ff ff       	callq	0xffffffff800079a0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192>
ffffffff80008bc7: 48 8b 7c 24 30       	movq	0x30(%rsp), %rdi
ffffffff80008bcc: 48 8b 44 24 38       	movq	0x38(%rsp), %rax
ffffffff80008bd1: 48 8b 54 24 40       	movq	0x40(%rsp), %rdx
ffffffff80008bd6: 48 8b 74 24 48       	movq	0x48(%rsp), %rsi
ffffffff80008bdb: 0f b7 48 62          	movzwl	0x62(%rax), %ecx
ffffffff80008bdf: 48 39 ce             	cmpq	%rcx, %rsi
ffffffff80008be2: 72 1c                	jb	0xffffffff80008c00 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0x110>
ffffffff80008be4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
ffffffff80008bf0: 0f b7 70 60          	movzwl	0x60(%rax), %esi
ffffffff80008bf4: 48 8b 00             	movq	(%rax), %rax
ffffffff80008bf7: 48 ff c2             	incq	%rdx
ffffffff80008bfa: 66 3b 70 62          	cmpw	0x62(%rax), %si
ffffffff80008bfe: 73 f0                	jae	0xffffffff80008bf0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0x100>
ffffffff80008c00: 48 8b 4c f0 08       	movq	0x8(%rax,%rsi,8), %rcx
ffffffff80008c05: 48 89 7c f0 08       	movq	%rdi, 0x8(%rax,%rsi,8)
ffffffff80008c0a: 48 85 d2             	testq	%rdx, %rdx
ffffffff80008c0d: 0f 84 9b 00 00 00    	je	0xffffffff80008cae <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0x1be>
ffffffff80008c13: 48 8b 44 f0 70       	movq	0x70(%rax,%rsi,8), %rax
ffffffff80008c18: 48 89 d7             	movq	%rdx, %rdi
ffffffff80008c1b: 48 ff cf             	decq	%rdi
ffffffff80008c1e: 0f 84 8f 00 00 00    	je	0xffffffff80008cb3 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0x1c3>
ffffffff80008c24: 48 83 c2 fe          	addq	$-0x2, %rdx
ffffffff80008c28: 48 89 fe             	movq	%rdi, %rsi
ffffffff80008c2b: 48 83 e6 07          	andq	$0x7, %rsi
ffffffff80008c2f: 74 1e                	je	0xffffffff80008c4f <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0x15f>
ffffffff80008c31: 45 31 c0             	xorl	%r8d, %r8d
ffffffff80008c34: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
ffffffff80008c40: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff80008c44: 49 ff c0             	incq	%r8
ffffffff80008c47: 4c 39 c6             	cmpq	%r8, %rsi
ffffffff80008c4a: 75 f4                	jne	0xffffffff80008c40 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0x150>
ffffffff80008c4c: 4c 29 c7             	subq	%r8, %rdi
ffffffff80008c4f: 31 f6                	xorl	%esi, %esi
ffffffff80008c51: 48 83 fa 07          	cmpq	$0x7, %rdx
ffffffff80008c55: 72 5e                	jb	0xffffffff80008cb5 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0x1c5>
ffffffff80008c57: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
ffffffff80008c60: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff80008c64: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff80008c68: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff80008c6c: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff80008c70: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff80008c74: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff80008c78: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff80008c7c: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff80008c80: 48 83 c7 f8          	addq	$-0x8, %rdi
ffffffff80008c84: 75 da                	jne	0xffffffff80008c60 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0x170>
ffffffff80008c86: eb 2d                	jmp	0xffffffff80008cb5 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0x1c5>
ffffffff80008c88: 48 89 04 24          	movq	%rax, (%rsp)
ffffffff80008c8c: 48 c7 44 24 08 00 00 00 00   	movq	$0x0, 0x8(%rsp)
ffffffff80008c95: 48 89 4c 24 10       	movq	%rcx, 0x10(%rsp)
ffffffff80008c9a: 48 89 e6             	movq	%rsp, %rsi
ffffffff80008c9d: 48 89 df             	movq	%rbx, %rdi
ffffffff80008ca0: e8 fb ec ff ff       	callq	0xffffffff800079a0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>>::remove_leaf_kv::hd2e4aaa42ac76192>
ffffffff80008ca5: 48 89 d8             	movq	%rbx, %rax
ffffffff80008ca8: 48 83 c4 50          	addq	$0x50, %rsp
ffffffff80008cac: 5b                   	popq	%rbx
ffffffff80008cad: c3                   	retq
ffffffff80008cae: 48 ff c6             	incq	%rsi
ffffffff80008cb1: eb 02                	jmp	0xffffffff80008cb5 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c+0x1c5>
ffffffff80008cb3: 31 f6                	xorl	%esi, %esi
ffffffff80008cb5: 48 89 0b             	movq	%rcx, (%rbx)
ffffffff80008cb8: 48 89 43 08          	movq	%rax, 0x8(%rbx)
ffffffff80008cbc: 48 c7 43 10 00 00 00 00      	movq	$0x0, 0x10(%rbx)
ffffffff80008cc4: 48 89 73 18          	movq	%rsi, 0x18(%rbx)
ffffffff80008cc8: 48 89 d8             	movq	%rbx, %rax
ffffffff80008ccb: 48 83 c4 50          	addq	$0x50, %rsp
ffffffff80008ccf: 5b                   	popq	%rbx
ffffffff80008cd0: c3                   	retq
ffffffff80008cd1: cc                   	int3
ffffffff80008cd2: cc                   	int3
ffffffff80008cd3: cc                   	int3
ffffffff80008cd4: cc                   	int3
ffffffff80008cd5: cc                   	int3
ffffffff80008cd6: cc                   	int3
ffffffff80008cd7: cc                   	int3
ffffffff80008cd8: cc                   	int3
ffffffff80008cd9: cc                   	int3
ffffffff80008cda: cc                   	int3
ffffffff80008cdb: cc                   	int3
ffffffff80008cdc: cc                   	int3
ffffffff80008cdd: cc                   	int3
ffffffff80008cde: cc                   	int3
ffffffff80008cdf: cc                   	int3

ffffffff80008ce0 <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb>:
ffffffff80008ce0: 55                   	pushq	%rbp
ffffffff80008ce1: 41 57                	pushq	%r15
ffffffff80008ce3: 41 56                	pushq	%r14
ffffffff80008ce5: 41 55                	pushq	%r13
ffffffff80008ce7: 41 54                	pushq	%r12
ffffffff80008ce9: 53                   	pushq	%rbx
ffffffff80008cea: 50                   	pushq	%rax
ffffffff80008ceb: 48 89 f3             	movq	%rsi, %rbx
ffffffff80008cee: 48 8b 36             	movq	(%rsi), %rsi
ffffffff80008cf1: 4c 8b 7b 08          	movq	0x8(%rbx), %r15
ffffffff80008cf5: 4c 8b 63 10          	movq	0x10(%rbx), %r12
ffffffff80008cf9: 0f b7 46 62          	movzwl	0x62(%rsi), %eax
ffffffff80008cfd: 49 39 c4             	cmpq	%rax, %r12
ffffffff80008d00: 73 4e                	jae	0xffffffff80008d50 <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0x70>
ffffffff80008d02: 49 89 f5             	movq	%rsi, %r13
ffffffff80008d05: 4d 85 ff             	testq	%r15, %r15
ffffffff80008d08: 0f 84 ce 00 00 00    	je	0xffffffff80008ddc <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0xfc>
ffffffff80008d0e: 4b 8b 44 e5 70       	movq	0x70(%r13,%r12,8), %rax
ffffffff80008d13: 4c 89 f9             	movq	%r15, %rcx
ffffffff80008d16: 48 ff c9             	decq	%rcx
ffffffff80008d19: 74 2e                	je	0xffffffff80008d49 <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0x69>
ffffffff80008d1b: 49 8d 57 fe          	leaq	-0x2(%r15), %rdx
ffffffff80008d1f: 48 89 ce             	movq	%rcx, %rsi
ffffffff80008d22: 48 83 e6 07          	andq	$0x7, %rsi
ffffffff80008d26: 74 17                	je	0xffffffff80008d3f <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0x5f>
ffffffff80008d28: 45 31 c0             	xorl	%r8d, %r8d
ffffffff80008d2b: 0f 1f 44 00 00       	nopl	(%rax,%rax)
ffffffff80008d30: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff80008d34: 49 ff c0             	incq	%r8
ffffffff80008d37: 4c 39 c6             	cmpq	%r8, %rsi
ffffffff80008d3a: 75 f4                	jne	0xffffffff80008d30 <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0x50>
ffffffff80008d3c: 4c 29 c1             	subq	%r8, %rcx
ffffffff80008d3f: 48 83 fa 07          	cmpq	$0x7, %rdx
ffffffff80008d43: 0f 83 9d 00 00 00    	jae	0xffffffff80008de6 <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0x106>
ffffffff80008d49: 31 d2                	xorl	%edx, %edx
ffffffff80008d4b: e9 c6 00 00 00       	jmp	0xffffffff80008e16 <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0x136>
ffffffff80008d50: 48 89 3c 24          	movq	%rdi, (%rsp)
ffffffff80008d54: bd 68 00 00 00       	movl	$0x68, %ebp
ffffffff80008d59: 41 b6 01             	movb	$0x1, %r14b
ffffffff80008d5c: eb 27                	jmp	0xffffffff80008d85 <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0xa5>
ffffffff80008d5e: 66 90                	nop
ffffffff80008d60: 49 ff c7             	incq	%r15
ffffffff80008d63: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff80008d68: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff80008d6f: e8 2c a3 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff80008d74: c6 05 d5 c2 01 00 00 	movb	$0x0, 0x1c2d5(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80008d7b: 4c 89 ee             	movq	%r13, %rsi
ffffffff80008d7e: 66 45 3b 65 62       	cmpw	0x62(%r13), %r12w
ffffffff80008d83: 72 4a                	jb	0xffffffff80008dcf <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0xef>
ffffffff80008d85: 4c 8b 2e             	movq	(%rsi), %r13
ffffffff80008d88: 4d 85 ed             	testq	%r13, %r13
ffffffff80008d8b: 0f 84 b1 00 00 00    	je	0xffffffff80008e42 <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0x162>
ffffffff80008d91: 4d 85 ff             	testq	%r15, %r15
ffffffff80008d94: b9 c8 00 00 00       	movl	$0xc8, %ecx
ffffffff80008d99: 48 0f 44 cd          	cmoveq	%rbp, %rcx
ffffffff80008d9d: 44 0f b7 66 60       	movzwl	0x60(%rsi), %r12d
ffffffff80008da2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
ffffffff80008db0: 31 c0                	xorl	%eax, %eax
ffffffff80008db2: f0                   	lock
ffffffff80008db3: 44 0f b0 35 95 c2 01 00      	cmpxchgb	%r14b, 0x1c295(%rip) # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80008dbb: 75 05                	jne	0xffffffff80008dc2 <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0xe2>
ffffffff80008dbd: eb a1                	jmp	0xffffffff80008d60 <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0x80>
ffffffff80008dbf: 90                   	nop
ffffffff80008dc0: f3 90                	pause
ffffffff80008dc2: 0f b6 05 87 c2 01 00 	movzbl	0x1c287(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80008dc9: 84 c0                	testb	%al, %al
ffffffff80008dcb: 75 f3                	jne	0xffffffff80008dc0 <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0xe0>
ffffffff80008dcd: eb e1                	jmp	0xffffffff80008db0 <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0xd0>
ffffffff80008dcf: 48 8b 3c 24          	movq	(%rsp), %rdi
ffffffff80008dd3: 4d 85 ff             	testq	%r15, %r15
ffffffff80008dd6: 0f 85 32 ff ff ff    	jne	0xffffffff80008d0e <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0x2e>
ffffffff80008ddc: 49 8d 54 24 01       	leaq	0x1(%r12), %rdx
ffffffff80008de1: 4c 89 e8             	movq	%r13, %rax
ffffffff80008de4: eb 30                	jmp	0xffffffff80008e16 <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0x136>
ffffffff80008de6: 31 d2                	xorl	%edx, %edx
ffffffff80008de8: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
ffffffff80008df0: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff80008df4: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff80008df8: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff80008dfc: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff80008e00: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff80008e04: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff80008e08: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff80008e0c: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff80008e10: 48 83 c1 f8          	addq	$-0x8, %rcx
ffffffff80008e14: 75 da                	jne	0xffffffff80008df0 <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb+0x110>
ffffffff80008e16: 4c 89 2f             	movq	%r13, (%rdi)
ffffffff80008e19: 4c 89 7f 08          	movq	%r15, 0x8(%rdi)
ffffffff80008e1d: 4c 89 67 10          	movq	%r12, 0x10(%rdi)
ffffffff80008e21: 48 89 03             	movq	%rax, (%rbx)
ffffffff80008e24: 48 c7 43 08 00 00 00 00      	movq	$0x0, 0x8(%rbx)
ffffffff80008e2c: 48 89 53 10          	movq	%rdx, 0x10(%rbx)
ffffffff80008e30: 48 89 f8             	movq	%rdi, %rax
ffffffff80008e33: 48 83 c4 08          	addq	$0x8, %rsp
ffffffff80008e37: 5b                   	popq	%rbx
ffffffff80008e38: 41 5c                	popq	%r12
ffffffff80008e3a: 41 5d                	popq	%r13
ffffffff80008e3c: 41 5e                	popq	%r14
ffffffff80008e3e: 41 5f                	popq	%r15
ffffffff80008e40: 5d                   	popq	%rbp
ffffffff80008e41: c3                   	retq
ffffffff80008e42: 4d 85 ff             	testq	%r15, %r15
ffffffff80008e45: b9 68 00 00 00       	movl	$0x68, %ecx
ffffffff80008e4a: b8 c8 00 00 00       	movl	$0xc8, %eax
ffffffff80008e4f: 48 0f 44 c1          	cmoveq	%rcx, %rax
ffffffff80008e53: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff80008e58: 48 89 f7             	movq	%rsi, %rdi
ffffffff80008e5b: 48 89 c6             	movq	%rax, %rsi
ffffffff80008e5e: e8 dd 5e 00 00       	callq	0xffffffff8000ed40 <__rust_dealloc>
ffffffff80008e63: 48 c7 c7 d8 e3 01 80 	movq	$-0x7ffe1c28, %rdi      # imm = 0x8001E3D8
ffffffff80008e6a: e8 01 3b 01 00       	callq	0xffffffff8001c970 <core::option::unwrap_failed::hd8ef34c781aa10a4>
ffffffff80008e6f: cc                   	int3

ffffffff80008e70 <futures_task::waker::clone_arc_raw::h6f5ab7116fa5da43>:
ffffffff80008e70: f0                   	lock
ffffffff80008e71: 48 ff 47 f0          	incq	-0x10(%rdi)
ffffffff80008e75: 7e 0b                	jle	0xffffffff80008e82 <futures_task::waker::clone_arc_raw::h6f5ab7116fa5da43+0x12>
ffffffff80008e77: 48 c7 c0 10 e4 01 80 	movq	$-0x7ffe1bf0, %rax      # imm = 0x8001E410
ffffffff80008e7e: 48 89 fa             	movq	%rdi, %rdx
ffffffff80008e81: c3                   	retq
ffffffff80008e82: 0f 0b                	ud2
ffffffff80008e84: cc                   	int3
ffffffff80008e85: cc                   	int3
ffffffff80008e86: cc                   	int3
ffffffff80008e87: cc                   	int3
ffffffff80008e88: cc                   	int3
ffffffff80008e89: cc                   	int3
ffffffff80008e8a: cc                   	int3
ffffffff80008e8b: cc                   	int3
ffffffff80008e8c: cc                   	int3
ffffffff80008e8d: cc                   	int3
ffffffff80008e8e: cc                   	int3
ffffffff80008e8f: cc                   	int3

ffffffff80008e90 <core::ptr::drop_in_place<taos::processes::process::run_process_ring3::{{closure}}>::h1859694b0e52ed43>:
ffffffff80008e90: c3                   	retq
ffffffff80008e91: cc                   	int3
ffffffff80008e92: cc                   	int3
ffffffff80008e93: cc                   	int3
ffffffff80008e94: cc                   	int3
ffffffff80008e95: cc                   	int3
ffffffff80008e96: cc                   	int3
ffffffff80008e97: cc                   	int3
ffffffff80008e98: cc                   	int3
ffffffff80008e99: cc                   	int3
ffffffff80008e9a: cc                   	int3
ffffffff80008e9b: cc                   	int3
ffffffff80008e9c: cc                   	int3
ffffffff80008e9d: cc                   	int3
ffffffff80008e9e: cc                   	int3
ffffffff80008e9f: cc                   	int3

ffffffff80008ea0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580>:
ffffffff80008ea0: 55                   	pushq	%rbp
ffffffff80008ea1: 41 57                	pushq	%r15
ffffffff80008ea3: 41 56                	pushq	%r14
ffffffff80008ea5: 41 55                	pushq	%r13
ffffffff80008ea7: 41 54                	pushq	%r12
ffffffff80008ea9: 53                   	pushq	%rbx
ffffffff80008eaa: 48 81 ec e8 00 00 00 	subq	$0xe8, %rsp
ffffffff80008eb1: 49 bf fc ff ff ff ff ff ff 7f	movabsq	$0x7ffffffffffffffc, %r15 # imm = 0x7FFFFFFFFFFFFFFC
ffffffff80008ebb: 4c 8d a7 a8 00 00 00 	leaq	0xa8(%rdi), %r12
ffffffff80008ec2: b8 04 00 00 00       	movl	$0x4, %eax
ffffffff80008ec7: f0                   	lock
ffffffff80008ec8: 48 0f c1 87 a8 00 00 00      	xaddq	%rax, 0xa8(%rdi)
ffffffff80008ed0: 4c 39 f8             	cmpq	%r15, %rax
ffffffff80008ed3: 0f 87 e8 0b 00 00    	ja	0xffffffff80009ac1 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xc21>
ffffffff80008ed9: 48 89 fd             	movq	%rdi, %rbp
ffffffff80008edc: 4c 8d b7 b0 00 00 00 	leaq	0xb0(%rdi), %r14
ffffffff80008ee3: 4c 8d 6f 08          	leaq	0x8(%rdi), %r13
ffffffff80008ee7: 48 8d 8f d0 00 00 00 	leaq	0xd0(%rdi), %rcx
ffffffff80008eee: 48 89 4c 24 30       	movq	%rcx, 0x30(%rsp)
ffffffff80008ef3: 48 81 c7 c8 00 00 00 	addq	$0xc8, %rdi
ffffffff80008efa: 41 ba 01 00 00 00    	movl	$0x1, %r10d
ffffffff80008f00: 4c 89 6c 24 28       	movq	%r13, 0x28(%rsp)
ffffffff80008f05: 4c 89 74 24 50       	movq	%r14, 0x50(%rsp)
ffffffff80008f0a: 48 89 7c 24 08       	movq	%rdi, 0x8(%rsp)
ffffffff80008f0f: eb 2b                	jmp	0xffffffff80008f3c <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x9c>
ffffffff80008f11: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
ffffffff80008f20: f0                   	lock
ffffffff80008f21: 49 83 2c 24 04       	subq	$0x4, (%r12)
ffffffff80008f26: f3 90                	pause
ffffffff80008f28: b8 04 00 00 00       	movl	$0x4, %eax
ffffffff80008f2d: f0                   	lock
ffffffff80008f2e: 49 0f c1 04 24       	xaddq	%rax, (%r12)
ffffffff80008f33: 4c 39 f8             	cmpq	%r15, %rax
ffffffff80008f36: 0f 87 85 0b 00 00    	ja	0xffffffff80009ac1 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xc21>
ffffffff80008f3c: a8 03                	testb	$0x3, %al
ffffffff80008f3e: 75 e0                	jne	0xffffffff80008f20 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x80>
ffffffff80008f40: 48 8b 85 c0 00 00 00 	movq	0xc0(%rbp), %rax
ffffffff80008f47: f0                   	lock
ffffffff80008f48: 48 83 ad a8 00 00 00 04      	subq	$0x4, 0xa8(%rbp)
ffffffff80008f50: 48 85 c0             	testq	%rax, %rax
ffffffff80008f53: 0f 84 5b 01 00 00    	je	0xffffffff800090b4 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x214>
ffffffff80008f59: 48 8b 4d 00          	movq	(%rbp), %rcx
ffffffff80008f5d: 31 c0                	xorl	%eax, %eax
ffffffff80008f5f: f0                   	lock
ffffffff80008f60: 4c 0f b1 51 10       	cmpxchgq	%r10, 0x10(%rcx)
ffffffff80008f65: 74 15                	je	0xffffffff80008f7c <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xdc>
ffffffff80008f67: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
ffffffff80008f70: f3 90                	pause
ffffffff80008f72: 31 c0                	xorl	%eax, %eax
ffffffff80008f74: f0                   	lock
ffffffff80008f75: 4c 0f b1 51 10       	cmpxchgq	%r10, 0x10(%rcx)
ffffffff80008f7a: 75 f4                	jne	0xffffffff80008f70 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xd0>
ffffffff80008f7c: 48 8b 41 30          	movq	0x30(%rcx), %rax
ffffffff80008f80: 48 85 c0             	testq	%rax, %rax
ffffffff80008f83: 0f 84 8c 02 00 00    	je	0xffffffff80009215 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x375>
ffffffff80008f89: 48 8b 51 28          	movq	0x28(%rcx), %rdx
ffffffff80008f8d: 48 8d 72 01          	leaq	0x1(%rdx), %rsi
ffffffff80008f91: 48 8b 79 18          	movq	0x18(%rcx), %rdi
ffffffff80008f95: 4c 8b 41 20          	movq	0x20(%rcx), %r8
ffffffff80008f99: 48 39 fe             	cmpq	%rdi, %rsi
ffffffff80008f9c: be 00 00 00 00       	movl	$0x0, %esi
ffffffff80008fa1: 48 0f 43 f7          	cmovaeq	%rdi, %rsi
ffffffff80008fa5: 48 f7 de             	negq	%rsi
ffffffff80008fa8: 48 01 d6             	addq	%rdx, %rsi
ffffffff80008fab: 48 ff c6             	incq	%rsi
ffffffff80008fae: 48 89 71 28          	movq	%rsi, 0x28(%rcx)
ffffffff80008fb2: 48 ff c8             	decq	%rax
ffffffff80008fb5: 48 89 41 30          	movq	%rax, 0x30(%rcx)
ffffffff80008fb9: 49 8b 1c d0          	movq	(%r8,%rdx,8), %rbx
ffffffff80008fbd: f0                   	lock
ffffffff80008fbe: 48 83 61 10 fc       	andq	$-0x4, 0x10(%rcx)
ffffffff80008fc3: 48 8b 7c 24 08       	movq	0x8(%rsp), %rdi
ffffffff80008fc8: 48 8b 07             	movq	(%rdi), %rax
ffffffff80008fcb: 48 85 c0             	testq	%rax, %rax
ffffffff80008fce: 74 16                	je	0xffffffff80008fe6 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x146>
ffffffff80008fd0: f0                   	lock
ffffffff80008fd1: 48 ff 08             	decq	(%rax)
ffffffff80008fd4: 75 10                	jne	0xffffffff80008fe6 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x146>
ffffffff80008fd6: e8 25 2e 00 00       	callq	0xffffffff8000be00 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4>
ffffffff80008fdb: 41 ba 01 00 00 00    	movl	$0x1, %r10d
ffffffff80008fe1: 48 8b 7c 24 08       	movq	0x8(%rsp), %rdi
ffffffff80008fe6: 48 89 1f             	movq	%rbx, (%rdi)
ffffffff80008fe9: 48 85 db             	testq	%rbx, %rbx
ffffffff80008fec: 0f 84 65 0b 00 00    	je	0xffffffff80009b57 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xcb7>
ffffffff80008ff2: 48 8b 43 18          	movq	0x18(%rbx), %rax
ffffffff80008ff6: b9 04 00 00 00       	movl	$0x4, %ecx
ffffffff80008ffb: f0                   	lock
ffffffff80008ffc: 49 0f c1 0c 24       	xaddq	%rcx, (%r12)
ffffffff80009001: 4c 39 f9             	cmpq	%r15, %rcx
ffffffff80009004: 41 bb ff 00 00 00    	movl	$0xff, %r11d
ffffffff8000900a: 0f 87 b1 0a 00 00    	ja	0xffffffff80009ac1 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xc21>
ffffffff80009010: f6 c1 03             	testb	$0x3, %cl
ffffffff80009013: 74 1d                	je	0xffffffff80009032 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x192>
ffffffff80009015: f0                   	lock
ffffffff80009016: 49 83 2c 24 04       	subq	$0x4, (%r12)
ffffffff8000901b: f3 90                	pause
ffffffff8000901d: b9 04 00 00 00       	movl	$0x4, %ecx
ffffffff80009022: f0                   	lock
ffffffff80009023: 49 0f c1 0c 24       	xaddq	%rcx, (%r12)
ffffffff80009028: 4c 39 f9             	cmpq	%r15, %rcx
ffffffff8000902b: 76 e3                	jbe	0xffffffff80009010 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x170>
ffffffff8000902d: e9 8f 0a 00 00       	jmp	0xffffffff80009ac1 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xc21>
ffffffff80009032: 49 8b 0e             	movq	(%r14), %rcx
ffffffff80009035: 48 85 c9             	testq	%rcx, %rcx
ffffffff80009038: 0f 84 e4 05 00 00    	je	0xffffffff80009622 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x782>
ffffffff8000903e: 48 8b 95 b8 00 00 00 	movq	0xb8(%rbp), %rdx
ffffffff80009045: 0f b7 79 62          	movzwl	0x62(%rcx), %edi
ffffffff80009049: 41 89 f8             	movl	%edi, %r8d
ffffffff8000904c: 41 c1 e0 03          	shll	$0x3, %r8d
ffffffff80009050: 48 c7 c6 ff ff ff ff 	movq	$-0x1, %rsi
ffffffff80009057: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
ffffffff80009060: 4d 85 c0             	testq	%r8, %r8
ffffffff80009063: 74 3b                	je	0xffffffff800090a0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x200>
ffffffff80009065: 45 31 c9             	xorl	%r9d, %r9d
ffffffff80009068: 48 39 44 f1 10       	cmpq	%rax, 0x10(%rcx,%rsi,8)
ffffffff8000906d: 41 0f 95 c1          	setne	%r9b
ffffffff80009071: 45 0f 47 cb          	cmoval	%r11d, %r9d
ffffffff80009075: 48 ff c6             	incq	%rsi
ffffffff80009078: 49 83 c0 f8          	addq	$-0x8, %r8
ffffffff8000907c: 41 80 f9 01          	cmpb	$0x1, %r9b
ffffffff80009080: 74 de                	je	0xffffffff80009060 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x1c0>
ffffffff80009082: 41 0f b6 f9          	movzbl	%r9b, %edi
ffffffff80009086: 85 ff                	testl	%edi, %edi
ffffffff80009088: 74 31                	je	0xffffffff800090bb <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x21b>
ffffffff8000908a: 48 83 ea 01          	subq	$0x1, %rdx
ffffffff8000908e: 73 1d                	jae	0xffffffff800090ad <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x20d>
ffffffff80009090: e9 8d 05 00 00       	jmp	0xffffffff80009622 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x782>
ffffffff80009095: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff800090a0: 48 89 fe             	movq	%rdi, %rsi
ffffffff800090a3: 48 83 ea 01          	subq	$0x1, %rdx
ffffffff800090a7: 0f 82 75 05 00 00    	jb	0xffffffff80009622 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x782>
ffffffff800090ad: 48 8b 4c f1 68       	movq	0x68(%rcx,%rsi,8), %rcx
ffffffff800090b2: eb 91                	jmp	0xffffffff80009045 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x1a5>
ffffffff800090b4: fb                   	sti
ffffffff800090b5: f4                   	hlt
ffffffff800090b6: e9 6d fe ff ff       	jmp	0xffffffff80008f28 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x88>
ffffffff800090bb: f0                   	lock
ffffffff800090bc: 49 83 2c 24 04       	subq	$0x4, (%r12)
ffffffff800090c1: 48 8b 44 24 30       	movq	0x30(%rsp), %rax
ffffffff800090c6: 48 ff 00             	incq	(%rax)
ffffffff800090c9: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff800090ce: 48 8b 18             	movq	(%rax), %rbx
ffffffff800090d1: 48 8d 43 10          	leaq	0x10(%rbx), %rax
ffffffff800090d5: 48 c7 44 24 40 10 e4 01 80   	movq	$-0x7ffe1bf0, 0x40(%rsp) # imm = 0x8001E410
ffffffff800090de: 48 89 44 24 48       	movq	%rax, 0x48(%rsp)
ffffffff800090e3: 48 8d 44 24 40       	leaq	0x40(%rsp), %rax
ffffffff800090e8: 48 89 84 24 88 00 00 00      	movq	%rax, 0x88(%rsp)
ffffffff800090f0: 48 89 84 24 90 00 00 00      	movq	%rax, 0x90(%rsp)
ffffffff800090f8: 48 c7 84 24 98 00 00 00 00 00 00 00  	movq	$0x0, 0x98(%rsp)
ffffffff80009104: 31 c0                	xorl	%eax, %eax
ffffffff80009106: b1 01                	movb	$0x1, %cl
ffffffff80009108: eb 08                	jmp	0xffffffff80009112 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x272>
ffffffff8000910a: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff80009110: 31 c0                	xorl	%eax, %eax
ffffffff80009112: f0                   	lock
ffffffff80009113: 0f b0 4b 20          	cmpxchgb	%cl, 0x20(%rbx)
ffffffff80009117: 74 1b                	je	0xffffffff80009134 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x294>
ffffffff80009119: 0f 1f 80 00 00 00 00 	nopl	(%rax)
ffffffff80009120: 0f b6 43 20          	movzbl	0x20(%rbx), %eax
ffffffff80009124: 84 c0                	testb	%al, %al
ffffffff80009126: 74 e8                	je	0xffffffff80009110 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x270>
ffffffff80009128: f3 90                	pause
ffffffff8000912a: 0f b6 43 20          	movzbl	0x20(%rbx), %eax
ffffffff8000912e: 84 c0                	testb	%al, %al
ffffffff80009130: 75 f6                	jne	0xffffffff80009128 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x288>
ffffffff80009132: eb dc                	jmp	0xffffffff80009110 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x270>
ffffffff80009134: 48 8b 7b 28          	movq	0x28(%rbx), %rdi
ffffffff80009138: 48 8b 43 30          	movq	0x30(%rbx), %rax
ffffffff8000913c: 48 8d b4 24 88 00 00 00      	leaq	0x88(%rsp), %rsi
ffffffff80009144: ff 50 18             	callq	*0x18(%rax)
ffffffff80009147: c6 43 20 00          	movb	$0x0, 0x20(%rbx)
ffffffff8000914b: 84 c0                	testb	%al, %al
ffffffff8000914d: 0f 84 eb 04 00 00    	je	0xffffffff8000963e <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x79e>
ffffffff80009153: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff80009158: 48 8b 00             	movq	(%rax), %rax
ffffffff8000915b: 48 8b 78 38          	movq	0x38(%rax), %rdi
ffffffff8000915f: 48 83 ff 03          	cmpq	$0x3, %rdi
ffffffff80009163: 41 ba 01 00 00 00    	movl	$0x1, %r10d
ffffffff80009169: 0f 87 18 0a 00 00    	ja	0xffffffff80009b87 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xce7>
ffffffff8000916f: f0                   	lock
ffffffff80009170: 48 ff 00             	incq	(%rax)
ffffffff80009173: 0f 8e a7 09 00 00    	jle	0xffffffff80009b20 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xc80>
ffffffff80009179: 48 8d 0c bf          	leaq	(%rdi,%rdi,4), %rcx
ffffffff8000917d: 48 8d 1c cd 00 00 00 00      	leaq	(,%rcx,8), %rbx
ffffffff80009185: 4c 01 eb             	addq	%r13, %rbx
ffffffff80009188: 4c 89 ea             	movq	%r13, %rdx
ffffffff8000918b: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff80009190: 4c 8b 28             	movq	(%rax), %r13
ffffffff80009193: 31 c0                	xorl	%eax, %eax
ffffffff80009195: f0                   	lock
ffffffff80009196: 4c 0f b1 14 ca       	cmpxchgq	%r10, (%rdx,%rcx,8)
ffffffff8000919b: 74 0e                	je	0xffffffff800091ab <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x30b>
ffffffff8000919d: 0f 1f 00             	nopl	(%rax)
ffffffff800091a0: f3 90                	pause
ffffffff800091a2: 31 c0                	xorl	%eax, %eax
ffffffff800091a4: f0                   	lock
ffffffff800091a5: 4c 0f b1 13          	cmpxchgq	%r10, (%rbx)
ffffffff800091a9: 75 f5                	jne	0xffffffff800091a0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x300>
ffffffff800091ab: 48 8b 4b 08          	movq	0x8(%rbx), %rcx
ffffffff800091af: 48 8b 43 20          	movq	0x20(%rbx), %rax
ffffffff800091b3: 48 39 c8             	cmpq	%rcx, %rax
ffffffff800091b6: 75 1e                	jne	0xffffffff800091d6 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x336>
ffffffff800091b8: 48 8d 7b 08          	leaq	0x8(%rbx), %rdi
ffffffff800091bc: 48 c7 c6 18 e5 01 80 	movq	$-0x7ffe1ae8, %rsi      # imm = 0x8001E518
ffffffff800091c3: e8 a8 2b 00 00       	callq	0xffffffff8000bd70 <alloc::collections::vec_deque::VecDeque<T,A>::grow::h0ee91ef6b8134622>
ffffffff800091c8: 41 ba 01 00 00 00    	movl	$0x1, %r10d
ffffffff800091ce: 48 8b 4b 08          	movq	0x8(%rbx), %rcx
ffffffff800091d2: 48 8b 43 20          	movq	0x20(%rbx), %rax
ffffffff800091d6: 48 03 43 18          	addq	0x18(%rbx), %rax
ffffffff800091da: 48 39 c8             	cmpq	%rcx, %rax
ffffffff800091dd: ba 00 00 00 00       	movl	$0x0, %edx
ffffffff800091e2: 48 0f 43 d1          	cmovaeq	%rcx, %rdx
ffffffff800091e6: 48 29 d0             	subq	%rdx, %rax
ffffffff800091e9: 48 8b 4b 10          	movq	0x10(%rbx), %rcx
ffffffff800091ed: 4c 89 2c c1          	movq	%r13, (%rcx,%rax,8)
ffffffff800091f1: 48 ff 43 20          	incq	0x20(%rbx)
ffffffff800091f5: 4c 8b 6c 24 28       	movq	0x28(%rsp), %r13
ffffffff800091fa: 48 8b 7c 24 08       	movq	0x8(%rsp), %rdi
ffffffff800091ff: f0                   	lock
ffffffff80009200: 48 83 23 fc          	andq	$-0x4, (%rbx)
ffffffff80009204: 48 8b 07             	movq	(%rdi), %rax
ffffffff80009207: 48 85 c0             	testq	%rax, %rax
ffffffff8000920a: 0f 85 8f 06 00 00    	jne	0xffffffff8000989f <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x9ff>
ffffffff80009210: e9 a0 06 00 00       	jmp	0xffffffff800098b5 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xa15>
ffffffff80009215: f0                   	lock
ffffffff80009216: 48 83 61 10 fc       	andq	$-0x4, 0x10(%rcx)
ffffffff8000921b: 48 c7 44 24 38 00 00 00 00   	movq	$0x0, 0x38(%rsp)
ffffffff80009224: 48 c7 44 24 10 00 00 00 00   	movq	$0x0, 0x10(%rsp)
ffffffff8000922d: bb 01 00 00 00       	movl	$0x1, %ebx
ffffffff80009232: eb 1e                	jmp	0xffffffff80009252 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x3b2>
ffffffff80009234: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
ffffffff80009240: f0                   	lock
ffffffff80009241: 48 83 28 04          	subq	$0x4, (%rax)
ffffffff80009245: 48 ff c3             	incq	%rbx
ffffffff80009248: 48 83 fb 04          	cmpq	$0x4, %rbx
ffffffff8000924c: 0f 84 80 03 00 00    	je	0xffffffff800095d2 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x732>
ffffffff80009252: 48 89 5c 24 18       	movq	%rbx, 0x18(%rsp)
ffffffff80009257: 48 8d 14 9b          	leaq	(%rbx,%rbx,4), %rdx
ffffffff8000925b: 48 8d 04 d5 00 00 00 00      	leaq	(,%rdx,8), %rax
ffffffff80009263: 4c 01 e8             	addq	%r13, %rax
ffffffff80009266: b9 04 00 00 00       	movl	$0x4, %ecx
ffffffff8000926b: f0                   	lock
ffffffff8000926c: 49 0f c1 4c d5 00    	xaddq	%rcx, (%r13,%rdx,8)
ffffffff80009272: 4c 39 f9             	cmpq	%r15, %rcx
ffffffff80009275: 0f 87 29 08 00 00    	ja	0xffffffff80009aa4 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xc04>
ffffffff8000927b: 0f 1f 44 00 00       	nopl	(%rax,%rax)
ffffffff80009280: f6 c1 03             	testb	$0x3, %cl
ffffffff80009283: 74 1b                	je	0xffffffff800092a0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x400>
ffffffff80009285: f0                   	lock
ffffffff80009286: 48 83 28 04          	subq	$0x4, (%rax)
ffffffff8000928a: f3 90                	pause
ffffffff8000928c: b9 04 00 00 00       	movl	$0x4, %ecx
ffffffff80009291: f0                   	lock
ffffffff80009292: 48 0f c1 08          	xaddq	%rcx, (%rax)
ffffffff80009296: 4c 39 f9             	cmpq	%r15, %rcx
ffffffff80009299: 76 e5                	jbe	0xffffffff80009280 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x3e0>
ffffffff8000929b: e9 04 08 00 00       	jmp	0xffffffff80009aa4 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xc04>
ffffffff800092a0: 48 83 78 20 00       	cmpq	$0x0, 0x20(%rax)
ffffffff800092a5: 74 99                	je	0xffffffff80009240 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x3a0>
ffffffff800092a7: 48 8b 48 18          	movq	0x18(%rax), %rcx
ffffffff800092ab: 48 8b 50 08          	movq	0x8(%rax), %rdx
ffffffff800092af: 48 8b 70 10          	movq	0x10(%rax), %rsi
ffffffff800092b3: 48 39 d1             	cmpq	%rdx, %rcx
ffffffff800092b6: bf 00 00 00 00       	movl	$0x0, %edi
ffffffff800092bb: 48 0f 43 fa          	cmovaeq	%rdx, %rdi
ffffffff800092bf: 48 29 f9             	subq	%rdi, %rcx
ffffffff800092c2: 48 8b 0c ce          	movq	(%rsi,%rcx,8), %rcx
ffffffff800092c6: 48 8b 49 40          	movq	0x40(%rcx), %rcx
ffffffff800092ca: f0                   	lock
ffffffff800092cb: 48 83 28 04          	subq	$0x4, (%rax)
ffffffff800092cf: 48 83 c1 05          	addq	$0x5, %rcx
ffffffff800092d3: 48 8b 44 24 30       	movq	0x30(%rsp), %rax
ffffffff800092d8: 48 3b 08             	cmpq	(%rax), %rcx
ffffffff800092db: 0f 87 64 ff ff ff    	ja	0xffffffff80009245 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x3a5>
ffffffff800092e1: 48 8b 7c 24 18       	movq	0x18(%rsp), %rdi
ffffffff800092e6: 48 83 ff 03          	cmpq	$0x3, %rdi
ffffffff800092ea: 0f 87 1f 08 00 00    	ja	0xffffffff80009b0f <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xc6f>
ffffffff800092f0: 48 8d 14 bf          	leaq	(%rdi,%rdi,4), %rdx
ffffffff800092f4: 48 8d 0c d5 00 00 00 00      	leaq	(,%rdx,8), %rcx
ffffffff800092fc: 4c 01 e9             	addq	%r13, %rcx
ffffffff800092ff: 31 c0                	xorl	%eax, %eax
ffffffff80009301: f0                   	lock
ffffffff80009302: 4d 0f b1 54 d5 00    	cmpxchgq	%r10, (%r13,%rdx,8)
ffffffff80009308: 74 11                	je	0xffffffff8000931b <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x47b>
ffffffff8000930a: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff80009310: f3 90                	pause
ffffffff80009312: 31 c0                	xorl	%eax, %eax
ffffffff80009314: f0                   	lock
ffffffff80009315: 4c 0f b1 11          	cmpxchgq	%r10, (%rcx)
ffffffff80009319: 75 f5                	jne	0xffffffff80009310 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x470>
ffffffff8000931b: 48 8b 41 20          	movq	0x20(%rcx), %rax
ffffffff8000931f: 48 85 c0             	testq	%rax, %rax
ffffffff80009322: 0f 84 d6 01 00 00    	je	0xffffffff800094fe <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x65e>
ffffffff80009328: 48 8b 51 18          	movq	0x18(%rcx), %rdx
ffffffff8000932c: 48 8d 72 01          	leaq	0x1(%rdx), %rsi
ffffffff80009330: 48 8b 79 08          	movq	0x8(%rcx), %rdi
ffffffff80009334: 4c 8b 41 10          	movq	0x10(%rcx), %r8
ffffffff80009338: 48 39 fe             	cmpq	%rdi, %rsi
ffffffff8000933b: be 00 00 00 00       	movl	$0x0, %esi
ffffffff80009340: 48 0f 43 f7          	cmovaeq	%rdi, %rsi
ffffffff80009344: 48 f7 de             	negq	%rsi
ffffffff80009347: 48 01 d6             	addq	%rdx, %rsi
ffffffff8000934a: 48 ff c6             	incq	%rsi
ffffffff8000934d: 48 89 71 18          	movq	%rsi, 0x18(%rcx)
ffffffff80009351: 48 ff c8             	decq	%rax
ffffffff80009354: 48 89 41 20          	movq	%rax, 0x20(%rcx)
ffffffff80009358: 4d 8b 2c d0          	movq	(%r8,%rdx,8), %r13
ffffffff8000935c: f0                   	lock
ffffffff8000935d: 48 83 21 fc          	andq	$-0x4, (%rcx)
ffffffff80009361: 48 8b 7c 24 18       	movq	0x18(%rsp), %rdi
ffffffff80009366: 48 ff cf             	decq	%rdi
ffffffff80009369: 48 83 ff 03          	cmpq	$0x3, %rdi
ffffffff8000936d: 0f 87 d3 07 00 00    	ja	0xffffffff80009b46 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xca6>
ffffffff80009373: f0                   	lock
ffffffff80009374: 49 ff 45 00          	incq	(%r13)
ffffffff80009378: 0f 8e a2 07 00 00    	jle	0xffffffff80009b20 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xc80>
ffffffff8000937e: 49 89 ee             	movq	%rbp, %r14
ffffffff80009381: 48 8d 0c bf          	leaq	(%rdi,%rdi,4), %rcx
ffffffff80009385: 48 8b 54 24 28       	movq	0x28(%rsp), %rdx
ffffffff8000938a: 48 8d 2c ca          	leaq	(%rdx,%rcx,8), %rbp
ffffffff8000938e: 31 c0                	xorl	%eax, %eax
ffffffff80009390: f0                   	lock
ffffffff80009391: 4c 0f b1 14 ca       	cmpxchgq	%r10, (%rdx,%rcx,8)
ffffffff80009396: 74 14                	je	0xffffffff800093ac <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x50c>
ffffffff80009398: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
ffffffff800093a0: f3 90                	pause
ffffffff800093a2: 31 c0                	xorl	%eax, %eax
ffffffff800093a4: f0                   	lock
ffffffff800093a5: 4c 0f b1 55 00       	cmpxchgq	%r10, (%rbp)
ffffffff800093aa: 75 f4                	jne	0xffffffff800093a0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x500>
ffffffff800093ac: 48 8b 4d 08          	movq	0x8(%rbp), %rcx
ffffffff800093b0: 48 8b 45 20          	movq	0x20(%rbp), %rax
ffffffff800093b4: 48 39 c8             	cmpq	%rcx, %rax
ffffffff800093b7: 75 18                	jne	0xffffffff800093d1 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x531>
ffffffff800093b9: 48 8d 7d 08          	leaq	0x8(%rbp), %rdi
ffffffff800093bd: 48 c7 c6 18 e5 01 80 	movq	$-0x7ffe1ae8, %rsi      # imm = 0x8001E518
ffffffff800093c4: e8 a7 29 00 00       	callq	0xffffffff8000bd70 <alloc::collections::vec_deque::VecDeque<T,A>::grow::h0ee91ef6b8134622>
ffffffff800093c9: 48 8b 4d 08          	movq	0x8(%rbp), %rcx
ffffffff800093cd: 48 8b 45 20          	movq	0x20(%rbp), %rax
ffffffff800093d1: 48 03 45 18          	addq	0x18(%rbp), %rax
ffffffff800093d5: 48 39 c8             	cmpq	%rcx, %rax
ffffffff800093d8: ba 00 00 00 00       	movl	$0x0, %edx
ffffffff800093dd: 48 0f 43 d1          	cmovaeq	%rcx, %rdx
ffffffff800093e1: 48 29 d0             	subq	%rdx, %rax
ffffffff800093e4: 48 8b 4d 10          	movq	0x10(%rbp), %rcx
ffffffff800093e8: 4c 89 2c c1          	movq	%r13, (%rcx,%rax,8)
ffffffff800093ec: 48 ff 45 20          	incq	0x20(%rbp)
ffffffff800093f0: f0                   	lock
ffffffff800093f1: 48 83 65 00 fc       	andq	$-0x4, (%rbp)
ffffffff800093f6: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff800093fb: 48 ff c8             	decq	%rax
ffffffff800093fe: 48 89 c1             	movq	%rax, %rcx
ffffffff80009401: 49 87 4d 38          	xchgq	%rcx, 0x38(%r13)
ffffffff80009405: 48 8b 54 24 30       	movq	0x30(%rsp), %rdx
ffffffff8000940a: 48 8b 0a             	movq	(%rdx), %rcx
ffffffff8000940d: 49 87 4d 40          	xchgq	%rcx, 0x40(%r13)
ffffffff80009411: 49 8d 4d 18          	leaq	0x18(%r13), %rcx
ffffffff80009415: 48 89 84 24 88 00 00 00      	movq	%rax, 0x88(%rsp)
ffffffff8000941d: 48 89 8c 24 a8 00 00 00      	movq	%rcx, 0xa8(%rsp)
ffffffff80009425: 48 c7 84 24 b0 00 00 00 c0 ad 00 80  	movq	$-0x7fff5240, 0xb0(%rsp) # imm = 0x8000ADC0
ffffffff80009431: 48 8d 44 24 18       	leaq	0x18(%rsp), %rax
ffffffff80009436: 48 89 84 24 b8 00 00 00      	movq	%rax, 0xb8(%rsp)
ffffffff8000943e: 48 c7 84 24 c0 00 00 00 c0 b8 01 80  	movq	$-0x7ffe4740, 0xc0(%rsp) # imm = 0x8001B8C0
ffffffff8000944a: 48 8d 84 24 88 00 00 00      	leaq	0x88(%rsp), %rax
ffffffff80009452: 48 89 84 24 c8 00 00 00      	movq	%rax, 0xc8(%rsp)
ffffffff8000945a: 48 c7 84 24 d0 00 00 00 c0 b8 01 80  	movq	$-0x7ffe4740, 0xd0(%rsp) # imm = 0x8001B8C0
ffffffff80009466: 48 89 94 24 d8 00 00 00      	movq	%rdx, 0xd8(%rsp)
ffffffff8000946e: 48 c7 84 24 e0 00 00 00 c0 b8 01 80  	movq	$-0x7ffe4740, 0xe0(%rsp) # imm = 0x8001B8C0
ffffffff8000947a: 48 c7 44 24 58 70 e5 01 80   	movq	$-0x7ffe1a90, 0x58(%rsp) # imm = 0x8001E570
ffffffff80009483: 48 c7 44 24 60 05 00 00 00   	movq	$0x5, 0x60(%rsp)
ffffffff8000948c: 48 c7 44 24 78 00 00 00 00   	movq	$0x0, 0x78(%rsp)
ffffffff80009495: 48 8d 84 24 a8 00 00 00      	leaq	0xa8(%rsp), %rax
ffffffff8000949d: 48 89 44 24 68       	movq	%rax, 0x68(%rsp)
ffffffff800094a2: 48 c7 44 24 70 04 00 00 00   	movq	$0x4, 0x70(%rsp)
ffffffff800094ab: 0f b6 05 c4 cd 01 00 	movzbl	0x1cdc4(%rip), %eax     # 0xffffffff80026276 <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.16693732038470628512+0x4>
ffffffff800094b2: 3c 02                	cmpb	$0x2, %al
ffffffff800094b4: 4c 89 f5             	movq	%r14, %rbp
ffffffff800094b7: 4c 8b 74 24 50       	movq	0x50(%rsp), %r14
ffffffff800094bc: b1 01                	movb	$0x1, %cl
ffffffff800094be: 0f 84 a9 00 00 00    	je	0xffffffff8000956d <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x6cd>
ffffffff800094c4: 31 c0                	xorl	%eax, %eax
ffffffff800094c6: f0                   	lock
ffffffff800094c7: 0f b0 0d a8 cd 01 00 	cmpxchgb	%cl, 0x1cda8(%rip)      # 0xffffffff80026276 <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.16693732038470628512+0x4>
ffffffff800094ce: 74 38                	je	0xffffffff80009508 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x668>
ffffffff800094d0: 0f b6 c0             	movzbl	%al, %eax
ffffffff800094d3: ff 24 c5 f0 e3 01 80 	jmpq	*-0x7ffe1c10(,%rax,8)
ffffffff800094da: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff800094e0: f3 90                	pause
ffffffff800094e2: 0f b6 05 8d cd 01 00 	movzbl	0x1cd8d(%rip), %eax     # 0xffffffff80026276 <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.16693732038470628512+0x4>
ffffffff800094e9: 3c 01                	cmpb	$0x1, %al
ffffffff800094eb: 74 f3                	je	0xffffffff800094e0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x640>
ffffffff800094ed: 0f b6 c0             	movzbl	%al, %eax
ffffffff800094f0: 85 c0                	testl	%eax, %eax
ffffffff800094f2: 74 d0                	je	0xffffffff800094c4 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x624>
ffffffff800094f4: 83 f8 02             	cmpl	$0x2, %eax
ffffffff800094f7: 74 74                	je	0xffffffff8000956d <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x6cd>
ffffffff800094f9: e9 f9 05 00 00       	jmp	0xffffffff80009af7 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xc57>
ffffffff800094fe: f0                   	lock
ffffffff800094ff: 48 83 21 fc          	andq	$-0x4, (%rcx)
ffffffff80009503: e9 3d fd ff ff       	jmp	0xffffffff80009245 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x3a5>
ffffffff80009508: 31 c0                	xorl	%eax, %eax
ffffffff8000950a: 66 ba f9 03          	movw	$0x3f9, %dx             # imm = 0x3F9
ffffffff8000950e: ee                   	outb	%al, %dx
ffffffff8000950f: b0 80                	movb	$-0x80, %al
ffffffff80009511: 66 ba fb 03          	movw	$0x3fb, %dx             # imm = 0x3FB
ffffffff80009515: ee                   	outb	%al, %dx
ffffffff80009516: b0 03                	movb	$0x3, %al
ffffffff80009518: 66 ba f8 03          	movw	$0x3f8, %dx             # imm = 0x3F8
ffffffff8000951c: ee                   	outb	%al, %dx
ffffffff8000951d: 31 c0                	xorl	%eax, %eax
ffffffff8000951f: 66 ba f9 03          	movw	$0x3f9, %dx             # imm = 0x3F9
ffffffff80009523: ee                   	outb	%al, %dx
ffffffff80009524: b0 03                	movb	$0x3, %al
ffffffff80009526: 66 ba fb 03          	movw	$0x3fb, %dx             # imm = 0x3FB
ffffffff8000952a: ee                   	outb	%al, %dx
ffffffff8000952b: b0 c7                	movb	$-0x39, %al
ffffffff8000952d: 66 ba fa 03          	movw	$0x3fa, %dx             # imm = 0x3FA
ffffffff80009531: ee                   	outb	%al, %dx
ffffffff80009532: b0 0b                	movb	$0xb, %al
ffffffff80009534: 66 ba fc 03          	movw	$0x3fc, %dx             # imm = 0x3FC
ffffffff80009538: ee                   	outb	%al, %dx
ffffffff80009539: b0 01                	movb	$0x1, %al
ffffffff8000953b: 66 ba f9 03          	movw	$0x3f9, %dx             # imm = 0x3F9
ffffffff8000953f: ee                   	outb	%al, %dx
ffffffff80009540: c7 05 28 cd 01 00 00 00 f8 03	movl	$0x3f80000, 0x1cd28(%rip) # imm = 0x3F80000
                                                                        # 0xffffffff80026272 <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.16693732038470628512>
ffffffff8000954a: c6 05 25 cd 01 00 02 	movb	$0x2, 0x1cd25(%rip)     # 0xffffffff80026276 <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.16693732038470628512+0x4>
ffffffff80009551: eb 1a                	jmp	0xffffffff8000956d <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x6cd>
ffffffff80009553: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
ffffffff80009560: f3 90                	pause
ffffffff80009562: 0f b6 05 09 cd 01 00 	movzbl	0x1cd09(%rip), %eax     # 0xffffffff80026272 <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.16693732038470628512>
ffffffff80009569: 84 c0                	testb	%al, %al
ffffffff8000956b: 75 f3                	jne	0xffffffff80009560 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x6c0>
ffffffff8000956d: 31 c0                	xorl	%eax, %eax
ffffffff8000956f: f0                   	lock
ffffffff80009570: 0f b0 0d fb cc 01 00 	cmpxchgb	%cl, 0x1ccfb(%rip)      # 0xffffffff80026272 <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.16693732038470628512>
ffffffff80009577: 75 e9                	jne	0xffffffff80009562 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x6c2>
ffffffff80009579: 48 c7 c7 74 62 02 80 	movq	$-0x7ffd9d8c, %rdi      # imm = 0x80026274
ffffffff80009580: 48 c7 c6 50 e8 01 80 	movq	$-0x7ffe17b0, %rsi      # imm = 0x8001E850
ffffffff80009587: 48 8d 54 24 58       	leaq	0x58(%rsp), %rdx
ffffffff8000958c: e8 ef 00 01 00       	callq	0xffffffff80019680 <core::fmt::write::h1a05140646fc4354>
ffffffff80009591: 84 c0                	testb	%al, %al
ffffffff80009593: 0f 85 89 05 00 00    	jne	0xffffffff80009b22 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xc82>
ffffffff80009599: c6 05 d2 cc 01 00 00 	movb	$0x0, 0x1ccd2(%rip)     # 0xffffffff80026272 <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.16693732038470628512>
ffffffff800095a0: 4c 89 6c 24 40       	movq	%r13, 0x40(%rsp)
ffffffff800095a5: f0                   	lock
ffffffff800095a6: 49 ff 4d 00          	decq	(%r13)
ffffffff800095aa: 4c 8b 6c 24 28       	movq	0x28(%rsp), %r13
ffffffff800095af: 41 ba 01 00 00 00    	movl	$0x1, %r10d
ffffffff800095b5: 0f 85 8a fc ff ff    	jne	0xffffffff80009245 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x3a5>
ffffffff800095bb: 48 8d 7c 24 40       	leaq	0x40(%rsp), %rdi
ffffffff800095c0: e8 3b 28 00 00       	callq	0xffffffff8000be00 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4>
ffffffff800095c5: 41 ba 01 00 00 00    	movl	$0x1, %r10d
ffffffff800095cb: e9 75 fc ff ff       	jmp	0xffffffff80009245 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x3a5>
ffffffff800095d0: f3 90                	pause
ffffffff800095d2: 31 c0                	xorl	%eax, %eax
ffffffff800095d4: f0                   	lock
ffffffff800095d5: 4d 0f b1 55 00       	cmpxchgq	%r10, (%r13)
ffffffff800095da: 75 f4                	jne	0xffffffff800095d0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x730>
ffffffff800095dc: 48 8b 45 28          	movq	0x28(%rbp), %rax
ffffffff800095e0: 48 85 c0             	testq	%rax, %rax
ffffffff800095e3: 0f 84 c6 01 00 00    	je	0xffffffff800097af <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x90f>
ffffffff800095e9: 48 8b 4d 20          	movq	0x20(%rbp), %rcx
ffffffff800095ed: 48 8d 51 01          	leaq	0x1(%rcx), %rdx
ffffffff800095f1: 48 8b 75 10          	movq	0x10(%rbp), %rsi
ffffffff800095f5: 48 8b 7d 18          	movq	0x18(%rbp), %rdi
ffffffff800095f9: 48 39 f2             	cmpq	%rsi, %rdx
ffffffff800095fc: ba 00 00 00 00       	movl	$0x0, %edx
ffffffff80009601: 48 0f 43 d6          	cmovaeq	%rsi, %rdx
ffffffff80009605: 48 f7 da             	negq	%rdx
ffffffff80009608: 48 01 ca             	addq	%rcx, %rdx
ffffffff8000960b: 48 ff c2             	incq	%rdx
ffffffff8000960e: 48 89 55 20          	movq	%rdx, 0x20(%rbp)
ffffffff80009612: 48 ff c8             	decq	%rax
ffffffff80009615: 48 89 45 28          	movq	%rax, 0x28(%rbp)
ffffffff80009619: 48 8b 1c cf          	movq	(%rdi,%rcx,8), %rbx
ffffffff8000961d: e9 8f 01 00 00       	jmp	0xffffffff800097b1 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x911>
ffffffff80009622: f0                   	lock
ffffffff80009623: 49 83 2c 24 04       	subq	$0x4, (%r12)
ffffffff80009628: 48 8b 7c 24 08       	movq	0x8(%rsp), %rdi
ffffffff8000962d: 48 8b 07             	movq	(%rdi), %rax
ffffffff80009630: 48 85 c0             	testq	%rax, %rax
ffffffff80009633: 0f 85 66 02 00 00    	jne	0xffffffff8000989f <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x9ff>
ffffffff80009639: e9 77 02 00 00       	jmp	0xffffffff800098b5 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xa15>
ffffffff8000963e: 31 c0                	xorl	%eax, %eax
ffffffff80009640: 41 ba 01 00 00 00    	movl	$0x1, %r10d
ffffffff80009646: f0                   	lock
ffffffff80009647: 4d 0f b1 14 24       	cmpxchgq	%r10, (%r12)
ffffffff8000964c: 48 8b 7c 24 08       	movq	0x8(%rsp), %rdi
ffffffff80009651: 74 19                	je	0xffffffff8000966c <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x7cc>
ffffffff80009653: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
ffffffff80009660: f3 90                	pause
ffffffff80009662: 31 c0                	xorl	%eax, %eax
ffffffff80009664: f0                   	lock
ffffffff80009665: 4d 0f b1 14 24       	cmpxchgq	%r10, (%r12)
ffffffff8000966a: 75 f4                	jne	0xffffffff80009660 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x7c0>
ffffffff8000966c: 49 8b 06             	movq	(%r14), %rax
ffffffff8000966f: 4c 89 e3             	movq	%r12, %rbx
ffffffff80009672: 48 85 c0             	testq	%rax, %rax
ffffffff80009675: 0f 84 17 02 00 00    	je	0xffffffff80009892 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x9f2>
ffffffff8000967b: 48 8b 17             	movq	(%rdi), %rdx
ffffffff8000967e: 48 8b 8d b8 00 00 00 	movq	0xb8(%rbp), %rcx
ffffffff80009685: 48 8b 52 18          	movq	0x18(%rdx), %rdx
ffffffff80009689: 41 bb ff 00 00 00    	movl	$0xff, %r11d
ffffffff8000968f: 0f b7 78 62          	movzwl	0x62(%rax), %edi
ffffffff80009693: 41 89 f8             	movl	%edi, %r8d
ffffffff80009696: 41 c1 e0 03          	shll	$0x3, %r8d
ffffffff8000969a: 48 c7 c6 ff ff ff ff 	movq	$-0x1, %rsi
ffffffff800096a1: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
ffffffff800096b0: 4d 85 c0             	testq	%r8, %r8
ffffffff800096b3: 74 3b                	je	0xffffffff800096f0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x850>
ffffffff800096b5: 45 31 c9             	xorl	%r9d, %r9d
ffffffff800096b8: 48 39 54 f0 10       	cmpq	%rdx, 0x10(%rax,%rsi,8)
ffffffff800096bd: 41 0f 95 c1          	setne	%r9b
ffffffff800096c1: 45 0f 47 cb          	cmoval	%r11d, %r9d
ffffffff800096c5: 48 ff c6             	incq	%rsi
ffffffff800096c8: 49 83 c0 f8          	addq	$-0x8, %r8
ffffffff800096cc: 41 80 f9 01          	cmpb	$0x1, %r9b
ffffffff800096d0: 74 de                	je	0xffffffff800096b0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x810>
ffffffff800096d2: 41 0f b6 f9          	movzbl	%r9b, %edi
ffffffff800096d6: 85 ff                	testl	%edi, %edi
ffffffff800096d8: 74 2a                	je	0xffffffff80009704 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x864>
ffffffff800096da: 48 83 e9 01          	subq	$0x1, %rcx
ffffffff800096de: 73 1d                	jae	0xffffffff800096fd <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x85d>
ffffffff800096e0: e9 66 03 00 00       	jmp	0xffffffff80009a4b <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xbab>
ffffffff800096e5: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff800096f0: 48 89 fe             	movq	%rdi, %rsi
ffffffff800096f3: 48 83 e9 01          	subq	$0x1, %rcx
ffffffff800096f7: 0f 82 4e 03 00 00    	jb	0xffffffff80009a4b <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xbab>
ffffffff800096fd: 48 8b 44 f0 68       	movq	0x68(%rax,%rsi,8), %rax
ffffffff80009702: eb 8b                	jmp	0xffffffff8000968f <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x7ef>
ffffffff80009704: 48 89 44 24 58       	movq	%rax, 0x58(%rsp)
ffffffff80009709: 48 89 4c 24 60       	movq	%rcx, 0x60(%rsp)
ffffffff8000970e: 48 89 74 24 68       	movq	%rsi, 0x68(%rsp)
ffffffff80009713: 4c 89 74 24 70       	movq	%r14, 0x70(%rsp)
ffffffff80009718: c6 44 24 18 00       	movb	$0x0, 0x18(%rsp)
ffffffff8000971d: 48 8d bc 24 a8 00 00 00      	leaq	0xa8(%rsp), %rdi
ffffffff80009725: 48 8d 74 24 58       	leaq	0x58(%rsp), %rsi
ffffffff8000972a: 48 8d 54 24 18       	leaq	0x18(%rsp), %rdx
ffffffff8000972f: e8 bc f3 ff ff       	callq	0xffffffff80008af0 <alloc::collections::btree::remove::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::remove_kv_tracking::hf1b1a7348cf4d47c>
ffffffff80009734: 48 ff 8d c0 00 00 00 	decq	0xc0(%rbp)
ffffffff8000973b: 80 7c 24 18 00       	cmpb	$0x0, 0x18(%rsp)
ffffffff80009740: 0f 84 3e 01 00 00    	je	0xffffffff80009884 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x9e4>
ffffffff80009746: 49 8b 36             	movq	(%r14), %rsi
ffffffff80009749: 48 85 f6             	testq	%rsi, %rsi
ffffffff8000974c: 0f 84 46 04 00 00    	je	0xffffffff80009b98 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xcf8>
ffffffff80009752: 48 8b 85 b8 00 00 00 	movq	0xb8(%rbp), %rax
ffffffff80009759: 48 85 c0             	testq	%rax, %rax
ffffffff8000975c: b2 01                	movb	$0x1, %dl
ffffffff8000975e: 0f 84 7b 03 00 00    	je	0xffffffff80009adf <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xc3f>
ffffffff80009764: 48 8b 4e 68          	movq	0x68(%rsi), %rcx
ffffffff80009768: 48 89 8d b0 00 00 00 	movq	%rcx, 0xb0(%rbp)
ffffffff8000976f: 48 ff c8             	decq	%rax
ffffffff80009772: 48 89 85 b8 00 00 00 	movq	%rax, 0xb8(%rbp)
ffffffff80009779: 48 c7 01 00 00 00 00 	movq	$0x0, (%rcx)
ffffffff80009780: 31 c0                	xorl	%eax, %eax
ffffffff80009782: f0                   	lock
ffffffff80009783: 0f b0 15 c6 b8 01 00 	cmpxchgb	%dl, 0x1b8c6(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000978a: 75 16                	jne	0xffffffff800097a2 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x902>
ffffffff8000978c: e9 d6 00 00 00       	jmp	0xffffffff80009867 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x9c7>
ffffffff80009791: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
ffffffff800097a0: f3 90                	pause
ffffffff800097a2: 0f b6 05 a7 b8 01 00 	movzbl	0x1b8a7(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff800097a9: 84 c0                	testb	%al, %al
ffffffff800097ab: 75 f3                	jne	0xffffffff800097a0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x900>
ffffffff800097ad: eb d1                	jmp	0xffffffff80009780 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x8e0>
ffffffff800097af: 31 db                	xorl	%ebx, %ebx
ffffffff800097b1: f0                   	lock
ffffffff800097b2: 49 83 65 00 fc       	andq	$-0x4, (%r13)
ffffffff800097b7: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff800097bc: 48 85 c0             	testq	%rax, %rax
ffffffff800097bf: 48 8b 7c 24 08       	movq	0x8(%rsp), %rdi
ffffffff800097c4: 74 1b                	je	0xffffffff800097e1 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x941>
ffffffff800097c6: f0                   	lock
ffffffff800097c7: 48 ff 08             	decq	(%rax)
ffffffff800097ca: 75 15                	jne	0xffffffff800097e1 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x941>
ffffffff800097cc: 48 8d 7c 24 10       	leaq	0x10(%rsp), %rdi
ffffffff800097d1: e8 2a 26 00 00       	callq	0xffffffff8000be00 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4>
ffffffff800097d6: 41 ba 01 00 00 00    	movl	$0x1, %r10d
ffffffff800097dc: 48 8b 7c 24 08       	movq	0x8(%rsp), %rdi
ffffffff800097e1: 48 89 5c 24 10       	movq	%rbx, 0x10(%rsp)
ffffffff800097e6: 48 85 db             	testq	%rbx, %rbx
ffffffff800097e9: 0f 85 a8 01 00 00    	jne	0xffffffff80009997 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xaf7>
ffffffff800097ef: eb 11                	jmp	0xffffffff80009802 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x962>
ffffffff800097f1: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
ffffffff80009800: f3 90                	pause
ffffffff80009802: 31 c0                	xorl	%eax, %eax
ffffffff80009804: f0                   	lock
ffffffff80009805: 4c 0f b1 55 30       	cmpxchgq	%r10, 0x30(%rbp)
ffffffff8000980a: 75 f4                	jne	0xffffffff80009800 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x960>
ffffffff8000980c: 48 8b 45 50          	movq	0x50(%rbp), %rax
ffffffff80009810: 48 85 c0             	testq	%rax, %rax
ffffffff80009813: 0f 84 a8 00 00 00    	je	0xffffffff800098c1 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xa21>
ffffffff80009819: 48 8b 4d 48          	movq	0x48(%rbp), %rcx
ffffffff8000981d: 48 8d 51 01          	leaq	0x1(%rcx), %rdx
ffffffff80009821: 48 8b 75 38          	movq	0x38(%rbp), %rsi
ffffffff80009825: 4c 8b 45 40          	movq	0x40(%rbp), %r8
ffffffff80009829: 48 39 f2             	cmpq	%rsi, %rdx
ffffffff8000982c: ba 00 00 00 00       	movl	$0x0, %edx
ffffffff80009831: 48 0f 43 d6          	cmovaeq	%rsi, %rdx
ffffffff80009835: 48 f7 da             	negq	%rdx
ffffffff80009838: 48 01 ca             	addq	%rcx, %rdx
ffffffff8000983b: 48 ff c2             	incq	%rdx
ffffffff8000983e: 48 89 55 48          	movq	%rdx, 0x48(%rbp)
ffffffff80009842: 48 8b 7c 24 08       	movq	0x8(%rsp), %rdi
ffffffff80009847: 48 ff c8             	decq	%rax
ffffffff8000984a: 48 89 45 50          	movq	%rax, 0x50(%rbp)
ffffffff8000984e: 49 8b 1c c8          	movq	(%r8,%rcx,8), %rbx
ffffffff80009852: f0                   	lock
ffffffff80009853: 48 83 65 30 fc       	andq	$-0x4, 0x30(%rbp)
ffffffff80009858: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff8000985d: 48 85 c0             	testq	%rax, %rax
ffffffff80009860: 75 71                	jne	0xffffffff800098d3 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xa33>
ffffffff80009862: e9 87 00 00 00       	jmp	0xffffffff800098ee <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xa4e>
ffffffff80009867: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff8000986c: b9 c8 00 00 00       	movl	$0xc8, %ecx
ffffffff80009871: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff80009878: e8 23 98 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000987d: c6 05 cc b7 01 00 00 	movb	$0x0, 0x1b7cc(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80009884: 48 8b 7c 24 08       	movq	0x8(%rsp), %rdi
ffffffff80009889: 41 ba 01 00 00 00    	movl	$0x1, %r10d
ffffffff8000988f: 4c 89 e3             	movq	%r12, %rbx
ffffffff80009892: f0                   	lock
ffffffff80009893: 48 83 23 fc          	andq	$-0x4, (%rbx)
ffffffff80009897: 48 8b 07             	movq	(%rdi), %rax
ffffffff8000989a: 48 85 c0             	testq	%rax, %rax
ffffffff8000989d: 74 16                	je	0xffffffff800098b5 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xa15>
ffffffff8000989f: f0                   	lock
ffffffff800098a0: 48 ff 08             	decq	(%rax)
ffffffff800098a3: 75 10                	jne	0xffffffff800098b5 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xa15>
ffffffff800098a5: e8 56 25 00 00       	callq	0xffffffff8000be00 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4>
ffffffff800098aa: 41 ba 01 00 00 00    	movl	$0x1, %r10d
ffffffff800098b0: 48 8b 7c 24 08       	movq	0x8(%rsp), %rdi
ffffffff800098b5: 48 c7 07 00 00 00 00 	movq	$0x0, (%rdi)
ffffffff800098bc: e9 67 f6 ff ff       	jmp	0xffffffff80008f28 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x88>
ffffffff800098c1: 31 db                	xorl	%ebx, %ebx
ffffffff800098c3: f0                   	lock
ffffffff800098c4: 48 83 65 30 fc       	andq	$-0x4, 0x30(%rbp)
ffffffff800098c9: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff800098ce: 48 85 c0             	testq	%rax, %rax
ffffffff800098d1: 74 1b                	je	0xffffffff800098ee <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xa4e>
ffffffff800098d3: f0                   	lock
ffffffff800098d4: 48 ff 08             	decq	(%rax)
ffffffff800098d7: 75 15                	jne	0xffffffff800098ee <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xa4e>
ffffffff800098d9: 48 8d 7c 24 10       	leaq	0x10(%rsp), %rdi
ffffffff800098de: e8 1d 25 00 00       	callq	0xffffffff8000be00 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4>
ffffffff800098e3: 41 ba 01 00 00 00    	movl	$0x1, %r10d
ffffffff800098e9: 48 8b 7c 24 08       	movq	0x8(%rsp), %rdi
ffffffff800098ee: 48 89 5c 24 10       	movq	%rbx, 0x10(%rsp)
ffffffff800098f3: 48 85 db             	testq	%rbx, %rbx
ffffffff800098f6: 0f 85 9b 00 00 00    	jne	0xffffffff80009997 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xaf7>
ffffffff800098fc: eb 04                	jmp	0xffffffff80009902 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xa62>
ffffffff800098fe: 66 90                	nop
ffffffff80009900: f3 90                	pause
ffffffff80009902: 31 c0                	xorl	%eax, %eax
ffffffff80009904: f0                   	lock
ffffffff80009905: 4c 0f b1 55 58       	cmpxchgq	%r10, 0x58(%rbp)
ffffffff8000990a: 75 f4                	jne	0xffffffff80009900 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xa60>
ffffffff8000990c: 48 8b 45 78          	movq	0x78(%rbp), %rax
ffffffff80009910: 48 85 c0             	testq	%rax, %rax
ffffffff80009913: 74 4b                	je	0xffffffff80009960 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xac0>
ffffffff80009915: 48 8b 4d 70          	movq	0x70(%rbp), %rcx
ffffffff80009919: 48 8d 51 01          	leaq	0x1(%rcx), %rdx
ffffffff8000991d: 48 8b 75 60          	movq	0x60(%rbp), %rsi
ffffffff80009921: 4c 8b 45 68          	movq	0x68(%rbp), %r8
ffffffff80009925: 48 39 f2             	cmpq	%rsi, %rdx
ffffffff80009928: ba 00 00 00 00       	movl	$0x0, %edx
ffffffff8000992d: 48 0f 43 d6          	cmovaeq	%rsi, %rdx
ffffffff80009931: 48 f7 da             	negq	%rdx
ffffffff80009934: 48 01 ca             	addq	%rcx, %rdx
ffffffff80009937: 48 ff c2             	incq	%rdx
ffffffff8000993a: 48 89 55 70          	movq	%rdx, 0x70(%rbp)
ffffffff8000993e: 48 8b 7c 24 08       	movq	0x8(%rsp), %rdi
ffffffff80009943: 48 ff c8             	decq	%rax
ffffffff80009946: 48 89 45 78          	movq	%rax, 0x78(%rbp)
ffffffff8000994a: 49 8b 1c c8          	movq	(%r8,%rcx,8), %rbx
ffffffff8000994e: f0                   	lock
ffffffff8000994f: 48 83 65 58 fc       	andq	$-0x4, 0x58(%rbp)
ffffffff80009954: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff80009959: 48 85 c0             	testq	%rax, %rax
ffffffff8000995c: 75 14                	jne	0xffffffff80009972 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xad2>
ffffffff8000995e: eb 2d                	jmp	0xffffffff8000998d <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xaed>
ffffffff80009960: 31 db                	xorl	%ebx, %ebx
ffffffff80009962: f0                   	lock
ffffffff80009963: 48 83 65 58 fc       	andq	$-0x4, 0x58(%rbp)
ffffffff80009968: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff8000996d: 48 85 c0             	testq	%rax, %rax
ffffffff80009970: 74 1b                	je	0xffffffff8000998d <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xaed>
ffffffff80009972: f0                   	lock
ffffffff80009973: 48 ff 08             	decq	(%rax)
ffffffff80009976: 75 15                	jne	0xffffffff8000998d <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xaed>
ffffffff80009978: 48 8d 7c 24 10       	leaq	0x10(%rsp), %rdi
ffffffff8000997d: e8 7e 24 00 00       	callq	0xffffffff8000be00 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4>
ffffffff80009982: 41 ba 01 00 00 00    	movl	$0x1, %r10d
ffffffff80009988: 48 8b 7c 24 08       	movq	0x8(%rsp), %rdi
ffffffff8000998d: 48 89 5c 24 10       	movq	%rbx, 0x10(%rsp)
ffffffff80009992: 48 85 db             	testq	%rbx, %rbx
ffffffff80009995: 74 3b                	je	0xffffffff800099d2 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xb32>
ffffffff80009997: 48 8b 44 24 38       	movq	0x38(%rsp), %rax
ffffffff8000999c: 48 85 c0             	testq	%rax, %rax
ffffffff8000999f: 0f 84 23 f6 ff ff    	je	0xffffffff80008fc8 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x128>
ffffffff800099a5: f0                   	lock
ffffffff800099a6: 48 ff 08             	decq	(%rax)
ffffffff800099a9: 0f 85 19 f6 ff ff    	jne	0xffffffff80008fc8 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x128>
ffffffff800099af: 48 8d 7c 24 38       	leaq	0x38(%rsp), %rdi
ffffffff800099b4: e8 47 24 00 00       	callq	0xffffffff8000be00 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4>
ffffffff800099b9: 41 ba 01 00 00 00    	movl	$0x1, %r10d
ffffffff800099bf: e9 ff f5 ff ff       	jmp	0xffffffff80008fc3 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x123>
ffffffff800099c4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
ffffffff800099d0: f3 90                	pause
ffffffff800099d2: 31 c0                	xorl	%eax, %eax
ffffffff800099d4: f0                   	lock
ffffffff800099d5: 4c 0f b1 95 80 00 00 00      	cmpxchgq	%r10, 0x80(%rbp)
ffffffff800099dd: 75 f1                	jne	0xffffffff800099d0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xb30>
ffffffff800099df: 48 8b 85 a0 00 00 00 	movq	0xa0(%rbp), %rax
ffffffff800099e6: 48 85 c0             	testq	%rax, %rax
ffffffff800099e9: 74 7c                	je	0xffffffff80009a67 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xbc7>
ffffffff800099eb: 48 8b 8d 98 00 00 00 	movq	0x98(%rbp), %rcx
ffffffff800099f2: 48 8d 51 01          	leaq	0x1(%rcx), %rdx
ffffffff800099f6: 48 8b b5 88 00 00 00 	movq	0x88(%rbp), %rsi
ffffffff800099fd: 4c 8b 85 90 00 00 00 	movq	0x90(%rbp), %r8
ffffffff80009a04: 48 39 f2             	cmpq	%rsi, %rdx
ffffffff80009a07: ba 00 00 00 00       	movl	$0x0, %edx
ffffffff80009a0c: 48 0f 43 d6          	cmovaeq	%rsi, %rdx
ffffffff80009a10: 48 f7 da             	negq	%rdx
ffffffff80009a13: 48 01 ca             	addq	%rcx, %rdx
ffffffff80009a16: 48 ff c2             	incq	%rdx
ffffffff80009a19: 48 89 95 98 00 00 00 	movq	%rdx, 0x98(%rbp)
ffffffff80009a20: 48 8b 7c 24 08       	movq	0x8(%rsp), %rdi
ffffffff80009a25: 48 ff c8             	decq	%rax
ffffffff80009a28: 48 89 85 a0 00 00 00 	movq	%rax, 0xa0(%rbp)
ffffffff80009a2f: 49 8b 1c c8          	movq	(%r8,%rcx,8), %rbx
ffffffff80009a33: f0                   	lock
ffffffff80009a34: 48 83 a5 80 00 00 00 fc      	andq	$-0x4, 0x80(%rbp)
ffffffff80009a3c: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff80009a41: 48 85 c0             	testq	%rax, %rax
ffffffff80009a44: 75 3a                	jne	0xffffffff80009a80 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xbe0>
ffffffff80009a46: e9 4c ff ff ff       	jmp	0xffffffff80009997 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xaf7>
ffffffff80009a4b: 48 8b 7c 24 08       	movq	0x8(%rsp), %rdi
ffffffff80009a50: f0                   	lock
ffffffff80009a51: 49 83 24 24 fc       	andq	$-0x4, (%r12)
ffffffff80009a56: 48 8b 07             	movq	(%rdi), %rax
ffffffff80009a59: 48 85 c0             	testq	%rax, %rax
ffffffff80009a5c: 0f 85 3d fe ff ff    	jne	0xffffffff8000989f <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0x9ff>
ffffffff80009a62: e9 4e fe ff ff       	jmp	0xffffffff800098b5 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xa15>
ffffffff80009a67: 31 db                	xorl	%ebx, %ebx
ffffffff80009a69: f0                   	lock
ffffffff80009a6a: 48 83 a5 80 00 00 00 fc      	andq	$-0x4, 0x80(%rbp)
ffffffff80009a72: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff80009a77: 48 85 c0             	testq	%rax, %rax
ffffffff80009a7a: 0f 84 17 ff ff ff    	je	0xffffffff80009997 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xaf7>
ffffffff80009a80: f0                   	lock
ffffffff80009a81: 48 ff 08             	decq	(%rax)
ffffffff80009a84: 0f 85 0d ff ff ff    	jne	0xffffffff80009997 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xaf7>
ffffffff80009a8a: 48 8d 7c 24 10       	leaq	0x10(%rsp), %rdi
ffffffff80009a8f: e8 6c 23 00 00       	callq	0xffffffff8000be00 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4>
ffffffff80009a94: 41 ba 01 00 00 00    	movl	$0x1, %r10d
ffffffff80009a9a: 48 8b 7c 24 08       	movq	0x8(%rsp), %rdi
ffffffff80009a9f: e9 f3 fe ff ff       	jmp	0xffffffff80009997 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580+0xaf7>
ffffffff80009aa4: f0                   	lock
ffffffff80009aa5: 48 83 28 04          	subq	$0x4, (%rax)
ffffffff80009aa9: be 2c 00 00 00       	movl	$0x2c, %esi
ffffffff80009aae: 48 c7 c7 d0 dc 01 80 	movq	$-0x7ffe2330, %rdi      # imm = 0x8001DCD0
ffffffff80009ab5: 48 c7 c2 58 dd 01 80 	movq	$-0x7ffe22a8, %rdx      # imm = 0x8001DD58
ffffffff80009abc: e8 af 29 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80009ac1: f0                   	lock
ffffffff80009ac2: 49 83 2c 24 04       	subq	$0x4, (%r12)
ffffffff80009ac7: be 2c 00 00 00       	movl	$0x2c, %esi
ffffffff80009acc: 48 c7 c7 d0 dc 01 80 	movq	$-0x7ffe2330, %rdi      # imm = 0x8001DCD0
ffffffff80009ad3: 48 c7 c2 58 dd 01 80 	movq	$-0x7ffe22a8, %rdx      # imm = 0x8001DD58
ffffffff80009ada: e8 91 29 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80009adf: be 21 00 00 00       	movl	$0x21, %esi
ffffffff80009ae4: 48 c7 c7 e8 df 01 80 	movq	$-0x7ffe2018, %rdi      # imm = 0x8001DFE8
ffffffff80009aeb: 48 c7 c2 10 e0 01 80 	movq	$-0x7ffe1ff0, %rdx      # imm = 0x8001E010
ffffffff80009af2: e8 79 29 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80009af7: be 26 00 00 00       	movl	$0x26, %esi
ffffffff80009afc: 48 c7 c7 a8 d9 01 80 	movq	$-0x7ffe2658, %rdi      # imm = 0x8001D9A8
ffffffff80009b03: 48 c7 c2 d0 d9 01 80 	movq	$-0x7ffe2630, %rdx      # imm = 0x8001D9D0
ffffffff80009b0a: e8 61 29 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80009b0f: be 04 00 00 00       	movl	$0x4, %esi
ffffffff80009b14: 48 c7 c2 30 e5 01 80 	movq	$-0x7ffe1ad0, %rdx      # imm = 0x8001E530
ffffffff80009b1b: e8 99 29 01 00       	callq	0xffffffff8001c4b9 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff80009b20: 0f 0b                	ud2
ffffffff80009b22: 48 8d 54 24 27       	leaq	0x27(%rsp), %rdx
ffffffff80009b27: be 19 00 00 00       	movl	$0x19, %esi
ffffffff80009b2c: 48 c7 c7 50 e9 01 80 	movq	$-0x7ffe16b0, %rdi      # imm = 0x8001E950
ffffffff80009b33: 48 c7 c1 30 e9 01 80 	movq	$-0x7ffe16d0, %rcx      # imm = 0x8001E930
ffffffff80009b3a: 49 c7 c0 80 e9 01 80 	movq	$-0x7ffe1680, %r8       # imm = 0x8001E980
ffffffff80009b41: e8 9a 23 01 00       	callq	0xffffffff8001bee0 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff80009b46: be 04 00 00 00       	movl	$0x4, %esi
ffffffff80009b4b: 48 c7 c2 48 e5 01 80 	movq	$-0x7ffe1ab8, %rdx      # imm = 0x8001E548
ffffffff80009b52: e8 62 29 01 00       	callq	0xffffffff8001c4b9 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff80009b57: be 2e 00 00 00       	movl	$0x2e, %esi
ffffffff80009b5c: 48 c7 c7 a0 e4 01 80 	movq	$-0x7ffe1b60, %rdi      # imm = 0x8001E4A0
ffffffff80009b63: 48 c7 c2 e8 e4 01 80 	movq	$-0x7ffe1b18, %rdx      # imm = 0x8001E4E8
ffffffff80009b6a: e8 21 2e 01 00       	callq	0xffffffff8001c990 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff80009b6f: be 0d 00 00 00       	movl	$0xd, %esi
ffffffff80009b74: 48 c7 c7 28 d9 01 80 	movq	$-0x7ffe26d8, %rdi      # imm = 0x8001D928
ffffffff80009b7b: 48 c7 c2 90 d9 01 80 	movq	$-0x7ffe2670, %rdx      # imm = 0x8001D990
ffffffff80009b82: e8 e9 28 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80009b87: be 04 00 00 00       	movl	$0x4, %esi
ffffffff80009b8c: 48 c7 c2 00 e5 01 80 	movq	$-0x7ffe1b00, %rdx      # imm = 0x8001E500
ffffffff80009b93: e8 21 29 01 00       	callq	0xffffffff8001c4b9 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff80009b98: 48 c7 c7 f8 dd 01 80 	movq	$-0x7ffe2208, %rdi      # imm = 0x8001DDF8
ffffffff80009b9f: e8 cc 2d 01 00       	callq	0xffffffff8001c970 <core::option::unwrap_failed::hd8ef34c781aa10a4>
ffffffff80009ba4: cc                   	int3
ffffffff80009ba5: cc                   	int3
ffffffff80009ba6: cc                   	int3
ffffffff80009ba7: cc                   	int3
ffffffff80009ba8: cc                   	int3
ffffffff80009ba9: cc                   	int3
ffffffff80009baa: cc                   	int3
ffffffff80009bab: cc                   	int3
ffffffff80009bac: cc                   	int3
ffffffff80009bad: cc                   	int3
ffffffff80009bae: cc                   	int3
ffffffff80009baf: cc                   	int3

ffffffff80009bb0 <taos::events::run_loop::hb7053eb66eece363>:
ffffffff80009bb0: 50                   	pushq	%rax
ffffffff80009bb1: 48 b8 fc ff ff ff ff ff ff 7f	movabsq	$0x7ffffffffffffffc, %rax # imm = 0x7FFFFFFFFFFFFFFC
ffffffff80009bbb: b9 04 00 00 00       	movl	$0x4, %ecx
ffffffff80009bc0: f0                   	lock
ffffffff80009bc1: 48 0f c1 0d 87 c6 01 00      	xaddq	%rcx, 0x1c687(%rip) # 0xffffffff80026250 <taos::events::EVENT_RUNNERS::hc7e00ca3d62eeb3b>
ffffffff80009bc9: 48 39 c1             	cmpq	%rax, %rcx
ffffffff80009bcc: 77 25                	ja	0xffffffff80009bf3 <taos::events::run_loop::hb7053eb66eece363+0x43>
ffffffff80009bce: 66 90                	nop
ffffffff80009bd0: f6 c1 03             	testb	$0x3, %cl
ffffffff80009bd3: 74 3f                	je	0xffffffff80009c14 <taos::events::run_loop::hb7053eb66eece363+0x64>
ffffffff80009bd5: f0                   	lock
ffffffff80009bd6: 48 83 2d 72 c6 01 00 04      	subq	$0x4, 0x1c672(%rip) # 0xffffffff80026250 <taos::events::EVENT_RUNNERS::hc7e00ca3d62eeb3b>
ffffffff80009bde: f3 90                	pause
ffffffff80009be0: b9 04 00 00 00       	movl	$0x4, %ecx
ffffffff80009be5: f0                   	lock
ffffffff80009be6: 48 0f c1 0d 62 c6 01 00      	xaddq	%rcx, 0x1c662(%rip) # 0xffffffff80026250 <taos::events::EVENT_RUNNERS::hc7e00ca3d62eeb3b>
ffffffff80009bee: 48 39 c1             	cmpq	%rax, %rcx
ffffffff80009bf1: 76 dd                	jbe	0xffffffff80009bd0 <taos::events::run_loop::hb7053eb66eece363+0x20>
ffffffff80009bf3: f0                   	lock
ffffffff80009bf4: 48 83 2d 54 c6 01 00 04      	subq	$0x4, 0x1c654(%rip) # 0xffffffff80026250 <taos::events::EVENT_RUNNERS::hc7e00ca3d62eeb3b>
ffffffff80009bfc: be 2c 00 00 00       	movl	$0x2c, %esi
ffffffff80009c01: 48 c7 c7 d0 dc 01 80 	movq	$-0x7ffe2330, %rdi      # imm = 0x8001DCD0
ffffffff80009c08: 48 c7 c2 58 dd 01 80 	movq	$-0x7ffe22a8, %rdx      # imm = 0x8001DD58
ffffffff80009c0f: e8 5c 28 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80009c14: 48 8b 05 3d c6 01 00 	movq	0x1c63d(%rip), %rax     # 0xffffffff80026258 <taos::events::EVENT_RUNNERS::hc7e00ca3d62eeb3b+0x8>
ffffffff80009c1b: 48 85 c0             	testq	%rax, %rax
ffffffff80009c1e: 75 18                	jne	0xffffffff80009c38 <taos::events::run_loop::hb7053eb66eece363+0x88>
ffffffff80009c20: be 0f 00 00 00       	movl	$0xf, %esi
ffffffff80009c25: 48 c7 c7 c0 e5 01 80 	movq	$-0x7ffe1a40, %rdi      # imm = 0x8001E5C0
ffffffff80009c2c: 48 c7 c2 e0 e5 01 80 	movq	$-0x7ffe1a20, %rdx      # imm = 0x8001E5E0
ffffffff80009c33: e8 58 2d 01 00       	callq	0xffffffff8001c990 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff80009c38: 48 8b 0d 21 c6 01 00 	movq	0x1c621(%rip), %rcx     # 0xffffffff80026260 <taos::events::EVENT_RUNNERS::hc7e00ca3d62eeb3b+0x10>
ffffffff80009c3f: ba ff 00 00 00       	movl	$0xff, %edx
ffffffff80009c44: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
ffffffff80009c50: 44 0f b7 80 d6 09 00 00      	movzwl	0x9d6(%rax), %r8d
ffffffff80009c58: 4d 69 d0 e0 00 00 00 	imulq	$0xe0, %r8, %r10
ffffffff80009c5f: 48 c7 c6 ff ff ff ff 	movq	$-0x1, %rsi
ffffffff80009c66: 45 31 c9             	xorl	%r9d, %r9d
ffffffff80009c69: 0f 1f 80 00 00 00 00 	nopl	(%rax)
ffffffff80009c70: 4d 89 d3             	movq	%r10, %r11
ffffffff80009c73: 4d 01 cb             	addq	%r9, %r11
ffffffff80009c76: 74 38                	je	0xffffffff80009cb0 <taos::events::run_loop::hb7053eb66eece363+0x100>
ffffffff80009c78: 45 31 db             	xorl	%r11d, %r11d
ffffffff80009c7b: 39 bc b0 ac 09 00 00 	cmpl	%edi, 0x9ac(%rax,%rsi,4)
ffffffff80009c82: 41 0f 95 c3          	setne	%r11b
ffffffff80009c86: 44 0f 47 da          	cmoval	%edx, %r11d
ffffffff80009c8a: 49 81 c1 20 ff ff ff 	addq	$-0xe0, %r9
ffffffff80009c91: 48 ff c6             	incq	%rsi
ffffffff80009c94: 41 80 fb 01          	cmpb	$0x1, %r11b
ffffffff80009c98: 74 d6                	je	0xffffffff80009c70 <taos::events::run_loop::hb7053eb66eece363+0xc0>
ffffffff80009c9a: 45 0f b6 c3          	movzbl	%r11b, %r8d
ffffffff80009c9e: 41 81 f8 ff 00 00 00 	cmpl	$0xff, %r8d
ffffffff80009ca5: 74 0c                	je	0xffffffff80009cb3 <taos::events::run_loop::hb7053eb66eece363+0x103>
ffffffff80009ca7: eb 1e                	jmp	0xffffffff80009cc7 <taos::events::run_loop::hb7053eb66eece363+0x117>
ffffffff80009ca9: 0f 1f 80 00 00 00 00 	nopl	(%rax)
ffffffff80009cb0: 4c 89 c6             	movq	%r8, %rsi
ffffffff80009cb3: 48 83 e9 01          	subq	$0x1, %rcx
ffffffff80009cb7: 0f 82 63 ff ff ff    	jb	0xffffffff80009c20 <taos::events::run_loop::hb7053eb66eece363+0x70>
ffffffff80009cbd: 48 8b 84 f0 d8 09 00 00      	movq	0x9d8(%rax,%rsi,8), %rax
ffffffff80009cc5: eb 89                	jmp	0xffffffff80009c50 <taos::events::run_loop::hb7053eb66eece363+0xa0>
ffffffff80009cc7: 4c 29 c8             	subq	%r9, %rax
ffffffff80009cca: 48 05 28 ff ff ff    	addq	$-0xd8, %rax
ffffffff80009cd0: 48 89 c7             	movq	%rax, %rdi
ffffffff80009cd3: e8 c8 f1 ff ff       	callq	0xffffffff80008ea0 <taos::events::event_runner::<impl taos::events::EventRunner>::run_loop::haf76394651e85e6a.llvm.2213946183514802580>
ffffffff80009cd8: cc                   	int3
ffffffff80009cd9: cc                   	int3
ffffffff80009cda: cc                   	int3
ffffffff80009cdb: cc                   	int3
ffffffff80009cdc: cc                   	int3
ffffffff80009cdd: cc                   	int3
ffffffff80009cde: cc                   	int3
ffffffff80009cdf: cc                   	int3

ffffffff80009ce0 <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580>:
ffffffff80009ce0: 55                   	pushq	%rbp
ffffffff80009ce1: 41 57                	pushq	%r15
ffffffff80009ce3: 41 56                	pushq	%r14
ffffffff80009ce5: 41 55                	pushq	%r13
ffffffff80009ce7: 41 54                	pushq	%r12
ffffffff80009ce9: 53                   	pushq	%rbx
ffffffff80009cea: 48 83 ec 38          	subq	$0x38, %rsp
ffffffff80009cee: 48 b8 fc ff ff ff ff ff ff 7f	movabsq	$0x7ffffffffffffffc, %rax # imm = 0x7FFFFFFFFFFFFFFC
ffffffff80009cf8: b9 04 00 00 00       	movl	$0x4, %ecx
ffffffff80009cfd: f0                   	lock
ffffffff80009cfe: 48 0f c1 0d 4a c5 01 00      	xaddq	%rcx, 0x1c54a(%rip) # 0xffffffff80026250 <taos::events::EVENT_RUNNERS::hc7e00ca3d62eeb3b>
ffffffff80009d06: 48 39 c1             	cmpq	%rax, %rcx
ffffffff80009d09: 77 28                	ja	0xffffffff80009d33 <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x53>
ffffffff80009d0b: 0f 1f 44 00 00       	nopl	(%rax,%rax)
ffffffff80009d10: f6 c1 03             	testb	$0x3, %cl
ffffffff80009d13: 74 3f                	je	0xffffffff80009d54 <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x74>
ffffffff80009d15: f0                   	lock
ffffffff80009d16: 48 83 2d 32 c5 01 00 04      	subq	$0x4, 0x1c532(%rip) # 0xffffffff80026250 <taos::events::EVENT_RUNNERS::hc7e00ca3d62eeb3b>
ffffffff80009d1e: f3 90                	pause
ffffffff80009d20: b9 04 00 00 00       	movl	$0x4, %ecx
ffffffff80009d25: f0                   	lock
ffffffff80009d26: 48 0f c1 0d 22 c5 01 00      	xaddq	%rcx, 0x1c522(%rip) # 0xffffffff80026250 <taos::events::EVENT_RUNNERS::hc7e00ca3d62eeb3b>
ffffffff80009d2e: 48 39 c1             	cmpq	%rax, %rcx
ffffffff80009d31: 76 dd                	jbe	0xffffffff80009d10 <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x30>
ffffffff80009d33: f0                   	lock
ffffffff80009d34: 48 83 2d 14 c5 01 00 04      	subq	$0x4, 0x1c514(%rip) # 0xffffffff80026250 <taos::events::EVENT_RUNNERS::hc7e00ca3d62eeb3b>
ffffffff80009d3c: be 2c 00 00 00       	movl	$0x2c, %esi
ffffffff80009d41: 48 c7 c7 d0 dc 01 80 	movq	$-0x7ffe2330, %rdi      # imm = 0x8001DCD0
ffffffff80009d48: 48 c7 c2 58 dd 01 80 	movq	$-0x7ffe22a8, %rdx      # imm = 0x8001DD58
ffffffff80009d4f: e8 1c 27 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80009d54: 48 8b 05 fd c4 01 00 	movq	0x1c4fd(%rip), %rax     # 0xffffffff80026258 <taos::events::EVENT_RUNNERS::hc7e00ca3d62eeb3b+0x8>
ffffffff80009d5b: 48 85 c0             	testq	%rax, %rax
ffffffff80009d5e: 0f 84 3e 03 00 00    	je	0xffffffff8000a0a2 <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x3c2>
ffffffff80009d64: 48 8b 17             	movq	(%rdi), %rdx
ffffffff80009d67: 48 8b 0d f2 c4 01 00 	movq	0x1c4f2(%rip), %rcx     # 0xffffffff80026260 <taos::events::EVENT_RUNNERS::hc7e00ca3d62eeb3b+0x10>
ffffffff80009d6e: 8b 12                	movl	(%rdx), %edx
ffffffff80009d70: be ff 00 00 00       	movl	$0xff, %esi
ffffffff80009d75: 44 0f b7 88 d6 09 00 00      	movzwl	0x9d6(%rax), %r9d
ffffffff80009d7d: 48 8d 58 b0          	leaq	-0x50(%rax), %rbx
ffffffff80009d81: 45 89 ca             	movl	%r9d, %r10d
ffffffff80009d84: 41 c1 e2 02          	shll	$0x2, %r10d
ffffffff80009d88: 49 c7 c0 ff ff ff ff 	movq	$-0x1, %r8
ffffffff80009d8f: 90                   	nop
ffffffff80009d90: 4d 85 d2             	testq	%r10, %r10
ffffffff80009d93: 74 3b                	je	0xffffffff80009dd0 <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0xf0>
ffffffff80009d95: 45 31 db             	xorl	%r11d, %r11d
ffffffff80009d98: 42 39 94 80 ac 09 00 00      	cmpl	%edx, 0x9ac(%rax,%r8,4)
ffffffff80009da0: 41 0f 95 c3          	setne	%r11b
ffffffff80009da4: 44 0f 47 de          	cmoval	%esi, %r11d
ffffffff80009da8: 48 81 c3 e0 00 00 00 	addq	$0xe0, %rbx
ffffffff80009daf: 49 ff c0             	incq	%r8
ffffffff80009db2: 49 83 c2 fc          	addq	$-0x4, %r10
ffffffff80009db6: 41 80 fb 01          	cmpb	$0x1, %r11b
ffffffff80009dba: 74 d4                	je	0xffffffff80009d90 <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0xb0>
ffffffff80009dbc: 45 0f b6 cb          	movzbl	%r11b, %r9d
ffffffff80009dc0: 45 85 c9             	testl	%r9d, %r9d
ffffffff80009dc3: 74 22                	je	0xffffffff80009de7 <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x107>
ffffffff80009dc5: eb 0c                	jmp	0xffffffff80009dd3 <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0xf3>
ffffffff80009dc7: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
ffffffff80009dd0: 4d 89 c8             	movq	%r9, %r8
ffffffff80009dd3: 48 83 e9 01          	subq	$0x1, %rcx
ffffffff80009dd7: 0f 82 c5 02 00 00    	jb	0xffffffff8000a0a2 <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x3c2>
ffffffff80009ddd: 4a 8b 84 c0 d8 09 00 00      	movq	0x9d8(%rax,%r8,8), %rax
ffffffff80009de5: eb 8e                	jmp	0xffffffff80009d75 <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x95>
ffffffff80009de7: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff80009dec: 31 c0                	xorl	%eax, %eax
ffffffff80009dee: f0                   	lock
ffffffff80009def: 48 0f b1 8b 70 ff ff ff      	cmpxchgq	%rcx, -0x90(%rbx)
ffffffff80009df7: 74 16                	je	0xffffffff80009e0f <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x12f>
ffffffff80009df9: 0f 1f 80 00 00 00 00 	nopl	(%rax)
ffffffff80009e00: f3 90                	pause
ffffffff80009e02: 31 c0                	xorl	%eax, %eax
ffffffff80009e04: f0                   	lock
ffffffff80009e05: 48 0f b1 8b 70 ff ff ff      	cmpxchgq	%rcx, -0x90(%rbx)
ffffffff80009e0d: 75 f1                	jne	0xffffffff80009e00 <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x120>
ffffffff80009e0f: 48 8b 47 08          	movq	0x8(%rdi), %rax
ffffffff80009e13: 4c 8b 77 10          	movq	0x10(%rdi), %r14
ffffffff80009e17: 44 8b 20             	movl	(%rax), %r12d
ffffffff80009e1a: 4c 8b ab 78 ff ff ff 	movq	-0x88(%rbx), %r13
ffffffff80009e21: f0                   	lock
ffffffff80009e22: 49 ff 45 00          	incq	(%r13)
ffffffff80009e26: 0f 8e 8e 02 00 00    	jle	0xffffffff8000a0ba <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x3da>
ffffffff80009e2c: 48 8b 43 48          	movq	0x48(%rbx), %rax
ffffffff80009e30: 48 89 44 24 08       	movq	%rax, 0x8(%rsp)
ffffffff80009e35: bd 01 00 00 00       	movl	$0x1, %ebp
ffffffff80009e3a: f0                   	lock
ffffffff80009e3b: 48 0f c1 2d 05 c4 01 00      	xaddq	%rbp, 0x1c405(%rip) # 0xffffffff80026248 <taos::events::EventId::init::NEXT_ID::h234366d99e473b5a>
ffffffff80009e43: 0f b6 05 97 b3 01 00 	movzbl	0x1b397(%rip), %eax     # 0xffffffff800251e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80009e4a: b1 01                	movb	$0x1, %cl
ffffffff80009e4c: 0f 1f 40 00          	nopl	(%rax)
ffffffff80009e50: 31 c0                	xorl	%eax, %eax
ffffffff80009e52: f0                   	lock
ffffffff80009e53: 0f b0 0d f6 b1 01 00 	cmpxchgb	%cl, 0x1b1f6(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80009e5a: 75 06                	jne	0xffffffff80009e62 <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x182>
ffffffff80009e5c: eb 11                	jmp	0xffffffff80009e6f <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x18f>
ffffffff80009e5e: 66 90                	nop
ffffffff80009e60: f3 90                	pause
ffffffff80009e62: 0f b6 05 e7 b1 01 00 	movzbl	0x1b1e7(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80009e69: 84 c0                	testb	%al, %al
ffffffff80009e6b: 75 f3                	jne	0xffffffff80009e60 <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x180>
ffffffff80009e6d: eb e1                	jmp	0xffffffff80009e50 <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x170>
ffffffff80009e6f: be 04 00 00 00       	movl	$0x4, %esi
ffffffff80009e74: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff80009e79: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff80009e80: e8 7b 94 ff ff       	callq	0xffffffff80003300 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80009e85: c6 05 c4 b1 01 00 00 	movb	$0x0, 0x1b1c4(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80009e8c: 48 85 c0             	testq	%rax, %rax
ffffffff80009e8f: 0f 84 27 02 00 00    	je	0xffffffff8000a0bc <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x3dc>
ffffffff80009e95: 49 89 c7             	movq	%rax, %r15
ffffffff80009e98: 4c 89 30             	movq	%r14, (%rax)
ffffffff80009e9b: 0f b6 05 3f b3 01 00 	movzbl	0x1b33f(%rip), %eax     # 0xffffffff800251e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80009ea2: b1 01                	movb	$0x1, %cl
ffffffff80009ea4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
ffffffff80009eb0: 31 c0                	xorl	%eax, %eax
ffffffff80009eb2: f0                   	lock
ffffffff80009eb3: 0f b0 0d 96 b1 01 00 	cmpxchgb	%cl, 0x1b196(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80009eba: 74 1e                	je	0xffffffff80009eda <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x1fa>
ffffffff80009ebc: 0f 1f 40 00          	nopl	(%rax)
ffffffff80009ec0: 0f b6 05 89 b1 01 00 	movzbl	0x1b189(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80009ec7: 84 c0                	testb	%al, %al
ffffffff80009ec9: 74 e5                	je	0xffffffff80009eb0 <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x1d0>
ffffffff80009ecb: f3 90                	pause
ffffffff80009ecd: 0f b6 05 7c b1 01 00 	movzbl	0x1b17c(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80009ed4: 84 c0                	testb	%al, %al
ffffffff80009ed6: 75 f3                	jne	0xffffffff80009ecb <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x1eb>
ffffffff80009ed8: eb d6                	jmp	0xffffffff80009eb0 <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x1d0>
ffffffff80009eda: be 08 00 00 00       	movl	$0x8, %esi
ffffffff80009edf: ba 50 00 00 00       	movl	$0x50, %edx
ffffffff80009ee4: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff80009eeb: e8 10 94 ff ff       	callq	0xffffffff80003300 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff80009ef0: c6 05 59 b1 01 00 00 	movb	$0x0, 0x1b159(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80009ef7: 48 85 c0             	testq	%rax, %rax
ffffffff80009efa: 0f 84 cb 01 00 00    	je	0xffffffff8000a0cb <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x3eb>
ffffffff80009f00: 49 89 c6             	movq	%rax, %r14
ffffffff80009f03: 48 c7 00 01 00 00 00 	movq	$0x1, (%rax)
ffffffff80009f0a: 48 c7 40 08 01 00 00 00      	movq	$0x1, 0x8(%rax)
ffffffff80009f12: 4c 89 68 10          	movq	%r13, 0x10(%rax)
ffffffff80009f16: 48 89 68 18          	movq	%rbp, 0x18(%rax)
ffffffff80009f1a: 48 c7 40 20 00 00 00 00      	movq	$0x0, 0x20(%rax)
ffffffff80009f22: 4c 89 78 28          	movq	%r15, 0x28(%rax)
ffffffff80009f26: 48 c7 40 30 50 e4 01 80      	movq	$-0x7ffe1bb0, 0x30(%rax) # imm = 0x8001E450
ffffffff80009f2e: 48 c7 40 38 03 00 00 00      	movq	$0x3, 0x38(%rax)
ffffffff80009f36: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff80009f3b: 49 89 46 40          	movq	%rax, 0x40(%r14)
ffffffff80009f3f: 45 89 66 48          	movl	%r12d, 0x48(%r14)
ffffffff80009f43: 4c 89 34 24          	movq	%r14, (%rsp)
ffffffff80009f47: f0                   	lock
ffffffff80009f48: 49 ff 06             	incq	(%r14)
ffffffff80009f4b: 0f 8e 69 01 00 00    	jle	0xffffffff8000a0ba <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x3da>
ffffffff80009f51: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff80009f56: 31 c0                	xorl	%eax, %eax
ffffffff80009f58: f0                   	lock
ffffffff80009f59: 48 0f b1 4b f8       	cmpxchgq	%rcx, -0x8(%rbx)
ffffffff80009f5e: 74 0c                	je	0xffffffff80009f6c <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x28c>
ffffffff80009f60: f3 90                	pause
ffffffff80009f62: 31 c0                	xorl	%eax, %eax
ffffffff80009f64: f0                   	lock
ffffffff80009f65: 48 0f b1 4b f8       	cmpxchgq	%rcx, -0x8(%rbx)
ffffffff80009f6a: 75 f4                	jne	0xffffffff80009f60 <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x280>
ffffffff80009f6c: 48 8b 03             	movq	(%rbx), %rax
ffffffff80009f6f: 48 8b 4b 18          	movq	0x18(%rbx), %rcx
ffffffff80009f73: 48 39 c1             	cmpq	%rax, %rcx
ffffffff80009f76: 75 16                	jne	0xffffffff80009f8e <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x2ae>
ffffffff80009f78: 48 89 df             	movq	%rbx, %rdi
ffffffff80009f7b: 48 c7 c6 18 e5 01 80 	movq	$-0x7ffe1ae8, %rsi      # imm = 0x8001E518
ffffffff80009f82: e8 e9 1d 00 00       	callq	0xffffffff8000bd70 <alloc::collections::vec_deque::VecDeque<T,A>::grow::h0ee91ef6b8134622>
ffffffff80009f87: 48 8b 03             	movq	(%rbx), %rax
ffffffff80009f8a: 48 8b 4b 18          	movq	0x18(%rbx), %rcx
ffffffff80009f8e: 48 03 4b 10          	addq	0x10(%rbx), %rcx
ffffffff80009f92: 31 d2                	xorl	%edx, %edx
ffffffff80009f94: 48 39 c1             	cmpq	%rax, %rcx
ffffffff80009f97: 48 0f 42 c2          	cmovbq	%rdx, %rax
ffffffff80009f9b: 48 29 c1             	subq	%rax, %rcx
ffffffff80009f9e: 48 8b 43 08          	movq	0x8(%rbx), %rax
ffffffff80009fa2: 4c 89 34 c8          	movq	%r14, (%rax,%rcx,8)
ffffffff80009fa6: 48 ff 43 18          	incq	0x18(%rbx)
ffffffff80009faa: f0                   	lock
ffffffff80009fab: 48 83 63 f8 fc       	andq	$-0x4, -0x8(%rbx)
ffffffff80009fb0: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff80009fb5: 31 c0                	xorl	%eax, %eax
ffffffff80009fb7: f0                   	lock
ffffffff80009fb8: 48 0f b1 4b 20       	cmpxchgq	%rcx, 0x20(%rbx)
ffffffff80009fbd: 74 0d                	je	0xffffffff80009fcc <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x2ec>
ffffffff80009fbf: 90                   	nop
ffffffff80009fc0: f3 90                	pause
ffffffff80009fc2: 31 c0                	xorl	%eax, %eax
ffffffff80009fc4: f0                   	lock
ffffffff80009fc5: 48 0f b1 4b 20       	cmpxchgq	%rcx, 0x20(%rbx)
ffffffff80009fca: 75 f4                	jne	0xffffffff80009fc0 <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x2e0>
ffffffff80009fcc: 4c 8b 34 24          	movq	(%rsp), %r14
ffffffff80009fd0: 49 8b 46 18          	movq	0x18(%r14), %rax
ffffffff80009fd4: 48 8b 4b 28          	movq	0x28(%rbx), %rcx
ffffffff80009fd8: 48 85 c9             	testq	%rcx, %rcx
ffffffff80009fdb: 74 63                	je	0xffffffff8000a040 <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x360>
ffffffff80009fdd: 48 8b 53 30          	movq	0x30(%rbx), %rdx
ffffffff80009fe1: be ff 00 00 00       	movl	$0xff, %esi
ffffffff80009fe6: 44 0f b7 41 62       	movzwl	0x62(%rcx), %r8d
ffffffff80009feb: 45 89 c1             	movl	%r8d, %r9d
ffffffff80009fee: 41 c1 e1 03          	shll	$0x3, %r9d
ffffffff80009ff2: 48 c7 c7 ff ff ff ff 	movq	$-0x1, %rdi
ffffffff80009ff9: 0f 1f 80 00 00 00 00 	nopl	(%rax)
ffffffff8000a000: 4d 85 c9             	testq	%r9, %r9
ffffffff8000a003: 74 2b                	je	0xffffffff8000a030 <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x350>
ffffffff8000a005: 45 31 d2             	xorl	%r10d, %r10d
ffffffff8000a008: 48 39 44 f9 10       	cmpq	%rax, 0x10(%rcx,%rdi,8)
ffffffff8000a00d: 41 0f 95 c2          	setne	%r10b
ffffffff8000a011: 44 0f 47 d6          	cmoval	%esi, %r10d
ffffffff8000a015: 48 ff c7             	incq	%rdi
ffffffff8000a018: 49 83 c1 f8          	addq	$-0x8, %r9
ffffffff8000a01c: 41 80 fa 01          	cmpb	$0x1, %r10b
ffffffff8000a020: 74 de                	je	0xffffffff8000a000 <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x320>
ffffffff8000a022: 45 0f b6 c2          	movzbl	%r10b, %r8d
ffffffff8000a026: 45 85 c0             	testl	%r8d, %r8d
ffffffff8000a029: 74 42                	je	0xffffffff8000a06d <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x38d>
ffffffff8000a02b: eb 06                	jmp	0xffffffff8000a033 <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x353>
ffffffff8000a02d: 0f 1f 00             	nopl	(%rax)
ffffffff8000a030: 4c 89 c7             	movq	%r8, %rdi
ffffffff8000a033: 48 83 ea 01          	subq	$0x1, %rdx
ffffffff8000a037: 72 09                	jb	0xffffffff8000a042 <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x362>
ffffffff8000a039: 48 8b 4c f9 68       	movq	0x68(%rcx,%rdi,8), %rcx
ffffffff8000a03e: eb a6                	jmp	0xffffffff80009fe6 <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x306>
ffffffff8000a040: 31 c9                	xorl	%ecx, %ecx
ffffffff8000a042: 48 8d 53 28          	leaq	0x28(%rbx), %rdx
ffffffff8000a046: 48 89 54 24 10       	movq	%rdx, 0x10(%rsp)
ffffffff8000a04b: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff8000a050: 48 89 4c 24 20       	movq	%rcx, 0x20(%rsp)
ffffffff8000a055: 48 c7 44 24 28 00 00 00 00   	movq	$0x0, 0x28(%rsp)
ffffffff8000a05e: 48 89 7c 24 30       	movq	%rdi, 0x30(%rsp)
ffffffff8000a063: 48 8d 7c 24 10       	leaq	0x10(%rsp), %rdi
ffffffff8000a068: e8 23 9b ff ff       	callq	0xffffffff80003b90 <alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert::h09af50fff71a14f9>
ffffffff8000a06d: f0                   	lock
ffffffff8000a06e: 48 83 63 20 fc       	andq	$-0x4, 0x20(%rbx)
ffffffff8000a073: f0                   	lock
ffffffff8000a074: 49 ff 0e             	decq	(%r14)
ffffffff8000a077: 75 08                	jne	0xffffffff8000a081 <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580+0x3a1>
ffffffff8000a079: 48 89 e7             	movq	%rsp, %rdi
ffffffff8000a07c: e8 7f 1d 00 00       	callq	0xffffffff8000be00 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4>
ffffffff8000a081: f0                   	lock
ffffffff8000a082: 48 83 a3 70 ff ff ff fc      	andq	$-0x4, -0x90(%rbx)
ffffffff8000a08a: f0                   	lock
ffffffff8000a08b: 48 83 2d bd c1 01 00 04      	subq	$0x4, 0x1c1bd(%rip) # 0xffffffff80026250 <taos::events::EVENT_RUNNERS::hc7e00ca3d62eeb3b>
ffffffff8000a093: 48 83 c4 38          	addq	$0x38, %rsp
ffffffff8000a097: 5b                   	popq	%rbx
ffffffff8000a098: 41 5c                	popq	%r12
ffffffff8000a09a: 41 5d                	popq	%r13
ffffffff8000a09c: 41 5e                	popq	%r14
ffffffff8000a09e: 41 5f                	popq	%r15
ffffffff8000a0a0: 5d                   	popq	%rbp
ffffffff8000a0a1: c3                   	retq
ffffffff8000a0a2: be 0f 00 00 00       	movl	$0xf, %esi
ffffffff8000a0a7: 48 c7 c7 c0 e5 01 80 	movq	$-0x7ffe1a40, %rdi      # imm = 0x8001E5C0
ffffffff8000a0ae: 48 c7 c2 f8 e5 01 80 	movq	$-0x7ffe1a08, %rdx      # imm = 0x8001E5F8
ffffffff8000a0b5: e8 d6 28 01 00       	callq	0xffffffff8001c990 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff8000a0ba: 0f 0b                	ud2
ffffffff8000a0bc: bf 04 00 00 00       	movl	$0x4, %edi
ffffffff8000a0c1: be 08 00 00 00       	movl	$0x8, %esi
ffffffff8000a0c6: e8 97 ef 00 00       	callq	0xffffffff80019062 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff8000a0cb: bf 08 00 00 00       	movl	$0x8, %edi
ffffffff8000a0d0: be 50 00 00 00       	movl	$0x50, %esi
ffffffff8000a0d5: e8 88 ef 00 00       	callq	0xffffffff80019062 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff8000a0da: cc                   	int3
ffffffff8000a0db: cc                   	int3
ffffffff8000a0dc: cc                   	int3
ffffffff8000a0dd: cc                   	int3
ffffffff8000a0de: cc                   	int3
ffffffff8000a0df: cc                   	int3

ffffffff8000a0e0 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580>:
ffffffff8000a0e0: 55                   	pushq	%rbp
ffffffff8000a0e1: 41 57                	pushq	%r15
ffffffff8000a0e3: 41 56                	pushq	%r14
ffffffff8000a0e5: 41 55                	pushq	%r13
ffffffff8000a0e7: 41 54                	pushq	%r12
ffffffff8000a0e9: 53                   	pushq	%rbx
ffffffff8000a0ea: 48 81 ec a8 02 00 00 	subq	$0x2a8, %rsp            # imm = 0x2A8
ffffffff8000a0f1: 48 89 fb             	movq	%rdi, %rbx
ffffffff8000a0f4: 0f b6 05 e6 b0 01 00 	movzbl	0x1b0e6(%rip), %eax     # 0xffffffff800251e1 <__rust_no_alloc_shim_is_unstable>
ffffffff8000a0fb: b1 01                	movb	$0x1, %cl
ffffffff8000a0fd: 0f 1f 00             	nopl	(%rax)
ffffffff8000a100: 31 c0                	xorl	%eax, %eax
ffffffff8000a102: f0                   	lock
ffffffff8000a103: 0f b0 0d 46 af 01 00 	cmpxchgb	%cl, 0x1af46(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000a10a: 75 06                	jne	0xffffffff8000a112 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x32>
ffffffff8000a10c: eb 11                	jmp	0xffffffff8000a11f <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x3f>
ffffffff8000a10e: 66 90                	nop
ffffffff8000a110: f3 90                	pause
ffffffff8000a112: 0f b6 05 37 af 01 00 	movzbl	0x1af37(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000a119: 84 c0                	testb	%al, %al
ffffffff8000a11b: 75 f3                	jne	0xffffffff8000a110 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x30>
ffffffff8000a11d: eb e1                	jmp	0xffffffff8000a100 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x20>
ffffffff8000a11f: be 08 00 00 00       	movl	$0x8, %esi
ffffffff8000a124: ba 38 00 00 00       	movl	$0x38, %edx
ffffffff8000a129: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000a130: e8 cb 91 ff ff       	callq	0xffffffff80003300 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff8000a135: c6 05 14 af 01 00 00 	movb	$0x0, 0x1af14(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000a13c: 48 85 c0             	testq	%rax, %rax
ffffffff8000a13f: 0f 84 2b 08 00 00    	je	0xffffffff8000a970 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x890>
ffffffff8000a145: 48 89 c1             	movq	%rax, %rcx
ffffffff8000a148: 48 c7 00 01 00 00 00 	movq	$0x1, (%rax)
ffffffff8000a14f: 48 c7 40 08 01 00 00 00      	movq	$0x1, 0x8(%rax)
ffffffff8000a157: 48 c7 40 10 00 00 00 00      	movq	$0x0, 0x10(%rax)
ffffffff8000a15f: 48 c7 40 18 00 00 00 00      	movq	$0x0, 0x18(%rax)
ffffffff8000a167: 48 c7 40 20 08 00 00 00      	movq	$0x8, 0x20(%rax)
ffffffff8000a16f: 48 c7 40 28 00 00 00 00      	movq	$0x0, 0x28(%rax)
ffffffff8000a177: 48 c7 40 30 00 00 00 00      	movq	$0x0, 0x30(%rax)
ffffffff8000a17f: 48 c7 84 24 90 00 00 00 00 00 00 00  	movq	$0x0, 0x90(%rsp)
ffffffff8000a18b: 48 c7 84 24 88 00 00 00 00 00 00 00  	movq	$0x0, 0x88(%rsp)
ffffffff8000a197: 48 c7 44 24 68 00 00 00 00   	movq	$0x0, 0x68(%rsp)
ffffffff8000a1a0: 48 c7 44 24 70 00 00 00 00   	movq	$0x0, 0x70(%rsp)
ffffffff8000a1a9: 48 c7 44 24 78 00 00 00 00   	movq	$0x0, 0x78(%rsp)
ffffffff8000a1b2: 48 c7 84 24 80 00 00 00 00 00 00 00  	movq	$0x0, 0x80(%rsp)
ffffffff8000a1be: 48 c7 44 24 48 00 00 00 00   	movq	$0x0, 0x48(%rsp)
ffffffff8000a1c7: 48 c7 44 24 50 00 00 00 00   	movq	$0x0, 0x50(%rsp)
ffffffff8000a1d0: 48 c7 44 24 58 00 00 00 00   	movq	$0x0, 0x58(%rsp)
ffffffff8000a1d9: 48 c7 44 24 60 00 00 00 00   	movq	$0x0, 0x60(%rsp)
ffffffff8000a1e2: 48 c7 44 24 28 00 00 00 00   	movq	$0x0, 0x28(%rsp)
ffffffff8000a1eb: 48 c7 44 24 30 00 00 00 00   	movq	$0x0, 0x30(%rsp)
ffffffff8000a1f4: 48 c7 44 24 38 00 00 00 00   	movq	$0x0, 0x38(%rsp)
ffffffff8000a1fd: 48 c7 44 24 40 00 00 00 00   	movq	$0x0, 0x40(%rsp)
ffffffff8000a206: 48 c7 44 24 18 00 00 00 00   	movq	$0x0, 0x18(%rsp)
ffffffff8000a20f: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff8000a218: 48 c7 44 24 10 00 00 00 00   	movq	$0x0, 0x10(%rsp)
ffffffff8000a221: 48 c7 44 24 08 00 00 00 00   	movq	$0x0, 0x8(%rsp)
ffffffff8000a22a: 48 c7 84 24 b0 00 00 00 00 00 00 00  	movq	$0x0, 0xb0(%rsp)
ffffffff8000a236: 48 c7 84 24 a8 00 00 00 00 00 00 00  	movq	$0x0, 0xa8(%rsp)
ffffffff8000a242: 48 c7 84 24 a0 00 00 00 00 00 00 00  	movq	$0x0, 0xa0(%rsp)
ffffffff8000a24e: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff8000a253: 31 c0                	xorl	%eax, %eax
ffffffff8000a255: f0                   	lock
ffffffff8000a256: 48 0f b1 15 f2 bf 01 00      	cmpxchgq	%rdx, 0x1bff2(%rip) # 0xffffffff80026250 <taos::events::EVENT_RUNNERS::hc7e00ca3d62eeb3b>
ffffffff8000a25e: 74 0f                	je	0xffffffff8000a26f <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x18f>
ffffffff8000a260: f3 90                	pause
ffffffff8000a262: 31 c0                	xorl	%eax, %eax
ffffffff8000a264: f0                   	lock
ffffffff8000a265: 48 0f b1 15 e3 bf 01 00      	cmpxchgq	%rdx, 0x1bfe3(%rip) # 0xffffffff80026250 <taos::events::EVENT_RUNNERS::hc7e00ca3d62eeb3b>
ffffffff8000a26d: 75 f1                	jne	0xffffffff8000a260 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x180>
ffffffff8000a26f: 8b 03                	movl	(%rbx), %eax
ffffffff8000a271: 48 c7 84 24 e0 00 00 00 00 00 00 00  	movq	$0x0, 0xe0(%rsp)
ffffffff8000a27d: 48 89 8c 24 e8 00 00 00      	movq	%rcx, 0xe8(%rsp)
ffffffff8000a285: 48 8b 8c 24 88 00 00 00      	movq	0x88(%rsp), %rcx
ffffffff8000a28d: 48 8b 94 24 90 00 00 00      	movq	0x90(%rsp), %rdx
ffffffff8000a295: 48 89 8c 24 f0 00 00 00      	movq	%rcx, 0xf0(%rsp)
ffffffff8000a29d: 48 89 94 24 f8 00 00 00      	movq	%rdx, 0xf8(%rsp)
ffffffff8000a2a5: 48 c7 84 24 00 01 00 00 08 00 00 00  	movq	$0x8, 0x100(%rsp)
ffffffff8000a2b1: 48 8b 4c 24 68       	movq	0x68(%rsp), %rcx
ffffffff8000a2b6: 48 8b 54 24 70       	movq	0x70(%rsp), %rdx
ffffffff8000a2bb: 48 89 8c 24 08 01 00 00      	movq	%rcx, 0x108(%rsp)
ffffffff8000a2c3: 48 89 94 24 10 01 00 00      	movq	%rdx, 0x110(%rsp)
ffffffff8000a2cb: 48 8b 4c 24 78       	movq	0x78(%rsp), %rcx
ffffffff8000a2d0: 48 89 8c 24 18 01 00 00      	movq	%rcx, 0x118(%rsp)
ffffffff8000a2d8: 48 8b 8c 24 80 00 00 00      	movq	0x80(%rsp), %rcx
ffffffff8000a2e0: 48 89 8c 24 20 01 00 00      	movq	%rcx, 0x120(%rsp)
ffffffff8000a2e8: 48 c7 84 24 28 01 00 00 08 00 00 00  	movq	$0x8, 0x128(%rsp)
ffffffff8000a2f4: 48 8b 4c 24 48       	movq	0x48(%rsp), %rcx
ffffffff8000a2f9: 48 8b 54 24 50       	movq	0x50(%rsp), %rdx
ffffffff8000a2fe: 48 89 8c 24 30 01 00 00      	movq	%rcx, 0x130(%rsp)
ffffffff8000a306: 48 89 94 24 38 01 00 00      	movq	%rdx, 0x138(%rsp)
ffffffff8000a30e: 48 8b 4c 24 58       	movq	0x58(%rsp), %rcx
ffffffff8000a313: 48 89 8c 24 40 01 00 00      	movq	%rcx, 0x140(%rsp)
ffffffff8000a31b: 48 8b 4c 24 60       	movq	0x60(%rsp), %rcx
ffffffff8000a320: 48 89 8c 24 48 01 00 00      	movq	%rcx, 0x148(%rsp)
ffffffff8000a328: 48 c7 84 24 50 01 00 00 08 00 00 00  	movq	$0x8, 0x150(%rsp)
ffffffff8000a334: 48 8b 4c 24 40       	movq	0x40(%rsp), %rcx
ffffffff8000a339: 48 89 8c 24 70 01 00 00      	movq	%rcx, 0x170(%rsp)
ffffffff8000a341: 48 8b 4c 24 38       	movq	0x38(%rsp), %rcx
ffffffff8000a346: 48 89 8c 24 68 01 00 00      	movq	%rcx, 0x168(%rsp)
ffffffff8000a34e: 48 8b 4c 24 28       	movq	0x28(%rsp), %rcx
ffffffff8000a353: 48 8b 54 24 30       	movq	0x30(%rsp), %rdx
ffffffff8000a358: 48 89 94 24 60 01 00 00      	movq	%rdx, 0x160(%rsp)
ffffffff8000a360: 48 89 8c 24 58 01 00 00      	movq	%rcx, 0x158(%rsp)
ffffffff8000a368: 48 c7 84 24 78 01 00 00 08 00 00 00  	movq	$0x8, 0x178(%rsp)
ffffffff8000a374: 48 8b 4c 24 18       	movq	0x18(%rsp), %rcx
ffffffff8000a379: 48 8b 54 24 20       	movq	0x20(%rsp), %rdx
ffffffff8000a37e: 48 89 94 24 88 01 00 00      	movq	%rdx, 0x188(%rsp)
ffffffff8000a386: 48 89 8c 24 80 01 00 00      	movq	%rcx, 0x180(%rsp)
ffffffff8000a38e: 48 8b 4c 24 08       	movq	0x8(%rsp), %rcx
ffffffff8000a393: 48 8b 54 24 10       	movq	0x10(%rsp), %rdx
ffffffff8000a398: 48 89 94 24 98 01 00 00      	movq	%rdx, 0x198(%rsp)
ffffffff8000a3a0: 48 89 8c 24 90 01 00 00      	movq	%rcx, 0x190(%rsp)
ffffffff8000a3a8: 48 8b 8c 24 b0 00 00 00      	movq	0xb0(%rsp), %rcx
ffffffff8000a3b0: 48 89 8c 24 b8 01 00 00      	movq	%rcx, 0x1b8(%rsp)
ffffffff8000a3b8: 48 8b 8c 24 a8 00 00 00      	movq	0xa8(%rsp), %rcx
ffffffff8000a3c0: 48 89 8c 24 b0 01 00 00      	movq	%rcx, 0x1b0(%rsp)
ffffffff8000a3c8: 48 8b 8c 24 98 00 00 00      	movq	0x98(%rsp), %rcx
ffffffff8000a3d0: 48 8b 94 24 a0 00 00 00      	movq	0xa0(%rsp), %rdx
ffffffff8000a3d8: 48 89 94 24 a8 01 00 00      	movq	%rdx, 0x1a8(%rsp)
ffffffff8000a3e0: 48 89 8c 24 a0 01 00 00      	movq	%rcx, 0x1a0(%rsp)
ffffffff8000a3e8: 48 8b 0d 69 be 01 00 	movq	0x1be69(%rip), %rcx     # 0xffffffff80026258 <taos::events::EVENT_RUNNERS::hc7e00ca3d62eeb3b+0x8>
ffffffff8000a3ef: 48 85 c9             	testq	%rcx, %rcx
ffffffff8000a3f2: 0f 84 84 01 00 00    	je	0xffffffff8000a57c <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x49c>
ffffffff8000a3f8: 48 8b 15 61 be 01 00 	movq	0x1be61(%rip), %rdx     # 0xffffffff80026260 <taos::events::EVENT_RUNNERS::hc7e00ca3d62eeb3b+0x10>
ffffffff8000a3ff: be ff 00 00 00       	movl	$0xff, %esi
ffffffff8000a404: 44 0f b7 81 d6 09 00 00      	movzwl	0x9d6(%rcx), %r8d
ffffffff8000a40c: 4d 69 d0 e0 00 00 00 	imulq	$0xe0, %r8, %r10
ffffffff8000a413: 48 c7 c7 ff ff ff ff 	movq	$-0x1, %rdi
ffffffff8000a41a: 45 31 c9             	xorl	%r9d, %r9d
ffffffff8000a41d: 0f 1f 00             	nopl	(%rax)
ffffffff8000a420: 4d 39 ca             	cmpq	%r9, %r10
ffffffff8000a423: 74 3b                	je	0xffffffff8000a460 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x380>
ffffffff8000a425: 45 31 db             	xorl	%r11d, %r11d
ffffffff8000a428: 39 84 b9 ac 09 00 00 	cmpl	%eax, 0x9ac(%rcx,%rdi,4)
ffffffff8000a42f: 41 0f 95 c3          	setne	%r11b
ffffffff8000a433: 44 0f 47 de          	cmoval	%esi, %r11d
ffffffff8000a437: 49 81 c1 e0 00 00 00 	addq	$0xe0, %r9
ffffffff8000a43e: 48 ff c7             	incq	%rdi
ffffffff8000a441: 41 80 fb 01          	cmpb	$0x1, %r11b
ffffffff8000a445: 74 d9                	je	0xffffffff8000a420 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x340>
ffffffff8000a447: 45 0f b6 c3          	movzbl	%r11b, %r8d
ffffffff8000a44b: 45 85 c0             	testl	%r8d, %r8d
ffffffff8000a44e: 74 27                	je	0xffffffff8000a477 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x397>
ffffffff8000a450: eb 11                	jmp	0xffffffff8000a463 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x383>
ffffffff8000a452: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
ffffffff8000a460: 4c 89 c7             	movq	%r8, %rdi
ffffffff8000a463: 48 83 ea 01          	subq	$0x1, %rdx
ffffffff8000a467: 0f 82 11 01 00 00    	jb	0xffffffff8000a57e <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x49e>
ffffffff8000a46d: 48 8b 8c f9 d8 09 00 00      	movq	0x9d8(%rcx,%rdi,8), %rcx
ffffffff8000a475: eb 8d                	jmp	0xffffffff8000a404 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x324>
ffffffff8000a477: 4a 8d 1c 09          	leaq	(%rcx,%r9), %rbx
ffffffff8000a47b: 48 81 c3 20 ff ff ff 	addq	$-0xe0, %rbx
ffffffff8000a482: 48 8d bc 24 c8 01 00 00      	leaq	0x1c8(%rsp), %rdi
ffffffff8000a48a: 4c 8b 35 8f bf 02 00 	movq	0x2bf8f(%rip), %r14     # 0xffffffff80036420
ffffffff8000a491: ba e0 00 00 00       	movl	$0xe0, %edx
ffffffff8000a496: 48 89 de             	movq	%rbx, %rsi
ffffffff8000a499: 41 ff d6             	callq	*%r14
ffffffff8000a49c: 48 8d b4 24 e0 00 00 00      	leaq	0xe0(%rsp), %rsi
ffffffff8000a4a4: ba e0 00 00 00       	movl	$0xe0, %edx
ffffffff8000a4a9: 48 89 df             	movq	%rbx, %rdi
ffffffff8000a4ac: 41 ff d6             	callq	*%r14
ffffffff8000a4af: 48 c7 84 24 c0 01 00 00 01 00 00 00  	movq	$0x1, 0x1c0(%rsp)
ffffffff8000a4bb: 4c 8b a4 24 f8 01 00 00      	movq	0x1f8(%rsp), %r12
ffffffff8000a4c3: 4d 85 e4             	testq	%r12, %r12
ffffffff8000a4c6: 74 4d                	je	0xffffffff8000a515 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x435>
ffffffff8000a4c8: 48 8b 84 24 f0 01 00 00      	movq	0x1f0(%rsp), %rax
ffffffff8000a4d0: 48 8b 8c 24 e0 01 00 00      	movq	0x1e0(%rsp), %rcx
ffffffff8000a4d8: 48 8b 9c 24 e8 01 00 00      	movq	0x1e8(%rsp), %rbx
ffffffff8000a4e0: 31 d2                	xorl	%edx, %edx
ffffffff8000a4e2: 48 39 c8             	cmpq	%rcx, %rax
ffffffff8000a4e5: 48 89 ce             	movq	%rcx, %rsi
ffffffff8000a4e8: 48 0f 42 f2          	cmovbq	%rdx, %rsi
ffffffff8000a4ec: 48 29 f0             	subq	%rsi, %rax
ffffffff8000a4ef: 49 89 cd             	movq	%rcx, %r13
ffffffff8000a4f2: 49 29 c5             	subq	%rax, %r13
ffffffff8000a4f5: 4a 8d 2c 20          	leaq	(%rax,%r12), %rbp
ffffffff8000a4f9: 4d 89 e7             	movq	%r12, %r15
ffffffff8000a4fc: 4d 29 ef             	subq	%r13, %r15
ffffffff8000a4ff: 4c 0f 42 fa          	cmovbq	%rdx, %r15
ffffffff8000a503: 48 0f 47 e9          	cmovaq	%rcx, %rbp
ffffffff8000a507: 48 29 c5             	subq	%rax, %rbp
ffffffff8000a50a: 0f 85 a7 03 00 00    	jne	0xffffffff8000a8b7 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x7d7>
ffffffff8000a510: 4d 39 e5             	cmpq	%r12, %r13
ffffffff8000a513: 72 54                	jb	0xffffffff8000a569 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x489>
ffffffff8000a515: 48 8b 8c 24 e0 01 00 00      	movq	0x1e0(%rsp), %rcx
ffffffff8000a51d: 48 85 c9             	testq	%rcx, %rcx
ffffffff8000a520: 0f 84 ba 00 00 00    	je	0xffffffff8000a5e0 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x500>
ffffffff8000a526: 48 8b b4 24 e8 01 00 00      	movq	0x1e8(%rsp), %rsi
ffffffff8000a52e: 48 c1 e1 03          	shlq	$0x3, %rcx
ffffffff8000a532: b2 01                	movb	$0x1, %dl
ffffffff8000a534: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
ffffffff8000a540: 31 c0                	xorl	%eax, %eax
ffffffff8000a542: f0                   	lock
ffffffff8000a543: 0f b0 15 06 ab 01 00 	cmpxchgb	%dl, 0x1ab06(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000a54a: 75 06                	jne	0xffffffff8000a552 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x472>
ffffffff8000a54c: eb 7a                	jmp	0xffffffff8000a5c8 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x4e8>
ffffffff8000a54e: 66 90                	nop
ffffffff8000a550: f3 90                	pause
ffffffff8000a552: 0f b6 05 f7 aa 01 00 	movzbl	0x1aaf7(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000a559: 84 c0                	testb	%al, %al
ffffffff8000a55b: 75 f3                	jne	0xffffffff8000a550 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x470>
ffffffff8000a55d: eb e1                	jmp	0xffffffff8000a540 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x460>
ffffffff8000a55f: 90                   	nop
ffffffff8000a560: 48 83 c3 08          	addq	$0x8, %rbx
ffffffff8000a564: 49 ff cf             	decq	%r15
ffffffff8000a567: 74 ac                	je	0xffffffff8000a515 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x435>
ffffffff8000a569: 48 8b 03             	movq	(%rbx), %rax
ffffffff8000a56c: f0                   	lock
ffffffff8000a56d: 48 ff 08             	decq	(%rax)
ffffffff8000a570: 75 ee                	jne	0xffffffff8000a560 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x480>
ffffffff8000a572: 48 89 df             	movq	%rbx, %rdi
ffffffff8000a575: e8 86 18 00 00       	callq	0xffffffff8000be00 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4>
ffffffff8000a57a: eb e4                	jmp	0xffffffff8000a560 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x480>
ffffffff8000a57c: 31 c9                	xorl	%ecx, %ecx
ffffffff8000a57e: 48 c7 84 24 b8 00 00 00 58 62 02 80  	movq	$-0x7ffd9da8, 0xb8(%rsp) # imm = 0x80026258
ffffffff8000a58a: 48 89 8c 24 c0 00 00 00      	movq	%rcx, 0xc0(%rsp)
ffffffff8000a592: 48 c7 84 24 c8 00 00 00 00 00 00 00  	movq	$0x0, 0xc8(%rsp)
ffffffff8000a59e: 48 89 bc 24 d0 00 00 00      	movq	%rdi, 0xd0(%rsp)
ffffffff8000a5a6: 48 89 84 24 d8 00 00 00      	movq	%rax, 0xd8(%rsp)
ffffffff8000a5ae: 48 8d bc 24 b8 00 00 00      	leaq	0xb8(%rsp), %rdi
ffffffff8000a5b6: 48 8d b4 24 e0 00 00 00      	leaq	0xe0(%rsp), %rsi
ffffffff8000a5be: e8 ad 97 ff ff       	callq	0xffffffff80003d70 <alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert::h78b76f7f376ae27e>
ffffffff8000a5c3: e9 d4 02 00 00       	jmp	0xffffffff8000a89c <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x7bc>
ffffffff8000a5c8: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff8000a5cd: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000a5d4: e8 c7 8a ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000a5d9: c6 05 70 aa 01 00 00 	movb	$0x0, 0x1aa70(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000a5e0: 4c 8b a4 24 20 02 00 00      	movq	0x220(%rsp), %r12
ffffffff8000a5e8: 4d 85 e4             	testq	%r12, %r12
ffffffff8000a5eb: 74 4d                	je	0xffffffff8000a63a <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x55a>
ffffffff8000a5ed: 48 8b 84 24 18 02 00 00      	movq	0x218(%rsp), %rax
ffffffff8000a5f5: 48 8b 8c 24 08 02 00 00      	movq	0x208(%rsp), %rcx
ffffffff8000a5fd: 48 8b 9c 24 10 02 00 00      	movq	0x210(%rsp), %rbx
ffffffff8000a605: 31 d2                	xorl	%edx, %edx
ffffffff8000a607: 48 39 c8             	cmpq	%rcx, %rax
ffffffff8000a60a: 48 89 ce             	movq	%rcx, %rsi
ffffffff8000a60d: 48 0f 42 f2          	cmovbq	%rdx, %rsi
ffffffff8000a611: 48 29 f0             	subq	%rsi, %rax
ffffffff8000a614: 49 89 cd             	movq	%rcx, %r13
ffffffff8000a617: 49 29 c5             	subq	%rax, %r13
ffffffff8000a61a: 4a 8d 2c 20          	leaq	(%rax,%r12), %rbp
ffffffff8000a61e: 4d 89 e7             	movq	%r12, %r15
ffffffff8000a621: 4d 29 ef             	subq	%r13, %r15
ffffffff8000a624: 4c 0f 42 fa          	cmovbq	%rdx, %r15
ffffffff8000a628: 48 0f 47 e9          	cmovaq	%rcx, %rbp
ffffffff8000a62c: 48 29 c5             	subq	%rax, %rbp
ffffffff8000a62f: 0f 85 ab 02 00 00    	jne	0xffffffff8000a8e0 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x800>
ffffffff8000a635: 4d 39 e5             	cmpq	%r12, %r13
ffffffff8000a638: 72 4f                	jb	0xffffffff8000a689 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x5a9>
ffffffff8000a63a: 48 8b 8c 24 08 02 00 00      	movq	0x208(%rsp), %rcx
ffffffff8000a642: 48 85 c9             	testq	%rcx, %rcx
ffffffff8000a645: 74 6d                	je	0xffffffff8000a6b4 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x5d4>
ffffffff8000a647: 48 8b b4 24 10 02 00 00      	movq	0x210(%rsp), %rsi
ffffffff8000a64f: 48 c1 e1 03          	shlq	$0x3, %rcx
ffffffff8000a653: b2 01                	movb	$0x1, %dl
ffffffff8000a655: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff8000a660: 31 c0                	xorl	%eax, %eax
ffffffff8000a662: f0                   	lock
ffffffff8000a663: 0f b0 15 e6 a9 01 00 	cmpxchgb	%dl, 0x1a9e6(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000a66a: 75 06                	jne	0xffffffff8000a672 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x592>
ffffffff8000a66c: eb 2e                	jmp	0xffffffff8000a69c <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x5bc>
ffffffff8000a66e: 66 90                	nop
ffffffff8000a670: f3 90                	pause
ffffffff8000a672: 0f b6 05 d7 a9 01 00 	movzbl	0x1a9d7(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000a679: 84 c0                	testb	%al, %al
ffffffff8000a67b: 75 f3                	jne	0xffffffff8000a670 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x590>
ffffffff8000a67d: eb e1                	jmp	0xffffffff8000a660 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x580>
ffffffff8000a67f: 90                   	nop
ffffffff8000a680: 48 83 c3 08          	addq	$0x8, %rbx
ffffffff8000a684: 49 ff cf             	decq	%r15
ffffffff8000a687: 74 b1                	je	0xffffffff8000a63a <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x55a>
ffffffff8000a689: 48 8b 03             	movq	(%rbx), %rax
ffffffff8000a68c: f0                   	lock
ffffffff8000a68d: 48 ff 08             	decq	(%rax)
ffffffff8000a690: 75 ee                	jne	0xffffffff8000a680 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x5a0>
ffffffff8000a692: 48 89 df             	movq	%rbx, %rdi
ffffffff8000a695: e8 66 17 00 00       	callq	0xffffffff8000be00 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4>
ffffffff8000a69a: eb e4                	jmp	0xffffffff8000a680 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x5a0>
ffffffff8000a69c: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff8000a6a1: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000a6a8: e8 f3 89 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000a6ad: c6 05 9c a9 01 00 00 	movb	$0x0, 0x1a99c(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000a6b4: 4c 8b a4 24 48 02 00 00      	movq	0x248(%rsp), %r12
ffffffff8000a6bc: 4d 85 e4             	testq	%r12, %r12
ffffffff8000a6bf: 74 4d                	je	0xffffffff8000a70e <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x62e>
ffffffff8000a6c1: 48 8b 84 24 40 02 00 00      	movq	0x240(%rsp), %rax
ffffffff8000a6c9: 48 8b 8c 24 30 02 00 00      	movq	0x230(%rsp), %rcx
ffffffff8000a6d1: 48 8b 9c 24 38 02 00 00      	movq	0x238(%rsp), %rbx
ffffffff8000a6d9: 31 d2                	xorl	%edx, %edx
ffffffff8000a6db: 48 39 c8             	cmpq	%rcx, %rax
ffffffff8000a6de: 48 89 ce             	movq	%rcx, %rsi
ffffffff8000a6e1: 48 0f 42 f2          	cmovbq	%rdx, %rsi
ffffffff8000a6e5: 48 29 f0             	subq	%rsi, %rax
ffffffff8000a6e8: 49 89 cd             	movq	%rcx, %r13
ffffffff8000a6eb: 49 29 c5             	subq	%rax, %r13
ffffffff8000a6ee: 4a 8d 2c 20          	leaq	(%rax,%r12), %rbp
ffffffff8000a6f2: 4d 89 e7             	movq	%r12, %r15
ffffffff8000a6f5: 4d 29 ef             	subq	%r13, %r15
ffffffff8000a6f8: 4c 0f 42 fa          	cmovbq	%rdx, %r15
ffffffff8000a6fc: 48 0f 47 e9          	cmovaq	%rcx, %rbp
ffffffff8000a700: 48 29 c5             	subq	%rax, %rbp
ffffffff8000a703: 0f 85 07 02 00 00    	jne	0xffffffff8000a910 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x830>
ffffffff8000a709: 4d 39 e5             	cmpq	%r12, %r13
ffffffff8000a70c: 72 4b                	jb	0xffffffff8000a759 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x679>
ffffffff8000a70e: 48 8b 8c 24 30 02 00 00      	movq	0x230(%rsp), %rcx
ffffffff8000a716: 48 85 c9             	testq	%rcx, %rcx
ffffffff8000a719: 74 69                	je	0xffffffff8000a784 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x6a4>
ffffffff8000a71b: 48 8b b4 24 38 02 00 00      	movq	0x238(%rsp), %rsi
ffffffff8000a723: 48 c1 e1 03          	shlq	$0x3, %rcx
ffffffff8000a727: b2 01                	movb	$0x1, %dl
ffffffff8000a729: 0f 1f 80 00 00 00 00 	nopl	(%rax)
ffffffff8000a730: 31 c0                	xorl	%eax, %eax
ffffffff8000a732: f0                   	lock
ffffffff8000a733: 0f b0 15 16 a9 01 00 	cmpxchgb	%dl, 0x1a916(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000a73a: 75 06                	jne	0xffffffff8000a742 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x662>
ffffffff8000a73c: eb 2e                	jmp	0xffffffff8000a76c <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x68c>
ffffffff8000a73e: 66 90                	nop
ffffffff8000a740: f3 90                	pause
ffffffff8000a742: 0f b6 05 07 a9 01 00 	movzbl	0x1a907(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000a749: 84 c0                	testb	%al, %al
ffffffff8000a74b: 75 f3                	jne	0xffffffff8000a740 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x660>
ffffffff8000a74d: eb e1                	jmp	0xffffffff8000a730 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x650>
ffffffff8000a74f: 90                   	nop
ffffffff8000a750: 48 83 c3 08          	addq	$0x8, %rbx
ffffffff8000a754: 49 ff cf             	decq	%r15
ffffffff8000a757: 74 b5                	je	0xffffffff8000a70e <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x62e>
ffffffff8000a759: 48 8b 03             	movq	(%rbx), %rax
ffffffff8000a75c: f0                   	lock
ffffffff8000a75d: 48 ff 08             	decq	(%rax)
ffffffff8000a760: 75 ee                	jne	0xffffffff8000a750 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x670>
ffffffff8000a762: 48 89 df             	movq	%rbx, %rdi
ffffffff8000a765: e8 96 16 00 00       	callq	0xffffffff8000be00 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4>
ffffffff8000a76a: eb e4                	jmp	0xffffffff8000a750 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x670>
ffffffff8000a76c: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff8000a771: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000a778: e8 23 89 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000a77d: c6 05 cc a8 01 00 00 	movb	$0x0, 0x1a8cc(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000a784: 4c 8b a4 24 70 02 00 00      	movq	0x270(%rsp), %r12
ffffffff8000a78c: 4d 85 e4             	testq	%r12, %r12
ffffffff8000a78f: 74 4d                	je	0xffffffff8000a7de <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x6fe>
ffffffff8000a791: 48 8b 84 24 68 02 00 00      	movq	0x268(%rsp), %rax
ffffffff8000a799: 48 8b 8c 24 58 02 00 00      	movq	0x258(%rsp), %rcx
ffffffff8000a7a1: 48 8b 9c 24 60 02 00 00      	movq	0x260(%rsp), %rbx
ffffffff8000a7a9: 31 d2                	xorl	%edx, %edx
ffffffff8000a7ab: 48 39 c8             	cmpq	%rcx, %rax
ffffffff8000a7ae: 48 89 ce             	movq	%rcx, %rsi
ffffffff8000a7b1: 48 0f 42 f2          	cmovbq	%rdx, %rsi
ffffffff8000a7b5: 48 29 f0             	subq	%rsi, %rax
ffffffff8000a7b8: 49 89 cd             	movq	%rcx, %r13
ffffffff8000a7bb: 49 29 c5             	subq	%rax, %r13
ffffffff8000a7be: 4a 8d 2c 20          	leaq	(%rax,%r12), %rbp
ffffffff8000a7c2: 4d 89 e7             	movq	%r12, %r15
ffffffff8000a7c5: 4d 29 ef             	subq	%r13, %r15
ffffffff8000a7c8: 4c 0f 42 fa          	cmovbq	%rdx, %r15
ffffffff8000a7cc: 48 0f 47 e9          	cmovaq	%rcx, %rbp
ffffffff8000a7d0: 48 29 c5             	subq	%rax, %rbp
ffffffff8000a7d3: 0f 85 67 01 00 00    	jne	0xffffffff8000a940 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x860>
ffffffff8000a7d9: 4d 39 e5             	cmpq	%r12, %r13
ffffffff8000a7dc: 72 4b                	jb	0xffffffff8000a829 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x749>
ffffffff8000a7de: 48 8b 8c 24 58 02 00 00      	movq	0x258(%rsp), %rcx
ffffffff8000a7e6: 48 85 c9             	testq	%rcx, %rcx
ffffffff8000a7e9: 74 69                	je	0xffffffff8000a854 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x774>
ffffffff8000a7eb: 48 8b b4 24 60 02 00 00      	movq	0x260(%rsp), %rsi
ffffffff8000a7f3: 48 c1 e1 03          	shlq	$0x3, %rcx
ffffffff8000a7f7: b2 01                	movb	$0x1, %dl
ffffffff8000a7f9: 0f 1f 80 00 00 00 00 	nopl	(%rax)
ffffffff8000a800: 31 c0                	xorl	%eax, %eax
ffffffff8000a802: f0                   	lock
ffffffff8000a803: 0f b0 15 46 a8 01 00 	cmpxchgb	%dl, 0x1a846(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000a80a: 75 06                	jne	0xffffffff8000a812 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x732>
ffffffff8000a80c: eb 2e                	jmp	0xffffffff8000a83c <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x75c>
ffffffff8000a80e: 66 90                	nop
ffffffff8000a810: f3 90                	pause
ffffffff8000a812: 0f b6 05 37 a8 01 00 	movzbl	0x1a837(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000a819: 84 c0                	testb	%al, %al
ffffffff8000a81b: 75 f3                	jne	0xffffffff8000a810 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x730>
ffffffff8000a81d: eb e1                	jmp	0xffffffff8000a800 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x720>
ffffffff8000a81f: 90                   	nop
ffffffff8000a820: 48 83 c3 08          	addq	$0x8, %rbx
ffffffff8000a824: 49 ff cf             	decq	%r15
ffffffff8000a827: 74 b5                	je	0xffffffff8000a7de <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x6fe>
ffffffff8000a829: 48 8b 03             	movq	(%rbx), %rax
ffffffff8000a82c: f0                   	lock
ffffffff8000a82d: 48 ff 08             	decq	(%rax)
ffffffff8000a830: 75 ee                	jne	0xffffffff8000a820 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x740>
ffffffff8000a832: 48 89 df             	movq	%rbx, %rdi
ffffffff8000a835: e8 c6 15 00 00       	callq	0xffffffff8000be00 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4>
ffffffff8000a83a: eb e4                	jmp	0xffffffff8000a820 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x740>
ffffffff8000a83c: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff8000a841: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000a848: e8 53 88 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000a84d: c6 05 fc a7 01 00 00 	movb	$0x0, 0x1a7fc(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000a854: 48 8b 84 24 d0 01 00 00      	movq	0x1d0(%rsp), %rax
ffffffff8000a85c: f0                   	lock
ffffffff8000a85d: 48 ff 08             	decq	(%rax)
ffffffff8000a860: 75 0d                	jne	0xffffffff8000a86f <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x78f>
ffffffff8000a862: 48 8d bc 24 d0 01 00 00      	leaq	0x1d0(%rsp), %rdi
ffffffff8000a86a: e8 f1 16 00 00       	callq	0xffffffff8000bf60 <alloc::sync::Arc<T,A>::drop_slow::h4227faaa26f219fd>
ffffffff8000a86f: 48 8d bc 24 80 02 00 00      	leaq	0x280(%rsp), %rdi
ffffffff8000a877: e8 c4 18 00 00       	callq	0xffffffff8000c140 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754>
ffffffff8000a87c: 48 8b 84 24 98 02 00 00      	movq	0x298(%rsp), %rax
ffffffff8000a884: 48 85 c0             	testq	%rax, %rax
ffffffff8000a887: 74 13                	je	0xffffffff8000a89c <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x7bc>
ffffffff8000a889: f0                   	lock
ffffffff8000a88a: 48 ff 08             	decq	(%rax)
ffffffff8000a88d: 75 0d                	jne	0xffffffff8000a89c <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x7bc>
ffffffff8000a88f: 48 8d bc 24 98 02 00 00      	leaq	0x298(%rsp), %rdi
ffffffff8000a897: e8 64 15 00 00       	callq	0xffffffff8000be00 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4>
ffffffff8000a89c: f0                   	lock
ffffffff8000a89d: 48 83 25 ab b9 01 00 fc      	andq	$-0x4, 0x1b9ab(%rip) # 0xffffffff80026250 <taos::events::EVENT_RUNNERS::hc7e00ca3d62eeb3b>
ffffffff8000a8a5: 48 81 c4 a8 02 00 00 	addq	$0x2a8, %rsp            # imm = 0x2A8
ffffffff8000a8ac: 5b                   	popq	%rbx
ffffffff8000a8ad: 41 5c                	popq	%r12
ffffffff8000a8af: 41 5d                	popq	%r13
ffffffff8000a8b1: 41 5e                	popq	%r14
ffffffff8000a8b3: 41 5f                	popq	%r15
ffffffff8000a8b5: 5d                   	popq	%rbp
ffffffff8000a8b6: c3                   	retq
ffffffff8000a8b7: 4c 8d 34 c3          	leaq	(%rbx,%rax,8), %r14
ffffffff8000a8bb: eb 10                	jmp	0xffffffff8000a8cd <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x7ed>
ffffffff8000a8bd: 0f 1f 00             	nopl	(%rax)
ffffffff8000a8c0: 49 83 c6 08          	addq	$0x8, %r14
ffffffff8000a8c4: 48 ff cd             	decq	%rbp
ffffffff8000a8c7: 0f 84 43 fc ff ff    	je	0xffffffff8000a510 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x430>
ffffffff8000a8cd: 49 8b 06             	movq	(%r14), %rax
ffffffff8000a8d0: f0                   	lock
ffffffff8000a8d1: 48 ff 08             	decq	(%rax)
ffffffff8000a8d4: 75 ea                	jne	0xffffffff8000a8c0 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x7e0>
ffffffff8000a8d6: 4c 89 f7             	movq	%r14, %rdi
ffffffff8000a8d9: e8 22 15 00 00       	callq	0xffffffff8000be00 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4>
ffffffff8000a8de: eb e0                	jmp	0xffffffff8000a8c0 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x7e0>
ffffffff8000a8e0: 4c 8d 34 c3          	leaq	(%rbx,%rax,8), %r14
ffffffff8000a8e4: eb 17                	jmp	0xffffffff8000a8fd <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x81d>
ffffffff8000a8e6: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
ffffffff8000a8f0: 49 83 c6 08          	addq	$0x8, %r14
ffffffff8000a8f4: 48 ff cd             	decq	%rbp
ffffffff8000a8f7: 0f 84 38 fd ff ff    	je	0xffffffff8000a635 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x555>
ffffffff8000a8fd: 49 8b 06             	movq	(%r14), %rax
ffffffff8000a900: f0                   	lock
ffffffff8000a901: 48 ff 08             	decq	(%rax)
ffffffff8000a904: 75 ea                	jne	0xffffffff8000a8f0 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x810>
ffffffff8000a906: 4c 89 f7             	movq	%r14, %rdi
ffffffff8000a909: e8 f2 14 00 00       	callq	0xffffffff8000be00 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4>
ffffffff8000a90e: eb e0                	jmp	0xffffffff8000a8f0 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x810>
ffffffff8000a910: 4c 8d 34 c3          	leaq	(%rbx,%rax,8), %r14
ffffffff8000a914: eb 17                	jmp	0xffffffff8000a92d <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x84d>
ffffffff8000a916: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
ffffffff8000a920: 49 83 c6 08          	addq	$0x8, %r14
ffffffff8000a924: 48 ff cd             	decq	%rbp
ffffffff8000a927: 0f 84 dc fd ff ff    	je	0xffffffff8000a709 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x629>
ffffffff8000a92d: 49 8b 06             	movq	(%r14), %rax
ffffffff8000a930: f0                   	lock
ffffffff8000a931: 48 ff 08             	decq	(%rax)
ffffffff8000a934: 75 ea                	jne	0xffffffff8000a920 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x840>
ffffffff8000a936: 4c 89 f7             	movq	%r14, %rdi
ffffffff8000a939: e8 c2 14 00 00       	callq	0xffffffff8000be00 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4>
ffffffff8000a93e: eb e0                	jmp	0xffffffff8000a920 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x840>
ffffffff8000a940: 4c 8d 34 c3          	leaq	(%rbx,%rax,8), %r14
ffffffff8000a944: eb 17                	jmp	0xffffffff8000a95d <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x87d>
ffffffff8000a946: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
ffffffff8000a950: 49 83 c6 08          	addq	$0x8, %r14
ffffffff8000a954: 48 ff cd             	decq	%rbp
ffffffff8000a957: 0f 84 7c fe ff ff    	je	0xffffffff8000a7d9 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x6f9>
ffffffff8000a95d: 49 8b 06             	movq	(%r14), %rax
ffffffff8000a960: f0                   	lock
ffffffff8000a961: 48 ff 08             	decq	(%rax)
ffffffff8000a964: 75 ea                	jne	0xffffffff8000a950 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x870>
ffffffff8000a966: 4c 89 f7             	movq	%r14, %rdi
ffffffff8000a969: e8 92 14 00 00       	callq	0xffffffff8000be00 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4>
ffffffff8000a96e: eb e0                	jmp	0xffffffff8000a950 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580+0x870>
ffffffff8000a970: bf 08 00 00 00       	movl	$0x8, %edi
ffffffff8000a975: be 38 00 00 00       	movl	$0x38, %esi
ffffffff8000a97a: e8 e3 e6 00 00       	callq	0xffffffff80019062 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff8000a97f: cc                   	int3

ffffffff8000a980 <taos::events::current_running_event_info::h26232e862fef7a5d>:
ffffffff8000a980: 50                   	pushq	%rax
ffffffff8000a981: 48 b8 fc ff ff ff ff ff ff 7f	movabsq	$0x7ffffffffffffffc, %rax # imm = 0x7FFFFFFFFFFFFFFC
ffffffff8000a98b: b9 04 00 00 00       	movl	$0x4, %ecx
ffffffff8000a990: f0                   	lock
ffffffff8000a991: 48 0f c1 0d b7 b8 01 00      	xaddq	%rcx, 0x1b8b7(%rip) # 0xffffffff80026250 <taos::events::EVENT_RUNNERS::hc7e00ca3d62eeb3b>
ffffffff8000a999: 48 39 c1             	cmpq	%rax, %rcx
ffffffff8000a99c: 77 25                	ja	0xffffffff8000a9c3 <taos::events::current_running_event_info::h26232e862fef7a5d+0x43>
ffffffff8000a99e: 66 90                	nop
ffffffff8000a9a0: f6 c1 03             	testb	$0x3, %cl
ffffffff8000a9a3: 74 3f                	je	0xffffffff8000a9e4 <taos::events::current_running_event_info::h26232e862fef7a5d+0x64>
ffffffff8000a9a5: f0                   	lock
ffffffff8000a9a6: 48 83 2d a2 b8 01 00 04      	subq	$0x4, 0x1b8a2(%rip) # 0xffffffff80026250 <taos::events::EVENT_RUNNERS::hc7e00ca3d62eeb3b>
ffffffff8000a9ae: f3 90                	pause
ffffffff8000a9b0: b9 04 00 00 00       	movl	$0x4, %ecx
ffffffff8000a9b5: f0                   	lock
ffffffff8000a9b6: 48 0f c1 0d 92 b8 01 00      	xaddq	%rcx, 0x1b892(%rip) # 0xffffffff80026250 <taos::events::EVENT_RUNNERS::hc7e00ca3d62eeb3b>
ffffffff8000a9be: 48 39 c1             	cmpq	%rax, %rcx
ffffffff8000a9c1: 76 dd                	jbe	0xffffffff8000a9a0 <taos::events::current_running_event_info::h26232e862fef7a5d+0x20>
ffffffff8000a9c3: f0                   	lock
ffffffff8000a9c4: 48 83 2d 84 b8 01 00 04      	subq	$0x4, 0x1b884(%rip) # 0xffffffff80026250 <taos::events::EVENT_RUNNERS::hc7e00ca3d62eeb3b>
ffffffff8000a9cc: be 2c 00 00 00       	movl	$0x2c, %esi
ffffffff8000a9d1: 48 c7 c7 d0 dc 01 80 	movq	$-0x7ffe2330, %rdi      # imm = 0x8001DCD0
ffffffff8000a9d8: 48 c7 c2 58 dd 01 80 	movq	$-0x7ffe22a8, %rdx      # imm = 0x8001DD58
ffffffff8000a9df: e8 8c 1a 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000a9e4: 48 8b 0d 6d b8 01 00 	movq	0x1b86d(%rip), %rcx     # 0xffffffff80026258 <taos::events::EVENT_RUNNERS::hc7e00ca3d62eeb3b+0x8>
ffffffff8000a9eb: 48 85 c9             	testq	%rcx, %rcx
ffffffff8000a9ee: 0f 84 ec 00 00 00    	je	0xffffffff8000aae0 <taos::events::current_running_event_info::h26232e862fef7a5d+0x160>
ffffffff8000a9f4: 48 8b 05 65 b8 01 00 	movq	0x1b865(%rip), %rax     # 0xffffffff80026260 <taos::events::EVENT_RUNNERS::hc7e00ca3d62eeb3b+0x10>
ffffffff8000a9fb: ba ff 00 00 00       	movl	$0xff, %edx
ffffffff8000aa00: 44 0f b7 89 d6 09 00 00      	movzwl	0x9d6(%rcx), %r9d
ffffffff8000aa08: 4d 69 d1 e0 00 00 00 	imulq	$0xe0, %r9, %r10
ffffffff8000aa0f: 49 c7 c0 ff ff ff ff 	movq	$-0x1, %r8
ffffffff8000aa16: 31 f6                	xorl	%esi, %esi
ffffffff8000aa18: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
ffffffff8000aa20: 49 39 f2             	cmpq	%rsi, %r10
ffffffff8000aa23: 74 3b                	je	0xffffffff8000aa60 <taos::events::current_running_event_info::h26232e862fef7a5d+0xe0>
ffffffff8000aa25: 45 31 db             	xorl	%r11d, %r11d
ffffffff8000aa28: 42 39 bc 81 ac 09 00 00      	cmpl	%edi, 0x9ac(%rcx,%r8,4)
ffffffff8000aa30: 41 0f 95 c3          	setne	%r11b
ffffffff8000aa34: 44 0f 47 da          	cmoval	%edx, %r11d
ffffffff8000aa38: 48 81 c6 e0 00 00 00 	addq	$0xe0, %rsi
ffffffff8000aa3f: 49 ff c0             	incq	%r8
ffffffff8000aa42: 41 80 fb 01          	cmpb	$0x1, %r11b
ffffffff8000aa46: 74 d8                	je	0xffffffff8000aa20 <taos::events::current_running_event_info::h26232e862fef7a5d+0xa0>
ffffffff8000aa48: 45 0f b6 cb          	movzbl	%r11b, %r9d
ffffffff8000aa4c: 45 85 c9             	testl	%r9d, %r9d
ffffffff8000aa4f: 75 12                	jne	0xffffffff8000aa63 <taos::events::current_running_event_info::h26232e862fef7a5d+0xe3>
ffffffff8000aa51: eb 20                	jmp	0xffffffff8000aa73 <taos::events::current_running_event_info::h26232e862fef7a5d+0xf3>
ffffffff8000aa53: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
ffffffff8000aa60: 4d 89 c8             	movq	%r9, %r8
ffffffff8000aa63: 48 83 e8 01          	subq	$0x1, %rax
ffffffff8000aa67: 72 77                	jb	0xffffffff8000aae0 <taos::events::current_running_event_info::h26232e862fef7a5d+0x160>
ffffffff8000aa69: 4a 8b 8c c1 d8 09 00 00      	movq	0x9d8(%rcx,%r8,8), %rcx
ffffffff8000aa71: eb 8d                	jmp	0xffffffff8000aa00 <taos::events::current_running_event_info::h26232e862fef7a5d+0x80>
ffffffff8000aa73: 31 d2                	xorl	%edx, %edx
ffffffff8000aa75: bf 01 00 00 00       	movl	$0x1, %edi
ffffffff8000aa7a: 31 c0                	xorl	%eax, %eax
ffffffff8000aa7c: f0                   	lock
ffffffff8000aa7d: 48 0f b1 bc 31 20 ff ff ff   	cmpxchgq	%rdi, -0xe0(%rcx,%rsi)
ffffffff8000aa86: 74 18                	je	0xffffffff8000aaa0 <taos::events::current_running_event_info::h26232e862fef7a5d+0x120>
ffffffff8000aa88: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
ffffffff8000aa90: f3 90                	pause
ffffffff8000aa92: 31 c0                	xorl	%eax, %eax
ffffffff8000aa94: f0                   	lock
ffffffff8000aa95: 48 0f b1 bc 31 20 ff ff ff   	cmpxchgq	%rdi, -0xe0(%rcx,%rsi)
ffffffff8000aa9e: 75 f0                	jne	0xffffffff8000aa90 <taos::events::current_running_event_info::h26232e862fef7a5d+0x110>
ffffffff8000aaa0: 48 8b 7c 31 f0       	movq	-0x10(%rcx,%rsi), %rdi
ffffffff8000aaa5: 48 85 ff             	testq	%rdi, %rdi
ffffffff8000aaa8: 74 1c                	je	0xffffffff8000aac6 <taos::events::current_running_event_info::h26232e862fef7a5d+0x146>
ffffffff8000aaaa: 48 8b 47 38          	movq	0x38(%rdi), %rax
ffffffff8000aaae: 8b 57 48             	movl	0x48(%rdi), %edx
ffffffff8000aab1: f0                   	lock
ffffffff8000aab2: 48 83 a4 31 20 ff ff ff fc   	andq	$-0x4, -0xe0(%rcx,%rsi)
ffffffff8000aabb: f0                   	lock
ffffffff8000aabc: 48 83 2d 8c b7 01 00 04      	subq	$0x4, 0x1b78c(%rip) # 0xffffffff80026250 <taos::events::EVENT_RUNNERS::hc7e00ca3d62eeb3b>
ffffffff8000aac4: 59                   	popq	%rcx
ffffffff8000aac5: c3                   	retq
ffffffff8000aac6: b8 03 00 00 00       	movl	$0x3, %eax
ffffffff8000aacb: f0                   	lock
ffffffff8000aacc: 48 83 a4 31 20 ff ff ff fc   	andq	$-0x4, -0xe0(%rcx,%rsi)
ffffffff8000aad5: f0                   	lock
ffffffff8000aad6: 48 83 2d 72 b7 01 00 04      	subq	$0x4, 0x1b772(%rip) # 0xffffffff80026250 <taos::events::EVENT_RUNNERS::hc7e00ca3d62eeb3b>
ffffffff8000aade: 59                   	popq	%rcx
ffffffff8000aadf: c3                   	retq
ffffffff8000aae0: be 0f 00 00 00       	movl	$0xf, %esi
ffffffff8000aae5: 48 c7 c7 c0 e5 01 80 	movq	$-0x7ffe1a40, %rdi      # imm = 0x8001E5C0
ffffffff8000aaec: 48 c7 c2 10 e6 01 80 	movq	$-0x7ffe19f0, %rdx      # imm = 0x8001E610
ffffffff8000aaf3: e8 98 1e 01 00       	callq	0xffffffff8001c990 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff8000aaf8: cc                   	int3
ffffffff8000aaf9: cc                   	int3
ffffffff8000aafa: cc                   	int3
ffffffff8000aafb: cc                   	int3
ffffffff8000aafc: cc                   	int3
ffffffff8000aafd: cc                   	int3
ffffffff8000aafe: cc                   	int3
ffffffff8000aaff: cc                   	int3

ffffffff8000ab00 <taos::interrupts::init::hac2ac04b3d342161>:
ffffffff8000ab00: 53                   	pushq	%rbx
ffffffff8000ab01: 48 83 ec 10          	subq	$0x10, %rsp
ffffffff8000ab05: 89 fb                	movl	%edi, %ebx
ffffffff8000ab07: e8 54 56 00 00       	callq	0xffffffff80010160 <taos::interrupts::gdt::init::hd5e0114d64446afe>
ffffffff8000ab0c: 89 df                	movl	%ebx, %edi
ffffffff8000ab0e: e8 ed 58 ff ff       	callq	0xffffffff80000400 <taos::interrupts::idt::init_idt::hdcaef96650e17ee9>
ffffffff8000ab13: 85 db                	testl	%ebx, %ebx
ffffffff8000ab15: 74 31                	je	0xffffffff8000ab48 <taos::interrupts::init::hac2ac04b3d342161+0x48>
ffffffff8000ab17: e8 24 65 ff ff       	callq	0xffffffff80001040 <taos::interrupts::x2apic::X2ApicManager::ap_init::h72e228fd69d0e3c9>
ffffffff8000ab1c: 3c 07                	cmpb	$0x7, %al
ffffffff8000ab1e: 74 36                	je	0xffffffff8000ab56 <taos::interrupts::init::hac2ac04b3d342161+0x56>
ffffffff8000ab20: 88 44 24 0f          	movb	%al, 0xf(%rsp)
ffffffff8000ab24: 48 8d 54 24 0f       	leaq	0xf(%rsp), %rdx
ffffffff8000ab29: be 1e 00 00 00       	movl	$0x1e, %esi
ffffffff8000ab2e: 48 c7 c7 90 e6 01 80 	movq	$-0x7ffe1970, %rdi      # imm = 0x8001E690
ffffffff8000ab35: 48 c7 c1 28 e6 01 80 	movq	$-0x7ffe19d8, %rcx      # imm = 0x8001E628
ffffffff8000ab3c: 49 c7 c0 b0 e6 01 80 	movq	$-0x7ffe1950, %r8       # imm = 0x8001E6B0
ffffffff8000ab43: e8 98 13 01 00       	callq	0xffffffff8001bee0 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff8000ab48: bf 64 00 00 00       	movl	$0x64, %edi
ffffffff8000ab4d: e8 de 62 ff ff       	callq	0xffffffff80000e30 <taos::interrupts::x2apic::X2ApicManager::bsp_init::h253783201cccabbe>
ffffffff8000ab52: 3c 07                	cmpb	$0x7, %al
ffffffff8000ab54: 75 06                	jne	0xffffffff8000ab5c <taos::interrupts::init::hac2ac04b3d342161+0x5c>
ffffffff8000ab56: 48 83 c4 10          	addq	$0x10, %rsp
ffffffff8000ab5a: 5b                   	popq	%rbx
ffffffff8000ab5b: c3                   	retq
ffffffff8000ab5c: 88 44 24 0e          	movb	%al, 0xe(%rsp)
ffffffff8000ab60: 48 8d 54 24 0e       	leaq	0xe(%rsp), %rdx
ffffffff8000ab65: be 1a 00 00 00       	movl	$0x1a, %esi
ffffffff8000ab6a: 48 c7 c7 48 e6 01 80 	movq	$-0x7ffe19b8, %rdi      # imm = 0x8001E648
ffffffff8000ab71: 48 c7 c1 28 e6 01 80 	movq	$-0x7ffe19d8, %rcx      # imm = 0x8001E628
ffffffff8000ab78: 49 c7 c0 78 e6 01 80 	movq	$-0x7ffe1988, %r8       # imm = 0x8001E678
ffffffff8000ab7f: e8 5c 13 01 00       	callq	0xffffffff8001bee0 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff8000ab84: cc                   	int3
ffffffff8000ab85: cc                   	int3
ffffffff8000ab86: cc                   	int3
ffffffff8000ab87: cc                   	int3
ffffffff8000ab88: cc                   	int3
ffffffff8000ab89: cc                   	int3
ffffffff8000ab8a: cc                   	int3
ffffffff8000ab8b: cc                   	int3
ffffffff8000ab8c: cc                   	int3
ffffffff8000ab8d: cc                   	int3
ffffffff8000ab8e: cc                   	int3
ffffffff8000ab8f: cc                   	int3

ffffffff8000ab90 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3>:
ffffffff8000ab90: 55                   	pushq	%rbp
ffffffff8000ab91: 41 57                	pushq	%r15
ffffffff8000ab93: 41 56                	pushq	%r14
ffffffff8000ab95: 41 55                	pushq	%r13
ffffffff8000ab97: 41 54                	pushq	%r12
ffffffff8000ab99: 53                   	pushq	%rbx
ffffffff8000ab9a: 48 81 ec 98 00 00 00 	subq	$0x98, %rsp
ffffffff8000aba1: 80 7f 04 00          	cmpb	$0x0, 0x4(%rdi)
ffffffff8000aba5: 0f 85 01 02 00 00    	jne	0xffffffff8000adac <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x21c>
ffffffff8000abab: 48 89 fb             	movq	%rdi, %rbx
ffffffff8000abae: 8b 2f                	movl	(%rdi), %ebp
ffffffff8000abb0: fa                   	cli
ffffffff8000abb1: 0f b6 05 50 b8 01 00 	movzbl	0x1b850(%rip), %eax     # 0xffffffff80026408 <_ZN83_$LT$taos..processes..process..PROCESS_TABLE$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17he905a56e6b762301E.llvm.4978740807361014121+0x8>
ffffffff8000abb8: 3c 02                	cmpb	$0x2, %al
ffffffff8000abba: 0f 85 a1 01 00 00    	jne	0xffffffff8000ad61 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x1d1>
ffffffff8000abc0: 48 b9 fc ff ff ff ff ff ff 7f	movabsq	$0x7ffffffffffffffc, %rcx # imm = 0x7FFFFFFFFFFFFFFC
ffffffff8000abca: 48 8b 05 2f b8 01 00 	movq	0x1b82f(%rip), %rax     # 0xffffffff80026400 <_ZN83_$LT$taos..processes..process..PROCESS_TABLE$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17he905a56e6b762301E.llvm.4978740807361014121>
ffffffff8000abd1: ba 04 00 00 00       	movl	$0x4, %edx
ffffffff8000abd6: f0                   	lock
ffffffff8000abd7: 48 0f c1 50 10       	xaddq	%rdx, 0x10(%rax)
ffffffff8000abdc: 48 39 ca             	cmpq	%rcx, %rdx
ffffffff8000abdf: 77 2c                	ja	0xffffffff8000ac0d <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x7d>
ffffffff8000abe1: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
ffffffff8000abf0: f6 c2 03             	testb	$0x3, %dl
ffffffff8000abf3: 74 36                	je	0xffffffff8000ac2b <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x9b>
ffffffff8000abf5: f0                   	lock
ffffffff8000abf6: 48 83 68 10 04       	subq	$0x4, 0x10(%rax)
ffffffff8000abfb: f3 90                	pause
ffffffff8000abfd: ba 04 00 00 00       	movl	$0x4, %edx
ffffffff8000ac02: f0                   	lock
ffffffff8000ac03: 48 0f c1 50 10       	xaddq	%rdx, 0x10(%rax)
ffffffff8000ac08: 48 39 ca             	cmpq	%rcx, %rdx
ffffffff8000ac0b: 76 e3                	jbe	0xffffffff8000abf0 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x60>
ffffffff8000ac0d: f0                   	lock
ffffffff8000ac0e: 48 83 68 10 04       	subq	$0x4, 0x10(%rax)
ffffffff8000ac13: be 2c 00 00 00       	movl	$0x2c, %esi
ffffffff8000ac18: 48 c7 c7 d0 dc 01 80 	movq	$-0x7ffe2330, %rdi      # imm = 0x8001DCD0
ffffffff8000ac1f: 48 c7 c2 58 dd 01 80 	movq	$-0x7ffe22a8, %rdx      # imm = 0x8001DD58
ffffffff8000ac26: e8 45 18 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000ac2b: 48 8b 48 18          	movq	0x18(%rax), %rcx
ffffffff8000ac2f: 48 85 c9             	testq	%rcx, %rcx
ffffffff8000ac32: 0f 84 5c 01 00 00    	je	0xffffffff8000ad94 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x204>
ffffffff8000ac38: 48 8b 50 20          	movq	0x20(%rax), %rdx
ffffffff8000ac3c: be ff 00 00 00       	movl	$0xff, %esi
ffffffff8000ac41: 44 0f b7 81 8e 00 00 00      	movzwl	0x8e(%rcx), %r8d
ffffffff8000ac49: 45 89 c1             	movl	%r8d, %r9d
ffffffff8000ac4c: 41 c1 e1 02          	shll	$0x2, %r9d
ffffffff8000ac50: 48 c7 c7 ff ff ff ff 	movq	$-0x1, %rdi
ffffffff8000ac57: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
ffffffff8000ac60: 4d 85 c9             	testq	%r9, %r9
ffffffff8000ac63: 74 2b                	je	0xffffffff8000ac90 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x100>
ffffffff8000ac65: 45 31 d2             	xorl	%r10d, %r10d
ffffffff8000ac68: 39 6c b9 64          	cmpl	%ebp, 0x64(%rcx,%rdi,4)
ffffffff8000ac6c: 41 0f 95 c2          	setne	%r10b
ffffffff8000ac70: 44 0f 47 d6          	cmoval	%esi, %r10d
ffffffff8000ac74: 48 ff c7             	incq	%rdi
ffffffff8000ac77: 49 83 c1 fc          	addq	$-0x4, %r9
ffffffff8000ac7b: 41 80 fa 01          	cmpb	$0x1, %r10b
ffffffff8000ac7f: 74 df                	je	0xffffffff8000ac60 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0xd0>
ffffffff8000ac81: 45 0f b6 c2          	movzbl	%r10b, %r8d
ffffffff8000ac85: 45 85 c0             	testl	%r8d, %r8d
ffffffff8000ac88: 74 1d                	je	0xffffffff8000aca7 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x117>
ffffffff8000ac8a: eb 07                	jmp	0xffffffff8000ac93 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x103>
ffffffff8000ac8c: 0f 1f 40 00          	nopl	(%rax)
ffffffff8000ac90: 4c 89 c7             	movq	%r8, %rdi
ffffffff8000ac93: 48 83 ea 01          	subq	$0x1, %rdx
ffffffff8000ac97: 0f 82 f7 00 00 00    	jb	0xffffffff8000ad94 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x204>
ffffffff8000ac9d: 48 8b 8c f9 90 00 00 00      	movq	0x90(%rcx,%rdi,8), %rcx
ffffffff8000aca5: eb 9a                	jmp	0xffffffff8000ac41 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0xb1>
ffffffff8000aca7: 48 8b 6c f9 08       	movq	0x8(%rcx,%rdi,8), %rbp
ffffffff8000acac: f0                   	lock
ffffffff8000acad: 48 ff 45 00          	incq	(%rbp)
ffffffff8000acb1: 0f 8e 01 01 00 00    	jle	0xffffffff8000adb8 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x228>
ffffffff8000acb7: 48 89 2c 24          	movq	%rbp, (%rsp)
ffffffff8000acbb: f0                   	lock
ffffffff8000acbc: 48 83 68 10 04       	subq	$0x4, 0x10(%rax)
ffffffff8000acc1: 48 8b 85 b0 00 00 00 	movq	0xb0(%rbp), %rax
ffffffff8000acc8: 0f 22 d8             	movq	%rax, %cr3
ffffffff8000accb: 0f b6 05 26 b7 01 00 	movzbl	0x1b726(%rip), %eax     # 0xffffffff800263f8 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.4978740807361014121+0x60>
ffffffff8000acd2: 3c 02                	cmpb	$0x2, %al
ffffffff8000acd4: 0f 85 98 00 00 00    	jne	0xffffffff8000ad72 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x1e2>
ffffffff8000acda: 4c 8d 75 10          	leaq	0x10(%rbp), %r14
ffffffff8000acde: 44 0f b7 3d 0a b7 01 00      	movzwl	0x1b70a(%rip), %r15d # 0xffffffff800263f0 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.4978740807361014121+0x58>
ffffffff8000ace6: 0f b6 05 0b b7 01 00 	movzbl	0x1b70b(%rip), %eax     # 0xffffffff800263f8 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.4978740807361014121+0x60>
ffffffff8000aced: 3c 02                	cmpb	$0x2, %al
ffffffff8000acef: 0f 85 8e 00 00 00    	jne	0xffffffff8000ad83 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x1f3>
ffffffff8000acf5: 44 0f b7 25 f5 b6 01 00      	movzwl	0x1b6f5(%rip), %r12d # 0xffffffff800263f2 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.4978740807361014121+0x5a>
ffffffff8000acfd: 48 8d 75 20          	leaq	0x20(%rbp), %rsi
ffffffff8000ad01: 4c 8d 6c 24 08       	leaq	0x8(%rsp), %r13
ffffffff8000ad06: ba 90 00 00 00       	movl	$0x90, %edx
ffffffff8000ad0b: 4c 89 ef             	movq	%r13, %rdi
ffffffff8000ad0e: ff 15 0c b7 02 00    	callq	*0x2b70c(%rip)          # 0xffffffff80036420
ffffffff8000ad14: 48 c7 45 18 34 f8 00 80      	movq	$-0x7fff07cc, 0x18(%rbp) # imm = 0x8000F834
ffffffff8000ad1c: 4c 8d 85 bc 00 00 00 	leaq	0xbc(%rbp), %r8
ffffffff8000ad23: 4c 89 ef             	movq	%r13, %rdi
ffffffff8000ad26: 4c 89 e6             	movq	%r12, %rsi
ffffffff8000ad29: 4c 89 fa             	movq	%r15, %rdx
ffffffff8000ad2c: 4c 89 f1             	movq	%r14, %rcx
ffffffff8000ad2f: 50                   	pushq	%rax
ffffffff8000ad30: 51                   	pushq	%rcx
ffffffff8000ad31: 52                   	pushq	%rdx
ffffffff8000ad32: e8 89 4a 00 00       	callq	0xffffffff8000f7c0 <call_process>
ffffffff8000ad37: 5a                   	popq	%rdx
ffffffff8000ad38: 59                   	popq	%rcx
ffffffff8000ad39: 58                   	popq	%rax
ffffffff8000ad3a: f0                   	lock
ffffffff8000ad3b: 48 ff 4d 00          	decq	(%rbp)
ffffffff8000ad3f: 75 08                	jne	0xffffffff8000ad49 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x1b9>
ffffffff8000ad41: 48 89 e7             	movq	%rsp, %rdi
ffffffff8000ad44: e8 a7 11 00 00       	callq	0xffffffff8000bef0 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58>
ffffffff8000ad49: c6 43 04 01          	movb	$0x1, 0x4(%rbx)
ffffffff8000ad4d: 31 c0                	xorl	%eax, %eax
ffffffff8000ad4f: 48 81 c4 98 00 00 00 	addq	$0x98, %rsp
ffffffff8000ad56: 5b                   	popq	%rbx
ffffffff8000ad57: 41 5c                	popq	%r12
ffffffff8000ad59: 41 5d                	popq	%r13
ffffffff8000ad5b: 41 5e                	popq	%r14
ffffffff8000ad5d: 41 5f                	popq	%r15
ffffffff8000ad5f: 5d                   	popq	%rbp
ffffffff8000ad60: c3                   	retq
ffffffff8000ad61: 48 c7 c7 00 64 02 80 	movq	$-0x7ffd9c00, %rdi      # imm = 0x80026400
ffffffff8000ad68: e8 23 73 ff ff       	callq	0xffffffff80002090 <spin::once::Once<T,R>::try_call_once_slow::h18e40e08e0d1d65a.llvm.14359069980145722807>
ffffffff8000ad6d: e9 4e fe ff ff       	jmp	0xffffffff8000abc0 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x30>
ffffffff8000ad72: 48 c7 c7 98 63 02 80 	movq	$-0x7ffd9c68, %rdi      # imm = 0x80026398
ffffffff8000ad79: e8 a2 7c ff ff       	callq	0xffffffff80002a20 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.14359069980145722807>
ffffffff8000ad7e: e9 57 ff ff ff       	jmp	0xffffffff8000acda <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x14a>
ffffffff8000ad83: 48 c7 c7 98 63 02 80 	movq	$-0x7ffd9c68, %rdi      # imm = 0x80026398
ffffffff8000ad8a: e8 91 7c ff ff       	callq	0xffffffff80002a20 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.14359069980145722807>
ffffffff8000ad8f: e9 61 ff ff ff       	jmp	0xffffffff8000acf5 <taos::processes::process::run_process_ring3::{{closure}}::h4f3f941bf9d2d7d3+0x165>
ffffffff8000ad94: be 29 00 00 00       	movl	$0x29, %esi
ffffffff8000ad99: 48 c7 c7 c8 e6 01 80 	movq	$-0x7ffe1938, %rdi      # imm = 0x8001E6C8
ffffffff8000ada0: 48 c7 c2 10 e7 01 80 	movq	$-0x7ffe18f0, %rdx      # imm = 0x8001E710
ffffffff8000ada7: e8 e4 1b 01 00       	callq	0xffffffff8001c990 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff8000adac: 48 c7 c7 28 e7 01 80 	movq	$-0x7ffe18d8, %rdi      # imm = 0x8001E728
ffffffff8000adb3: e8 98 04 01 00       	callq	0xffffffff8001b250 <core::panicking::panic_const::panic_const_async_fn_resumed::hdbc599b673c0925f>
ffffffff8000adb8: 0f 0b                	ud2
ffffffff8000adba: cc                   	int3
ffffffff8000adbb: cc                   	int3
ffffffff8000adbc: cc                   	int3
ffffffff8000adbd: cc                   	int3
ffffffff8000adbe: cc                   	int3
ffffffff8000adbf: cc                   	int3

ffffffff8000adc0 <<taos::events::EventId as core::fmt::Debug>::fmt::hc4dfba7d9bedebc5>:
ffffffff8000adc0: 50                   	pushq	%rax
ffffffff8000adc1: 48 89 3c 24          	movq	%rdi, (%rsp)
ffffffff8000adc5: 48 89 e1             	movq	%rsp, %rcx
ffffffff8000adc8: ba 07 00 00 00       	movl	$0x7, %edx
ffffffff8000adcd: 48 89 f7             	movq	%rsi, %rdi
ffffffff8000add0: 48 c7 c6 40 e7 01 80 	movq	$-0x7ffe18c0, %rsi      # imm = 0x8001E740
ffffffff8000add7: 49 c7 c0 30 e4 01 80 	movq	$-0x7ffe1bd0, %r8       # imm = 0x8001E430
ffffffff8000adde: e8 7d f2 00 00       	callq	0xffffffff8001a060 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>
ffffffff8000ade3: 59                   	popq	%rcx
ffffffff8000ade4: c3                   	retq
ffffffff8000ade5: cc                   	int3
ffffffff8000ade6: cc                   	int3
ffffffff8000ade7: cc                   	int3
ffffffff8000ade8: cc                   	int3
ffffffff8000ade9: cc                   	int3
ffffffff8000adea: cc                   	int3
ffffffff8000adeb: cc                   	int3
ffffffff8000adec: cc                   	int3
ffffffff8000aded: cc                   	int3
ffffffff8000adee: cc                   	int3
ffffffff8000adef: cc                   	int3

ffffffff8000adf0 <<taos::interrupts::x2apic::X2ApicError as core::fmt::Debug>::fmt::haccd0b18e586519b.llvm.2213946183514802580>:
ffffffff8000adf0: 48 89 f0             	movq	%rsi, %rax
ffffffff8000adf3: 0f b6 0f             	movzbl	(%rdi), %ecx
ffffffff8000adf6: c1 e1 03             	shll	$0x3, %ecx
ffffffff8000adf9: 48 8b 91 a8 e7 01 80 	movq	-0x7ffe1858(%rcx), %rdx
ffffffff8000ae00: 48 8b b1 e0 e7 01 80 	movq	-0x7ffe1820(%rcx), %rsi
ffffffff8000ae07: 48 89 c7             	movq	%rax, %rdi
ffffffff8000ae0a: e9 d1 f0 00 00       	jmp	0xffffffff80019ee0 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff8000ae0f: cc                   	int3

ffffffff8000ae10 <<&T as core::fmt::Debug>::fmt::hfbfd823d349428cd>:
ffffffff8000ae10: 48 81 ec c8 00 00 00 	subq	$0xc8, %rsp
ffffffff8000ae17: 48 8b 07             	movq	(%rdi), %rax
ffffffff8000ae1a: 48 8b 00             	movq	(%rax), %rax
ffffffff8000ae1d: 48 8b 7e 30          	movq	0x30(%rsi), %rdi
ffffffff8000ae21: 48 8b 76 38          	movq	0x38(%rsi), %rsi
ffffffff8000ae25: 48 89 04 24          	movq	%rax, (%rsp)
ffffffff8000ae29: 48 c7 44 24 08 c0 e8 01 80   	movq	$-0x7ffe1740, 0x8(%rsp) # imm = 0x8001E8C0
ffffffff8000ae32: 48 c7 44 24 10 f0 02 00 80   	movq	$-0x7ffffd10, 0x10(%rsp) # imm = 0x800002F0
ffffffff8000ae3b: 48 89 e0             	movq	%rsp, %rax
ffffffff8000ae3e: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff8000ae43: 48 c7 44 24 20 20 93 01 80   	movq	$-0x7ffe6ce0, 0x20(%rsp) # imm = 0x80019320
ffffffff8000ae4c: 48 c7 44 24 58 02 00 00 00   	movq	$0x2, 0x58(%rsp)
ffffffff8000ae55: 48 c7 44 24 68 02 00 00 00   	movq	$0x2, 0x68(%rsp)
ffffffff8000ae5e: 48 c7 44 24 78 00 00 00 00   	movq	$0x0, 0x78(%rsp)
ffffffff8000ae67: 48 c7 84 24 80 00 00 00 20 00 00 00  	movq	$0x20, 0x80(%rsp)
ffffffff8000ae73: c6 84 24 88 00 00 00 03      	movb	$0x3, 0x88(%rsp)
ffffffff8000ae7b: 48 c7 84 24 90 00 00 00 02 00 00 00  	movq	$0x2, 0x90(%rsp)
ffffffff8000ae87: 48 c7 84 24 a0 00 00 00 02 00 00 00  	movq	$0x2, 0xa0(%rsp)
ffffffff8000ae93: 48 c7 84 24 b0 00 00 00 01 00 00 00  	movq	$0x1, 0xb0(%rsp)
ffffffff8000ae9f: 48 b8 20 00 00 00 04 00 00 00	movabsq	$0x400000020, %rax # imm = 0x400000020
ffffffff8000aea9: 48 89 84 24 b8 00 00 00      	movq	%rax, 0xb8(%rsp)
ffffffff8000aeb1: c6 84 24 c0 00 00 00 03      	movb	$0x3, 0xc0(%rsp)
ffffffff8000aeb9: 48 c7 44 24 28 90 e8 01 80   	movq	$-0x7ffe1770, 0x28(%rsp) # imm = 0x8001E890
ffffffff8000aec2: 48 c7 44 24 30 03 00 00 00   	movq	$0x3, 0x30(%rsp)
ffffffff8000aecb: 48 8d 44 24 58       	leaq	0x58(%rsp), %rax
ffffffff8000aed0: 48 89 44 24 48       	movq	%rax, 0x48(%rsp)
ffffffff8000aed5: 48 c7 44 24 50 02 00 00 00   	movq	$0x2, 0x50(%rsp)
ffffffff8000aede: 48 8d 44 24 08       	leaq	0x8(%rsp), %rax
ffffffff8000aee3: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff8000aee8: 48 c7 44 24 40 02 00 00 00   	movq	$0x2, 0x40(%rsp)
ffffffff8000aef1: 48 8d 54 24 28       	leaq	0x28(%rsp), %rdx
ffffffff8000aef6: e8 85 e7 00 00       	callq	0xffffffff80019680 <core::fmt::write::h1a05140646fc4354>
ffffffff8000aefb: 48 81 c4 c8 00 00 00 	addq	$0xc8, %rsp
ffffffff8000af02: c3                   	retq
ffffffff8000af03: cc                   	int3
ffffffff8000af04: cc                   	int3
ffffffff8000af05: cc                   	int3
ffffffff8000af06: cc                   	int3
ffffffff8000af07: cc                   	int3
ffffffff8000af08: cc                   	int3
ffffffff8000af09: cc                   	int3
ffffffff8000af0a: cc                   	int3
ffffffff8000af0b: cc                   	int3
ffffffff8000af0c: cc                   	int3
ffffffff8000af0d: cc                   	int3
ffffffff8000af0e: cc                   	int3
ffffffff8000af0f: cc                   	int3

ffffffff8000af10 <<core::fmt::Error as core::fmt::Debug>::fmt::hca9d617326e586b8.llvm.16693732038470628512>:
ffffffff8000af10: 48 89 f7             	movq	%rsi, %rdi
ffffffff8000af13: ba 05 00 00 00       	movl	$0x5, %edx
ffffffff8000af18: 48 c7 c6 18 e8 01 80 	movq	$-0x7ffe17e8, %rsi      # imm = 0x8001E818
ffffffff8000af1f: e9 bc ef 00 00       	jmp	0xffffffff80019ee0 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff8000af24: cc                   	int3
ffffffff8000af25: cc                   	int3
ffffffff8000af26: cc                   	int3
ffffffff8000af27: cc                   	int3
ffffffff8000af28: cc                   	int3
ffffffff8000af29: cc                   	int3
ffffffff8000af2a: cc                   	int3
ffffffff8000af2b: cc                   	int3
ffffffff8000af2c: cc                   	int3
ffffffff8000af2d: cc                   	int3
ffffffff8000af2e: cc                   	int3
ffffffff8000af2f: cc                   	int3

ffffffff8000af30 <<log::SetLoggerError as core::fmt::Debug>::fmt::hb3316e653009feb4.llvm.16693732038470628512>:
ffffffff8000af30: 50                   	pushq	%rax
ffffffff8000af31: 48 89 3c 24          	movq	%rdi, (%rsp)
ffffffff8000af35: 48 89 e1             	movq	%rsp, %rcx
ffffffff8000af38: ba 0e 00 00 00       	movl	$0xe, %edx
ffffffff8000af3d: 48 89 f7             	movq	%rsi, %rdi
ffffffff8000af40: 48 c7 c6 40 e8 01 80 	movq	$-0x7ffe17c0, %rsi      # imm = 0x8001E840
ffffffff8000af47: 49 c7 c0 20 e8 01 80 	movq	$-0x7ffe17e0, %r8       # imm = 0x8001E820
ffffffff8000af4e: e8 0d f1 00 00       	callq	0xffffffff8001a060 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>
ffffffff8000af53: 59                   	popq	%rcx
ffffffff8000af54: c3                   	retq
ffffffff8000af55: cc                   	int3
ffffffff8000af56: cc                   	int3
ffffffff8000af57: cc                   	int3
ffffffff8000af58: cc                   	int3
ffffffff8000af59: cc                   	int3
ffffffff8000af5a: cc                   	int3
ffffffff8000af5b: cc                   	int3
ffffffff8000af5c: cc                   	int3
ffffffff8000af5d: cc                   	int3
ffffffff8000af5e: cc                   	int3
ffffffff8000af5f: cc                   	int3

ffffffff8000af60 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90>:
ffffffff8000af60: 55                   	pushq	%rbp
ffffffff8000af61: 41 57                	pushq	%r15
ffffffff8000af63: 41 56                	pushq	%r14
ffffffff8000af65: 41 55                	pushq	%r13
ffffffff8000af67: 41 54                	pushq	%r12
ffffffff8000af69: 53                   	pushq	%rbx
ffffffff8000af6a: 48 83 ec 38          	subq	$0x38, %rsp
ffffffff8000af6e: 48 89 7c 24 30       	movq	%rdi, 0x30(%rsp)
ffffffff8000af73: 48 c7 44 24 18 00 00 00 00   	movq	$0x0, 0x18(%rsp)
ffffffff8000af7c: 48 c7 44 24 20 08 00 00 00   	movq	$0x8, 0x20(%rsp)
ffffffff8000af85: 48 c7 44 24 28 00 00 00 00   	movq	$0x0, 0x28(%rsp)
ffffffff8000af8e: 41 b6 01             	movb	$0x1, %r14b
ffffffff8000af91: 31 c0                	xorl	%eax, %eax
ffffffff8000af93: eb 1c                	jmp	0xffffffff8000afb1 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x51>
ffffffff8000af95: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff8000afa0: 8b 44 24 0c          	movl	0xc(%rsp), %eax
ffffffff8000afa4: ff c0                	incl	%eax
ffffffff8000afa6: 3d 00 01 00 00       	cmpl	$0x100, %eax            # imm = 0x100
ffffffff8000afab: 0f 84 61 02 00 00    	je	0xffffffff8000b212 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x2b2>
ffffffff8000afb1: 89 44 24 0c          	movl	%eax, 0xc(%rsp)
ffffffff8000afb5: 41 89 c5             	movl	%eax, %r13d
ffffffff8000afb8: 41 c1 e5 10          	shll	$0x10, %r13d
ffffffff8000afbc: 45 31 ff             	xorl	%r15d, %r15d
ffffffff8000afbf: eb 1f                	jmp	0xffffffff8000afe0 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x80>
ffffffff8000afc1: 48 8b 44 24 20       	movq	0x20(%rsp), %rax
ffffffff8000afc6: 48 89 2c d8          	movq	%rbp, (%rax,%rbx,8)
ffffffff8000afca: 48 ff c3             	incq	%rbx
ffffffff8000afcd: 48 89 5c 24 28       	movq	%rbx, 0x28(%rsp)
ffffffff8000afd2: 41 ff c7             	incl	%r15d
ffffffff8000afd5: 41 83 ff 20          	cmpl	$0x20, %r15d
ffffffff8000afd9: 74 c5                	je	0xffffffff8000afa0 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x40>
ffffffff8000afdb: 0f 1f 44 00 00       	nopl	(%rax,%rax)
ffffffff8000afe0: 31 c0                	xorl	%eax, %eax
ffffffff8000afe2: f0                   	lock
ffffffff8000afe3: 44 0f b0 35 85 b2 01 00      	cmpxchgb	%r14b, 0x1b285(%rip) # 0xffffffff80026270 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.16693732038470628512>
ffffffff8000afeb: 75 55                	jne	0xffffffff8000b042 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0xe2>
ffffffff8000afed: 44 89 f9             	movl	%r15d, %ecx
ffffffff8000aff0: c1 e1 0b             	shll	$0xb, %ecx
ffffffff8000aff3: 42 8d 04 29          	leal	(%rcx,%r13), %eax
ffffffff8000aff7: 05 00 00 00 80       	addl	$0x80000000, %eax       # imm = 0x80000000
ffffffff8000affc: c6 05 6d b2 01 00 00 	movb	$0x0, 0x1b26d(%rip)     # 0xffffffff80026270 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.16693732038470628512>
ffffffff8000b003: 66 ba f8 0c          	movw	$0xcf8, %dx             # imm = 0xCF8
ffffffff8000b007: ef                   	outl	%eax, %dx
ffffffff8000b008: 66 ba fc 0c          	movw	$0xcfc, %dx             # imm = 0xCFC
ffffffff8000b00c: ed                   	inl	%dx, %eax
ffffffff8000b00d: 89 c7                	movl	%eax, %edi
ffffffff8000b00f: 66 ba f8 0c          	movw	$0xcf8, %dx             # imm = 0xCF8
ffffffff8000b013: 31 c0                	xorl	%eax, %eax
ffffffff8000b015: ef                   	outl	%eax, %dx
ffffffff8000b016: 66 83 ff ff          	cmpw	$-0x1, %di
ffffffff8000b01a: 74 b6                	je	0xffffffff8000afd2 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x72>
ffffffff8000b01c: 0f 1f 40 00          	nopl	(%rax)
ffffffff8000b020: 31 c0                	xorl	%eax, %eax
ffffffff8000b022: f0                   	lock
ffffffff8000b023: 44 0f b0 35 45 b2 01 00      	cmpxchgb	%r14b, 0x1b245(%rip) # 0xffffffff80026270 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.16693732038470628512>
ffffffff8000b02b: 75 05                	jne	0xffffffff8000b032 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0xd2>
ffffffff8000b02d: eb 20                	jmp	0xffffffff8000b04f <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0xef>
ffffffff8000b02f: 90                   	nop
ffffffff8000b030: f3 90                	pause
ffffffff8000b032: 0f b6 05 37 b2 01 00 	movzbl	0x1b237(%rip), %eax     # 0xffffffff80026270 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.16693732038470628512>
ffffffff8000b039: 84 c0                	testb	%al, %al
ffffffff8000b03b: 75 f3                	jne	0xffffffff8000b030 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0xd0>
ffffffff8000b03d: eb e1                	jmp	0xffffffff8000b020 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0xc0>
ffffffff8000b03f: 90                   	nop
ffffffff8000b040: f3 90                	pause
ffffffff8000b042: 0f b6 05 27 b2 01 00 	movzbl	0x1b227(%rip), %eax     # 0xffffffff80026270 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.16693732038470628512>
ffffffff8000b049: 84 c0                	testb	%al, %al
ffffffff8000b04b: 75 f3                	jne	0xffffffff8000b040 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0xe0>
ffffffff8000b04d: eb 91                	jmp	0xffffffff8000afe0 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x80>
ffffffff8000b04f: 44 01 e9             	addl	%r13d, %ecx
ffffffff8000b052: 89 c8                	movl	%ecx, %eax
ffffffff8000b054: 0d 04 00 00 80       	orl	$0x80000004, %eax       # imm = 0x80000004
ffffffff8000b059: c6 05 10 b2 01 00 00 	movb	$0x0, 0x1b210(%rip)     # 0xffffffff80026270 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.16693732038470628512>
ffffffff8000b060: 66 ba f8 0c          	movw	$0xcf8, %dx             # imm = 0xCF8
ffffffff8000b064: ef                   	outl	%eax, %dx
ffffffff8000b065: 66 ba fc 0c          	movw	$0xcfc, %dx             # imm = 0xCFC
ffffffff8000b069: ed                   	inl	%dx, %eax
ffffffff8000b06a: 89 44 24 10          	movl	%eax, 0x10(%rsp)
ffffffff8000b06e: 66 ba f8 0c          	movw	$0xcf8, %dx             # imm = 0xCF8
ffffffff8000b072: 31 c0                	xorl	%eax, %eax
ffffffff8000b074: ef                   	outl	%eax, %dx
ffffffff8000b075: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff8000b080: 31 c0                	xorl	%eax, %eax
ffffffff8000b082: f0                   	lock
ffffffff8000b083: 44 0f b0 35 e5 b1 01 00      	cmpxchgb	%r14b, 0x1b1e5(%rip) # 0xffffffff80026270 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.16693732038470628512>
ffffffff8000b08b: 75 05                	jne	0xffffffff8000b092 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x132>
ffffffff8000b08d: eb 10                	jmp	0xffffffff8000b09f <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x13f>
ffffffff8000b08f: 90                   	nop
ffffffff8000b090: f3 90                	pause
ffffffff8000b092: 0f b6 05 d7 b1 01 00 	movzbl	0x1b1d7(%rip), %eax     # 0xffffffff80026270 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.16693732038470628512>
ffffffff8000b099: 84 c0                	testb	%al, %al
ffffffff8000b09b: 75 f3                	jne	0xffffffff8000b090 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x130>
ffffffff8000b09d: eb e1                	jmp	0xffffffff8000b080 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x120>
ffffffff8000b09f: 89 c8                	movl	%ecx, %eax
ffffffff8000b0a1: 0d 08 00 00 80       	orl	$0x80000008, %eax       # imm = 0x80000008
ffffffff8000b0a6: c6 05 c3 b1 01 00 00 	movb	$0x0, 0x1b1c3(%rip)     # 0xffffffff80026270 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.16693732038470628512>
ffffffff8000b0ad: 66 ba f8 0c          	movw	$0xcf8, %dx             # imm = 0xCF8
ffffffff8000b0b1: ef                   	outl	%eax, %dx
ffffffff8000b0b2: 66 ba fc 0c          	movw	$0xcfc, %dx             # imm = 0xCFC
ffffffff8000b0b6: ed                   	inl	%dx, %eax
ffffffff8000b0b7: 41 89 c4             	movl	%eax, %r12d
ffffffff8000b0ba: 66 ba f8 0c          	movw	$0xcf8, %dx             # imm = 0xCF8
ffffffff8000b0be: 31 c0                	xorl	%eax, %eax
ffffffff8000b0c0: ef                   	outl	%eax, %dx
ffffffff8000b0c1: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
ffffffff8000b0d0: 31 c0                	xorl	%eax, %eax
ffffffff8000b0d2: f0                   	lock
ffffffff8000b0d3: 44 0f b0 35 95 b1 01 00      	cmpxchgb	%r14b, 0x1b195(%rip) # 0xffffffff80026270 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.16693732038470628512>
ffffffff8000b0db: 75 05                	jne	0xffffffff8000b0e2 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x182>
ffffffff8000b0dd: eb 10                	jmp	0xffffffff8000b0ef <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x18f>
ffffffff8000b0df: 90                   	nop
ffffffff8000b0e0: f3 90                	pause
ffffffff8000b0e2: 0f b6 05 87 b1 01 00 	movzbl	0x1b187(%rip), %eax     # 0xffffffff80026270 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.16693732038470628512>
ffffffff8000b0e9: 84 c0                	testb	%al, %al
ffffffff8000b0eb: 75 f3                	jne	0xffffffff8000b0e0 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x180>
ffffffff8000b0ed: eb e1                	jmp	0xffffffff8000b0d0 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x170>
ffffffff8000b0ef: 89 7c 24 14          	movl	%edi, 0x14(%rsp)
ffffffff8000b0f3: 81 c9 0c 00 00 80    	orl	$0x8000000c, %ecx       # imm = 0x8000000C
ffffffff8000b0f9: c6 05 70 b1 01 00 00 	movb	$0x0, 0x1b170(%rip)     # 0xffffffff80026270 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.16693732038470628512>
ffffffff8000b100: 66 ba f8 0c          	movw	$0xcf8, %dx             # imm = 0xCF8
ffffffff8000b104: 89 c8                	movl	%ecx, %eax
ffffffff8000b106: ef                   	outl	%eax, %dx
ffffffff8000b107: 66 ba fc 0c          	movw	$0xcfc, %dx             # imm = 0xCFC
ffffffff8000b10b: ed                   	inl	%dx, %eax
ffffffff8000b10c: 89 c3                	movl	%eax, %ebx
ffffffff8000b10e: 66 ba f8 0c          	movw	$0xcf8, %dx             # imm = 0xCF8
ffffffff8000b112: 31 c0                	xorl	%eax, %eax
ffffffff8000b114: ef                   	outl	%eax, %dx
ffffffff8000b115: 0f b6 05 c5 a0 01 00 	movzbl	0x1a0c5(%rip), %eax     # 0xffffffff800251e1 <__rust_no_alloc_shim_is_unstable>
ffffffff8000b11c: 0f 1f 40 00          	nopl	(%rax)
ffffffff8000b120: 31 c0                	xorl	%eax, %eax
ffffffff8000b122: f0                   	lock
ffffffff8000b123: 44 0f b0 35 25 9f 01 00      	cmpxchgb	%r14b, 0x19f25(%rip) # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000b12b: 75 05                	jne	0xffffffff8000b132 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x1d2>
ffffffff8000b12d: eb 10                	jmp	0xffffffff8000b13f <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x1df>
ffffffff8000b12f: 90                   	nop
ffffffff8000b130: f3 90                	pause
ffffffff8000b132: 0f b6 05 17 9f 01 00 	movzbl	0x19f17(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000b139: 84 c0                	testb	%al, %al
ffffffff8000b13b: 75 f3                	jne	0xffffffff8000b130 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x1d0>
ffffffff8000b13d: eb e1                	jmp	0xffffffff8000b120 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x1c0>
ffffffff8000b13f: be 08 00 00 00       	movl	$0x8, %esi
ffffffff8000b144: ba 28 00 00 00       	movl	$0x28, %edx
ffffffff8000b149: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000b150: e8 ab 81 ff ff       	callq	0xffffffff80003300 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff8000b155: c6 05 f4 9e 01 00 00 	movb	$0x0, 0x19ef4(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000b15c: 48 85 c0             	testq	%rax, %rax
ffffffff8000b15f: 0f 84 db 00 00 00    	je	0xffffffff8000b240 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x2e0>
ffffffff8000b165: 48 89 c5             	movq	%rax, %rbp
ffffffff8000b168: 44 8b 54 24 14       	movl	0x14(%rsp), %r10d
ffffffff8000b16d: 44 89 d0             	movl	%r10d, %eax
ffffffff8000b170: c1 e8 10             	shrl	$0x10, %eax
ffffffff8000b173: 44 8b 5c 24 10       	movl	0x10(%rsp), %r11d
ffffffff8000b178: 44 89 d9             	movl	%r11d, %ecx
ffffffff8000b17b: c1 e9 10             	shrl	$0x10, %ecx
ffffffff8000b17e: 44 89 e2             	movl	%r12d, %edx
ffffffff8000b181: c1 ea 18             	shrl	$0x18, %edx
ffffffff8000b184: 44 89 e6             	movl	%r12d, %esi
ffffffff8000b187: c1 ee 10             	shrl	$0x10, %esi
ffffffff8000b18a: 44 89 e7             	movl	%r12d, %edi
ffffffff8000b18d: c1 ef 08             	shrl	$0x8, %edi
ffffffff8000b190: 41 89 d8             	movl	%ebx, %r8d
ffffffff8000b193: 41 c1 e8 10          	shrl	$0x10, %r8d
ffffffff8000b197: 41 89 d9             	movl	%ebx, %r9d
ffffffff8000b19a: 41 c1 e9 18          	shrl	$0x18, %r9d
ffffffff8000b19e: 48 c7 45 00 01 00 00 00      	movq	$0x1, (%rbp)
ffffffff8000b1a6: 48 c7 45 08 01 00 00 00      	movq	$0x1, 0x8(%rbp)
ffffffff8000b1ae: c6 45 10 00          	movb	$0x0, 0x10(%rbp)
ffffffff8000b1b2: 66 89 45 12          	movw	%ax, 0x12(%rbp)
ffffffff8000b1b6: 66 44 89 55 14       	movw	%r10w, 0x14(%rbp)
ffffffff8000b1bb: 66 89 4d 16          	movw	%cx, 0x16(%rbp)
ffffffff8000b1bf: 66 44 89 5d 18       	movw	%r11w, 0x18(%rbp)
ffffffff8000b1c4: 8b 44 24 0c          	movl	0xc(%rsp), %eax
ffffffff8000b1c8: 88 45 1a             	movb	%al, 0x1a(%rbp)
ffffffff8000b1cb: 44 88 7d 1b          	movb	%r15b, 0x1b(%rbp)
ffffffff8000b1cf: 88 55 1c             	movb	%dl, 0x1c(%rbp)
ffffffff8000b1d2: 40 88 75 1d          	movb	%sil, 0x1d(%rbp)
ffffffff8000b1d6: 40 88 7d 1e          	movb	%dil, 0x1e(%rbp)
ffffffff8000b1da: 44 88 65 1f          	movb	%r12b, 0x1f(%rbp)
ffffffff8000b1de: 44 88 4d 20          	movb	%r9b, 0x20(%rbp)
ffffffff8000b1e2: 44 88 45 21          	movb	%r8b, 0x21(%rbp)
ffffffff8000b1e6: 88 7d 22             	movb	%bh, 0x22(%rbp)
ffffffff8000b1e9: 88 5d 23             	movb	%bl, 0x23(%rbp)
ffffffff8000b1ec: 48 8b 5c 24 28       	movq	0x28(%rsp), %rbx
ffffffff8000b1f1: 48 3b 5c 24 18       	cmpq	0x18(%rsp), %rbx
ffffffff8000b1f6: 0f 85 c5 fd ff ff    	jne	0xffffffff8000afc1 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x61>
ffffffff8000b1fc: 48 8d 7c 24 18       	leaq	0x18(%rsp), %rdi
ffffffff8000b201: 48 c7 c6 18 e9 01 80 	movq	$-0x7ffe16e8, %rsi      # imm = 0x8001E918
ffffffff8000b208: e8 33 2b 00 00       	callq	0xffffffff8000dd40 <alloc::raw_vec::RawVec<T,A>::grow_one::he6215f63c8fd4e69>
ffffffff8000b20d: e9 af fd ff ff       	jmp	0xffffffff8000afc1 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90+0x61>
ffffffff8000b212: 48 8b 4c 24 28       	movq	0x28(%rsp), %rcx
ffffffff8000b217: 48 8b 44 24 30       	movq	0x30(%rsp), %rax
ffffffff8000b21c: 48 89 48 10          	movq	%rcx, 0x10(%rax)
ffffffff8000b220: 48 8b 54 24 18       	movq	0x18(%rsp), %rdx
ffffffff8000b225: 48 8b 4c 24 20       	movq	0x20(%rsp), %rcx
ffffffff8000b22a: 48 89 48 08          	movq	%rcx, 0x8(%rax)
ffffffff8000b22e: 48 89 10             	movq	%rdx, (%rax)
ffffffff8000b231: 48 83 c4 38          	addq	$0x38, %rsp
ffffffff8000b235: 5b                   	popq	%rbx
ffffffff8000b236: 41 5c                	popq	%r12
ffffffff8000b238: 41 5d                	popq	%r13
ffffffff8000b23a: 41 5e                	popq	%r14
ffffffff8000b23c: 41 5f                	popq	%r15
ffffffff8000b23e: 5d                   	popq	%rbp
ffffffff8000b23f: c3                   	retq
ffffffff8000b240: bf 08 00 00 00       	movl	$0x8, %edi
ffffffff8000b245: be 28 00 00 00       	movl	$0x28, %esi
ffffffff8000b24a: e8 13 de 00 00       	callq	0xffffffff80019062 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff8000b24f: cc                   	int3

ffffffff8000b250 <taos::devices::serial::_print::h2727b219b98997eb>:
ffffffff8000b250: 53                   	pushq	%rbx
ffffffff8000b251: 48 83 ec 10          	subq	$0x10, %rsp
ffffffff8000b255: 48 89 fb             	movq	%rdi, %rbx
ffffffff8000b258: 0f b6 05 17 b0 01 00 	movzbl	0x1b017(%rip), %eax     # 0xffffffff80026276 <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.16693732038470628512+0x4>
ffffffff8000b25f: 3c 02                	cmpb	$0x2, %al
ffffffff8000b261: 75 53                	jne	0xffffffff8000b2b6 <taos::devices::serial::_print::h2727b219b98997eb+0x66>
ffffffff8000b263: b1 01                	movb	$0x1, %cl
ffffffff8000b265: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff8000b270: 31 c0                	xorl	%eax, %eax
ffffffff8000b272: f0                   	lock
ffffffff8000b273: 0f b0 0d f8 af 01 00 	cmpxchgb	%cl, 0x1aff8(%rip)      # 0xffffffff80026272 <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.16693732038470628512>
ffffffff8000b27a: 75 06                	jne	0xffffffff8000b282 <taos::devices::serial::_print::h2727b219b98997eb+0x32>
ffffffff8000b27c: eb 11                	jmp	0xffffffff8000b28f <taos::devices::serial::_print::h2727b219b98997eb+0x3f>
ffffffff8000b27e: 66 90                	nop
ffffffff8000b280: f3 90                	pause
ffffffff8000b282: 0f b6 05 e9 af 01 00 	movzbl	0x1afe9(%rip), %eax     # 0xffffffff80026272 <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.16693732038470628512>
ffffffff8000b289: 84 c0                	testb	%al, %al
ffffffff8000b28b: 75 f3                	jne	0xffffffff8000b280 <taos::devices::serial::_print::h2727b219b98997eb+0x30>
ffffffff8000b28d: eb e1                	jmp	0xffffffff8000b270 <taos::devices::serial::_print::h2727b219b98997eb+0x20>
ffffffff8000b28f: 48 c7 c7 74 62 02 80 	movq	$-0x7ffd9d8c, %rdi      # imm = 0x80026274
ffffffff8000b296: 48 c7 c6 50 e8 01 80 	movq	$-0x7ffe17b0, %rsi      # imm = 0x8001E850
ffffffff8000b29d: 48 89 da             	movq	%rbx, %rdx
ffffffff8000b2a0: e8 db e3 00 00       	callq	0xffffffff80019680 <core::fmt::write::h1a05140646fc4354>
ffffffff8000b2a5: 84 c0                	testb	%al, %al
ffffffff8000b2a7: 75 1b                	jne	0xffffffff8000b2c4 <taos::devices::serial::_print::h2727b219b98997eb+0x74>
ffffffff8000b2a9: c6 05 c2 af 01 00 00 	movb	$0x0, 0x1afc2(%rip)     # 0xffffffff80026272 <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.16693732038470628512>
ffffffff8000b2b0: 48 83 c4 10          	addq	$0x10, %rsp
ffffffff8000b2b4: 5b                   	popq	%rbx
ffffffff8000b2b5: c3                   	retq
ffffffff8000b2b6: 48 c7 c7 72 62 02 80 	movq	$-0x7ffd9d8e, %rdi      # imm = 0x80026272
ffffffff8000b2bd: e8 0e 7a ff ff       	callq	0xffffffff80002cd0 <spin::once::Once<T,R>::try_call_once_slow::h69df9f69f53fd4bc.llvm.14359069980145722807>
ffffffff8000b2c2: eb 9f                	jmp	0xffffffff8000b263 <taos::devices::serial::_print::h2727b219b98997eb+0x13>
ffffffff8000b2c4: 48 8d 54 24 0f       	leaq	0xf(%rsp), %rdx
ffffffff8000b2c9: be 19 00 00 00       	movl	$0x19, %esi
ffffffff8000b2ce: 48 c7 c7 50 e9 01 80 	movq	$-0x7ffe16b0, %rdi      # imm = 0x8001E950
ffffffff8000b2d5: 48 c7 c1 30 e9 01 80 	movq	$-0x7ffe16d0, %rcx      # imm = 0x8001E930
ffffffff8000b2dc: 49 c7 c0 80 e9 01 80 	movq	$-0x7ffe1680, %r8       # imm = 0x8001E980
ffffffff8000b2e3: e8 f8 0b 01 00       	callq	0xffffffff8001bee0 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff8000b2e8: cc                   	int3
ffffffff8000b2e9: cc                   	int3
ffffffff8000b2ea: cc                   	int3
ffffffff8000b2eb: cc                   	int3
ffffffff8000b2ec: cc                   	int3
ffffffff8000b2ed: cc                   	int3
ffffffff8000b2ee: cc                   	int3
ffffffff8000b2ef: cc                   	int3

ffffffff8000b2f0 <<taos::logging::Logger as log::Log>::enabled::h3d1632a01728b17f>:
ffffffff8000b2f0: 48 8b 05 21 b1 02 00 	movq	0x2b121(%rip), %rax     # 0xffffffff80036418 <log::MAX_LOG_LEVEL_FILTER::hebff44fa7f6797f5>
ffffffff8000b2f7: 48 39 06             	cmpq	%rax, (%rsi)
ffffffff8000b2fa: 0f 96 c0             	setbe	%al
ffffffff8000b2fd: c3                   	retq
ffffffff8000b2fe: cc                   	int3
ffffffff8000b2ff: cc                   	int3

ffffffff8000b300 <<taos::logging::Logger as log::Log>::log::hcb3777d35b97c566>:
ffffffff8000b300: 53                   	pushq	%rbx
ffffffff8000b301: 48 83 ec 70          	subq	$0x70, %rsp
ffffffff8000b305: 48 8b 4e 30          	movq	0x30(%rsi), %rcx
ffffffff8000b309: 48 8b 05 08 b1 02 00 	movq	0x2b108(%rip), %rax     # 0xffffffff80036418 <log::MAX_LOG_LEVEL_FILTER::hebff44fa7f6797f5>
ffffffff8000b310: 48 39 c1             	cmpq	%rax, %rcx
ffffffff8000b313: 0f 87 dc 00 00 00    	ja	0xffffffff8000b3f5 <<taos::logging::Logger as log::Log>::log::hcb3777d35b97c566+0xf5>
ffffffff8000b319: 48 89 fb             	movq	%rdi, %rbx
ffffffff8000b31c: b2 01                	movb	$0x1, %dl
ffffffff8000b31e: 66 90                	nop
ffffffff8000b320: 31 c0                	xorl	%eax, %eax
ffffffff8000b322: f0                   	lock
ffffffff8000b323: 0f b0 13             	cmpxchgb	%dl, (%rbx)
ffffffff8000b326: 75 0a                	jne	0xffffffff8000b332 <<taos::logging::Logger as log::Log>::log::hcb3777d35b97c566+0x32>
ffffffff8000b328: eb 11                	jmp	0xffffffff8000b33b <<taos::logging::Logger as log::Log>::log::hcb3777d35b97c566+0x3b>
ffffffff8000b32a: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff8000b330: f3 90                	pause
ffffffff8000b332: 0f b6 03             	movzbl	(%rbx), %eax
ffffffff8000b335: 84 c0                	testb	%al, %al
ffffffff8000b337: 75 f7                	jne	0xffffffff8000b330 <<taos::logging::Logger as log::Log>::log::hcb3777d35b97c566+0x30>
ffffffff8000b339: eb e5                	jmp	0xffffffff8000b320 <<taos::logging::Logger as log::Log>::log::hcb3777d35b97c566+0x20>
ffffffff8000b33b: 48 89 4c 24 10       	movq	%rcx, 0x10(%rsp)
ffffffff8000b340: 48 83 c6 50          	addq	$0x50, %rsi
ffffffff8000b344: 48 89 74 24 18       	movq	%rsi, 0x18(%rsp)
ffffffff8000b349: 48 8d 44 24 10       	leaq	0x10(%rsp), %rax
ffffffff8000b34e: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff8000b353: 48 c7 44 24 28 60 7a 01 80   	movq	$-0x7ffe85a0, 0x28(%rsp) # imm = 0x80017A60
ffffffff8000b35c: 48 8d 44 24 18       	leaq	0x18(%rsp), %rax
ffffffff8000b361: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff8000b366: 48 c7 44 24 38 10 03 00 80   	movq	$-0x7ffffcf0, 0x38(%rsp) # imm = 0x80000310
ffffffff8000b36f: 48 c7 44 24 40 a0 e9 01 80   	movq	$-0x7ffe1660, 0x40(%rsp) # imm = 0x8001E9A0
ffffffff8000b378: 48 c7 44 24 48 03 00 00 00   	movq	$0x3, 0x48(%rsp)
ffffffff8000b381: 48 c7 44 24 60 00 00 00 00   	movq	$0x0, 0x60(%rsp)
ffffffff8000b38a: 48 8d 44 24 20       	leaq	0x20(%rsp), %rax
ffffffff8000b38f: 48 89 44 24 50       	movq	%rax, 0x50(%rsp)
ffffffff8000b394: 48 c7 44 24 58 02 00 00 00   	movq	$0x2, 0x58(%rsp)
ffffffff8000b39d: 0f b6 05 d2 ae 01 00 	movzbl	0x1aed2(%rip), %eax     # 0xffffffff80026276 <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.16693732038470628512+0x4>
ffffffff8000b3a4: 3c 02                	cmpb	$0x2, %al
ffffffff8000b3a6: 75 53                	jne	0xffffffff8000b3fb <<taos::logging::Logger as log::Log>::log::hcb3777d35b97c566+0xfb>
ffffffff8000b3a8: b1 01                	movb	$0x1, %cl
ffffffff8000b3aa: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff8000b3b0: 31 c0                	xorl	%eax, %eax
ffffffff8000b3b2: f0                   	lock
ffffffff8000b3b3: 0f b0 0d b8 ae 01 00 	cmpxchgb	%cl, 0x1aeb8(%rip)      # 0xffffffff80026272 <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.16693732038470628512>
ffffffff8000b3ba: 75 06                	jne	0xffffffff8000b3c2 <<taos::logging::Logger as log::Log>::log::hcb3777d35b97c566+0xc2>
ffffffff8000b3bc: eb 11                	jmp	0xffffffff8000b3cf <<taos::logging::Logger as log::Log>::log::hcb3777d35b97c566+0xcf>
ffffffff8000b3be: 66 90                	nop
ffffffff8000b3c0: f3 90                	pause
ffffffff8000b3c2: 0f b6 05 a9 ae 01 00 	movzbl	0x1aea9(%rip), %eax     # 0xffffffff80026272 <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.16693732038470628512>
ffffffff8000b3c9: 84 c0                	testb	%al, %al
ffffffff8000b3cb: 75 f3                	jne	0xffffffff8000b3c0 <<taos::logging::Logger as log::Log>::log::hcb3777d35b97c566+0xc0>
ffffffff8000b3cd: eb e1                	jmp	0xffffffff8000b3b0 <<taos::logging::Logger as log::Log>::log::hcb3777d35b97c566+0xb0>
ffffffff8000b3cf: 48 8d 54 24 40       	leaq	0x40(%rsp), %rdx
ffffffff8000b3d4: 48 c7 c7 74 62 02 80 	movq	$-0x7ffd9d8c, %rdi      # imm = 0x80026274
ffffffff8000b3db: 48 c7 c6 50 e8 01 80 	movq	$-0x7ffe17b0, %rsi      # imm = 0x8001E850
ffffffff8000b3e2: e8 99 e2 00 00       	callq	0xffffffff80019680 <core::fmt::write::h1a05140646fc4354>
ffffffff8000b3e7: 84 c0                	testb	%al, %al
ffffffff8000b3e9: 75 1e                	jne	0xffffffff8000b409 <<taos::logging::Logger as log::Log>::log::hcb3777d35b97c566+0x109>
ffffffff8000b3eb: c6 05 80 ae 01 00 00 	movb	$0x0, 0x1ae80(%rip)     # 0xffffffff80026272 <<taos::devices::serial::SERIAL1 as core::ops::deref::Deref>::deref::__stability::LAZY::hb61c6fb7478cef83.llvm.16693732038470628512>
ffffffff8000b3f2: c6 03 00             	movb	$0x0, (%rbx)
ffffffff8000b3f5: 48 83 c4 70          	addq	$0x70, %rsp
ffffffff8000b3f9: 5b                   	popq	%rbx
ffffffff8000b3fa: c3                   	retq
ffffffff8000b3fb: 48 c7 c7 72 62 02 80 	movq	$-0x7ffd9d8e, %rdi      # imm = 0x80026272
ffffffff8000b402: e8 c9 78 ff ff       	callq	0xffffffff80002cd0 <spin::once::Once<T,R>::try_call_once_slow::h69df9f69f53fd4bc.llvm.14359069980145722807>
ffffffff8000b407: eb 9f                	jmp	0xffffffff8000b3a8 <<taos::logging::Logger as log::Log>::log::hcb3777d35b97c566+0xa8>
ffffffff8000b409: 48 8d 54 24 0f       	leaq	0xf(%rsp), %rdx
ffffffff8000b40e: be 19 00 00 00       	movl	$0x19, %esi
ffffffff8000b413: 48 c7 c7 50 e9 01 80 	movq	$-0x7ffe16b0, %rdi      # imm = 0x8001E950
ffffffff8000b41a: 48 c7 c1 30 e9 01 80 	movq	$-0x7ffe16d0, %rcx      # imm = 0x8001E930
ffffffff8000b421: 49 c7 c0 80 e9 01 80 	movq	$-0x7ffe1680, %r8       # imm = 0x8001E980
ffffffff8000b428: e8 b3 0a 01 00       	callq	0xffffffff8001bee0 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff8000b42d: cc                   	int3
ffffffff8000b42e: cc                   	int3
ffffffff8000b42f: cc                   	int3

ffffffff8000b430 <<taos::logging::Logger as log::Log>::flush::hdc342436406cf131.llvm.16693732038470628512>:
ffffffff8000b430: c3                   	retq
ffffffff8000b431: cc                   	int3
ffffffff8000b432: cc                   	int3
ffffffff8000b433: cc                   	int3
ffffffff8000b434: cc                   	int3
ffffffff8000b435: cc                   	int3
ffffffff8000b436: cc                   	int3
ffffffff8000b437: cc                   	int3
ffffffff8000b438: cc                   	int3
ffffffff8000b439: cc                   	int3
ffffffff8000b43a: cc                   	int3
ffffffff8000b43b: cc                   	int3
ffffffff8000b43c: cc                   	int3
ffffffff8000b43d: cc                   	int3
ffffffff8000b43e: cc                   	int3
ffffffff8000b43f: cc                   	int3

ffffffff8000b440 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683>:
ffffffff8000b440: 55                   	pushq	%rbp
ffffffff8000b441: 41 57                	pushq	%r15
ffffffff8000b443: 41 56                	pushq	%r14
ffffffff8000b445: 41 55                	pushq	%r13
ffffffff8000b447: 41 54                	pushq	%r12
ffffffff8000b449: 53                   	pushq	%rbx
ffffffff8000b44a: 50                   	pushq	%rax
ffffffff8000b44b: 48 b8 00 00 00 00 00 00 10 00	movabsq	$0x10000000000000, %rax # imm = 0x10000000000000
ffffffff8000b455: 48 ba 00 00 00 00 00 7f 00 00	movabsq	$0x7f0000000000, %rdx # imm = 0x7F0000000000
ffffffff8000b45f: 4c 8b 46 20          	movq	0x20(%rsi), %r8
ffffffff8000b463: 48 8b 4e 28          	movq	0x28(%rsi), %rcx
ffffffff8000b467: 4d 8b 48 08          	movq	0x8(%r8), %r9
ffffffff8000b46b: 4d 8b 40 10          	movq	0x10(%r8), %r8
ffffffff8000b46f: 4f 8d 0c c8          	leaq	(%r8,%r9,8), %r9
ffffffff8000b473: 4c 8b 56 38          	movq	0x38(%rsi), %r10
ffffffff8000b477: 4c 8b 5e 40          	movq	0x40(%rsi), %r11
ffffffff8000b47b: 40 b5 02             	movb	$0x2, %bpl
ffffffff8000b47e: 31 db                	xorl	%ebx, %ebx
ffffffff8000b480: eb 25                	jmp	0xffffffff8000b4a7 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x67>
ffffffff8000b482: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
ffffffff8000b490: 4d 8d bc 24 00 10 00 00      	leaq	0x1000(%r12), %r15
ffffffff8000b498: 40 b5 01             	movb	$0x1, %bpl
ffffffff8000b49b: 48 ff c3             	incq	%rbx
ffffffff8000b49e: 49 39 c4             	cmpq	%rax, %r12
ffffffff8000b4a1: 0f 83 03 01 00 00    	jae	0xffffffff8000b5aa <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x16a>
ffffffff8000b4a7: 48 39 cb             	cmpq	%rcx, %rbx
ffffffff8000b4aa: 0f 84 12 01 00 00    	je	0xffffffff8000b5c2 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x182>
ffffffff8000b4b0: 40 80 fd 02          	cmpb	$0x2, %bpl
ffffffff8000b4b4: 0f 85 96 00 00 00    	jne	0xffffffff8000b550 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x110>
ffffffff8000b4ba: 4d 85 c0             	testq	%r8, %r8
ffffffff8000b4bd: 0f 84 85 01 00 00    	je	0xffffffff8000b648 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x208>
ffffffff8000b4c3: 4d 39 c8             	cmpq	%r9, %r8
ffffffff8000b4c6: 0f 84 7c 01 00 00    	je	0xffffffff8000b648 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x208>
ffffffff8000b4cc: 4d 8b 30             	movq	(%r8), %r14
ffffffff8000b4cf: 49 83 c0 08          	addq	$0x8, %r8
ffffffff8000b4d3: 49 83 7e 10 00       	cmpq	$0x0, 0x10(%r14)
ffffffff8000b4d8: 75 e9                	jne	0xffffffff8000b4c3 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x83>
ffffffff8000b4da: 4d 8b 3e             	movq	(%r14), %r15
ffffffff8000b4dd: 4d 8b 76 08          	movq	0x8(%r14), %r14
ffffffff8000b4e1: 4d 01 fe             	addq	%r15, %r14
ffffffff8000b4e4: 4d 29 fe             	subq	%r15, %r14
ffffffff8000b4e7: 41 bc 00 00 00 00    	movl	$0x0, %r12d
ffffffff8000b4ed: 4d 0f 43 e6          	cmovaeq	%r14, %r12
ffffffff8000b4f1: 4d 89 e5             	movq	%r12, %r13
ffffffff8000b4f4: 49 c1 ed 0c          	shrq	$0xc, %r13
ffffffff8000b4f8: 41 81 e4 ff 0f 00 00 	andl	$0xfff, %r12d           # imm = 0xFFF
ffffffff8000b4ff: 49 83 fc 01          	cmpq	$0x1, %r12
ffffffff8000b503: 49 83 dd ff          	sbbq	$-0x1, %r13
ffffffff8000b507: 49 ff cd             	decq	%r13
ffffffff8000b50a: 4c 89 fd             	movq	%r15, %rbp
ffffffff8000b50d: 0f 1f 00             	nopl	(%rax)
ffffffff8000b510: 49 83 fd ff          	cmpq	$-0x1, %r13
ffffffff8000b514: 74 ad                	je	0xffffffff8000b4c3 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x83>
ffffffff8000b516: 49 89 ec             	movq	%rbp, %r12
ffffffff8000b519: 4d 89 ee             	movq	%r13, %r14
ffffffff8000b51c: 4d 39 d7             	cmpq	%r10, %r15
ffffffff8000b51f: 0f 82 6b ff ff ff    	jb	0xffffffff8000b490 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x50>
ffffffff8000b525: 4d 8d 2c 14          	leaq	(%r12,%rdx), %r13
ffffffff8000b529: 49 81 fd 00 00 10 00 	cmpq	$0x100000, %r13         # imm = 0x100000
ffffffff8000b530: 0f 87 5a ff ff ff    	ja	0xffffffff8000b490 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x50>
ffffffff8000b536: 4d 8d 6e ff          	leaq	-0x1(%r14), %r13
ffffffff8000b53a: 49 8d ac 24 00 10 00 00      	leaq	0x1000(%r12), %rbp
ffffffff8000b542: 4d 39 e3             	cmpq	%r12, %r11
ffffffff8000b545: 77 c9                	ja	0xffffffff8000b510 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0xd0>
ffffffff8000b547: e9 44 ff ff ff       	jmp	0xffffffff8000b490 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x50>
ffffffff8000b54c: 0f 1f 40 00          	nopl	(%rax)
ffffffff8000b550: 41 bd 01 00 00 00    	movl	$0x1, %r13d
ffffffff8000b556: 4d 29 f5             	subq	%r14, %r13
ffffffff8000b559: 0f 1f 80 00 00 00 00 	nopl	(%rax)
ffffffff8000b560: 49 83 fd 01          	cmpq	$0x1, %r13
ffffffff8000b564: 0f 84 50 ff ff ff    	je	0xffffffff8000b4ba <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x7a>
ffffffff8000b56a: 4d 89 fc             	movq	%r15, %r12
ffffffff8000b56d: 4d 89 ee             	movq	%r13, %r14
ffffffff8000b570: 4d 39 fa             	cmpq	%r15, %r10
ffffffff8000b573: 77 1e                	ja	0xffffffff8000b593 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x153>
ffffffff8000b575: 4d 8d 3c 14          	leaq	(%r12,%rdx), %r15
ffffffff8000b579: 49 81 ff 00 00 10 00 	cmpq	$0x100000, %r15         # imm = 0x100000
ffffffff8000b580: 77 11                	ja	0xffffffff8000b593 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x153>
ffffffff8000b582: 4d 8d 6e 01          	leaq	0x1(%r14), %r13
ffffffff8000b586: 4d 8d bc 24 00 10 00 00      	leaq	0x1000(%r12), %r15
ffffffff8000b58e: 4d 39 e3             	cmpq	%r12, %r11
ffffffff8000b591: 77 cd                	ja	0xffffffff8000b560 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x120>
ffffffff8000b593: 4d 8d bc 24 00 10 00 00      	leaq	0x1000(%r12), %r15
ffffffff8000b59b: 49 f7 de             	negq	%r14
ffffffff8000b59e: 48 ff c3             	incq	%rbx
ffffffff8000b5a1: 49 39 c4             	cmpq	%rax, %r12
ffffffff8000b5a4: 0f 82 fd fe ff ff    	jb	0xffffffff8000b4a7 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x67>
ffffffff8000b5aa: be 43 00 00 00       	movl	$0x43, %esi
ffffffff8000b5af: 48 c7 c7 f8 ea 01 80 	movq	$-0x7ffe1508, %rdi      # imm = 0x8001EAF8
ffffffff8000b5b6: 48 c7 c2 98 eb 01 80 	movq	$-0x7ffe1468, %rdx      # imm = 0x8001EB98
ffffffff8000b5bd: e8 ae 0e 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000b5c2: 40 80 fd 02          	cmpb	$0x2, %bpl
ffffffff8000b5c6: 0f 85 95 00 00 00    	jne	0xffffffff8000b661 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x221>
ffffffff8000b5cc: 4d 85 c0             	testq	%r8, %r8
ffffffff8000b5cf: 74 77                	je	0xffffffff8000b648 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x208>
ffffffff8000b5d1: 4d 39 c8             	cmpq	%r9, %r8
ffffffff8000b5d4: 74 72                	je	0xffffffff8000b648 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x208>
ffffffff8000b5d6: 45 31 f6             	xorl	%r14d, %r14d
ffffffff8000b5d9: eb 09                	jmp	0xffffffff8000b5e4 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x1a4>
ffffffff8000b5db: 49 83 c0 08          	addq	$0x8, %r8
ffffffff8000b5df: 4d 39 c8             	cmpq	%r9, %r8
ffffffff8000b5e2: 74 64                	je	0xffffffff8000b648 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x208>
ffffffff8000b5e4: 49 8b 18             	movq	(%r8), %rbx
ffffffff8000b5e7: 48 83 7b 10 00       	cmpq	$0x0, 0x10(%rbx)
ffffffff8000b5ec: 75 ed                	jne	0xffffffff8000b5db <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x19b>
ffffffff8000b5ee: 4c 8b 3b             	movq	(%rbx), %r15
ffffffff8000b5f1: 48 8b 5b 08          	movq	0x8(%rbx), %rbx
ffffffff8000b5f5: 4c 01 fb             	addq	%r15, %rbx
ffffffff8000b5f8: 4c 29 fb             	subq	%r15, %rbx
ffffffff8000b5fb: 49 0f 42 de          	cmovbq	%r14, %rbx
ffffffff8000b5ff: 49 89 dc             	movq	%rbx, %r12
ffffffff8000b602: 49 c1 ec 0c          	shrq	$0xc, %r12
ffffffff8000b606: 81 e3 ff 0f 00 00    	andl	$0xfff, %ebx            # imm = 0xFFF
ffffffff8000b60c: 48 83 fb 01          	cmpq	$0x1, %rbx
ffffffff8000b610: 49 83 dc ff          	sbbq	$-0x1, %r12
ffffffff8000b614: 49 f7 d4             	notq	%r12
ffffffff8000b617: 4d 89 fd             	movq	%r15, %r13
ffffffff8000b61a: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff8000b620: 49 ff c4             	incq	%r12
ffffffff8000b623: 74 b6                	je	0xffffffff8000b5db <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x19b>
ffffffff8000b625: 4c 89 eb             	movq	%r13, %rbx
ffffffff8000b628: 4d 39 d7             	cmpq	%r10, %r15
ffffffff8000b62b: 72 6d                	jb	0xffffffff8000b69a <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x25a>
ffffffff8000b62d: 4c 8d 2c 13          	leaq	(%rbx,%rdx), %r13
ffffffff8000b631: 49 81 fd 00 00 10 00 	cmpq	$0x100000, %r13         # imm = 0x100000
ffffffff8000b638: 77 60                	ja	0xffffffff8000b69a <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x25a>
ffffffff8000b63a: 4c 8d ab 00 10 00 00 	leaq	0x1000(%rbx), %r13
ffffffff8000b641: 49 39 db             	cmpq	%rbx, %r11
ffffffff8000b644: 77 da                	ja	0xffffffff8000b620 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x1e0>
ffffffff8000b646: eb 52                	jmp	0xffffffff8000b69a <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x25a>
ffffffff8000b648: 48 c7 07 00 00 00 00 	movq	$0x0, (%rdi)
ffffffff8000b64f: 48 89 f8             	movq	%rdi, %rax
ffffffff8000b652: 48 83 c4 08          	addq	$0x8, %rsp
ffffffff8000b656: 5b                   	popq	%rbx
ffffffff8000b657: 41 5c                	popq	%r12
ffffffff8000b659: 41 5d                	popq	%r13
ffffffff8000b65b: 41 5e                	popq	%r14
ffffffff8000b65d: 41 5f                	popq	%r15
ffffffff8000b65f: 5d                   	popq	%rbp
ffffffff8000b660: c3                   	retq
ffffffff8000b661: 49 ff c6             	incq	%r14
ffffffff8000b664: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
ffffffff8000b670: 49 ff ce             	decq	%r14
ffffffff8000b673: 0f 84 53 ff ff ff    	je	0xffffffff8000b5cc <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x18c>
ffffffff8000b679: 4c 89 fb             	movq	%r15, %rbx
ffffffff8000b67c: 4d 39 fa             	cmpq	%r15, %r10
ffffffff8000b67f: 77 19                	ja	0xffffffff8000b69a <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x25a>
ffffffff8000b681: 4c 8d 3c 13          	leaq	(%rbx,%rdx), %r15
ffffffff8000b685: 49 81 ff 00 00 10 00 	cmpq	$0x100000, %r15         # imm = 0x100000
ffffffff8000b68c: 77 0c                	ja	0xffffffff8000b69a <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x25a>
ffffffff8000b68e: 4c 8d bb 00 10 00 00 	leaq	0x1000(%rbx), %r15
ffffffff8000b695: 49 39 db             	cmpq	%rbx, %r11
ffffffff8000b698: 77 d6                	ja	0xffffffff8000b670 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x230>
ffffffff8000b69a: 48 39 c3             	cmpq	%rax, %rbx
ffffffff8000b69d: 0f 83 07 ff ff ff    	jae	0xffffffff8000b5aa <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x16a>
ffffffff8000b6a3: 48 ff c1             	incq	%rcx
ffffffff8000b6a6: 48 89 4e 28          	movq	%rcx, 0x28(%rsi)
ffffffff8000b6aa: 48 8b 4e 30          	movq	0x30(%rsi), %rcx
ffffffff8000b6ae: 48 81 f9 00 02 00 00 	cmpq	$0x200, %rcx            # imm = 0x200
ffffffff8000b6b5: 73 3d                	jae	0xffffffff8000b6f4 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x2b4>
ffffffff8000b6b7: 48 05 00 f0 ff ff    	addq	$-0x1000, %rax          # imm = 0xF000
ffffffff8000b6bd: 48 21 c3             	andq	%rax, %rbx
ffffffff8000b6c0: 48 83 3e 00          	cmpq	$0x0, (%rsi)
ffffffff8000b6c4: 75 0b                	jne	0xffffffff8000b6d1 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x291>
ffffffff8000b6c6: 48 c7 06 01 00 00 00 	movq	$0x1, (%rsi)
ffffffff8000b6cd: 48 89 5e 08          	movq	%rbx, 0x8(%rsi)
ffffffff8000b6d1: 48 c7 46 10 01 00 00 00      	movq	$0x1, 0x10(%rsi)
ffffffff8000b6d9: 48 89 5e 18          	movq	%rbx, 0x18(%rsi)
ffffffff8000b6dd: 48 ff c1             	incq	%rcx
ffffffff8000b6e0: 48 89 4e 30          	movq	%rcx, 0x30(%rsi)
ffffffff8000b6e4: 48 c7 07 01 00 00 00 	movq	$0x1, (%rdi)
ffffffff8000b6eb: 48 89 5f 08          	movq	%rbx, 0x8(%rdi)
ffffffff8000b6ef: e9 5b ff ff ff       	jmp	0xffffffff8000b64f <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683+0x20f>
ffffffff8000b6f4: be 3d 00 00 00       	movl	$0x3d, %esi
ffffffff8000b6f9: 48 c7 c7 e0 eb 01 80 	movq	$-0x7ffe1420, %rdi      # imm = 0x8001EBE0
ffffffff8000b700: 48 c7 c2 20 ec 01 80 	movq	$-0x7ffe13e0, %rdx      # imm = 0x8001EC20
ffffffff8000b707: e8 64 0d 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000b70c: cc                   	int3
ffffffff8000b70d: cc                   	int3
ffffffff8000b70e: cc                   	int3
ffffffff8000b70f: cc                   	int3

ffffffff8000b710 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::h2642dd658fae234e>:
ffffffff8000b710: 48 83 ec 38          	subq	$0x38, %rsp
ffffffff8000b714: 48 c7 44 24 08 70 ec 01 80   	movq	$-0x7ffe1390, 0x8(%rsp) # imm = 0x8001EC70
ffffffff8000b71d: 48 c7 44 24 10 01 00 00 00   	movq	$0x1, 0x10(%rsp)
ffffffff8000b726: 48 c7 44 24 28 00 00 00 00   	movq	$0x0, 0x28(%rsp)
ffffffff8000b72f: 48 c7 44 24 18 08 00 00 00   	movq	$0x8, 0x18(%rsp)
ffffffff8000b738: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff8000b741: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff8000b746: 48 c7 c6 80 ec 01 80 	movq	$-0x7ffe1380, %rsi      # imm = 0x8001EC80
ffffffff8000b74d: e8 9e 0c 01 00       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8000b752: cc                   	int3
ffffffff8000b753: cc                   	int3
ffffffff8000b754: cc                   	int3
ffffffff8000b755: cc                   	int3
ffffffff8000b756: cc                   	int3
ffffffff8000b757: cc                   	int3
ffffffff8000b758: cc                   	int3
ffffffff8000b759: cc                   	int3
ffffffff8000b75a: cc                   	int3
ffffffff8000b75b: cc                   	int3
ffffffff8000b75c: cc                   	int3
ffffffff8000b75d: cc                   	int3
ffffffff8000b75e: cc                   	int3
ffffffff8000b75f: cc                   	int3

ffffffff8000b760 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e>:
ffffffff8000b760: 55                   	pushq	%rbp
ffffffff8000b761: 41 57                	pushq	%r15
ffffffff8000b763: 41 56                	pushq	%r14
ffffffff8000b765: 41 55                	pushq	%r13
ffffffff8000b767: 41 54                	pushq	%r12
ffffffff8000b769: 53                   	pushq	%rbx
ffffffff8000b76a: 48 83 ec 68          	subq	$0x68, %rsp
ffffffff8000b76e: 48 8b 1a             	movq	(%rdx), %rbx
ffffffff8000b771: 4c 8b 72 08          	movq	0x8(%rdx), %r14
ffffffff8000b775: 31 ed                	xorl	%ebp, %ebp
ffffffff8000b777: 4c 89 f1             	movq	%r14, %rcx
ffffffff8000b77a: 48 29 d9             	subq	%rbx, %rcx
ffffffff8000b77d: 48 0f 42 cd          	cmovbq	%rbp, %rcx
ffffffff8000b781: 48 89 7c 24 30       	movq	%rdi, 0x30(%rsp)
ffffffff8000b786: 4c 8d 2c cd 00 00 00 00      	leaq	(,%rcx,8), %r13
ffffffff8000b78e: 48 89 c8             	movq	%rcx, %rax
ffffffff8000b791: 48 c1 e8 3d          	shrq	$0x3d, %rax
ffffffff8000b795: 0f 85 a7 04 00 00    	jne	0xffffffff8000bc42 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x4e2>
ffffffff8000b79b: 48 b8 f8 ff ff ff ff ff ff 7f	movabsq	$0x7ffffffffffffff8, %rax # imm = 0x7FFFFFFFFFFFFFF8
ffffffff8000b7a5: 49 39 c5             	cmpq	%rax, %r13
ffffffff8000b7a8: 0f 87 94 04 00 00    	ja	0xffffffff8000bc42 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x4e2>
ffffffff8000b7ae: 49 89 f4             	movq	%rsi, %r12
ffffffff8000b7b1: 4c 8b 7a 10          	movq	0x10(%rdx), %r15
ffffffff8000b7b5: 4d 85 ed             	testq	%r13, %r13
ffffffff8000b7b8: 0f 84 a6 00 00 00    	je	0xffffffff8000b864 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x104>
ffffffff8000b7be: 48 89 0c 24          	movq	%rcx, (%rsp)
ffffffff8000b7c2: 0f b6 05 18 9a 01 00 	movzbl	0x19a18(%rip), %eax     # 0xffffffff800251e1 <__rust_no_alloc_shim_is_unstable>
ffffffff8000b7c9: b1 01                	movb	$0x1, %cl
ffffffff8000b7cb: 0f 1f 44 00 00       	nopl	(%rax,%rax)
ffffffff8000b7d0: 31 c0                	xorl	%eax, %eax
ffffffff8000b7d2: f0                   	lock
ffffffff8000b7d3: 0f b0 0d 76 98 01 00 	cmpxchgb	%cl, 0x19876(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000b7da: 75 06                	jne	0xffffffff8000b7e2 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x82>
ffffffff8000b7dc: eb 11                	jmp	0xffffffff8000b7ef <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x8f>
ffffffff8000b7de: 66 90                	nop
ffffffff8000b7e0: f3 90                	pause
ffffffff8000b7e2: 0f b6 05 67 98 01 00 	movzbl	0x19867(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000b7e9: 84 c0                	testb	%al, %al
ffffffff8000b7eb: 75 f3                	jne	0xffffffff8000b7e0 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x80>
ffffffff8000b7ed: eb e1                	jmp	0xffffffff8000b7d0 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x70>
ffffffff8000b7ef: bd 08 00 00 00       	movl	$0x8, %ebp
ffffffff8000b7f4: be 08 00 00 00       	movl	$0x8, %esi
ffffffff8000b7f9: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000b800: 4c 89 ea             	movq	%r13, %rdx
ffffffff8000b803: e8 f8 7a ff ff       	callq	0xffffffff80003300 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff8000b808: c6 05 41 98 01 00 00 	movb	$0x0, 0x19841(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000b80f: 48 85 c0             	testq	%rax, %rax
ffffffff8000b812: 48 8b 3c 24          	movq	(%rsp), %rdi
ffffffff8000b816: 0f 84 26 04 00 00    	je	0xffffffff8000bc42 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x4e2>
ffffffff8000b81c: 49 29 de             	subq	%rbx, %r14
ffffffff8000b81f: 76 4f                	jbe	0xffffffff8000b870 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x110>
ffffffff8000b821: 48 be 00 f0 ff ff ff ff 0f 00	movabsq	$0xffffffffff000, %rsi # imm = 0xFFFFFFFFFF000
ffffffff8000b82b: 48 c1 e3 0c          	shlq	$0xc, %rbx
ffffffff8000b82f: 49 01 df             	addq	%rbx, %r15
ffffffff8000b832: 31 db                	xorl	%ebx, %ebx
ffffffff8000b834: 48 8d 8e 00 10 00 00 	leaq	0x1000(%rsi), %rcx
ffffffff8000b83b: 0f 1f 44 00 00       	nopl	(%rax,%rax)
ffffffff8000b840: 49 39 cf             	cmpq	%rcx, %r15
ffffffff8000b843: 0f 83 c3 03 00 00    	jae	0xffffffff8000bc0c <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x4ac>
ffffffff8000b849: 4c 89 fa             	movq	%r15, %rdx
ffffffff8000b84c: 48 21 f2             	andq	%rsi, %rdx
ffffffff8000b84f: 48 89 14 d8          	movq	%rdx, (%rax,%rbx,8)
ffffffff8000b853: 48 ff c3             	incq	%rbx
ffffffff8000b856: 49 81 c7 00 10 00 00 	addq	$0x1000, %r15           # imm = 0x1000
ffffffff8000b85d: 49 39 de             	cmpq	%rbx, %r14
ffffffff8000b860: 75 de                	jne	0xffffffff8000b840 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0xe0>
ffffffff8000b862: eb 0e                	jmp	0xffffffff8000b872 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x112>
ffffffff8000b864: b8 08 00 00 00       	movl	$0x8, %eax
ffffffff8000b869: 31 ff                	xorl	%edi, %edi
ffffffff8000b86b: 49 29 de             	subq	%rbx, %r14
ffffffff8000b86e: 77 b1                	ja	0xffffffff8000b821 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0xc1>
ffffffff8000b870: 31 db                	xorl	%ebx, %ebx
ffffffff8000b872: 49 8b 4c 24 08       	movq	0x8(%r12), %rcx
ffffffff8000b877: 49 8b 6c 24 10       	movq	0x10(%r12), %rbp
ffffffff8000b87c: 48 85 c9             	testq	%rcx, %rcx
ffffffff8000b87f: 48 89 4c 24 08       	movq	%rcx, 0x8(%rsp)
ffffffff8000b884: 74 3f                	je	0xffffffff8000b8c5 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x165>
ffffffff8000b886: 4c 8d 04 cd 00 00 00 00      	leaq	(,%rcx,8), %r8
ffffffff8000b88e: 31 c9                	xorl	%ecx, %ecx
ffffffff8000b890: 45 31 e4             	xorl	%r12d, %r12d
ffffffff8000b893: eb 14                	jmp	0xffffffff8000b8a9 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x149>
ffffffff8000b895: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff8000b8a0: 48 83 c1 08          	addq	$0x8, %rcx
ffffffff8000b8a4: 49 39 c8             	cmpq	%rcx, %r8
ffffffff8000b8a7: 74 1f                	je	0xffffffff8000b8c8 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x168>
ffffffff8000b8a9: 48 8b 54 0d 00       	movq	(%rbp,%rcx), %rdx
ffffffff8000b8ae: 48 83 7a 10 00       	cmpq	$0x0, 0x10(%rdx)
ffffffff8000b8b3: 75 eb                	jne	0xffffffff8000b8a0 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x140>
ffffffff8000b8b5: 48 8b 72 08          	movq	0x8(%rdx), %rsi
ffffffff8000b8b9: 48 03 32             	addq	(%rdx), %rsi
ffffffff8000b8bc: 4c 39 e6             	cmpq	%r12, %rsi
ffffffff8000b8bf: 4c 0f 47 e6          	cmovaq	%rsi, %r12
ffffffff8000b8c3: eb db                	jmp	0xffffffff8000b8a0 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x140>
ffffffff8000b8c5: 45 31 e4             	xorl	%r12d, %r12d
ffffffff8000b8c8: 48 89 44 24 10       	movq	%rax, 0x10(%rsp)
ffffffff8000b8cd: 48 89 3c 24          	movq	%rdi, (%rsp)
ffffffff8000b8d1: 4c 89 64 24 18       	movq	%r12, 0x18(%rsp)
ffffffff8000b8d6: 4c 8d 6c 24 18       	leaq	0x18(%rsp), %r13
ffffffff8000b8db: 4c 89 6c 24 20       	movq	%r13, 0x20(%rsp)
ffffffff8000b8e0: 48 c7 44 24 28 c0 b8 01 80   	movq	$-0x7ffe4740, 0x28(%rsp) # imm = 0x8001B8C0
ffffffff8000b8e9: 48 c7 44 24 38 48 ed 01 80   	movq	$-0x7ffe12b8, 0x38(%rsp) # imm = 0x8001ED48
ffffffff8000b8f2: 48 c7 44 24 40 02 00 00 00   	movq	$0x2, 0x40(%rsp)
ffffffff8000b8fb: 48 c7 44 24 58 00 00 00 00   	movq	$0x0, 0x58(%rsp)
ffffffff8000b904: 4c 8d 7c 24 20       	leaq	0x20(%rsp), %r15
ffffffff8000b909: 4c 89 7c 24 48       	movq	%r15, 0x48(%rsp)
ffffffff8000b90e: 48 c7 44 24 50 01 00 00 00   	movq	$0x1, 0x50(%rsp)
ffffffff8000b917: 48 8d 7c 24 38       	leaq	0x38(%rsp), %rdi
ffffffff8000b91c: e8 2f f9 ff ff       	callq	0xffffffff8000b250 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff8000b921: 4d 89 e6             	movq	%r12, %r14
ffffffff8000b924: 49 c1 ee 0c          	shrq	$0xc, %r14
ffffffff8000b928: 41 81 e4 ff 0f 00 00 	andl	$0xfff, %r12d           # imm = 0xFFF
ffffffff8000b92f: 49 83 fc 01          	cmpq	$0x1, %r12
ffffffff8000b933: 49 83 de ff          	sbbq	$-0x1, %r14
ffffffff8000b937: 4d 89 f4             	movq	%r14, %r12
ffffffff8000b93a: 49 c1 ec 06          	shrq	$0x6, %r12
ffffffff8000b93e: 44 89 f0             	movl	%r14d, %eax
ffffffff8000b941: 83 e0 3f             	andl	$0x3f, %eax
ffffffff8000b944: 48 83 f8 01          	cmpq	$0x1, %rax
ffffffff8000b948: 49 83 dc ff          	sbbq	$-0x1, %r12
ffffffff8000b94c: 4c 89 64 24 18       	movq	%r12, 0x18(%rsp)
ffffffff8000b951: 4c 89 6c 24 20       	movq	%r13, 0x20(%rsp)
ffffffff8000b956: 48 c7 44 24 28 c0 b8 01 80   	movq	$-0x7ffe4740, 0x28(%rsp) # imm = 0x8001B8C0
ffffffff8000b95f: 48 c7 44 24 38 88 ed 01 80   	movq	$-0x7ffe1278, 0x38(%rsp) # imm = 0x8001ED88
ffffffff8000b968: 48 c7 44 24 40 02 00 00 00   	movq	$0x2, 0x40(%rsp)
ffffffff8000b971: 48 c7 44 24 58 00 00 00 00   	movq	$0x0, 0x58(%rsp)
ffffffff8000b97a: 4c 89 7c 24 48       	movq	%r15, 0x48(%rsp)
ffffffff8000b97f: 48 c7 44 24 50 01 00 00 00   	movq	$0x1, 0x50(%rsp)
ffffffff8000b988: 48 8d 7c 24 38       	leaq	0x38(%rsp), %rdi
ffffffff8000b98d: e8 be f8 ff ff       	callq	0xffffffff8000b250 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff8000b992: 4d 85 e4             	testq	%r12, %r12
ffffffff8000b995: 0f 84 8f 00 00 00    	je	0xffffffff8000ba2a <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x2ca>
ffffffff8000b99b: 4e 8d 3c e5 00 00 00 00      	leaq	(,%r12,8), %r15
ffffffff8000b9a3: 0f b6 05 37 98 01 00 	movzbl	0x19837(%rip), %eax     # 0xffffffff800251e1 <__rust_no_alloc_shim_is_unstable>
ffffffff8000b9aa: b1 01                	movb	$0x1, %cl
ffffffff8000b9ac: 0f 1f 40 00          	nopl	(%rax)
ffffffff8000b9b0: 31 c0                	xorl	%eax, %eax
ffffffff8000b9b2: f0                   	lock
ffffffff8000b9b3: 0f b0 0d 96 96 01 00 	cmpxchgb	%cl, 0x19696(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000b9ba: 74 1e                	je	0xffffffff8000b9da <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x27a>
ffffffff8000b9bc: 0f 1f 40 00          	nopl	(%rax)
ffffffff8000b9c0: 0f b6 05 89 96 01 00 	movzbl	0x19689(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000b9c7: 84 c0                	testb	%al, %al
ffffffff8000b9c9: 74 e5                	je	0xffffffff8000b9b0 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x250>
ffffffff8000b9cb: f3 90                	pause
ffffffff8000b9cd: 0f b6 05 7c 96 01 00 	movzbl	0x1967c(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000b9d4: 84 c0                	testb	%al, %al
ffffffff8000b9d6: 75 f3                	jne	0xffffffff8000b9cb <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x26b>
ffffffff8000b9d8: eb d6                	jmp	0xffffffff8000b9b0 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x250>
ffffffff8000b9da: be 08 00 00 00       	movl	$0x8, %esi
ffffffff8000b9df: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000b9e6: 4c 89 fa             	movq	%r15, %rdx
ffffffff8000b9e9: e8 12 79 ff ff       	callq	0xffffffff80003300 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff8000b9ee: c6 05 5b 96 01 00 00 	movb	$0x0, 0x1965b(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000b9f5: 48 85 c0             	testq	%rax, %rax
ffffffff8000b9f8: 0f 84 56 02 00 00    	je	0xffffffff8000bc54 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x4f4>
ffffffff8000b9fe: 49 89 c5             	movq	%rax, %r13
ffffffff8000ba01: 49 83 fc 01          	cmpq	$0x1, %r12
ffffffff8000ba05: 74 1a                	je	0xffffffff8000ba21 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x2c1>
ffffffff8000ba07: 49 8d 57 f8          	leaq	-0x8(%r15), %rdx
ffffffff8000ba0b: 4c 89 ef             	movq	%r13, %rdi
ffffffff8000ba0e: be ff 00 00 00       	movl	$0xff, %esi
ffffffff8000ba13: ff 15 17 aa 02 00    	callq	*0x2aa17(%rip)          # 0xffffffff80036430
ffffffff8000ba19: 4b 8d 04 2f          	leaq	(%r15,%r13), %rax
ffffffff8000ba1d: 48 83 c0 f8          	addq	$-0x8, %rax
ffffffff8000ba21: 48 c7 00 ff ff ff ff 	movq	$-0x1, (%rax)
ffffffff8000ba28: eb 06                	jmp	0xffffffff8000ba30 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x2d0>
ffffffff8000ba2a: 41 bd 08 00 00 00    	movl	$0x8, %r13d
ffffffff8000ba30: 4c 8b 04 24          	movq	(%rsp), %r8
ffffffff8000ba34: 48 8b 74 24 10       	movq	0x10(%rsp), %rsi
ffffffff8000ba39: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff8000ba3e: 48 85 c0             	testq	%rax, %rax
ffffffff8000ba41: 0f 84 aa 00 00 00    	je	0xffffffff8000baf1 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x391>
ffffffff8000ba47: 48 8d 04 c5 00 00 00 00      	leaq	(,%rax,8), %rax
ffffffff8000ba4f: 48 01 e8             	addq	%rbp, %rax
ffffffff8000ba52: 45 31 ff             	xorl	%r15d, %r15d
ffffffff8000ba55: eb 2d                	jmp	0xffffffff8000ba84 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x324>
ffffffff8000ba57: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
ffffffff8000ba60: 48 89 f9             	movq	%rdi, %rcx
ffffffff8000ba63: 48 c1 e9 0c          	shrq	$0xc, %rcx
ffffffff8000ba67: 4c 01 f9             	addq	%r15, %rcx
ffffffff8000ba6a: 81 e7 ff 0f 00 00    	andl	$0xfff, %edi            # imm = 0xFFF
ffffffff8000ba70: 48 83 ff 01          	cmpq	$0x1, %rdi
ffffffff8000ba74: 48 83 d9 ff          	sbbq	$-0x1, %rcx
ffffffff8000ba78: 49 89 cf             	movq	%rcx, %r15
ffffffff8000ba7b: 48 83 c5 08          	addq	$0x8, %rbp
ffffffff8000ba7f: 48 39 c5             	cmpq	%rax, %rbp
ffffffff8000ba82: 74 70                	je	0xffffffff8000baf4 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x394>
ffffffff8000ba84: 48 8b 55 00          	movq	(%rbp), %rdx
ffffffff8000ba88: 48 83 7a 10 00       	cmpq	$0x0, 0x10(%rdx)
ffffffff8000ba8d: 75 ec                	jne	0xffffffff8000ba7b <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x31b>
ffffffff8000ba8f: 48 8b 0a             	movq	(%rdx), %rcx
ffffffff8000ba92: 48 8b 7a 08          	movq	0x8(%rdx), %rdi
ffffffff8000ba96: 48 8d 14 0f          	leaq	(%rdi,%rcx), %rdx
ffffffff8000ba9a: 48 c1 e9 0c          	shrq	$0xc, %rcx
ffffffff8000ba9e: 48 c1 ea 0c          	shrq	$0xc, %rdx
ffffffff8000baa2: 48 39 d1             	cmpq	%rdx, %rcx
ffffffff8000baa5: 73 b9                	jae	0xffffffff8000ba60 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x300>
ffffffff8000baa7: 49 29 cf             	subq	%rcx, %r15
ffffffff8000baaa: 49 01 d7             	addq	%rdx, %r15
ffffffff8000baad: 0f 1f 00             	nopl	(%rax)
ffffffff8000bab0: 49 39 ce             	cmpq	%rcx, %r14
ffffffff8000bab3: 0f 86 23 01 00 00    	jbe	0xffffffff8000bbdc <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x47c>
ffffffff8000bab9: 48 89 cf             	movq	%rcx, %rdi
ffffffff8000babc: 48 c1 ef 06          	shrq	$0x6, %rdi
ffffffff8000bac0: 4c 39 e7             	cmpq	%r12, %rdi
ffffffff8000bac3: 0f 83 5b 01 00 00    	jae	0xffffffff8000bc24 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x4c4>
ffffffff8000bac9: 49 c7 c1 fe ff ff ff 	movq	$-0x2, %r9
ffffffff8000bad0: 49 d3 c1             	rolq	%cl, %r9
ffffffff8000bad3: 4d 21 4c fd 00       	andq	%r9, (%r13,%rdi,8)
ffffffff8000bad8: 48 8d 79 01          	leaq	0x1(%rcx), %rdi
ffffffff8000badc: 48 89 f9             	movq	%rdi, %rcx
ffffffff8000badf: 48 39 fa             	cmpq	%rdi, %rdx
ffffffff8000bae2: 75 cc                	jne	0xffffffff8000bab0 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x350>
ffffffff8000bae4: 48 8b 4d 00          	movq	(%rbp), %rcx
ffffffff8000bae8: 48 8b 79 08          	movq	0x8(%rcx), %rdi
ffffffff8000baec: e9 6f ff ff ff       	jmp	0xffffffff8000ba60 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x300>
ffffffff8000baf1: 45 31 ff             	xorl	%r15d, %r15d
ffffffff8000baf4: 48 85 db             	testq	%rbx, %rbx
ffffffff8000baf7: 74 52                	je	0xffffffff8000bb4b <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x3eb>
ffffffff8000baf9: 48 8d 04 dd 00 00 00 00      	leaq	(,%rbx,8), %rax
ffffffff8000bb01: 31 d2                	xorl	%edx, %edx
ffffffff8000bb03: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
ffffffff8000bb10: 48 8b 3c 16          	movq	(%rsi,%rdx), %rdi
ffffffff8000bb14: 48 89 f9             	movq	%rdi, %rcx
ffffffff8000bb17: 48 c1 e9 0c          	shrq	$0xc, %rcx
ffffffff8000bb1b: 49 39 ce             	cmpq	%rcx, %r14
ffffffff8000bb1e: 0f 86 d0 00 00 00    	jbe	0xffffffff8000bbf4 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x494>
ffffffff8000bb24: 48 c1 ef 12          	shrq	$0x12, %rdi
ffffffff8000bb28: 4c 39 e7             	cmpq	%r12, %rdi
ffffffff8000bb2b: 0f 83 02 01 00 00    	jae	0xffffffff8000bc33 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x4d3>
ffffffff8000bb31: 41 b9 01 00 00 00    	movl	$0x1, %r9d
ffffffff8000bb37: 49 d3 e1             	shlq	%cl, %r9
ffffffff8000bb3a: 4d 09 4c fd 00       	orq	%r9, (%r13,%rdi,8)
ffffffff8000bb3f: 49 ff cf             	decq	%r15
ffffffff8000bb42: 48 83 c2 08          	addq	$0x8, %rdx
ffffffff8000bb46: 48 39 d0             	cmpq	%rdx, %rax
ffffffff8000bb49: 75 c5                	jne	0xffffffff8000bb10 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x3b0>
ffffffff8000bb4b: 4d 85 c0             	testq	%r8, %r8
ffffffff8000bb4e: 74 55                	je	0xffffffff8000bba5 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x445>
ffffffff8000bb50: 49 c1 e0 03          	shlq	$0x3, %r8
ffffffff8000bb54: b1 01                	movb	$0x1, %cl
ffffffff8000bb56: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
ffffffff8000bb60: 31 c0                	xorl	%eax, %eax
ffffffff8000bb62: f0                   	lock
ffffffff8000bb63: 0f b0 0d e6 94 01 00 	cmpxchgb	%cl, 0x194e6(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000bb6a: 74 1e                	je	0xffffffff8000bb8a <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x42a>
ffffffff8000bb6c: 0f 1f 40 00          	nopl	(%rax)
ffffffff8000bb70: 0f b6 05 d9 94 01 00 	movzbl	0x194d9(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000bb77: 84 c0                	testb	%al, %al
ffffffff8000bb79: 74 e5                	je	0xffffffff8000bb60 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x400>
ffffffff8000bb7b: f3 90                	pause
ffffffff8000bb7d: 0f b6 05 cc 94 01 00 	movzbl	0x194cc(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000bb84: 84 c0                	testb	%al, %al
ffffffff8000bb86: 75 f3                	jne	0xffffffff8000bb7b <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x41b>
ffffffff8000bb88: eb d6                	jmp	0xffffffff8000bb60 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e+0x400>
ffffffff8000bb8a: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff8000bb8f: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000bb96: 4c 89 c1             	movq	%r8, %rcx
ffffffff8000bb99: e8 02 75 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000bb9e: c6 05 ab 94 01 00 00 	movb	$0x0, 0x194ab(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000bba5: 48 8b 44 24 30       	movq	0x30(%rsp), %rax
ffffffff8000bbaa: 4c 89 28             	movq	%r13, (%rax)
ffffffff8000bbad: 4c 89 60 08          	movq	%r12, 0x8(%rax)
ffffffff8000bbb1: 4c 89 70 10          	movq	%r14, 0x10(%rax)
ffffffff8000bbb5: 4c 89 78 18          	movq	%r15, 0x18(%rax)
ffffffff8000bbb9: 48 89 58 20          	movq	%rbx, 0x20(%rax)
ffffffff8000bbbd: 48 c7 40 28 00 00 00 00      	movq	$0x0, 0x28(%rax)
ffffffff8000bbc5: 48 c7 40 30 00 00 00 00      	movq	$0x0, 0x30(%rax)
ffffffff8000bbcd: 48 83 c4 68          	addq	$0x68, %rsp
ffffffff8000bbd1: 5b                   	popq	%rbx
ffffffff8000bbd2: 41 5c                	popq	%r12
ffffffff8000bbd4: 41 5d                	popq	%r13
ffffffff8000bbd6: 41 5e                	popq	%r14
ffffffff8000bbd8: 41 5f                	popq	%r15
ffffffff8000bbda: 5d                   	popq	%rbp
ffffffff8000bbdb: c3                   	retq
ffffffff8000bbdc: be 31 00 00 00       	movl	$0x31, %esi
ffffffff8000bbe1: 48 c7 c7 e8 ed 01 80 	movq	$-0x7ffe1218, %rdi      # imm = 0x8001EDE8
ffffffff8000bbe8: 48 c7 c2 c8 ee 01 80 	movq	$-0x7ffe1138, %rdx      # imm = 0x8001EEC8
ffffffff8000bbef: e8 7c 08 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000bbf4: be 31 00 00 00       	movl	$0x31, %esi
ffffffff8000bbf9: 48 c7 c7 e8 ed 01 80 	movq	$-0x7ffe1218, %rdi      # imm = 0x8001EDE8
ffffffff8000bc00: 48 c7 c2 20 ee 01 80 	movq	$-0x7ffe11e0, %rdx      # imm = 0x8001EE20
ffffffff8000bc07: e8 64 08 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000bc0c: be 43 00 00 00       	movl	$0x43, %esi
ffffffff8000bc11: 48 c7 c7 28 ef 01 80 	movq	$-0x7ffe10d8, %rdi      # imm = 0x8001EF28
ffffffff8000bc18: 48 c7 c2 c8 ef 01 80 	movq	$-0x7ffe1038, %rdx      # imm = 0x8001EFC8
ffffffff8000bc1f: e8 4c 08 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000bc24: 4c 89 e6             	movq	%r12, %rsi
ffffffff8000bc27: 48 c7 c2 e0 ee 01 80 	movq	$-0x7ffe1120, %rdx      # imm = 0x8001EEE0
ffffffff8000bc2e: e8 86 08 01 00       	callq	0xffffffff8001c4b9 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff8000bc33: 4c 89 e6             	movq	%r12, %rsi
ffffffff8000bc36: 48 c7 c2 38 ee 01 80 	movq	$-0x7ffe11c8, %rdx      # imm = 0x8001EE38
ffffffff8000bc3d: e8 77 08 01 00       	callq	0xffffffff8001c4b9 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff8000bc42: 48 89 ef             	movq	%rbp, %rdi
ffffffff8000bc45: 4c 89 ee             	movq	%r13, %rsi
ffffffff8000bc48: 48 c7 c2 18 ed 01 80 	movq	$-0x7ffe12e8, %rdx      # imm = 0x8001ED18
ffffffff8000bc4f: e8 f3 ce 00 00       	callq	0xffffffff80018b47 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff8000bc54: bf 08 00 00 00       	movl	$0x8, %edi
ffffffff8000bc59: 4c 89 fe             	movq	%r15, %rsi
ffffffff8000bc5c: 48 c7 c2 d0 ed 01 80 	movq	$-0x7ffe1230, %rdx      # imm = 0x8001EDD0
ffffffff8000bc63: e8 df ce 00 00       	callq	0xffffffff80018b47 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff8000bc68: cc                   	int3
ffffffff8000bc69: cc                   	int3
ffffffff8000bc6a: cc                   	int3
ffffffff8000bc6b: cc                   	int3
ffffffff8000bc6c: cc                   	int3
ffffffff8000bc6d: cc                   	int3
ffffffff8000bc6e: cc                   	int3
ffffffff8000bc6f: cc                   	int3

ffffffff8000bc70 <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h034757e32ae64125>:
ffffffff8000bc70: 41 56                	pushq	%r14
ffffffff8000bc72: 53                   	pushq	%rbx
ffffffff8000bc73: 50                   	pushq	%rax
ffffffff8000bc74: 4c 8b 46 10          	movq	0x10(%rsi), %r8
ffffffff8000bc78: 4c 8b 4e 18          	movq	0x18(%rsi), %r9
ffffffff8000bc7c: 4d 39 c1             	cmpq	%r8, %r9
ffffffff8000bc7f: 75 07                	jne	0xffffffff8000bc88 <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h034757e32ae64125+0x18>
ffffffff8000bc81: 31 c0                	xorl	%eax, %eax
ffffffff8000bc83: e9 ad 00 00 00       	jmp	0xffffffff8000bd35 <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h034757e32ae64125+0xc5>
ffffffff8000bc88: 48 8b 4e 20          	movq	0x20(%rsi), %rcx
ffffffff8000bc8c: 49 39 c8             	cmpq	%rcx, %r8
ffffffff8000bc8f: 76 44                	jbe	0xffffffff8000bcd5 <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h034757e32ae64125+0x65>
ffffffff8000bc91: 4c 8b 16             	movq	(%rsi), %r10
ffffffff8000bc94: 48 8b 46 08          	movq	0x8(%rsi), %rax
ffffffff8000bc98: 45 31 db             	xorl	%r11d, %r11d
ffffffff8000bc9b: 0f 1f 44 00 00       	nopl	(%rax,%rax)
ffffffff8000bca0: 48 89 ca             	movq	%rcx, %rdx
ffffffff8000bca3: 48 c1 ea 06          	shrq	$0x6, %rdx
ffffffff8000bca7: 48 39 c2             	cmpq	%rax, %rdx
ffffffff8000bcaa: 0f 83 ab 00 00 00    	jae	0xffffffff8000bd5b <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h034757e32ae64125+0xeb>
ffffffff8000bcb0: bb 01 00 00 00       	movl	$0x1, %ebx
ffffffff8000bcb5: 48 d3 e3             	shlq	%cl, %rbx
ffffffff8000bcb8: 4d 8b 34 d2          	movq	(%r10,%rdx,8), %r14
ffffffff8000bcbc: 49 0f a3 ce          	btq	%rcx, %r14
ffffffff8000bcc0: 73 2b                	jae	0xffffffff8000bced <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h034757e32ae64125+0x7d>
ffffffff8000bcc2: 48 ff c1             	incq	%rcx
ffffffff8000bcc5: 4c 39 c1             	cmpq	%r8, %rcx
ffffffff8000bcc8: 49 0f 44 cb          	cmoveq	%r11, %rcx
ffffffff8000bccc: 48 89 4e 20          	movq	%rcx, 0x20(%rsi)
ffffffff8000bcd0: 49 39 c8             	cmpq	%rcx, %r8
ffffffff8000bcd3: 77 cb                	ja	0xffffffff8000bca0 <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h034757e32ae64125+0x30>
ffffffff8000bcd5: be 31 00 00 00       	movl	$0x31, %esi
ffffffff8000bcda: 48 c7 c7 e8 ed 01 80 	movq	$-0x7ffe1218, %rdi      # imm = 0x8001EDE8
ffffffff8000bce1: 48 c7 c2 f8 ee 01 80 	movq	$-0x7ffe1108, %rdx      # imm = 0x8001EEF8
ffffffff8000bce8: e8 83 07 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000bced: 49 09 de             	orq	%rbx, %r14
ffffffff8000bcf0: 4d 89 34 d2          	movq	%r14, (%r10,%rdx,8)
ffffffff8000bcf4: 49 ff c9             	decq	%r9
ffffffff8000bcf7: 4c 89 4e 18          	movq	%r9, 0x18(%rsi)
ffffffff8000bcfb: 48 8d 41 01          	leaq	0x1(%rcx), %rax
ffffffff8000bcff: 48 c1 e1 0c          	shlq	$0xc, %rcx
ffffffff8000bd03: 48 89 c2             	movq	%rax, %rdx
ffffffff8000bd06: 4c 09 c2             	orq	%r8, %rdx
ffffffff8000bd09: 48 c1 ea 20          	shrq	$0x20, %rdx
ffffffff8000bd0d: 74 07                	je	0xffffffff8000bd16 <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h034757e32ae64125+0xa6>
ffffffff8000bd0f: 31 d2                	xorl	%edx, %edx
ffffffff8000bd11: 49 f7 f0             	divq	%r8
ffffffff8000bd14: eb 05                	jmp	0xffffffff8000bd1b <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h034757e32ae64125+0xab>
ffffffff8000bd16: 31 d2                	xorl	%edx, %edx
ffffffff8000bd18: 41 f7 f0             	divl	%r8d
ffffffff8000bd1b: 48 89 56 20          	movq	%rdx, 0x20(%rsi)
ffffffff8000bd1f: 48 ff 46 28          	incq	0x28(%rsi)
ffffffff8000bd23: 48 89 c8             	movq	%rcx, %rax
ffffffff8000bd26: 48 c1 e8 34          	shrq	$0x34, %rax
ffffffff8000bd2a: 75 17                	jne	0xffffffff8000bd43 <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h034757e32ae64125+0xd3>
ffffffff8000bd2c: 48 89 4f 08          	movq	%rcx, 0x8(%rdi)
ffffffff8000bd30: b8 01 00 00 00       	movl	$0x1, %eax
ffffffff8000bd35: 48 89 07             	movq	%rax, (%rdi)
ffffffff8000bd38: 48 89 f8             	movq	%rdi, %rax
ffffffff8000bd3b: 48 83 c4 08          	addq	$0x8, %rsp
ffffffff8000bd3f: 5b                   	popq	%rbx
ffffffff8000bd40: 41 5e                	popq	%r14
ffffffff8000bd42: c3                   	retq
ffffffff8000bd43: be 43 00 00 00       	movl	$0x43, %esi
ffffffff8000bd48: 48 c7 c7 28 ef 01 80 	movq	$-0x7ffe10d8, %rdi      # imm = 0x8001EF28
ffffffff8000bd4f: 48 c7 c2 c8 ef 01 80 	movq	$-0x7ffe1038, %rdx      # imm = 0x8001EFC8
ffffffff8000bd56: e8 15 07 01 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000bd5b: 48 89 d7             	movq	%rdx, %rdi
ffffffff8000bd5e: 48 89 c6             	movq	%rax, %rsi
ffffffff8000bd61: 48 c7 c2 10 ef 01 80 	movq	$-0x7ffe10f0, %rdx      # imm = 0x8001EF10
ffffffff8000bd68: e8 4c 07 01 00       	callq	0xffffffff8001c4b9 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff8000bd6d: cc                   	int3
ffffffff8000bd6e: cc                   	int3
ffffffff8000bd6f: cc                   	int3

ffffffff8000bd70 <alloc::collections::vec_deque::VecDeque<T,A>::grow::h0ee91ef6b8134622>:
ffffffff8000bd70: 41 57                	pushq	%r15
ffffffff8000bd72: 41 56                	pushq	%r14
ffffffff8000bd74: 53                   	pushq	%rbx
ffffffff8000bd75: 48 89 fb             	movq	%rdi, %rbx
ffffffff8000bd78: 4c 8b 37             	movq	(%rdi), %r14
ffffffff8000bd7b: e8 c0 1f 00 00       	callq	0xffffffff8000dd40 <alloc::raw_vec::RawVec<T,A>::grow_one::he6215f63c8fd4e69>
ffffffff8000bd80: 48 8b 4b 10          	movq	0x10(%rbx), %rcx
ffffffff8000bd84: 48 8b 53 18          	movq	0x18(%rbx), %rdx
ffffffff8000bd88: 4c 89 f0             	movq	%r14, %rax
ffffffff8000bd8b: 48 29 d0             	subq	%rdx, %rax
ffffffff8000bd8e: 48 39 c1             	cmpq	%rax, %rcx
ffffffff8000bd91: 76 49                	jbe	0xffffffff8000bddc <alloc::collections::vec_deque::VecDeque<T,A>::grow::h0ee91ef6b8134622+0x6c>
ffffffff8000bd93: 4c 8b 3b             	movq	(%rbx), %r15
ffffffff8000bd96: 4c 89 f0             	movq	%r14, %rax
ffffffff8000bd99: 48 29 c8             	subq	%rcx, %rax
ffffffff8000bd9c: 48 29 c2             	subq	%rax, %rdx
ffffffff8000bd9f: 48 39 d0             	cmpq	%rdx, %rax
ffffffff8000bda2: 40 0f 96 c6          	setbe	%sil
ffffffff8000bda6: 4c 89 ff             	movq	%r15, %rdi
ffffffff8000bda9: 4c 29 f7             	subq	%r14, %rdi
ffffffff8000bdac: 48 39 d7             	cmpq	%rdx, %rdi
ffffffff8000bdaf: 40 0f 92 c7          	setb	%dil
ffffffff8000bdb3: 40 08 f7             	orb	%sil, %dil
ffffffff8000bdb6: 40 80 ff 01          	cmpb	$0x1, %dil
ffffffff8000bdba: 75 26                	jne	0xffffffff8000bde2 <alloc::collections::vec_deque::VecDeque<T,A>::grow::h0ee91ef6b8134622+0x72>
ffffffff8000bdbc: 49 29 c7             	subq	%rax, %r15
ffffffff8000bdbf: 48 8b 53 08          	movq	0x8(%rbx), %rdx
ffffffff8000bdc3: 48 8d 34 ca          	leaq	(%rdx,%rcx,8), %rsi
ffffffff8000bdc7: 4a 8d 3c fa          	leaq	(%rdx,%r15,8), %rdi
ffffffff8000bdcb: 48 c1 e0 03          	shlq	$0x3, %rax
ffffffff8000bdcf: 48 89 c2             	movq	%rax, %rdx
ffffffff8000bdd2: ff 15 50 a6 02 00    	callq	*0x2a650(%rip)          # 0xffffffff80036428
ffffffff8000bdd8: 4c 89 7b 10          	movq	%r15, 0x10(%rbx)
ffffffff8000bddc: 5b                   	popq	%rbx
ffffffff8000bddd: 41 5e                	popq	%r14
ffffffff8000bddf: 41 5f                	popq	%r15
ffffffff8000bde1: c3                   	retq
ffffffff8000bde2: 48 8b 73 08          	movq	0x8(%rbx), %rsi
ffffffff8000bde6: 4a 8d 3c f6          	leaq	(%rsi,%r14,8), %rdi
ffffffff8000bdea: 48 c1 e2 03          	shlq	$0x3, %rdx
ffffffff8000bdee: 5b                   	popq	%rbx
ffffffff8000bdef: 41 5e                	popq	%r14
ffffffff8000bdf1: 41 5f                	popq	%r15
ffffffff8000bdf3: ff 25 27 a6 02 00    	jmpq	*0x2a627(%rip)          # 0xffffffff80036420
ffffffff8000bdf9: cc                   	int3
ffffffff8000bdfa: cc                   	int3
ffffffff8000bdfb: cc                   	int3
ffffffff8000bdfc: cc                   	int3
ffffffff8000bdfd: cc                   	int3
ffffffff8000bdfe: cc                   	int3
ffffffff8000bdff: cc                   	int3

ffffffff8000be00 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4>:
ffffffff8000be00: 41 57                	pushq	%r15
ffffffff8000be02: 41 56                	pushq	%r14
ffffffff8000be04: 41 54                	pushq	%r12
ffffffff8000be06: 53                   	pushq	%rbx
ffffffff8000be07: 50                   	pushq	%rax
ffffffff8000be08: 48 8b 1f             	movq	(%rdi), %rbx
ffffffff8000be0b: 4c 8b 7b 28          	movq	0x28(%rbx), %r15
ffffffff8000be0f: 4c 8b 63 30          	movq	0x30(%rbx), %r12
ffffffff8000be13: 49 8b 04 24          	movq	(%r12), %rax
ffffffff8000be17: 48 85 c0             	testq	%rax, %rax
ffffffff8000be1a: 74 05                	je	0xffffffff8000be21 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4+0x21>
ffffffff8000be1c: 4c 89 ff             	movq	%r15, %rdi
ffffffff8000be1f: ff d0                	callq	*%rax
ffffffff8000be21: 4c 8d 73 10          	leaq	0x10(%rbx), %r14
ffffffff8000be25: 49 8b 4c 24 08       	movq	0x8(%r12), %rcx
ffffffff8000be2a: 48 85 c9             	testq	%rcx, %rcx
ffffffff8000be2d: 74 46                	je	0xffffffff8000be75 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4+0x75>
ffffffff8000be2f: 49 8b 54 24 10       	movq	0x10(%r12), %rdx
ffffffff8000be34: 40 b6 01             	movb	$0x1, %sil
ffffffff8000be37: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
ffffffff8000be40: 31 c0                	xorl	%eax, %eax
ffffffff8000be42: f0                   	lock
ffffffff8000be43: 40 0f b0 35 05 92 01 00      	cmpxchgb	%sil, 0x19205(%rip) # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000be4b: 75 05                	jne	0xffffffff8000be52 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4+0x52>
ffffffff8000be4d: eb 10                	jmp	0xffffffff8000be5f <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4+0x5f>
ffffffff8000be4f: 90                   	nop
ffffffff8000be50: f3 90                	pause
ffffffff8000be52: 0f b6 05 f7 91 01 00 	movzbl	0x191f7(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000be59: 84 c0                	testb	%al, %al
ffffffff8000be5b: 75 f3                	jne	0xffffffff8000be50 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4+0x50>
ffffffff8000be5d: eb e1                	jmp	0xffffffff8000be40 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4+0x40>
ffffffff8000be5f: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000be66: 4c 89 fe             	movq	%r15, %rsi
ffffffff8000be69: e8 32 72 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000be6e: c6 05 db 91 01 00 00 	movb	$0x0, 0x191db(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000be75: 49 8b 06             	movq	(%r14), %rax
ffffffff8000be78: f0                   	lock
ffffffff8000be79: 48 ff 08             	decq	(%rax)
ffffffff8000be7c: 75 08                	jne	0xffffffff8000be86 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4+0x86>
ffffffff8000be7e: 4c 89 f7             	movq	%r14, %rdi
ffffffff8000be81: e8 da 00 00 00       	callq	0xffffffff8000bf60 <alloc::sync::Arc<T,A>::drop_slow::h4227faaa26f219fd>
ffffffff8000be86: 48 83 fb ff          	cmpq	$-0x1, %rbx
ffffffff8000be8a: 74 53                	je	0xffffffff8000bedf <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4+0xdf>
ffffffff8000be8c: f0                   	lock
ffffffff8000be8d: 48 ff 4b 08          	decq	0x8(%rbx)
ffffffff8000be91: 75 4c                	jne	0xffffffff8000bedf <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4+0xdf>
ffffffff8000be93: b1 01                	movb	$0x1, %cl
ffffffff8000be95: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff8000bea0: 31 c0                	xorl	%eax, %eax
ffffffff8000bea2: f0                   	lock
ffffffff8000bea3: 0f b0 0d a6 91 01 00 	cmpxchgb	%cl, 0x191a6(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000beaa: 75 06                	jne	0xffffffff8000beb2 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4+0xb2>
ffffffff8000beac: eb 11                	jmp	0xffffffff8000bebf <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4+0xbf>
ffffffff8000beae: 66 90                	nop
ffffffff8000beb0: f3 90                	pause
ffffffff8000beb2: 0f b6 05 97 91 01 00 	movzbl	0x19197(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000beb9: 84 c0                	testb	%al, %al
ffffffff8000bebb: 75 f3                	jne	0xffffffff8000beb0 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4+0xb0>
ffffffff8000bebd: eb e1                	jmp	0xffffffff8000bea0 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4+0xa0>
ffffffff8000bebf: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff8000bec4: b9 50 00 00 00       	movl	$0x50, %ecx
ffffffff8000bec9: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000bed0: 48 89 de             	movq	%rbx, %rsi
ffffffff8000bed3: e8 c8 71 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000bed8: c6 05 71 91 01 00 00 	movb	$0x0, 0x19171(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000bedf: 48 83 c4 08          	addq	$0x8, %rsp
ffffffff8000bee3: 5b                   	popq	%rbx
ffffffff8000bee4: 41 5c                	popq	%r12
ffffffff8000bee6: 41 5e                	popq	%r14
ffffffff8000bee8: 41 5f                	popq	%r15
ffffffff8000beea: c3                   	retq
ffffffff8000beeb: cc                   	int3
ffffffff8000beec: cc                   	int3
ffffffff8000beed: cc                   	int3
ffffffff8000beee: cc                   	int3
ffffffff8000beef: cc                   	int3

ffffffff8000bef0 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58>:
ffffffff8000bef0: 48 8b 37             	movq	(%rdi), %rsi
ffffffff8000bef3: 48 83 fe ff          	cmpq	$-0x1, %rsi
ffffffff8000bef7: 74 57                	je	0xffffffff8000bf50 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58+0x60>
ffffffff8000bef9: f0                   	lock
ffffffff8000befa: 48 ff 4e 08          	decq	0x8(%rsi)
ffffffff8000befe: 75 50                	jne	0xffffffff8000bf50 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58+0x60>
ffffffff8000bf00: 50                   	pushq	%rax
ffffffff8000bf01: b1 01                	movb	$0x1, %cl
ffffffff8000bf03: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
ffffffff8000bf10: 31 c0                	xorl	%eax, %eax
ffffffff8000bf12: f0                   	lock
ffffffff8000bf13: 0f b0 0d 36 91 01 00 	cmpxchgb	%cl, 0x19136(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000bf1a: 75 06                	jne	0xffffffff8000bf22 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58+0x32>
ffffffff8000bf1c: eb 11                	jmp	0xffffffff8000bf2f <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58+0x3f>
ffffffff8000bf1e: 66 90                	nop
ffffffff8000bf20: f3 90                	pause
ffffffff8000bf22: 0f b6 05 27 91 01 00 	movzbl	0x19127(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000bf29: 84 c0                	testb	%al, %al
ffffffff8000bf2b: 75 f3                	jne	0xffffffff8000bf20 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58+0x30>
ffffffff8000bf2d: eb e1                	jmp	0xffffffff8000bf10 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58+0x20>
ffffffff8000bf2f: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff8000bf34: b9 c0 00 00 00       	movl	$0xc0, %ecx
ffffffff8000bf39: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000bf40: e8 5b 71 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000bf45: c6 05 04 91 01 00 00 	movb	$0x0, 0x19104(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000bf4c: 48 83 c4 08          	addq	$0x8, %rsp
ffffffff8000bf50: c3                   	retq
ffffffff8000bf51: cc                   	int3
ffffffff8000bf52: cc                   	int3
ffffffff8000bf53: cc                   	int3
ffffffff8000bf54: cc                   	int3
ffffffff8000bf55: cc                   	int3
ffffffff8000bf56: cc                   	int3
ffffffff8000bf57: cc                   	int3
ffffffff8000bf58: cc                   	int3
ffffffff8000bf59: cc                   	int3
ffffffff8000bf5a: cc                   	int3
ffffffff8000bf5b: cc                   	int3
ffffffff8000bf5c: cc                   	int3
ffffffff8000bf5d: cc                   	int3
ffffffff8000bf5e: cc                   	int3
ffffffff8000bf5f: cc                   	int3

ffffffff8000bf60 <alloc::sync::Arc<T,A>::drop_slow::h4227faaa26f219fd>:
ffffffff8000bf60: 53                   	pushq	%rbx
ffffffff8000bf61: 48 8b 1f             	movq	(%rdi), %rbx
ffffffff8000bf64: 48 8d 7b 18          	leaq	0x18(%rbx), %rdi
ffffffff8000bf68: e8 23 01 00 00       	callq	0xffffffff8000c090 <<alloc::collections::vec_deque::VecDeque<T,A> as core::ops::drop::Drop>::drop::hf343c2955cce953c>
ffffffff8000bf6d: 48 8b 4b 18          	movq	0x18(%rbx), %rcx
ffffffff8000bf71: 48 85 c9             	testq	%rcx, %rcx
ffffffff8000bf74: 74 41                	je	0xffffffff8000bfb7 <alloc::sync::Arc<T,A>::drop_slow::h4227faaa26f219fd+0x57>
ffffffff8000bf76: 48 8b 73 20          	movq	0x20(%rbx), %rsi
ffffffff8000bf7a: 48 c1 e1 03          	shlq	$0x3, %rcx
ffffffff8000bf7e: b2 01                	movb	$0x1, %dl
ffffffff8000bf80: 31 c0                	xorl	%eax, %eax
ffffffff8000bf82: f0                   	lock
ffffffff8000bf83: 0f b0 15 c6 90 01 00 	cmpxchgb	%dl, 0x190c6(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000bf8a: 75 06                	jne	0xffffffff8000bf92 <alloc::sync::Arc<T,A>::drop_slow::h4227faaa26f219fd+0x32>
ffffffff8000bf8c: eb 11                	jmp	0xffffffff8000bf9f <alloc::sync::Arc<T,A>::drop_slow::h4227faaa26f219fd+0x3f>
ffffffff8000bf8e: 66 90                	nop
ffffffff8000bf90: f3 90                	pause
ffffffff8000bf92: 0f b6 05 b7 90 01 00 	movzbl	0x190b7(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000bf99: 84 c0                	testb	%al, %al
ffffffff8000bf9b: 75 f3                	jne	0xffffffff8000bf90 <alloc::sync::Arc<T,A>::drop_slow::h4227faaa26f219fd+0x30>
ffffffff8000bf9d: eb e1                	jmp	0xffffffff8000bf80 <alloc::sync::Arc<T,A>::drop_slow::h4227faaa26f219fd+0x20>
ffffffff8000bf9f: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff8000bfa4: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000bfab: e8 f0 70 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000bfb0: c6 05 99 90 01 00 00 	movb	$0x0, 0x19099(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000bfb7: 48 83 fb ff          	cmpq	$-0x1, %rbx
ffffffff8000bfbb: 74 52                	je	0xffffffff8000c00f <alloc::sync::Arc<T,A>::drop_slow::h4227faaa26f219fd+0xaf>
ffffffff8000bfbd: f0                   	lock
ffffffff8000bfbe: 48 ff 4b 08          	decq	0x8(%rbx)
ffffffff8000bfc2: 75 4b                	jne	0xffffffff8000c00f <alloc::sync::Arc<T,A>::drop_slow::h4227faaa26f219fd+0xaf>
ffffffff8000bfc4: b1 01                	movb	$0x1, %cl
ffffffff8000bfc6: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
ffffffff8000bfd0: 31 c0                	xorl	%eax, %eax
ffffffff8000bfd2: f0                   	lock
ffffffff8000bfd3: 0f b0 0d 76 90 01 00 	cmpxchgb	%cl, 0x19076(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000bfda: 75 06                	jne	0xffffffff8000bfe2 <alloc::sync::Arc<T,A>::drop_slow::h4227faaa26f219fd+0x82>
ffffffff8000bfdc: eb 11                	jmp	0xffffffff8000bfef <alloc::sync::Arc<T,A>::drop_slow::h4227faaa26f219fd+0x8f>
ffffffff8000bfde: 66 90                	nop
ffffffff8000bfe0: f3 90                	pause
ffffffff8000bfe2: 0f b6 05 67 90 01 00 	movzbl	0x19067(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000bfe9: 84 c0                	testb	%al, %al
ffffffff8000bfeb: 75 f3                	jne	0xffffffff8000bfe0 <alloc::sync::Arc<T,A>::drop_slow::h4227faaa26f219fd+0x80>
ffffffff8000bfed: eb e1                	jmp	0xffffffff8000bfd0 <alloc::sync::Arc<T,A>::drop_slow::h4227faaa26f219fd+0x70>
ffffffff8000bfef: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff8000bff4: b9 38 00 00 00       	movl	$0x38, %ecx
ffffffff8000bff9: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000c000: 48 89 de             	movq	%rbx, %rsi
ffffffff8000c003: e8 98 70 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000c008: c6 05 41 90 01 00 00 	movb	$0x0, 0x19041(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000c00f: 5b                   	popq	%rbx
ffffffff8000c010: c3                   	retq
ffffffff8000c011: cc                   	int3
ffffffff8000c012: cc                   	int3
ffffffff8000c013: cc                   	int3
ffffffff8000c014: cc                   	int3
ffffffff8000c015: cc                   	int3
ffffffff8000c016: cc                   	int3
ffffffff8000c017: cc                   	int3
ffffffff8000c018: cc                   	int3
ffffffff8000c019: cc                   	int3
ffffffff8000c01a: cc                   	int3
ffffffff8000c01b: cc                   	int3
ffffffff8000c01c: cc                   	int3
ffffffff8000c01d: cc                   	int3
ffffffff8000c01e: cc                   	int3
ffffffff8000c01f: cc                   	int3

ffffffff8000c020 <alloc::sync::Arc<T,A>::drop_slow::h8360a5d89533dd40>:
ffffffff8000c020: 48 8b 37             	movq	(%rdi), %rsi
ffffffff8000c023: 48 83 fe ff          	cmpq	$-0x1, %rsi
ffffffff8000c027: 74 57                	je	0xffffffff8000c080 <alloc::sync::Arc<T,A>::drop_slow::h8360a5d89533dd40+0x60>
ffffffff8000c029: f0                   	lock
ffffffff8000c02a: 48 ff 4e 08          	decq	0x8(%rsi)
ffffffff8000c02e: 75 50                	jne	0xffffffff8000c080 <alloc::sync::Arc<T,A>::drop_slow::h8360a5d89533dd40+0x60>
ffffffff8000c030: 50                   	pushq	%rax
ffffffff8000c031: b1 01                	movb	$0x1, %cl
ffffffff8000c033: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
ffffffff8000c040: 31 c0                	xorl	%eax, %eax
ffffffff8000c042: f0                   	lock
ffffffff8000c043: 0f b0 0d 06 90 01 00 	cmpxchgb	%cl, 0x19006(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000c04a: 75 06                	jne	0xffffffff8000c052 <alloc::sync::Arc<T,A>::drop_slow::h8360a5d89533dd40+0x32>
ffffffff8000c04c: eb 11                	jmp	0xffffffff8000c05f <alloc::sync::Arc<T,A>::drop_slow::h8360a5d89533dd40+0x3f>
ffffffff8000c04e: 66 90                	nop
ffffffff8000c050: f3 90                	pause
ffffffff8000c052: 0f b6 05 f7 8f 01 00 	movzbl	0x18ff7(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000c059: 84 c0                	testb	%al, %al
ffffffff8000c05b: 75 f3                	jne	0xffffffff8000c050 <alloc::sync::Arc<T,A>::drop_slow::h8360a5d89533dd40+0x30>
ffffffff8000c05d: eb e1                	jmp	0xffffffff8000c040 <alloc::sync::Arc<T,A>::drop_slow::h8360a5d89533dd40+0x20>
ffffffff8000c05f: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff8000c064: b9 28 00 00 00       	movl	$0x28, %ecx
ffffffff8000c069: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000c070: e8 2b 70 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000c075: c6 05 d4 8f 01 00 00 	movb	$0x0, 0x18fd4(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000c07c: 48 83 c4 08          	addq	$0x8, %rsp
ffffffff8000c080: c3                   	retq
ffffffff8000c081: cc                   	int3
ffffffff8000c082: cc                   	int3
ffffffff8000c083: cc                   	int3
ffffffff8000c084: cc                   	int3
ffffffff8000c085: cc                   	int3
ffffffff8000c086: cc                   	int3
ffffffff8000c087: cc                   	int3
ffffffff8000c088: cc                   	int3
ffffffff8000c089: cc                   	int3
ffffffff8000c08a: cc                   	int3
ffffffff8000c08b: cc                   	int3
ffffffff8000c08c: cc                   	int3
ffffffff8000c08d: cc                   	int3
ffffffff8000c08e: cc                   	int3
ffffffff8000c08f: cc                   	int3

ffffffff8000c090 <<alloc::collections::vec_deque::VecDeque<T,A> as core::ops::drop::Drop>::drop::hf343c2955cce953c>:
ffffffff8000c090: 55                   	pushq	%rbp
ffffffff8000c091: 41 57                	pushq	%r15
ffffffff8000c093: 41 56                	pushq	%r14
ffffffff8000c095: 41 55                	pushq	%r13
ffffffff8000c097: 41 54                	pushq	%r12
ffffffff8000c099: 53                   	pushq	%rbx
ffffffff8000c09a: 50                   	pushq	%rax
ffffffff8000c09b: 4c 8b 67 18          	movq	0x18(%rdi), %r12
ffffffff8000c09f: 4d 85 e4             	testq	%r12, %r12
ffffffff8000c0a2: 74 3c                	je	0xffffffff8000c0e0 <<alloc::collections::vec_deque::VecDeque<T,A> as core::ops::drop::Drop>::drop::hf343c2955cce953c+0x50>
ffffffff8000c0a4: 48 8b 47 10          	movq	0x10(%rdi), %rax
ffffffff8000c0a8: 48 8b 0f             	movq	(%rdi), %rcx
ffffffff8000c0ab: 48 8b 5f 08          	movq	0x8(%rdi), %rbx
ffffffff8000c0af: 31 d2                	xorl	%edx, %edx
ffffffff8000c0b1: 48 39 c8             	cmpq	%rcx, %rax
ffffffff8000c0b4: 48 89 ce             	movq	%rcx, %rsi
ffffffff8000c0b7: 48 0f 42 f2          	cmovbq	%rdx, %rsi
ffffffff8000c0bb: 48 29 f0             	subq	%rsi, %rax
ffffffff8000c0be: 49 89 cd             	movq	%rcx, %r13
ffffffff8000c0c1: 49 29 c5             	subq	%rax, %r13
ffffffff8000c0c4: 4a 8d 2c 20          	leaq	(%rax,%r12), %rbp
ffffffff8000c0c8: 4d 89 e7             	movq	%r12, %r15
ffffffff8000c0cb: 4d 29 ef             	subq	%r13, %r15
ffffffff8000c0ce: 4c 0f 42 fa          	cmovbq	%rdx, %r15
ffffffff8000c0d2: 48 0f 47 e9          	cmovaq	%rcx, %rbp
ffffffff8000c0d6: 48 29 c5             	subq	%rax, %rbp
ffffffff8000c0d9: 75 31                	jne	0xffffffff8000c10c <<alloc::collections::vec_deque::VecDeque<T,A> as core::ops::drop::Drop>::drop::hf343c2955cce953c+0x7c>
ffffffff8000c0db: 4d 39 e5             	cmpq	%r12, %r13
ffffffff8000c0de: 72 19                	jb	0xffffffff8000c0f9 <<alloc::collections::vec_deque::VecDeque<T,A> as core::ops::drop::Drop>::drop::hf343c2955cce953c+0x69>
ffffffff8000c0e0: 48 83 c4 08          	addq	$0x8, %rsp
ffffffff8000c0e4: 5b                   	popq	%rbx
ffffffff8000c0e5: 41 5c                	popq	%r12
ffffffff8000c0e7: 41 5d                	popq	%r13
ffffffff8000c0e9: 41 5e                	popq	%r14
ffffffff8000c0eb: 41 5f                	popq	%r15
ffffffff8000c0ed: 5d                   	popq	%rbp
ffffffff8000c0ee: c3                   	retq
ffffffff8000c0ef: 90                   	nop
ffffffff8000c0f0: 48 83 c3 08          	addq	$0x8, %rbx
ffffffff8000c0f4: 49 ff cf             	decq	%r15
ffffffff8000c0f7: 74 e7                	je	0xffffffff8000c0e0 <<alloc::collections::vec_deque::VecDeque<T,A> as core::ops::drop::Drop>::drop::hf343c2955cce953c+0x50>
ffffffff8000c0f9: 48 8b 03             	movq	(%rbx), %rax
ffffffff8000c0fc: f0                   	lock
ffffffff8000c0fd: 48 ff 08             	decq	(%rax)
ffffffff8000c100: 75 ee                	jne	0xffffffff8000c0f0 <<alloc::collections::vec_deque::VecDeque<T,A> as core::ops::drop::Drop>::drop::hf343c2955cce953c+0x60>
ffffffff8000c102: 48 89 df             	movq	%rbx, %rdi
ffffffff8000c105: e8 f6 fc ff ff       	callq	0xffffffff8000be00 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4>
ffffffff8000c10a: eb e4                	jmp	0xffffffff8000c0f0 <<alloc::collections::vec_deque::VecDeque<T,A> as core::ops::drop::Drop>::drop::hf343c2955cce953c+0x60>
ffffffff8000c10c: 4c 8d 34 c3          	leaq	(%rbx,%rax,8), %r14
ffffffff8000c110: eb 17                	jmp	0xffffffff8000c129 <<alloc::collections::vec_deque::VecDeque<T,A> as core::ops::drop::Drop>::drop::hf343c2955cce953c+0x99>
ffffffff8000c112: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
ffffffff8000c120: 49 83 c6 08          	addq	$0x8, %r14
ffffffff8000c124: 48 ff cd             	decq	%rbp
ffffffff8000c127: 74 b2                	je	0xffffffff8000c0db <<alloc::collections::vec_deque::VecDeque<T,A> as core::ops::drop::Drop>::drop::hf343c2955cce953c+0x4b>
ffffffff8000c129: 49 8b 06             	movq	(%r14), %rax
ffffffff8000c12c: f0                   	lock
ffffffff8000c12d: 48 ff 08             	decq	(%rax)
ffffffff8000c130: 75 ee                	jne	0xffffffff8000c120 <<alloc::collections::vec_deque::VecDeque<T,A> as core::ops::drop::Drop>::drop::hf343c2955cce953c+0x90>
ffffffff8000c132: 4c 89 f7             	movq	%r14, %rdi
ffffffff8000c135: e8 c6 fc ff ff       	callq	0xffffffff8000be00 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4>
ffffffff8000c13a: eb e4                	jmp	0xffffffff8000c120 <<alloc::collections::vec_deque::VecDeque<T,A> as core::ops::drop::Drop>::drop::hf343c2955cce953c+0x90>
ffffffff8000c13c: cc                   	int3
ffffffff8000c13d: cc                   	int3
ffffffff8000c13e: cc                   	int3
ffffffff8000c13f: cc                   	int3

ffffffff8000c140 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754>:
ffffffff8000c140: 55                   	pushq	%rbp
ffffffff8000c141: 41 57                	pushq	%r15
ffffffff8000c143: 41 56                	pushq	%r14
ffffffff8000c145: 53                   	pushq	%rbx
ffffffff8000c146: 48 83 ec 68          	subq	$0x68, %rsp
ffffffff8000c14a: 48 8b 37             	movq	(%rdi), %rsi
ffffffff8000c14d: 48 85 f6             	testq	%rsi, %rsi
ffffffff8000c150: 0f 84 d5 02 00 00    	je	0xffffffff8000c42b <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x2eb>
ffffffff8000c156: 48 8b 47 08          	movq	0x8(%rdi), %rax
ffffffff8000c15a: 48 8b 4f 10          	movq	0x10(%rdi), %rcx
ffffffff8000c15e: 48 c7 44 24 10 00 00 00 00   	movq	$0x0, 0x10(%rsp)
ffffffff8000c167: 48 89 74 24 18       	movq	%rsi, 0x18(%rsp)
ffffffff8000c16c: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff8000c171: 48 c7 44 24 30 00 00 00 00   	movq	$0x0, 0x30(%rsp)
ffffffff8000c17a: 48 89 74 24 38       	movq	%rsi, 0x38(%rsp)
ffffffff8000c17f: 48 89 44 24 40       	movq	%rax, 0x40(%rsp)
ffffffff8000c184: 48 c7 44 24 08 01 00 00 00   	movq	$0x1, 0x8(%rsp)
ffffffff8000c18d: 48 c7 44 24 28 01 00 00 00   	movq	$0x1, 0x28(%rsp)
ffffffff8000c196: 48 89 4c 24 48       	movq	%rcx, 0x48(%rsp)
ffffffff8000c19b: 48 85 c9             	testq	%rcx, %rcx
ffffffff8000c19e: 0f 84 0b 01 00 00    	je	0xffffffff8000c2af <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x16f>
ffffffff8000c1a4: 48 8d 5c 24 10       	leaq	0x10(%rsp), %rbx
ffffffff8000c1a9: 4c 8d 74 24 50       	leaq	0x50(%rsp), %r14
ffffffff8000c1ae: 66 90                	nop
ffffffff8000c1b0: 48 ff c9             	decq	%rcx
ffffffff8000c1b3: 48 89 4c 24 48       	movq	%rcx, 0x48(%rsp)
ffffffff8000c1b8: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff8000c1bd: 48 83 f8 01          	cmpq	$0x1, %rax
ffffffff8000c1c1: 0f 85 a9 00 00 00    	jne	0xffffffff8000c270 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x130>
ffffffff8000c1c7: 48 83 7c 24 10 00    	cmpq	$0x0, 0x10(%rsp)
ffffffff8000c1cd: 0f 85 9d 00 00 00    	jne	0xffffffff8000c270 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x130>
ffffffff8000c1d3: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff8000c1d8: 48 8b 4c 24 20       	movq	0x20(%rsp), %rcx
ffffffff8000c1dd: 48 85 c9             	testq	%rcx, %rcx
ffffffff8000c1e0: 74 64                	je	0xffffffff8000c246 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x106>
ffffffff8000c1e2: 48 89 ca             	movq	%rcx, %rdx
ffffffff8000c1e5: 48 83 e2 07          	andq	$0x7, %rdx
ffffffff8000c1e9: 0f 84 b1 00 00 00    	je	0xffffffff8000c2a0 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x160>
ffffffff8000c1ef: 31 f6                	xorl	%esi, %esi
ffffffff8000c1f1: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
ffffffff8000c200: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff8000c204: 48 ff c6             	incq	%rsi
ffffffff8000c207: 48 39 f2             	cmpq	%rsi, %rdx
ffffffff8000c20a: 75 f4                	jne	0xffffffff8000c200 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0xc0>
ffffffff8000c20c: 48 89 ca             	movq	%rcx, %rdx
ffffffff8000c20f: 48 29 f2             	subq	%rsi, %rdx
ffffffff8000c212: 48 83 f9 08          	cmpq	$0x8, %rcx
ffffffff8000c216: 72 2e                	jb	0xffffffff8000c246 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x106>
ffffffff8000c218: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
ffffffff8000c220: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff8000c224: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff8000c228: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff8000c22c: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff8000c230: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff8000c234: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff8000c238: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff8000c23c: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff8000c240: 48 83 c2 f8          	addq	$-0x8, %rdx
ffffffff8000c244: 75 da                	jne	0xffffffff8000c220 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0xe0>
ffffffff8000c246: 48 c7 44 24 08 01 00 00 00   	movq	$0x1, 0x8(%rsp)
ffffffff8000c24f: 48 89 44 24 10       	movq	%rax, 0x10(%rsp)
ffffffff8000c254: 48 c7 43 10 00 00 00 00      	movq	$0x0, 0x10(%rbx)
ffffffff8000c25c: 48 c7 43 08 00 00 00 00      	movq	$0x0, 0x8(%rbx)
ffffffff8000c264: eb 13                	jmp	0xffffffff8000c279 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x139>
ffffffff8000c266: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
ffffffff8000c270: 48 85 c0             	testq	%rax, %rax
ffffffff8000c273: 0f 84 bd 01 00 00    	je	0xffffffff8000c436 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x2f6>
ffffffff8000c279: 4c 89 f7             	movq	%r14, %rdi
ffffffff8000c27c: 48 89 de             	movq	%rbx, %rsi
ffffffff8000c27f: e8 5c ca ff ff       	callq	0xffffffff80008ce0 <alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::h1b7bafd47d041edb>
ffffffff8000c284: 48 83 7c 24 50 00    	cmpq	$0x0, 0x50(%rsp)
ffffffff8000c28a: 0f 84 9b 01 00 00    	je	0xffffffff8000c42b <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x2eb>
ffffffff8000c290: 48 8b 4c 24 48       	movq	0x48(%rsp), %rcx
ffffffff8000c295: 48 85 c9             	testq	%rcx, %rcx
ffffffff8000c298: 0f 85 12 ff ff ff    	jne	0xffffffff8000c1b0 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x70>
ffffffff8000c29e: eb 4d                	jmp	0xffffffff8000c2ed <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x1ad>
ffffffff8000c2a0: 48 89 ca             	movq	%rcx, %rdx
ffffffff8000c2a3: 48 83 f9 08          	cmpq	$0x8, %rcx
ffffffff8000c2a7: 0f 83 73 ff ff ff    	jae	0xffffffff8000c220 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0xe0>
ffffffff8000c2ad: eb 97                	jmp	0xffffffff8000c246 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x106>
ffffffff8000c2af: 48 c7 44 24 08 00 00 00 00   	movq	$0x0, 0x8(%rsp)
ffffffff8000c2b8: 48 85 c0             	testq	%rax, %rax
ffffffff8000c2bb: 74 61                	je	0xffffffff8000c31e <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x1de>
ffffffff8000c2bd: 48 89 c1             	movq	%rax, %rcx
ffffffff8000c2c0: 48 83 e1 07          	andq	$0x7, %rcx
ffffffff8000c2c4: 74 5d                	je	0xffffffff8000c323 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x1e3>
ffffffff8000c2c6: 31 d2                	xorl	%edx, %edx
ffffffff8000c2c8: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
ffffffff8000c2d0: 48 8b 76 68          	movq	0x68(%rsi), %rsi
ffffffff8000c2d4: 48 ff c2             	incq	%rdx
ffffffff8000c2d7: 48 39 d1             	cmpq	%rdx, %rcx
ffffffff8000c2da: 75 f4                	jne	0xffffffff8000c2d0 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x190>
ffffffff8000c2dc: 48 89 c1             	movq	%rax, %rcx
ffffffff8000c2df: 48 29 d1             	subq	%rdx, %rcx
ffffffff8000c2e2: 45 31 f6             	xorl	%r14d, %r14d
ffffffff8000c2e5: 48 83 f8 08          	cmpq	$0x8, %rax
ffffffff8000c2e9: 73 45                	jae	0xffffffff8000c330 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x1f0>
ffffffff8000c2eb: eb 69                	jmp	0xffffffff8000c356 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x216>
ffffffff8000c2ed: 48 8b 74 24 10       	movq	0x10(%rsp), %rsi
ffffffff8000c2f2: 4c 8b 74 24 18       	movq	0x18(%rsp), %r14
ffffffff8000c2f7: 48 8b 44 24 20       	movq	0x20(%rsp), %rax
ffffffff8000c2fc: 48 83 7c 24 08 00    	cmpq	$0x0, 0x8(%rsp)
ffffffff8000c302: 48 c7 44 24 08 00 00 00 00   	movq	$0x0, 0x8(%rsp)
ffffffff8000c30b: 0f 84 1a 01 00 00    	je	0xffffffff8000c42b <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x2eb>
ffffffff8000c311: 48 85 f6             	testq	%rsi, %rsi
ffffffff8000c314: 75 40                	jne	0xffffffff8000c356 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x216>
ffffffff8000c316: 4c 89 f6             	movq	%r14, %rsi
ffffffff8000c319: 48 85 c0             	testq	%rax, %rax
ffffffff8000c31c: 75 9f                	jne	0xffffffff8000c2bd <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x17d>
ffffffff8000c31e: 45 31 f6             	xorl	%r14d, %r14d
ffffffff8000c321: eb 33                	jmp	0xffffffff8000c356 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x216>
ffffffff8000c323: 48 89 c1             	movq	%rax, %rcx
ffffffff8000c326: 45 31 f6             	xorl	%r14d, %r14d
ffffffff8000c329: 48 83 f8 08          	cmpq	$0x8, %rax
ffffffff8000c32d: 72 27                	jb	0xffffffff8000c356 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x216>
ffffffff8000c32f: 90                   	nop
ffffffff8000c330: 48 8b 46 68          	movq	0x68(%rsi), %rax
ffffffff8000c334: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff8000c338: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff8000c33c: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff8000c340: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff8000c344: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff8000c348: 48 8b 40 68          	movq	0x68(%rax), %rax
ffffffff8000c34c: 48 8b 70 68          	movq	0x68(%rax), %rsi
ffffffff8000c350: 48 83 c1 f8          	addq	$-0x8, %rcx
ffffffff8000c354: 75 da                	jne	0xffffffff8000c330 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x1f0>
ffffffff8000c356: 48 8b 06             	movq	(%rsi), %rax
ffffffff8000c359: 48 85 c0             	testq	%rax, %rax
ffffffff8000c35c: 74 71                	je	0xffffffff8000c3cf <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x28f>
ffffffff8000c35e: 41 bf 68 00 00 00    	movl	$0x68, %r15d
ffffffff8000c364: 40 b5 01             	movb	$0x1, %bpl
ffffffff8000c367: eb 2d                	jmp	0xffffffff8000c396 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x256>
ffffffff8000c369: 0f 1f 80 00 00 00 00 	nopl	(%rax)
ffffffff8000c370: 49 ff c6             	incq	%r14
ffffffff8000c373: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff8000c378: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000c37f: e8 1c 6d ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000c384: c6 05 c5 8c 01 00 00 	movb	$0x0, 0x18cc5(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000c38b: 48 8b 03             	movq	(%rbx), %rax
ffffffff8000c38e: 48 89 de             	movq	%rbx, %rsi
ffffffff8000c391: 48 85 c0             	testq	%rax, %rax
ffffffff8000c394: 74 3c                	je	0xffffffff8000c3d2 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x292>
ffffffff8000c396: 4d 85 f6             	testq	%r14, %r14
ffffffff8000c399: b9 c8 00 00 00       	movl	$0xc8, %ecx
ffffffff8000c39e: 49 0f 44 cf          	cmoveq	%r15, %rcx
ffffffff8000c3a2: 48 89 c3             	movq	%rax, %rbx
ffffffff8000c3a5: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff8000c3b0: 31 c0                	xorl	%eax, %eax
ffffffff8000c3b2: f0                   	lock
ffffffff8000c3b3: 40 0f b0 2d 95 8c 01 00      	cmpxchgb	%bpl, 0x18c95(%rip) # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000c3bb: 75 05                	jne	0xffffffff8000c3c2 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x282>
ffffffff8000c3bd: eb b1                	jmp	0xffffffff8000c370 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x230>
ffffffff8000c3bf: 90                   	nop
ffffffff8000c3c0: f3 90                	pause
ffffffff8000c3c2: 0f b6 05 87 8c 01 00 	movzbl	0x18c87(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000c3c9: 84 c0                	testb	%al, %al
ffffffff8000c3cb: 75 f3                	jne	0xffffffff8000c3c0 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x280>
ffffffff8000c3cd: eb e1                	jmp	0xffffffff8000c3b0 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x270>
ffffffff8000c3cf: 48 89 f3             	movq	%rsi, %rbx
ffffffff8000c3d2: b1 01                	movb	$0x1, %cl
ffffffff8000c3d4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
ffffffff8000c3e0: 31 c0                	xorl	%eax, %eax
ffffffff8000c3e2: f0                   	lock
ffffffff8000c3e3: 0f b0 0d 66 8c 01 00 	cmpxchgb	%cl, 0x18c66(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000c3ea: 75 06                	jne	0xffffffff8000c3f2 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x2b2>
ffffffff8000c3ec: eb 11                	jmp	0xffffffff8000c3ff <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x2bf>
ffffffff8000c3ee: 66 90                	nop
ffffffff8000c3f0: f3 90                	pause
ffffffff8000c3f2: 0f b6 05 57 8c 01 00 	movzbl	0x18c57(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000c3f9: 84 c0                	testb	%al, %al
ffffffff8000c3fb: 75 f3                	jne	0xffffffff8000c3f0 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x2b0>
ffffffff8000c3fd: eb e1                	jmp	0xffffffff8000c3e0 <<alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop::hd2ece21dbc933754+0x2a0>
ffffffff8000c3ff: 4d 85 f6             	testq	%r14, %r14
ffffffff8000c402: b8 68 00 00 00       	movl	$0x68, %eax
ffffffff8000c407: b9 c8 00 00 00       	movl	$0xc8, %ecx
ffffffff8000c40c: 48 0f 44 c8          	cmoveq	%rax, %rcx
ffffffff8000c410: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff8000c415: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000c41c: 48 89 de             	movq	%rbx, %rsi
ffffffff8000c41f: e8 7c 6c ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000c424: c6 05 25 8c 01 00 00 	movb	$0x0, 0x18c25(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000c42b: 48 83 c4 68          	addq	$0x68, %rsp
ffffffff8000c42f: 5b                   	popq	%rbx
ffffffff8000c430: 41 5e                	popq	%r14
ffffffff8000c432: 41 5f                	popq	%r15
ffffffff8000c434: 5d                   	popq	%rbp
ffffffff8000c435: c3                   	retq
ffffffff8000c436: 48 c7 c7 68 f0 01 80 	movq	$-0x7ffe0f98, %rdi      # imm = 0x8001F068
ffffffff8000c43d: e8 2e 05 01 00       	callq	0xffffffff8001c970 <core::option::unwrap_failed::hd8ef34c781aa10a4>
ffffffff8000c442: cc                   	int3
ffffffff8000c443: cc                   	int3
ffffffff8000c444: cc                   	int3
ffffffff8000c445: cc                   	int3
ffffffff8000c446: cc                   	int3
ffffffff8000c447: cc                   	int3
ffffffff8000c448: cc                   	int3
ffffffff8000c449: cc                   	int3
ffffffff8000c44a: cc                   	int3
ffffffff8000c44b: cc                   	int3
ffffffff8000c44c: cc                   	int3
ffffffff8000c44d: cc                   	int3
ffffffff8000c44e: cc                   	int3
ffffffff8000c44f: cc                   	int3

ffffffff8000c450 <<taos::memory::frame_allocator::GlobalFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::hcfaf6e33df90393d>:
ffffffff8000c450: 48 83 ec 38          	subq	$0x38, %rsp
ffffffff8000c454: 83 3f 02             	cmpl	$0x2, (%rdi)
ffffffff8000c457: 75 54                	jne	0xffffffff8000c4ad <<taos::memory::frame_allocator::GlobalFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::hcfaf6e33df90393d+0x5d>
ffffffff8000c459: 48 ff 47 38          	incq	0x38(%rdi)
ffffffff8000c45d: 48 89 f1             	movq	%rsi, %rcx
ffffffff8000c460: 48 c1 e9 0c          	shrq	$0xc, %rcx
ffffffff8000c464: 48 39 4f 18          	cmpq	%rcx, 0x18(%rdi)
ffffffff8000c468: 76 2b                	jbe	0xffffffff8000c495 <<taos::memory::frame_allocator::GlobalFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::hcfaf6e33df90393d+0x45>
ffffffff8000c46a: 48 c1 ee 12          	shrq	$0x12, %rsi
ffffffff8000c46e: 48 8b 47 10          	movq	0x10(%rdi), %rax
ffffffff8000c472: 48 39 c6             	cmpq	%rax, %rsi
ffffffff8000c475: 73 3b                	jae	0xffffffff8000c4b2 <<taos::memory::frame_allocator::GlobalFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::hcfaf6e33df90393d+0x62>
ffffffff8000c477: 48 8b 47 08          	movq	0x8(%rdi), %rax
ffffffff8000c47b: 48 8b 14 f0          	movq	(%rax,%rsi,8), %rdx
ffffffff8000c47f: 48 85 d2             	testq	%rdx, %rdx
ffffffff8000c482: 74 40                	je	0xffffffff8000c4c4 <<taos::memory::frame_allocator::GlobalFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::hcfaf6e33df90393d+0x74>
ffffffff8000c484: 48 0f b3 ca          	btrq	%rcx, %rdx
ffffffff8000c488: 48 89 14 f0          	movq	%rdx, (%rax,%rsi,8)
ffffffff8000c48c: 48 ff 47 20          	incq	0x20(%rdi)
ffffffff8000c490: 48 83 c4 38          	addq	$0x38, %rsp
ffffffff8000c494: c3                   	retq
ffffffff8000c495: be 31 00 00 00       	movl	$0x31, %esi
ffffffff8000c49a: 48 c7 c7 e8 ed 01 80 	movq	$-0x7ffe1218, %rdi      # imm = 0x8001EDE8
ffffffff8000c4a1: 48 c7 c2 50 ee 01 80 	movq	$-0x7ffe11b0, %rdx      # imm = 0x8001EE50
ffffffff8000c4a8: e8 c3 ff 00 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000c4ad: e8 5e f2 ff ff       	callq	0xffffffff8000b710 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::h2642dd658fae234e>
ffffffff8000c4b2: 48 89 f7             	movq	%rsi, %rdi
ffffffff8000c4b5: 48 89 c6             	movq	%rax, %rsi
ffffffff8000c4b8: 48 c7 c2 68 ee 01 80 	movq	$-0x7ffe1198, %rdx      # imm = 0x8001EE68
ffffffff8000c4bf: e8 f5 ff 00 00       	callq	0xffffffff8001c4b9 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff8000c4c4: 48 c7 44 24 08 a0 ee 01 80   	movq	$-0x7ffe1160, 0x8(%rsp) # imm = 0x8001EEA0
ffffffff8000c4cd: 48 c7 44 24 10 01 00 00 00   	movq	$0x1, 0x10(%rsp)
ffffffff8000c4d6: 48 c7 44 24 28 00 00 00 00   	movq	$0x0, 0x28(%rsp)
ffffffff8000c4df: 48 c7 44 24 18 08 00 00 00   	movq	$0x8, 0x18(%rsp)
ffffffff8000c4e8: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff8000c4f1: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff8000c4f6: 48 c7 c6 b0 ee 01 80 	movq	$-0x7ffe1150, %rsi      # imm = 0x8001EEB0
ffffffff8000c4fd: e8 ee fe 00 00       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8000c502: cc                   	int3
ffffffff8000c503: cc                   	int3
ffffffff8000c504: cc                   	int3
ffffffff8000c505: cc                   	int3
ffffffff8000c506: cc                   	int3
ffffffff8000c507: cc                   	int3
ffffffff8000c508: cc                   	int3
ffffffff8000c509: cc                   	int3
ffffffff8000c50a: cc                   	int3
ffffffff8000c50b: cc                   	int3
ffffffff8000c50c: cc                   	int3
ffffffff8000c50d: cc                   	int3
ffffffff8000c50e: cc                   	int3
ffffffff8000c50f: cc                   	int3

ffffffff8000c510 <taos::memory::frame_allocator::with_generic_allocator::h19f2dcf74e209599>:
ffffffff8000c510: 41 57                	pushq	%r15
ffffffff8000c512: 41 56                	pushq	%r14
ffffffff8000c514: 41 55                	pushq	%r13
ffffffff8000c516: 41 54                	pushq	%r12
ffffffff8000c518: 53                   	pushq	%rbx
ffffffff8000c519: 48 83 ec 30          	subq	$0x30, %rsp
ffffffff8000c51d: b1 01                	movb	$0x1, %cl
ffffffff8000c51f: 90                   	nop
ffffffff8000c520: 31 c0                	xorl	%eax, %eax
ffffffff8000c522: f0                   	lock
ffffffff8000c523: 0f b0 0d d6 8a 01 00 	cmpxchgb	%cl, 0x18ad6(%rip)      # 0xffffffff80025000 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208>
ffffffff8000c52a: 75 06                	jne	0xffffffff8000c532 <taos::memory::frame_allocator::with_generic_allocator::h19f2dcf74e209599+0x22>
ffffffff8000c52c: eb 11                	jmp	0xffffffff8000c53f <taos::memory::frame_allocator::with_generic_allocator::h19f2dcf74e209599+0x2f>
ffffffff8000c52e: 66 90                	nop
ffffffff8000c530: f3 90                	pause
ffffffff8000c532: 0f b6 05 c7 8a 01 00 	movzbl	0x18ac7(%rip), %eax     # 0xffffffff80025000 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208>
ffffffff8000c539: 84 c0                	testb	%al, %al
ffffffff8000c53b: 75 f3                	jne	0xffffffff8000c530 <taos::memory::frame_allocator::with_generic_allocator::h19f2dcf74e209599+0x20>
ffffffff8000c53d: eb e1                	jmp	0xffffffff8000c520 <taos::memory::frame_allocator::with_generic_allocator::h19f2dcf74e209599+0x10>
ffffffff8000c53f: 83 3d c2 8a 01 00 03 	cmpl	$0x3, 0x18ac2(%rip)     # 0xffffffff80025008 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x8>
ffffffff8000c546: 0f 84 fb 00 00 00    	je	0xffffffff8000c647 <taos::memory::frame_allocator::with_generic_allocator::h19f2dcf74e209599+0x137>
ffffffff8000c54c: 4c 8b 37             	movq	(%rdi), %r14
ffffffff8000c54f: 48 8b 1e             	movq	(%rsi), %rbx
ffffffff8000c552: 45 31 ff             	xorl	%r15d, %r15d
ffffffff8000c555: 49 bc 00 f0 ff ff ff ff 0f 00	movabsq	$0xffffffffff000, %r12 # imm = 0xFFFFFFFFFF000
ffffffff8000c55f: eb 36                	jmp	0xffffffff8000c597 <taos::memory::frame_allocator::with_generic_allocator::h19f2dcf74e209599+0x87>
ffffffff8000c561: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
ffffffff8000c570: 4c 21 e7             	andq	%r12, %rdi
ffffffff8000c573: 48 8b 0d a6 9c 01 00 	movq	0x19ca6(%rip), %rcx     # 0xffffffff80026220 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.6482013028561868880>
ffffffff8000c57a: be 03 00 00 00       	movl	$0x3, %esi
ffffffff8000c57f: 48 c7 c2 08 50 02 80 	movq	$-0x7ffdaff8, %rdx      # imm = 0x80025008
ffffffff8000c586: e8 95 44 00 00       	callq	0xffffffff80010a20 <taos::processes::process::free_page_table::h2635cc42af21bb35>
ffffffff8000c58b: 49 ff c7             	incq	%r15
ffffffff8000c58e: 49 81 ff 00 01 00 00 	cmpq	$0x100, %r15            # imm = 0x100
ffffffff8000c595: 74 28                	je	0xffffffff8000c5bf <taos::memory::frame_allocator::with_generic_allocator::h19f2dcf74e209599+0xaf>
ffffffff8000c597: 4b 8b 3c fe          	movq	(%r14,%r15,8), %rdi
ffffffff8000c59b: 48 85 ff             	testq	%rdi, %rdi
ffffffff8000c59e: 74 eb                	je	0xffffffff8000c58b <taos::memory::frame_allocator::with_generic_allocator::h19f2dcf74e209599+0x7b>
ffffffff8000c5a0: 0f b6 05 81 9c 01 00 	movzbl	0x19c81(%rip), %eax     # 0xffffffff80026228 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.6482013028561868880+0x8>
ffffffff8000c5a7: 3c 02                	cmpb	$0x2, %al
ffffffff8000c5a9: 74 c5                	je	0xffffffff8000c570 <taos::memory::frame_allocator::with_generic_allocator::h19f2dcf74e209599+0x60>
ffffffff8000c5ab: 49 89 fd             	movq	%rdi, %r13
ffffffff8000c5ae: 48 c7 c7 20 62 02 80 	movq	$-0x7ffd9de0, %rdi      # imm = 0x80026220
ffffffff8000c5b5: e8 d6 67 ff ff       	callq	0xffffffff80002d90 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.14359069980145722807>
ffffffff8000c5ba: 4c 89 ef             	movq	%r13, %rdi
ffffffff8000c5bd: eb b1                	jmp	0xffffffff8000c570 <taos::memory::frame_allocator::with_generic_allocator::h19f2dcf74e209599+0x60>
ffffffff8000c5bf: 83 3d 42 8a 01 00 02 	cmpl	$0x2, 0x18a42(%rip)     # 0xffffffff80025008 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x8>
ffffffff8000c5c6: 0f 85 b6 00 00 00    	jne	0xffffffff8000c682 <taos::memory::frame_allocator::with_generic_allocator::h19f2dcf74e209599+0x172>
ffffffff8000c5cc: 48 ff 05 6d 8a 01 00 	incq	0x18a6d(%rip)           # 0xffffffff80025040 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x40>
ffffffff8000c5d3: 48 89 d8             	movq	%rbx, %rax
ffffffff8000c5d6: 48 c1 e8 0c          	shrq	$0xc, %rax
ffffffff8000c5da: 48 39 05 3f 8a 01 00 	cmpq	%rax, 0x18a3f(%rip)     # 0xffffffff80025020 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x20>
ffffffff8000c5e1: 76 4c                	jbe	0xffffffff8000c62f <taos::memory::frame_allocator::with_generic_allocator::h19f2dcf74e209599+0x11f>
ffffffff8000c5e3: 48 c1 eb 12          	shrq	$0x12, %rbx
ffffffff8000c5e7: 48 8b 35 2a 8a 01 00 	movq	0x18a2a(%rip), %rsi     # 0xffffffff80025018 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x18>
ffffffff8000c5ee: 48 39 f3             	cmpq	%rsi, %rbx
ffffffff8000c5f1: 0f 83 9a 00 00 00    	jae	0xffffffff8000c691 <taos::memory::frame_allocator::with_generic_allocator::h19f2dcf74e209599+0x181>
ffffffff8000c5f7: 48 8b 0d 12 8a 01 00 	movq	0x18a12(%rip), %rcx     # 0xffffffff80025010 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x10>
ffffffff8000c5fe: 48 8b 14 d9          	movq	(%rcx,%rbx,8), %rdx
ffffffff8000c602: 48 85 d2             	testq	%rdx, %rdx
ffffffff8000c605: 0f 84 95 00 00 00    	je	0xffffffff8000c6a0 <taos::memory::frame_allocator::with_generic_allocator::h19f2dcf74e209599+0x190>
ffffffff8000c60b: 48 0f b3 c2          	btrq	%rax, %rdx
ffffffff8000c60f: 48 89 14 d9          	movq	%rdx, (%rcx,%rbx,8)
ffffffff8000c613: 48 ff 05 0e 8a 01 00 	incq	0x18a0e(%rip)           # 0xffffffff80025028 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x28>
ffffffff8000c61a: c6 05 df 89 01 00 00 	movb	$0x0, 0x189df(%rip)     # 0xffffffff80025000 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208>
ffffffff8000c621: 48 83 c4 30          	addq	$0x30, %rsp
ffffffff8000c625: 5b                   	popq	%rbx
ffffffff8000c626: 41 5c                	popq	%r12
ffffffff8000c628: 41 5d                	popq	%r13
ffffffff8000c62a: 41 5e                	popq	%r14
ffffffff8000c62c: 41 5f                	popq	%r15
ffffffff8000c62e: c3                   	retq
ffffffff8000c62f: be 31 00 00 00       	movl	$0x31, %esi
ffffffff8000c634: 48 c7 c7 e8 ed 01 80 	movq	$-0x7ffe1218, %rdi      # imm = 0x8001EDE8
ffffffff8000c63b: 48 c7 c2 50 ee 01 80 	movq	$-0x7ffe11b0, %rdx      # imm = 0x8001EE50
ffffffff8000c642: e8 29 fe 00 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000c647: 48 c7 04 24 50 f1 01 80      	movq	$-0x7ffe0eb0, (%rsp) # imm = 0x8001F150
ffffffff8000c64f: 48 c7 44 24 08 01 00 00 00   	movq	$0x1, 0x8(%rsp)
ffffffff8000c658: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff8000c661: 48 c7 44 24 10 08 00 00 00   	movq	$0x8, 0x10(%rsp)
ffffffff8000c66a: 48 c7 44 24 18 00 00 00 00   	movq	$0x0, 0x18(%rsp)
ffffffff8000c673: 48 89 e7             	movq	%rsp, %rdi
ffffffff8000c676: 48 c7 c6 80 f1 01 80 	movq	$-0x7ffe0e80, %rsi      # imm = 0x8001F180
ffffffff8000c67d: e8 6e fd 00 00       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8000c682: 48 c7 c7 08 50 02 80 	movq	$-0x7ffdaff8, %rdi      # imm = 0x80025008
ffffffff8000c689: 48 89 de             	movq	%rbx, %rsi
ffffffff8000c68c: e8 7f f0 ff ff       	callq	0xffffffff8000b710 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::h2642dd658fae234e>
ffffffff8000c691: 48 89 df             	movq	%rbx, %rdi
ffffffff8000c694: 48 c7 c2 68 ee 01 80 	movq	$-0x7ffe1198, %rdx      # imm = 0x8001EE68
ffffffff8000c69b: e8 19 fe 00 00       	callq	0xffffffff8001c4b9 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff8000c6a0: 48 c7 04 24 a0 ee 01 80      	movq	$-0x7ffe1160, (%rsp) # imm = 0x8001EEA0
ffffffff8000c6a8: 48 c7 44 24 08 01 00 00 00   	movq	$0x1, 0x8(%rsp)
ffffffff8000c6b1: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff8000c6ba: 48 c7 44 24 10 08 00 00 00   	movq	$0x8, 0x10(%rsp)
ffffffff8000c6c3: 48 c7 44 24 18 00 00 00 00   	movq	$0x0, 0x18(%rsp)
ffffffff8000c6cc: 48 89 e7             	movq	%rsp, %rdi
ffffffff8000c6cf: 48 c7 c6 b0 ee 01 80 	movq	$-0x7ffe1150, %rsi      # imm = 0x8001EEB0
ffffffff8000c6d6: e8 15 fd 00 00       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8000c6db: cc                   	int3
ffffffff8000c6dc: cc                   	int3
ffffffff8000c6dd: cc                   	int3
ffffffff8000c6de: cc                   	int3
ffffffff8000c6df: cc                   	int3

ffffffff8000c6e0 <<&T as core::fmt::Debug>::fmt::hd721d9d55d7f219c>:
ffffffff8000c6e0: 48 8b 07             	movq	(%rdi), %rax
ffffffff8000c6e3: 80 38 00             	cmpb	$0x0, (%rax)
ffffffff8000c6e6: 74 28                	je	0xffffffff8000c710 <<&T as core::fmt::Debug>::fmt::hd721d9d55d7f219c+0x30>
ffffffff8000c6e8: 50                   	pushq	%rax
ffffffff8000c6e9: 48 ff c0             	incq	%rax
ffffffff8000c6ec: 48 89 04 24          	movq	%rax, (%rsp)
ffffffff8000c6f0: 48 89 e1             	movq	%rsp, %rcx
ffffffff8000c6f3: ba 04 00 00 00       	movl	$0x4, %edx
ffffffff8000c6f8: 48 89 f7             	movq	%rsi, %rdi
ffffffff8000c6fb: 48 c7 c6 54 d0 01 80 	movq	$-0x7ffe2fac, %rsi      # imm = 0x8001D054
ffffffff8000c702: 49 c7 c0 98 f1 01 80 	movq	$-0x7ffe0e68, %r8       # imm = 0x8001F198
ffffffff8000c709: e8 52 d9 00 00       	callq	0xffffffff8001a060 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>
ffffffff8000c70e: 59                   	popq	%rcx
ffffffff8000c70f: c3                   	retq
ffffffff8000c710: ba 04 00 00 00       	movl	$0x4, %edx
ffffffff8000c715: 48 89 f7             	movq	%rsi, %rdi
ffffffff8000c718: 48 c7 c6 6c d0 01 80 	movq	$-0x7ffe2f94, %rsi      # imm = 0x8001D06C
ffffffff8000c71f: e9 bc d7 00 00       	jmp	0xffffffff80019ee0 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff8000c724: cc                   	int3
ffffffff8000c725: cc                   	int3
ffffffff8000c726: cc                   	int3
ffffffff8000c727: cc                   	int3
ffffffff8000c728: cc                   	int3
ffffffff8000c729: cc                   	int3
ffffffff8000c72a: cc                   	int3
ffffffff8000c72b: cc                   	int3
ffffffff8000c72c: cc                   	int3
ffffffff8000c72d: cc                   	int3
ffffffff8000c72e: cc                   	int3
ffffffff8000c72f: cc                   	int3

ffffffff8000c730 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553>:
ffffffff8000c730: 55                   	pushq	%rbp
ffffffff8000c731: 41 57                	pushq	%r15
ffffffff8000c733: 41 56                	pushq	%r14
ffffffff8000c735: 41 55                	pushq	%r13
ffffffff8000c737: 41 54                	pushq	%r12
ffffffff8000c739: 53                   	pushq	%rbx
ffffffff8000c73a: 50                   	pushq	%rax
ffffffff8000c73b: 49 89 f6             	movq	%rsi, %r14
ffffffff8000c73e: 31 f6                	xorl	%esi, %esi
ffffffff8000c740: 49 39 c8             	cmpq	%rcx, %r8
ffffffff8000c743: 40 0f 95 c6          	setne	%sil
ffffffff8000c747: b8 ff 00 00 00       	movl	$0xff, %eax
ffffffff8000c74c: 0f 43 c6             	cmovael	%esi, %eax
ffffffff8000c74f: 84 c0                	testb	%al, %al
ffffffff8000c751: 0f 84 0c 01 00 00    	je	0xffffffff8000c863 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x133>
ffffffff8000c757: 48 89 fb             	movq	%rdi, %rbx
ffffffff8000c75a: 0f b6 c0             	movzbl	%al, %eax
ffffffff8000c75d: 40 b6 01             	movb	$0x1, %sil
ffffffff8000c760: 83 f8 01             	cmpl	$0x1, %eax
ffffffff8000c763: 75 3b                	jne	0xffffffff8000c7a0 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x70>
ffffffff8000c765: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff8000c770: 31 c0                	xorl	%eax, %eax
ffffffff8000c772: f0                   	lock
ffffffff8000c773: 40 0f b0 33          	cmpxchgb	%sil, (%rbx)
ffffffff8000c777: 75 09                	jne	0xffffffff8000c782 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x52>
ffffffff8000c779: eb 45                	jmp	0xffffffff8000c7c0 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x90>
ffffffff8000c77b: 0f 1f 44 00 00       	nopl	(%rax,%rax)
ffffffff8000c780: f3 90                	pause
ffffffff8000c782: 0f b6 03             	movzbl	(%rbx), %eax
ffffffff8000c785: 84 c0                	testb	%al, %al
ffffffff8000c787: 75 f7                	jne	0xffffffff8000c780 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x50>
ffffffff8000c789: eb e5                	jmp	0xffffffff8000c770 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x40>
ffffffff8000c78b: 0f 1f 44 00 00       	nopl	(%rax,%rax)
ffffffff8000c790: 0f b6 03             	movzbl	(%rbx), %eax
ffffffff8000c793: 84 c0                	testb	%al, %al
ffffffff8000c795: 74 09                	je	0xffffffff8000c7a0 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x70>
ffffffff8000c797: f3 90                	pause
ffffffff8000c799: 0f b6 03             	movzbl	(%rbx), %eax
ffffffff8000c79c: 84 c0                	testb	%al, %al
ffffffff8000c79e: 75 f7                	jne	0xffffffff8000c797 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x67>
ffffffff8000c7a0: 31 c0                	xorl	%eax, %eax
ffffffff8000c7a2: f0                   	lock
ffffffff8000c7a3: 40 0f b0 33          	cmpxchgb	%sil, (%rbx)
ffffffff8000c7a7: 75 e7                	jne	0xffffffff8000c790 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x60>
ffffffff8000c7a9: 48 8d 7b 08          	leaq	0x8(%rbx), %rdi
ffffffff8000c7ad: 4c 89 f6             	movq	%r14, %rsi
ffffffff8000c7b0: e8 db 71 ff ff       	callq	0xffffffff80003990 <talc::talc::Talc<O>::shrink::h01df3c6350a6d5e4>
ffffffff8000c7b5: 4c 89 f0             	movq	%r14, %rax
ffffffff8000c7b8: c6 03 00             	movb	$0x0, (%rbx)
ffffffff8000c7bb: e9 a6 00 00 00       	jmp	0xffffffff8000c866 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x136>
ffffffff8000c7c0: 4c 8d 7b 08          	leaq	0x8(%rbx), %r15
ffffffff8000c7c4: 4c 89 ff             	movq	%r15, %rdi
ffffffff8000c7c7: 4c 89 f6             	movq	%r14, %rsi
ffffffff8000c7ca: 49 89 d5             	movq	%rdx, %r13
ffffffff8000c7cd: 49 89 cc             	movq	%rcx, %r12
ffffffff8000c7d0: 4c 89 c5             	movq	%r8, %rbp
ffffffff8000c7d3: e8 b8 66 ff ff       	callq	0xffffffff80002e90 <talc::talc::Talc<O>::grow_in_place::hd4ca607f5a353858>
ffffffff8000c7d8: c6 03 00             	movb	$0x0, (%rbx)
ffffffff8000c7db: 48 85 c0             	testq	%rax, %rax
ffffffff8000c7de: 0f 85 82 00 00 00    	jne	0xffffffff8000c866 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x136>
ffffffff8000c7e4: b1 01                	movb	$0x1, %cl
ffffffff8000c7e6: 31 c0                	xorl	%eax, %eax
ffffffff8000c7e8: f0                   	lock
ffffffff8000c7e9: 0f b0 0b             	cmpxchgb	%cl, (%rbx)
ffffffff8000c7ec: 4c 89 ee             	movq	%r13, %rsi
ffffffff8000c7ef: 48 89 ea             	movq	%rbp, %rdx
ffffffff8000c7f2: 75 0e                	jne	0xffffffff8000c802 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0xd2>
ffffffff8000c7f4: eb 1b                	jmp	0xffffffff8000c811 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0xe1>
ffffffff8000c7f6: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
ffffffff8000c800: f3 90                	pause
ffffffff8000c802: 0f b6 03             	movzbl	(%rbx), %eax
ffffffff8000c805: 84 c0                	testb	%al, %al
ffffffff8000c807: 75 f7                	jne	0xffffffff8000c800 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0xd0>
ffffffff8000c809: 31 c0                	xorl	%eax, %eax
ffffffff8000c80b: f0                   	lock
ffffffff8000c80c: 0f b0 0b             	cmpxchgb	%cl, (%rbx)
ffffffff8000c80f: 75 f1                	jne	0xffffffff8000c802 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0xd2>
ffffffff8000c811: 4c 89 ff             	movq	%r15, %rdi
ffffffff8000c814: e8 e7 6a ff ff       	callq	0xffffffff80003300 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff8000c819: 48 85 c0             	testq	%rax, %rax
ffffffff8000c81c: 74 57                	je	0xffffffff8000c875 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x145>
ffffffff8000c81e: 4c 89 e2             	movq	%r12, %rdx
ffffffff8000c821: 49 81 fc 00 00 01 00 	cmpq	$0x10000, %r12          # imm = 0x10000
ffffffff8000c828: 76 52                	jbe	0xffffffff8000c87c <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x14c>
ffffffff8000c82a: c6 03 00             	movb	$0x0, (%rbx)
ffffffff8000c82d: 48 89 c5             	movq	%rax, %rbp
ffffffff8000c830: 48 89 c7             	movq	%rax, %rdi
ffffffff8000c833: 4c 89 f6             	movq	%r14, %rsi
ffffffff8000c836: ff 15 e4 9b 02 00    	callq	*0x29be4(%rip)          # 0xffffffff80036420
ffffffff8000c83c: b1 01                	movb	$0x1, %cl
ffffffff8000c83e: 31 c0                	xorl	%eax, %eax
ffffffff8000c840: f0                   	lock
ffffffff8000c841: 0f b0 0b             	cmpxchgb	%cl, (%rbx)
ffffffff8000c844: 4c 89 ea             	movq	%r13, %rdx
ffffffff8000c847: 75 09                	jne	0xffffffff8000c852 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x122>
ffffffff8000c849: eb 43                	jmp	0xffffffff8000c88e <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x15e>
ffffffff8000c84b: 0f 1f 44 00 00       	nopl	(%rax,%rax)
ffffffff8000c850: f3 90                	pause
ffffffff8000c852: 0f b6 03             	movzbl	(%rbx), %eax
ffffffff8000c855: 84 c0                	testb	%al, %al
ffffffff8000c857: 75 f7                	jne	0xffffffff8000c850 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x120>
ffffffff8000c859: 31 c0                	xorl	%eax, %eax
ffffffff8000c85b: f0                   	lock
ffffffff8000c85c: 0f b0 0b             	cmpxchgb	%cl, (%rbx)
ffffffff8000c85f: 75 f1                	jne	0xffffffff8000c852 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x122>
ffffffff8000c861: eb 2b                	jmp	0xffffffff8000c88e <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x15e>
ffffffff8000c863: 4c 89 f0             	movq	%r14, %rax
ffffffff8000c866: 48 83 c4 08          	addq	$0x8, %rsp
ffffffff8000c86a: 5b                   	popq	%rbx
ffffffff8000c86b: 41 5c                	popq	%r12
ffffffff8000c86d: 41 5d                	popq	%r13
ffffffff8000c86f: 41 5e                	popq	%r14
ffffffff8000c871: 41 5f                	popq	%r15
ffffffff8000c873: 5d                   	popq	%rbp
ffffffff8000c874: c3                   	retq
ffffffff8000c875: 31 c0                	xorl	%eax, %eax
ffffffff8000c877: e9 3c ff ff ff       	jmp	0xffffffff8000c7b8 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x88>
ffffffff8000c87c: 48 89 c5             	movq	%rax, %rbp
ffffffff8000c87f: 48 89 c7             	movq	%rax, %rdi
ffffffff8000c882: 4c 89 f6             	movq	%r14, %rsi
ffffffff8000c885: ff 15 95 9b 02 00    	callq	*0x29b95(%rip)          # 0xffffffff80036420
ffffffff8000c88b: 4c 89 ea             	movq	%r13, %rdx
ffffffff8000c88e: 4c 89 ff             	movq	%r15, %rdi
ffffffff8000c891: 4c 89 f6             	movq	%r14, %rsi
ffffffff8000c894: 4c 89 e1             	movq	%r12, %rcx
ffffffff8000c897: e8 04 68 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000c89c: 48 89 e8             	movq	%rbp, %rax
ffffffff8000c89f: e9 14 ff ff ff       	jmp	0xffffffff8000c7b8 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553+0x88>
ffffffff8000c8a4: cc                   	int3
ffffffff8000c8a5: cc                   	int3
ffffffff8000c8a6: cc                   	int3
ffffffff8000c8a7: cc                   	int3
ffffffff8000c8a8: cc                   	int3
ffffffff8000c8a9: cc                   	int3
ffffffff8000c8aa: cc                   	int3
ffffffff8000c8ab: cc                   	int3
ffffffff8000c8ac: cc                   	int3
ffffffff8000c8ad: cc                   	int3
ffffffff8000c8ae: cc                   	int3
ffffffff8000c8af: cc                   	int3

ffffffff8000c8b0 <core::fmt::Write::write_char::h35915b7c56796241>:
ffffffff8000c8b0: 50                   	pushq	%rax
ffffffff8000c8b1: c7 44 24 04 00 00 00 00      	movl	$0x0, 0x4(%rsp)
ffffffff8000c8b9: 81 fe 80 00 00 00    	cmpl	$0x80, %esi
ffffffff8000c8bf: 73 16                	jae	0xffffffff8000c8d7 <core::fmt::Write::write_char::h35915b7c56796241+0x27>
ffffffff8000c8c1: 40 88 74 24 04       	movb	%sil, 0x4(%rsp)
ffffffff8000c8c6: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff8000c8cb: 48 8d 74 24 04       	leaq	0x4(%rsp), %rsi
ffffffff8000c8d0: e8 2b b5 00 00       	callq	0xffffffff80017e00 <<uart_16550::port::SerialPort as core::fmt::Write>::write_str::h587fdbce39b46b10>
ffffffff8000c8d5: 59                   	popq	%rcx
ffffffff8000c8d6: c3                   	retq
ffffffff8000c8d7: 89 f0                	movl	%esi, %eax
ffffffff8000c8d9: 81 fe 00 08 00 00    	cmpl	$0x800, %esi            # imm = 0x800
ffffffff8000c8df: 73 27                	jae	0xffffffff8000c908 <core::fmt::Write::write_char::h35915b7c56796241+0x58>
ffffffff8000c8e1: c1 e8 06             	shrl	$0x6, %eax
ffffffff8000c8e4: 0c c0                	orb	$-0x40, %al
ffffffff8000c8e6: 88 44 24 04          	movb	%al, 0x4(%rsp)
ffffffff8000c8ea: 40 80 e6 3f          	andb	$0x3f, %sil
ffffffff8000c8ee: 40 80 ce 80          	orb	$-0x80, %sil
ffffffff8000c8f2: 40 88 74 24 05       	movb	%sil, 0x5(%rsp)
ffffffff8000c8f7: ba 02 00 00 00       	movl	$0x2, %edx
ffffffff8000c8fc: 48 8d 74 24 04       	leaq	0x4(%rsp), %rsi
ffffffff8000c901: e8 fa b4 00 00       	callq	0xffffffff80017e00 <<uart_16550::port::SerialPort as core::fmt::Write>::write_str::h587fdbce39b46b10>
ffffffff8000c906: 59                   	popq	%rcx
ffffffff8000c907: c3                   	retq
ffffffff8000c908: 81 fe 00 00 01 00    	cmpl	$0x10000, %esi          # imm = 0x10000
ffffffff8000c90e: 73 34                	jae	0xffffffff8000c944 <core::fmt::Write::write_char::h35915b7c56796241+0x94>
ffffffff8000c910: c1 e8 0c             	shrl	$0xc, %eax
ffffffff8000c913: 0c e0                	orb	$-0x20, %al
ffffffff8000c915: 88 44 24 04          	movb	%al, 0x4(%rsp)
ffffffff8000c919: 89 f0                	movl	%esi, %eax
ffffffff8000c91b: c1 e8 06             	shrl	$0x6, %eax
ffffffff8000c91e: 24 3f                	andb	$0x3f, %al
ffffffff8000c920: 0c 80                	orb	$-0x80, %al
ffffffff8000c922: 88 44 24 05          	movb	%al, 0x5(%rsp)
ffffffff8000c926: 40 80 e6 3f          	andb	$0x3f, %sil
ffffffff8000c92a: 40 80 ce 80          	orb	$-0x80, %sil
ffffffff8000c92e: 40 88 74 24 06       	movb	%sil, 0x6(%rsp)
ffffffff8000c933: ba 03 00 00 00       	movl	$0x3, %edx
ffffffff8000c938: 48 8d 74 24 04       	leaq	0x4(%rsp), %rsi
ffffffff8000c93d: e8 be b4 00 00       	callq	0xffffffff80017e00 <<uart_16550::port::SerialPort as core::fmt::Write>::write_str::h587fdbce39b46b10>
ffffffff8000c942: 59                   	popq	%rcx
ffffffff8000c943: c3                   	retq
ffffffff8000c944: c1 e8 12             	shrl	$0x12, %eax
ffffffff8000c947: 0c f0                	orb	$-0x10, %al
ffffffff8000c949: 88 44 24 04          	movb	%al, 0x4(%rsp)
ffffffff8000c94d: 89 f0                	movl	%esi, %eax
ffffffff8000c94f: c1 e8 0c             	shrl	$0xc, %eax
ffffffff8000c952: 24 3f                	andb	$0x3f, %al
ffffffff8000c954: 0c 80                	orb	$-0x80, %al
ffffffff8000c956: 88 44 24 05          	movb	%al, 0x5(%rsp)
ffffffff8000c95a: 89 f0                	movl	%esi, %eax
ffffffff8000c95c: c1 e8 06             	shrl	$0x6, %eax
ffffffff8000c95f: 24 3f                	andb	$0x3f, %al
ffffffff8000c961: 0c 80                	orb	$-0x80, %al
ffffffff8000c963: 88 44 24 06          	movb	%al, 0x6(%rsp)
ffffffff8000c967: 40 80 e6 3f          	andb	$0x3f, %sil
ffffffff8000c96b: 40 80 ce 80          	orb	$-0x80, %sil
ffffffff8000c96f: 40 88 74 24 07       	movb	%sil, 0x7(%rsp)
ffffffff8000c974: ba 04 00 00 00       	movl	$0x4, %edx
ffffffff8000c979: 48 8d 74 24 04       	leaq	0x4(%rsp), %rsi
ffffffff8000c97e: e8 7d b4 00 00       	callq	0xffffffff80017e00 <<uart_16550::port::SerialPort as core::fmt::Write>::write_str::h587fdbce39b46b10>
ffffffff8000c983: 59                   	popq	%rcx
ffffffff8000c984: c3                   	retq
ffffffff8000c985: cc                   	int3
ffffffff8000c986: cc                   	int3
ffffffff8000c987: cc                   	int3
ffffffff8000c988: cc                   	int3
ffffffff8000c989: cc                   	int3
ffffffff8000c98a: cc                   	int3
ffffffff8000c98b: cc                   	int3
ffffffff8000c98c: cc                   	int3
ffffffff8000c98d: cc                   	int3
ffffffff8000c98e: cc                   	int3
ffffffff8000c98f: cc                   	int3

ffffffff8000c990 <core::fmt::Write::write_fmt::h074698a8db4b4be5>:
ffffffff8000c990: 48 89 f2             	movq	%rsi, %rdx
ffffffff8000c993: 48 c7 c6 b8 f1 01 80 	movq	$-0x7ffe0e48, %rsi      # imm = 0x8001F1B8
ffffffff8000c99a: e9 e1 cc 00 00       	jmp	0xffffffff80019680 <core::fmt::write::h1a05140646fc4354>
ffffffff8000c99f: cc                   	int3

ffffffff8000c9a0 <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac>:
ffffffff8000c9a0: 55                   	pushq	%rbp
ffffffff8000c9a1: 41 57                	pushq	%r15
ffffffff8000c9a3: 41 56                	pushq	%r14
ffffffff8000c9a5: 41 54                	pushq	%r12
ffffffff8000c9a7: 53                   	pushq	%rbx
ffffffff8000c9a8: 48 83 ec 10          	subq	$0x10, %rsp
ffffffff8000c9ac: 48 8b 47 10          	movq	0x10(%rdi), %rax
ffffffff8000c9b0: 48 85 c0             	testq	%rax, %rax
ffffffff8000c9b3: 0f 84 82 00 00 00    	je	0xffffffff8000ca3b <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0x9b>
ffffffff8000c9b9: 4c 8b 7f 08          	movq	0x8(%rdi), %r15
ffffffff8000c9bd: 4d 8d 24 c7          	leaq	(%r15,%rax,8), %r12
ffffffff8000c9c1: 31 db                	xorl	%ebx, %ebx
ffffffff8000c9c3: 40 b5 01             	movb	$0x1, %bpl
ffffffff8000c9c6: 4c 8d 74 24 08       	leaq	0x8(%rsp), %r14
ffffffff8000c9cb: eb 0c                	jmp	0xffffffff8000c9d9 <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0x39>
ffffffff8000c9cd: 0f 1f 00             	nopl	(%rax)
ffffffff8000c9d0: 49 83 c7 08          	addq	$0x8, %r15
ffffffff8000c9d4: 4d 39 e7             	cmpq	%r12, %r15
ffffffff8000c9d7: 74 64                	je	0xffffffff8000ca3d <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0x9d>
ffffffff8000c9d9: 49 8b 07             	movq	(%r15), %rax
ffffffff8000c9dc: f0                   	lock
ffffffff8000c9dd: 48 ff 00             	incq	(%rax)
ffffffff8000c9e0: 0f 8e 8e 00 00 00    	jle	0xffffffff8000ca74 <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0xd4>
ffffffff8000c9e6: 49 8b 0f             	movq	(%r15), %rcx
ffffffff8000c9e9: 48 89 4c 24 08       	movq	%rcx, 0x8(%rsp)
ffffffff8000c9ee: 66 90                	nop
ffffffff8000c9f0: 31 c0                	xorl	%eax, %eax
ffffffff8000c9f2: f0                   	lock
ffffffff8000c9f3: 40 0f b0 69 10       	cmpxchgb	%bpl, 0x10(%rcx)
ffffffff8000c9f8: 75 08                	jne	0xffffffff8000ca02 <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0x62>
ffffffff8000c9fa: eb 14                	jmp	0xffffffff8000ca10 <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0x70>
ffffffff8000c9fc: 0f 1f 40 00          	nopl	(%rax)
ffffffff8000ca00: f3 90                	pause
ffffffff8000ca02: 0f b6 41 10          	movzbl	0x10(%rcx), %eax
ffffffff8000ca06: 84 c0                	testb	%al, %al
ffffffff8000ca08: 75 f6                	jne	0xffffffff8000ca00 <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0x60>
ffffffff8000ca0a: eb e4                	jmp	0xffffffff8000c9f0 <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0x50>
ffffffff8000ca0c: 0f 1f 40 00          	nopl	(%rax)
ffffffff8000ca10: 80 79 1c 08          	cmpb	$0x8, 0x1c(%rcx)
ffffffff8000ca14: 75 0c                	jne	0xffffffff8000ca22 <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0x82>
ffffffff8000ca16: 80 79 1d 05          	cmpb	$0x5, 0x1d(%rcx)
ffffffff8000ca1a: 75 06                	jne	0xffffffff8000ca22 <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0x82>
ffffffff8000ca1c: 80 79 1e 01          	cmpb	$0x1, 0x1e(%rcx)
ffffffff8000ca20: 76 2b                	jbe	0xffffffff8000ca4d <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0xad>
ffffffff8000ca22: c6 41 10 00          	movb	$0x0, 0x10(%rcx)
ffffffff8000ca26: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff8000ca2b: f0                   	lock
ffffffff8000ca2c: 48 ff 08             	decq	(%rax)
ffffffff8000ca2f: 75 9f                	jne	0xffffffff8000c9d0 <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0x30>
ffffffff8000ca31: 4c 89 f7             	movq	%r14, %rdi
ffffffff8000ca34: e8 e7 f5 ff ff       	callq	0xffffffff8000c020 <alloc::sync::Arc<T,A>::drop_slow::h8360a5d89533dd40>
ffffffff8000ca39: eb 95                	jmp	0xffffffff8000c9d0 <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0x30>
ffffffff8000ca3b: 31 db                	xorl	%ebx, %ebx
ffffffff8000ca3d: 48 89 d8             	movq	%rbx, %rax
ffffffff8000ca40: 48 83 c4 10          	addq	$0x10, %rsp
ffffffff8000ca44: 5b                   	popq	%rbx
ffffffff8000ca45: 41 5c                	popq	%r12
ffffffff8000ca47: 41 5e                	popq	%r14
ffffffff8000ca49: 41 5f                	popq	%r15
ffffffff8000ca4b: 5d                   	popq	%rbp
ffffffff8000ca4c: c3                   	retq
ffffffff8000ca4d: 49 8b 07             	movq	(%r15), %rax
ffffffff8000ca50: f0                   	lock
ffffffff8000ca51: 48 ff 00             	incq	(%rax)
ffffffff8000ca54: 7e 1e                	jle	0xffffffff8000ca74 <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0xd4>
ffffffff8000ca56: 49 8b 1f             	movq	(%r15), %rbx
ffffffff8000ca59: c6 41 10 00          	movb	$0x0, 0x10(%rcx)
ffffffff8000ca5d: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff8000ca62: f0                   	lock
ffffffff8000ca63: 48 ff 08             	decq	(%rax)
ffffffff8000ca66: 75 d5                	jne	0xffffffff8000ca3d <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0x9d>
ffffffff8000ca68: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff8000ca6d: e8 ae f5 ff ff       	callq	0xffffffff8000c020 <alloc::sync::Arc<T,A>::drop_slow::h8360a5d89533dd40>
ffffffff8000ca72: eb c9                	jmp	0xffffffff8000ca3d <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac+0x9d>
ffffffff8000ca74: 0f 0b                	ud2
ffffffff8000ca76: cc                   	int3
ffffffff8000ca77: cc                   	int3
ffffffff8000ca78: cc                   	int3
ffffffff8000ca79: cc                   	int3
ffffffff8000ca7a: cc                   	int3
ffffffff8000ca7b: cc                   	int3
ffffffff8000ca7c: cc                   	int3
ffffffff8000ca7d: cc                   	int3
ffffffff8000ca7e: cc                   	int3
ffffffff8000ca7f: cc                   	int3

ffffffff8000ca80 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6>:
ffffffff8000ca80: 55                   	pushq	%rbp
ffffffff8000ca81: 41 57                	pushq	%r15
ffffffff8000ca83: 41 56                	pushq	%r14
ffffffff8000ca85: 41 55                	pushq	%r13
ffffffff8000ca87: 41 54                	pushq	%r12
ffffffff8000ca89: 53                   	pushq	%rbx
ffffffff8000ca8a: 48 81 ec b8 01 00 00 	subq	$0x1b8, %rsp            # imm = 0x1B8
ffffffff8000ca91: 4c 8b 2f             	movq	(%rdi), %r13
ffffffff8000ca94: f0                   	lock
ffffffff8000ca95: 49 ff 45 00          	incq	(%r13)
ffffffff8000ca99: 0f 8e d2 05 00 00    	jle	0xffffffff8000d071 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5f1>
ffffffff8000ca9f: 49 89 f6             	movq	%rsi, %r14
ffffffff8000caa2: 4c 89 6c 24 38       	movq	%r13, 0x38(%rsp)
ffffffff8000caa7: b1 01                	movb	$0x1, %cl
ffffffff8000caa9: 0f 1f 80 00 00 00 00 	nopl	(%rax)
ffffffff8000cab0: 31 c0                	xorl	%eax, %eax
ffffffff8000cab2: f0                   	lock
ffffffff8000cab3: 41 0f b0 4d 10       	cmpxchgb	%cl, 0x10(%r13)
ffffffff8000cab8: 75 08                	jne	0xffffffff8000cac2 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x42>
ffffffff8000caba: eb 11                	jmp	0xffffffff8000cacd <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x4d>
ffffffff8000cabc: 0f 1f 40 00          	nopl	(%rax)
ffffffff8000cac0: f3 90                	pause
ffffffff8000cac2: 41 0f b6 45 10       	movzbl	0x10(%r13), %eax
ffffffff8000cac7: 84 c0                	testb	%al, %al
ffffffff8000cac9: 75 f5                	jne	0xffffffff8000cac0 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x40>
ffffffff8000cacb: eb e3                	jmp	0xffffffff8000cab0 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x30>
ffffffff8000cacd: 41 0f b6 55 1b       	movzbl	0x1b(%r13), %edx
ffffffff8000cad2: 83 fa 1f             	cmpl	$0x1f, %edx
ffffffff8000cad5: 0f 87 1d 05 00 00    	ja	0xffffffff8000cff8 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x578>
ffffffff8000cadb: 41 0f b7 4d 18       	movzwl	0x18(%r13), %ecx
ffffffff8000cae0: 83 e1 fd             	andl	$-0x3, %ecx
ffffffff8000cae3: 41 0f b6 75 1a       	movzbl	0x1a(%r13), %esi
ffffffff8000cae8: 40 b7 01             	movb	$0x1, %dil
ffffffff8000caeb: 0f 1f 44 00 00       	nopl	(%rax,%rax)
ffffffff8000caf0: 31 c0                	xorl	%eax, %eax
ffffffff8000caf2: f0                   	lock
ffffffff8000caf3: 40 0f b0 3d 75 97 01 00      	cmpxchgb	%dil, 0x19775(%rip) # 0xffffffff80026270 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.16693732038470628512>
ffffffff8000cafb: 75 05                	jne	0xffffffff8000cb02 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x82>
ffffffff8000cafd: eb 10                	jmp	0xffffffff8000cb0f <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x8f>
ffffffff8000caff: 90                   	nop
ffffffff8000cb00: f3 90                	pause
ffffffff8000cb02: 0f b6 05 67 97 01 00 	movzbl	0x19767(%rip), %eax     # 0xffffffff80026270 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.16693732038470628512>
ffffffff8000cb09: 84 c0                	testb	%al, %al
ffffffff8000cb0b: 75 f3                	jne	0xffffffff8000cb00 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x80>
ffffffff8000cb0d: eb e1                	jmp	0xffffffff8000caf0 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x70>
ffffffff8000cb0f: c1 e2 0b             	shll	$0xb, %edx
ffffffff8000cb12: c1 e6 10             	shll	$0x10, %esi
ffffffff8000cb15: 8d 04 16             	leal	(%rsi,%rdx), %eax
ffffffff8000cb18: 05 04 00 00 80       	addl	$0x80000004, %eax       # imm = 0x80000004
ffffffff8000cb1d: c6 05 4c 97 01 00 00 	movb	$0x0, 0x1974c(%rip)     # 0xffffffff80026270 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.16693732038470628512>
ffffffff8000cb24: 66 ba f8 0c          	movw	$0xcf8, %dx             # imm = 0xCF8
ffffffff8000cb28: ef                   	outl	%eax, %dx
ffffffff8000cb29: 66 ba fc 0c          	movw	$0xcfc, %dx             # imm = 0xCFC
ffffffff8000cb2d: ed                   	inl	%dx, %eax
ffffffff8000cb2e: 25 00 00 ff ff       	andl	$0xffff0000, %eax       # imm = 0xFFFF0000
ffffffff8000cb33: 09 c8                	orl	%ecx, %eax
ffffffff8000cb35: ef                   	outl	%eax, %dx
ffffffff8000cb36: 66 ba f8 0c          	movw	$0xcf8, %dx             # imm = 0xCF8
ffffffff8000cb3a: 31 c0                	xorl	%eax, %eax
ffffffff8000cb3c: ef                   	outl	%eax, %dx
ffffffff8000cb3d: 41 0f b6 4d 1b       	movzbl	0x1b(%r13), %ecx
ffffffff8000cb42: 83 f9 1f             	cmpl	$0x1f, %ecx
ffffffff8000cb45: 0f 87 ad 04 00 00    	ja	0xffffffff8000cff8 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x578>
ffffffff8000cb4b: 41 0f b6 55 1a       	movzbl	0x1a(%r13), %edx
ffffffff8000cb50: 40 b6 01             	movb	$0x1, %sil
ffffffff8000cb53: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
ffffffff8000cb60: 31 c0                	xorl	%eax, %eax
ffffffff8000cb62: f0                   	lock
ffffffff8000cb63: 40 0f b0 35 05 97 01 00      	cmpxchgb	%sil, 0x19705(%rip) # 0xffffffff80026270 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.16693732038470628512>
ffffffff8000cb6b: 75 05                	jne	0xffffffff8000cb72 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xf2>
ffffffff8000cb6d: eb 10                	jmp	0xffffffff8000cb7f <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xff>
ffffffff8000cb6f: 90                   	nop
ffffffff8000cb70: f3 90                	pause
ffffffff8000cb72: 0f b6 05 f7 96 01 00 	movzbl	0x196f7(%rip), %eax     # 0xffffffff80026270 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.16693732038470628512>
ffffffff8000cb79: 84 c0                	testb	%al, %al
ffffffff8000cb7b: 75 f3                	jne	0xffffffff8000cb70 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xf0>
ffffffff8000cb7d: eb e1                	jmp	0xffffffff8000cb60 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xe0>
ffffffff8000cb7f: c1 e1 0b             	shll	$0xb, %ecx
ffffffff8000cb82: c1 e2 10             	shll	$0x10, %edx
ffffffff8000cb85: 8d 04 0a             	leal	(%rdx,%rcx), %eax
ffffffff8000cb88: 05 10 00 00 80       	addl	$0x80000010, %eax       # imm = 0x80000010
ffffffff8000cb8d: c6 05 dc 96 01 00 00 	movb	$0x0, 0x196dc(%rip)     # 0xffffffff80026270 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.16693732038470628512>
ffffffff8000cb94: 66 ba f8 0c          	movw	$0xcf8, %dx             # imm = 0xCF8
ffffffff8000cb98: ef                   	outl	%eax, %dx
ffffffff8000cb99: 66 ba fc 0c          	movw	$0xcfc, %dx             # imm = 0xCFC
ffffffff8000cb9d: ed                   	inl	%dx, %eax
ffffffff8000cb9e: 41 89 c7             	movl	%eax, %r15d
ffffffff8000cba1: 66 ba f8 0c          	movw	$0xcf8, %dx             # imm = 0xCF8
ffffffff8000cba5: 31 c0                	xorl	%eax, %eax
ffffffff8000cba7: ef                   	outl	%eax, %dx
ffffffff8000cba8: 41 81 e7 00 ff ff ff 	andl	$0xffffff00, %r15d      # imm = 0xFFFFFF00
ffffffff8000cbaf: 49 8b 5e 08          	movq	0x8(%r14), %rbx
ffffffff8000cbb3: 4c 01 fb             	addq	%r15, %rbx
ffffffff8000cbb6: 48 b8 00 00 00 00 00 80 00 00	movabsq	$0x800000000000, %rax # imm = 0x800000000000
ffffffff8000cbc0: 48 01 d8             	addq	%rbx, %rax
ffffffff8000cbc3: 48 c1 e8 30          	shrq	$0x30, %rax
ffffffff8000cbc7: 0f 85 43 04 00 00    	jne	0xffffffff8000d010 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x590>
ffffffff8000cbcd: 48 8d bc 24 08 01 00 00      	leaq	0x108(%rsp), %rdi
ffffffff8000cbd5: 4c 89 f6             	movq	%r14, %rsi
ffffffff8000cbd8: 48 89 da             	movq	%rbx, %rdx
ffffffff8000cbdb: e8 80 25 00 00       	callq	0xffffffff8000f160 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Translate>::translate::ha2f3ac841296f80f>
ffffffff8000cbe0: 48 8b 84 24 08 01 00 00      	movq	0x108(%rsp), %rax
ffffffff8000cbe8: 48 8d 50 fd          	leaq	-0x3(%rax), %rdx
ffffffff8000cbec: 48 8d 70 fe          	leaq	-0x2(%rax), %rsi
ffffffff8000cbf0: 31 c9                	xorl	%ecx, %ecx
ffffffff8000cbf2: 48 83 fa 02          	cmpq	$0x2, %rdx
ffffffff8000cbf6: 48 0f 42 ce          	cmovbq	%rsi, %rcx
ffffffff8000cbfa: 48 85 c9             	testq	%rcx, %rcx
ffffffff8000cbfd: 0f 84 11 01 00 00    	je	0xffffffff8000cd14 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x294>
ffffffff8000cc03: 48 83 f9 01          	cmpq	$0x1, %rcx
ffffffff8000cc07: 0f 85 ce 08 00 00    	jne	0xffffffff8000d4db <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xa5b>
ffffffff8000cc0d: 41 81 e7 00 f0 ff ff 	andl	$0xfffff000, %r15d      # imm = 0xFFFFF000
ffffffff8000cc14: ba 13 00 00 00       	movl	$0x13, %edx
ffffffff8000cc19: 4c 89 f7             	movq	%r14, %rdi
ffffffff8000cc1c: 4c 89 fe             	movq	%r15, %rsi
ffffffff8000cc1f: e8 3c 47 ff ff       	callq	0xffffffff80001360 <taos::memory::paging::map_kernel_frame::hd0419d03bd944108>
ffffffff8000cc24: 48 89 c3             	movq	%rax, %rbx
ffffffff8000cc27: 41 0f b6 55 1b       	movzbl	0x1b(%r13), %edx
ffffffff8000cc2c: 83 fa 1f             	cmpl	$0x1f, %edx
ffffffff8000cc2f: 0f 87 c3 03 00 00    	ja	0xffffffff8000cff8 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x578>
ffffffff8000cc35: 41 0f b6 75 1a       	movzbl	0x1a(%r13), %esi
ffffffff8000cc3a: 41 0f b7 4d 18       	movzwl	0x18(%r13), %ecx
ffffffff8000cc3f: 83 c9 06             	orl	$0x6, %ecx
ffffffff8000cc42: 40 b7 01             	movb	$0x1, %dil
ffffffff8000cc45: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff8000cc50: 31 c0                	xorl	%eax, %eax
ffffffff8000cc52: f0                   	lock
ffffffff8000cc53: 40 0f b0 3d 15 96 01 00      	cmpxchgb	%dil, 0x19615(%rip) # 0xffffffff80026270 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.16693732038470628512>
ffffffff8000cc5b: 75 05                	jne	0xffffffff8000cc62 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x1e2>
ffffffff8000cc5d: eb 10                	jmp	0xffffffff8000cc6f <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x1ef>
ffffffff8000cc5f: 90                   	nop
ffffffff8000cc60: f3 90                	pause
ffffffff8000cc62: 0f b6 05 07 96 01 00 	movzbl	0x19607(%rip), %eax     # 0xffffffff80026270 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.16693732038470628512>
ffffffff8000cc69: 84 c0                	testb	%al, %al
ffffffff8000cc6b: 75 f3                	jne	0xffffffff8000cc60 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x1e0>
ffffffff8000cc6d: eb e1                	jmp	0xffffffff8000cc50 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x1d0>
ffffffff8000cc6f: c1 e2 0b             	shll	$0xb, %edx
ffffffff8000cc72: c1 e6 10             	shll	$0x10, %esi
ffffffff8000cc75: 8d 04 16             	leal	(%rsi,%rdx), %eax
ffffffff8000cc78: 05 04 00 00 80       	addl	$0x80000004, %eax       # imm = 0x80000004
ffffffff8000cc7d: c6 05 ec 95 01 00 00 	movb	$0x0, 0x195ec(%rip)     # 0xffffffff80026270 <taos::devices::pci::PCI_LOCK::hfa1e990b83ae73c5.llvm.16693732038470628512>
ffffffff8000cc84: 66 ba f8 0c          	movw	$0xcf8, %dx             # imm = 0xCF8
ffffffff8000cc88: ef                   	outl	%eax, %dx
ffffffff8000cc89: 66 ba fc 0c          	movw	$0xcfc, %dx             # imm = 0xCFC
ffffffff8000cc8d: ed                   	inl	%dx, %eax
ffffffff8000cc8e: 25 00 00 ff ff       	andl	$0xffff0000, %eax       # imm = 0xFFFF0000
ffffffff8000cc93: 09 c8                	orl	%ecx, %eax
ffffffff8000cc95: ef                   	outl	%eax, %dx
ffffffff8000cc96: 66 ba f8 0c          	movw	$0xcf8, %dx             # imm = 0xCF8
ffffffff8000cc9a: 31 c0                	xorl	%eax, %eax
ffffffff8000cc9c: ef                   	outl	%eax, %dx
ffffffff8000cc9d: 4c 8b 73 40          	movq	0x40(%rbx), %r14
ffffffff8000cca1: 4c 89 74 24 40       	movq	%r14, 0x40(%rsp)
ffffffff8000cca6: 48 89 5c 24 48       	movq	%rbx, 0x48(%rsp)
ffffffff8000ccab: c6 43 2f 01          	movb	$0x1, 0x2f(%rbx)
ffffffff8000ccaf: b8 e8 03 00 00       	movl	$0x3e8, %eax            # imm = 0x3E8
ffffffff8000ccb4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
ffffffff8000ccc0: f6 43 2f 01          	testb	$0x1, 0x2f(%rbx)
ffffffff8000ccc4: 74 28                	je	0xffffffff8000ccee <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x26e>
ffffffff8000ccc6: f3 90                	pause
ffffffff8000ccc8: f6 43 2f 01          	testb	$0x1, 0x2f(%rbx)
ffffffff8000cccc: 74 20                	je	0xffffffff8000ccee <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x26e>
ffffffff8000ccce: f3 90                	pause
ffffffff8000ccd0: f6 43 2f 01          	testb	$0x1, 0x2f(%rbx)
ffffffff8000ccd4: 74 18                	je	0xffffffff8000ccee <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x26e>
ffffffff8000ccd6: f3 90                	pause
ffffffff8000ccd8: f6 43 2f 01          	testb	$0x1, 0x2f(%rbx)
ffffffff8000ccdc: 74 10                	je	0xffffffff8000ccee <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x26e>
ffffffff8000ccde: f3 90                	pause
ffffffff8000cce0: 48 83 c0 fc          	addq	$-0x4, %rax
ffffffff8000cce4: 75 da                	jne	0xffffffff8000ccc0 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x240>
ffffffff8000cce6: 40 b5 02             	movb	$0x2, %bpl
ffffffff8000cce9: e9 dc 02 00 00       	jmp	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000ccee: 66 c7 43 34 ff 01    	movw	$0x1ff, 0x34(%rbx)      # imm = 0x1FF
ffffffff8000ccf4: 40 b5 05             	movb	$0x5, %bpl
ffffffff8000ccf7: 66 83 7b 32 00       	cmpw	$0x0, 0x32(%rbx)
ffffffff8000ccfc: 0f 85 c8 02 00 00    	jne	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000cd02: 8b 43 24             	movl	0x24(%rbx), %eax
ffffffff8000cd05: a8 03                	testb	$0x3, %al
ffffffff8000cd07: 0f 84 9e 01 00 00    	je	0xffffffff8000ceab <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x42b>
ffffffff8000cd0d: 31 ed                	xorl	%ebp, %ebp
ffffffff8000cd0f: e9 b6 02 00 00       	jmp	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000cd14: 4c 8b bc 24 20 01 00 00      	movq	0x120(%rsp), %r15
ffffffff8000cd1c: 48 85 c0             	testq	%rax, %rax
ffffffff8000cd1f: 0f 84 ca 00 00 00    	je	0xffffffff8000cdef <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x36f>
ffffffff8000cd25: 4d 8d 66 08          	leaq	0x8(%r14), %r12
ffffffff8000cd29: 83 f8 01             	cmpl	$0x1, %eax
ffffffff8000cd2c: 0f 85 f3 00 00 00    	jne	0xffffffff8000ce25 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x3a5>
ffffffff8000cd32: 48 89 d8             	movq	%rbx, %rax
ffffffff8000cd35: 48 c1 e8 27          	shrq	$0x27, %rax
ffffffff8000cd39: 25 ff 01 00 00       	andl	$0x1ff, %eax            # imm = 0x1FF
ffffffff8000cd3e: 49 8b 0e             	movq	(%r14), %rcx
ffffffff8000cd41: 48 8b 34 c1          	movq	(%rcx,%rax,8), %rsi
ffffffff8000cd45: 89 f0                	movl	%esi, %eax
ffffffff8000cd47: 25 81 00 00 00       	andl	$0x81, %eax
ffffffff8000cd4c: 40 b5 05             	movb	$0x5, %bpl
ffffffff8000cd4f: 83 f8 01             	cmpl	$0x1, %eax
ffffffff8000cd52: 0f 85 72 02 00 00    	jne	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000cd58: 48 b8 00 f0 ff ff ff ff 0f 00	movabsq	$0xffffffffff000, %rax # imm = 0xFFFFFFFFFF000
ffffffff8000cd62: 49 89 de             	movq	%rbx, %r14
ffffffff8000cd65: 49 c1 ee 1e          	shrq	$0x1e, %r14
ffffffff8000cd69: 48 21 c6             	andq	%rax, %rsi
ffffffff8000cd6c: 4c 89 e7             	movq	%r12, %rdi
ffffffff8000cd6f: e8 4c b3 00 00       	callq	0xffffffff800180c0 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>
ffffffff8000cd74: 41 81 e6 ff 01 00 00 	andl	$0x1ff, %r14d           # imm = 0x1FF
ffffffff8000cd7b: 4a 8b 34 f0          	movq	(%rax,%r14,8), %rsi
ffffffff8000cd7f: 89 f0                	movl	%esi, %eax
ffffffff8000cd81: 25 81 00 00 00       	andl	$0x81, %eax
ffffffff8000cd86: 83 f8 01             	cmpl	$0x1, %eax
ffffffff8000cd89: 0f 85 3b 02 00 00    	jne	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000cd8f: 49 89 de             	movq	%rbx, %r14
ffffffff8000cd92: 49 c1 ee 15          	shrq	$0x15, %r14
ffffffff8000cd96: 48 b8 00 f0 ff ff ff ff 0f 00	movabsq	$0xffffffffff000, %rax # imm = 0xFFFFFFFFFF000
ffffffff8000cda0: 48 21 c6             	andq	%rax, %rsi
ffffffff8000cda3: 4c 89 e7             	movq	%r12, %rdi
ffffffff8000cda6: e8 15 b3 00 00       	callq	0xffffffff800180c0 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>
ffffffff8000cdab: 41 81 e6 ff 01 00 00 	andl	$0x1ff, %r14d           # imm = 0x1FF
ffffffff8000cdb2: 44 89 f1             	movl	%r14d, %ecx
ffffffff8000cdb5: 48 8b 0c c8          	movq	(%rax,%rcx,8), %rcx
ffffffff8000cdb9: 48 85 c9             	testq	%rcx, %rcx
ffffffff8000cdbc: 0f 84 08 02 00 00    	je	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000cdc2: 48 89 da             	movq	%rbx, %rdx
ffffffff8000cdc5: 48 81 e2 00 00 e0 ff 	andq	$-0x200000, %rdx        # imm = 0xFFE00000
ffffffff8000cdcc: 48 be 00 f0 ff ff ff ff 0f 00	movabsq	$0xffffffffff000, %rsi # imm = 0xFFFFFFFFFF000
ffffffff8000cdd6: 48 21 f1             	andq	%rsi, %rcx
ffffffff8000cdd9: 49 09 cf             	orq	%rcx, %r15
ffffffff8000cddc: 49 81 cf 92 00 00 00 	orq	$0x92, %r15
ffffffff8000cde3: 4e 89 3c f0          	movq	%r15, (%rax,%r14,8)
ffffffff8000cde7: 0f 01 3a             	invlpg	(%rdx)
ffffffff8000cdea: e9 38 fe ff ff       	jmp	0xffffffff8000cc27 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x1a7>
ffffffff8000cdef: 48 89 da             	movq	%rbx, %rdx
ffffffff8000cdf2: 48 81 e2 00 f0 ff ff 	andq	$-0x1000, %rdx          # imm = 0xF000
ffffffff8000cdf9: 49 83 cf 12          	orq	$0x12, %r15
ffffffff8000cdfd: 48 89 e7             	movq	%rsp, %rdi
ffffffff8000ce00: 4c 89 f6             	movq	%r14, %rsi
ffffffff8000ce03: 4c 89 f9             	movq	%r15, %rcx
ffffffff8000ce06: e8 c5 24 00 00       	callq	0xffffffff8000f2d0 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf>
ffffffff8000ce0b: 80 3c 24 00          	cmpb	$0x0, (%rsp)
ffffffff8000ce0f: 40 b5 05             	movb	$0x5, %bpl
ffffffff8000ce12: 0f 85 b2 01 00 00    	jne	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000ce18: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff8000ce1d: 0f 01 38             	invlpg	(%rax)
ffffffff8000ce20: e9 02 fe ff ff       	jmp	0xffffffff8000cc27 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x1a7>
ffffffff8000ce25: 48 89 d8             	movq	%rbx, %rax
ffffffff8000ce28: 48 c1 e8 27          	shrq	$0x27, %rax
ffffffff8000ce2c: 25 ff 01 00 00       	andl	$0x1ff, %eax            # imm = 0x1FF
ffffffff8000ce31: 49 8b 0e             	movq	(%r14), %rcx
ffffffff8000ce34: 48 8b 34 c1          	movq	(%rcx,%rax,8), %rsi
ffffffff8000ce38: 89 f0                	movl	%esi, %eax
ffffffff8000ce3a: 25 81 00 00 00       	andl	$0x81, %eax
ffffffff8000ce3f: 40 b5 05             	movb	$0x5, %bpl
ffffffff8000ce42: 83 f8 01             	cmpl	$0x1, %eax
ffffffff8000ce45: 0f 85 7f 01 00 00    	jne	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000ce4b: 48 b8 00 f0 ff ff ff ff 0f 00	movabsq	$0xffffffffff000, %rax # imm = 0xFFFFFFFFFF000
ffffffff8000ce55: 49 89 de             	movq	%rbx, %r14
ffffffff8000ce58: 49 c1 ee 1e          	shrq	$0x1e, %r14
ffffffff8000ce5c: 48 21 c6             	andq	%rax, %rsi
ffffffff8000ce5f: 4c 89 e7             	movq	%r12, %rdi
ffffffff8000ce62: e8 59 b2 00 00       	callq	0xffffffff800180c0 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>
ffffffff8000ce67: 41 81 e6 ff 01 00 00 	andl	$0x1ff, %r14d           # imm = 0x1FF
ffffffff8000ce6e: 44 89 f1             	movl	%r14d, %ecx
ffffffff8000ce71: 48 8b 0c c8          	movq	(%rax,%rcx,8), %rcx
ffffffff8000ce75: 48 85 c9             	testq	%rcx, %rcx
ffffffff8000ce78: 0f 84 4c 01 00 00    	je	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000ce7e: 48 89 da             	movq	%rbx, %rdx
ffffffff8000ce81: 48 81 e2 00 00 00 c0 	andq	$-0x40000000, %rdx      # imm = 0xC0000000
ffffffff8000ce88: 48 be 00 f0 ff ff ff ff 0f 00	movabsq	$0xffffffffff000, %rsi # imm = 0xFFFFFFFFFF000
ffffffff8000ce92: 48 21 f1             	andq	%rsi, %rcx
ffffffff8000ce95: 49 09 cf             	orq	%rcx, %r15
ffffffff8000ce98: 49 81 cf 92 00 00 00 	orq	$0x92, %r15
ffffffff8000ce9f: 4e 89 3c f0          	movq	%r15, (%rax,%r14,8)
ffffffff8000cea3: 0f 01 3a             	invlpg	(%rdx)
ffffffff8000cea6: e9 7c fd ff ff       	jmp	0xffffffff8000cc27 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x1a7>
ffffffff8000ceab: a9 fc ff ff f7       	testl	$0xf7fffffc, %eax       # imm = 0xF7FFFFFC
ffffffff8000ceb0: 0f 84 11 01 00 00    	je	0xffffffff8000cfc7 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x547>
ffffffff8000ceb6: 66 c7 43 36 fb 00    	movw	$0xfb, 0x36(%rbx)
ffffffff8000cebc: 66 83 7b 32 00       	cmpw	$0x0, 0x32(%rbx)
ffffffff8000cec1: 0f 85 03 01 00 00    	jne	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000cec7: 8b 43 24             	movl	0x24(%rbx), %eax
ffffffff8000ceca: a8 03                	testb	$0x3, %al
ffffffff8000cecc: 0f 85 3b fe ff ff    	jne	0xffffffff8000cd0d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000ced2: a9 fc ff ff f7       	testl	$0xf7fffffc, %eax       # imm = 0xF7FFFFFC
ffffffff8000ced7: 0f 84 ea 00 00 00    	je	0xffffffff8000cfc7 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x547>
ffffffff8000cedd: 66 c7 43 38 ff 01    	movw	$0x1ff, 0x38(%rbx)      # imm = 0x1FF
ffffffff8000cee3: 66 83 7b 32 00       	cmpw	$0x0, 0x32(%rbx)
ffffffff8000cee8: 0f 85 dc 00 00 00    	jne	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000ceee: 8b 43 24             	movl	0x24(%rbx), %eax
ffffffff8000cef1: a8 03                	testb	$0x3, %al
ffffffff8000cef3: 0f 85 14 fe ff ff    	jne	0xffffffff8000cd0d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000cef9: a9 fc ff ff f7       	testl	$0xf7fffffc, %eax       # imm = 0xF7FFFFFC
ffffffff8000cefe: 0f 84 c3 00 00 00    	je	0xffffffff8000cfc7 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x547>
ffffffff8000cf04: 66 c7 43 3a fb 00    	movw	$0xfb, 0x3a(%rbx)
ffffffff8000cf0a: 66 83 7b 32 00       	cmpw	$0x0, 0x32(%rbx)
ffffffff8000cf0f: 0f 85 b5 00 00 00    	jne	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000cf15: 8b 43 24             	movl	0x24(%rbx), %eax
ffffffff8000cf18: a8 03                	testb	$0x3, %al
ffffffff8000cf1a: 0f 85 ed fd ff ff    	jne	0xffffffff8000cd0d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000cf20: a9 fc ff ff f7       	testl	$0xf7fffffc, %eax       # imm = 0xF7FFFFFC
ffffffff8000cf25: 0f 84 9c 00 00 00    	je	0xffffffff8000cfc7 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x547>
ffffffff8000cf2b: c6 43 29 00          	movb	$0x0, 0x29(%rbx)
ffffffff8000cf2f: b0 0e                	movb	$0xe, %al
ffffffff8000cf31: 41 f7 c6 00 00 00 01 	testl	$0x1000000, %r14d       # imm = 0x1000000
ffffffff8000cf38: 75 19                	jne	0xffffffff8000cf53 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x4d3>
ffffffff8000cf3a: b0 0a                	movb	$0xa, %al
ffffffff8000cf3c: 41 f7 c6 00 00 00 04 	testl	$0x4000000, %r14d       # imm = 0x4000000
ffffffff8000cf43: 75 0e                	jne	0xffffffff8000cf53 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x4d3>
ffffffff8000cf45: b0 0c                	movb	$0xc, %al
ffffffff8000cf47: 40 b5 04             	movb	$0x4, %bpl
ffffffff8000cf4a: 41 f7 c6 00 00 00 02 	testl	$0x2000000, %r14d       # imm = 0x2000000
ffffffff8000cf51: 74 77                	je	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000cf53: 88 43 29             	movb	%al, 0x29(%rbx)
ffffffff8000cf56: 0c 01                	orb	$0x1, %al
ffffffff8000cf58: 88 43 29             	movb	%al, 0x29(%rbx)
ffffffff8000cf5b: 0f b7 43 2c          	movzwl	0x2c(%rbx), %eax
ffffffff8000cf5f: 89 c1                	movl	%eax, %ecx
ffffffff8000cf61: 83 e1 fe             	andl	$-0x2, %ecx
ffffffff8000cf64: 66 89 4b 2c          	movw	%cx, 0x2c(%rbx)
ffffffff8000cf68: 25 fe 00 00 00       	andl	$0xfe, %eax
ffffffff8000cf6d: 8d 88 00 80 00 00    	leal	0x8000(%rax), %ecx
ffffffff8000cf73: 66 89 4b 2c          	movw	%cx, 0x2c(%rbx)
ffffffff8000cf77: 89 c1                	movl	%eax, %ecx
ffffffff8000cf79: 81 c9 01 80 00 00    	orl	$0x8001, %ecx           # imm = 0x8001
ffffffff8000cf7f: 66 89 4b 2c          	movw	%cx, 0x2c(%rbx)
ffffffff8000cf83: b9 e8 03 00 00       	movl	$0x3e8, %ecx            # imm = 0x3E8
ffffffff8000cf88: 0f b7 53 2c          	movzwl	0x2c(%rbx), %edx
ffffffff8000cf8c: f6 c2 02             	testb	$0x2, %dl
ffffffff8000cf8f: 0f 85 93 00 00 00    	jne	0xffffffff8000d028 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5a8>
ffffffff8000cf95: f3 90                	pause
ffffffff8000cf97: 0f b7 53 2c          	movzwl	0x2c(%rbx), %edx
ffffffff8000cf9b: f6 c2 02             	testb	$0x2, %dl
ffffffff8000cf9e: 0f 85 84 00 00 00    	jne	0xffffffff8000d028 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5a8>
ffffffff8000cfa4: f3 90                	pause
ffffffff8000cfa6: 0f b7 53 2c          	movzwl	0x2c(%rbx), %edx
ffffffff8000cfaa: f6 c2 02             	testb	$0x2, %dl
ffffffff8000cfad: 75 79                	jne	0xffffffff8000d028 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5a8>
ffffffff8000cfaf: f3 90                	pause
ffffffff8000cfb1: 0f b7 53 2c          	movzwl	0x2c(%rbx), %edx
ffffffff8000cfb5: f6 c2 02             	testb	$0x2, %dl
ffffffff8000cfb8: 75 6e                	jne	0xffffffff8000d028 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5a8>
ffffffff8000cfba: f3 90                	pause
ffffffff8000cfbc: 40 b5 02             	movb	$0x2, %bpl
ffffffff8000cfbf: 48 83 c1 fc          	addq	$-0x4, %rcx
ffffffff8000cfc3: 75 c3                	jne	0xffffffff8000cf88 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x508>
ffffffff8000cfc5: eb 03                	jmp	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000cfc7: 40 b5 01             	movb	$0x1, %bpl
ffffffff8000cfca: 41 c6 45 10 00       	movb	$0x0, 0x10(%r13)
ffffffff8000cfcf: 48 8b 44 24 38       	movq	0x38(%rsp), %rax
ffffffff8000cfd4: f0                   	lock
ffffffff8000cfd5: 48 ff 08             	decq	(%rax)
ffffffff8000cfd8: 75 0a                	jne	0xffffffff8000cfe4 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x564>
ffffffff8000cfda: 48 8d 7c 24 38       	leaq	0x38(%rsp), %rdi
ffffffff8000cfdf: e8 3c f0 ff ff       	callq	0xffffffff8000c020 <alloc::sync::Arc<T,A>::drop_slow::h8360a5d89533dd40>
ffffffff8000cfe4: 89 e8                	movl	%ebp, %eax
ffffffff8000cfe6: 48 81 c4 b8 01 00 00 	addq	$0x1b8, %rsp            # imm = 0x1B8
ffffffff8000cfed: 5b                   	popq	%rbx
ffffffff8000cfee: 41 5c                	popq	%r12
ffffffff8000cff0: 41 5d                	popq	%r13
ffffffff8000cff2: 41 5e                	popq	%r14
ffffffff8000cff4: 41 5f                	popq	%r15
ffffffff8000cff6: 5d                   	popq	%rbp
ffffffff8000cff7: c3                   	retq
ffffffff8000cff8: be 1d 00 00 00       	movl	$0x1d, %esi
ffffffff8000cffd: 48 c7 c7 e2 e8 01 80 	movq	$-0x7ffe171e, %rdi      # imm = 0x8001E8E2
ffffffff8000d004: 48 c7 c2 00 e9 01 80 	movq	$-0x7ffe1700, %rdx      # imm = 0x8001E900
ffffffff8000d00b: e8 60 f4 00 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000d010: be 36 00 00 00       	movl	$0x36, %esi
ffffffff8000d015: 48 c7 c7 fe f1 01 80 	movq	$-0x7ffe0e02, %rdi      # imm = 0x8001F1FE
ffffffff8000d01c: 48 c7 c2 98 f2 01 80 	movq	$-0x7ffe0d68, %rdx      # imm = 0x8001F298
ffffffff8000d023: e8 48 f4 00 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000d028: 0f b7 c0             	movzwl	%ax, %eax
ffffffff8000d02b: 0d 07 80 00 00       	orl	$0x8007, %eax           # imm = 0x8007
ffffffff8000d030: 66 89 43 2c          	movw	%ax, 0x2c(%rbx)
ffffffff8000d034: c6 43 2e 0e          	movb	$0xe, 0x2e(%rbx)
ffffffff8000d038: 66 83 7b 32 00       	cmpw	$0x0, 0x32(%rbx)
ffffffff8000d03d: 40 b5 05             	movb	$0x5, %bpl
ffffffff8000d040: 75 88                	jne	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000d042: 8b 43 24             	movl	0x24(%rbx), %eax
ffffffff8000d045: a8 03                	testb	$0x3, %al
ffffffff8000d047: 0f 85 c0 fc ff ff    	jne	0xffffffff8000cd0d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000d04d: 40 b5 01             	movb	$0x1, %bpl
ffffffff8000d050: a9 fc ff ff f7       	testl	$0xf7fffffc, %eax       # imm = 0xF7FFFFFC
ffffffff8000d055: 0f 84 6f ff ff ff    	je	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000d05b: c7 43 08 00 00 00 00 	movl	$0x0, 0x8(%rbx)
ffffffff8000d062: 66 83 7b 32 00       	cmpw	$0x0, 0x32(%rbx)
ffffffff8000d067: 74 0a                	je	0xffffffff8000d073 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5f3>
ffffffff8000d069: 40 b5 05             	movb	$0x5, %bpl
ffffffff8000d06c: e9 59 ff ff ff       	jmp	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000d071: 0f 0b                	ud2
ffffffff8000d073: 8b 43 24             	movl	0x24(%rbx), %eax
ffffffff8000d076: a8 03                	testb	$0x3, %al
ffffffff8000d078: 0f 85 8f fc ff ff    	jne	0xffffffff8000cd0d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000d07e: 40 b5 01             	movb	$0x1, %bpl
ffffffff8000d081: a9 fc ff ff f7       	testl	$0xf7fffffc, %eax       # imm = 0xF7FFFFFC
ffffffff8000d086: 0f 84 3e ff ff ff    	je	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000d08c: 66 83 7b 32 00       	cmpw	$0x0, 0x32(%rbx)
ffffffff8000d091: 75 d6                	jne	0xffffffff8000d069 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000d093: 8b 43 24             	movl	0x24(%rbx), %eax
ffffffff8000d096: a8 03                	testb	$0x3, %al
ffffffff8000d098: 0f 85 6f fc ff ff    	jne	0xffffffff8000cd0d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000d09e: a9 fc ff ff f7       	testl	$0xf7fffffc, %eax       # imm = 0xF7FFFFFC
ffffffff8000d0a3: 0f 84 21 ff ff ff    	je	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000d0a9: 66 c7 43 0e 00 00    	movw	$0x0, 0xe(%rbx)
ffffffff8000d0af: 66 83 7b 32 00       	cmpw	$0x0, 0x32(%rbx)
ffffffff8000d0b4: 75 b3                	jne	0xffffffff8000d069 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000d0b6: b8 ec 03 00 00       	movl	$0x3ec, %eax            # imm = 0x3EC
ffffffff8000d0bb: 48 83 c0 fc          	addq	$-0x4, %rax
ffffffff8000d0bf: 0f 84 51 04 00 00    	je	0xffffffff8000d516 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xa96>
ffffffff8000d0c5: 0f b7 4b 30          	movzwl	0x30(%rbx), %ecx
ffffffff8000d0c9: f6 c1 01             	testb	$0x1, %cl
ffffffff8000d0cc: 75 1b                	jne	0xffffffff8000d0e9 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x669>
ffffffff8000d0ce: 0f b7 4b 30          	movzwl	0x30(%rbx), %ecx
ffffffff8000d0d2: f6 c1 01             	testb	$0x1, %cl
ffffffff8000d0d5: 75 12                	jne	0xffffffff8000d0e9 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x669>
ffffffff8000d0d7: 0f b7 4b 30          	movzwl	0x30(%rbx), %ecx
ffffffff8000d0db: f6 c1 01             	testb	$0x1, %cl
ffffffff8000d0de: 75 09                	jne	0xffffffff8000d0e9 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x669>
ffffffff8000d0e0: 0f b7 4b 30          	movzwl	0x30(%rbx), %ecx
ffffffff8000d0e4: f6 c1 01             	testb	$0x1, %cl
ffffffff8000d0e7: 74 d2                	je	0xffffffff8000d0bb <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x63b>
ffffffff8000d0e9: 66 c7 43 30 01 00    	movw	$0x1, 0x30(%rbx)
ffffffff8000d0ef: c7 43 08 aa 01 00 00 	movl	$0x1aa, 0x8(%rbx)       # imm = 0x1AA
ffffffff8000d0f6: 66 83 7b 32 00       	cmpw	$0x0, 0x32(%rbx)
ffffffff8000d0fb: 0f 85 68 ff ff ff    	jne	0xffffffff8000d069 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000d101: 8b 43 24             	movl	0x24(%rbx), %eax
ffffffff8000d104: a8 03                	testb	$0x3, %al
ffffffff8000d106: 0f 85 01 fc ff ff    	jne	0xffffffff8000cd0d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000d10c: a9 fc ff ff f7       	testl	$0xf7fffffc, %eax       # imm = 0xF7FFFFFC
ffffffff8000d111: 0f 84 b3 fe ff ff    	je	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000d117: 66 83 7b 32 00       	cmpw	$0x0, 0x32(%rbx)
ffffffff8000d11c: 0f 85 47 ff ff ff    	jne	0xffffffff8000d069 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000d122: 8b 43 24             	movl	0x24(%rbx), %eax
ffffffff8000d125: a8 03                	testb	$0x3, %al
ffffffff8000d127: 0f 85 e0 fb ff ff    	jne	0xffffffff8000cd0d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000d12d: a9 fc ff ff f7       	testl	$0xf7fffffc, %eax       # imm = 0xF7FFFFFC
ffffffff8000d132: 0f 84 92 fe ff ff    	je	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000d138: 66 c7 43 0e 1a 08    	movw	$0x81a, 0xe(%rbx)       # imm = 0x81A
ffffffff8000d13e: 66 83 7b 32 00       	cmpw	$0x0, 0x32(%rbx)
ffffffff8000d143: 0f 85 20 ff ff ff    	jne	0xffffffff8000d069 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000d149: b8 ec 03 00 00       	movl	$0x3ec, %eax            # imm = 0x3EC
ffffffff8000d14e: 48 83 c0 fc          	addq	$-0x4, %rax
ffffffff8000d152: 0f 84 be 03 00 00    	je	0xffffffff8000d516 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xa96>
ffffffff8000d158: 0f b7 4b 30          	movzwl	0x30(%rbx), %ecx
ffffffff8000d15c: f6 c1 01             	testb	$0x1, %cl
ffffffff8000d15f: 75 1b                	jne	0xffffffff8000d17c <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x6fc>
ffffffff8000d161: 0f b7 4b 30          	movzwl	0x30(%rbx), %ecx
ffffffff8000d165: f6 c1 01             	testb	$0x1, %cl
ffffffff8000d168: 75 12                	jne	0xffffffff8000d17c <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x6fc>
ffffffff8000d16a: 0f b7 4b 30          	movzwl	0x30(%rbx), %ecx
ffffffff8000d16e: f6 c1 01             	testb	$0x1, %cl
ffffffff8000d171: 75 09                	jne	0xffffffff8000d17c <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x6fc>
ffffffff8000d173: 0f b7 4b 30          	movzwl	0x30(%rbx), %ecx
ffffffff8000d177: f6 c1 01             	testb	$0x1, %cl
ffffffff8000d17a: 74 d2                	je	0xffffffff8000d14e <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x6ce>
ffffffff8000d17c: 66 c7 43 30 01 00    	movw	$0x1, 0x30(%rbx)
ffffffff8000d182: c7 43 08 00 00 00 00 	movl	$0x0, 0x8(%rbx)
ffffffff8000d189: 66 83 7b 32 00       	cmpw	$0x0, 0x32(%rbx)
ffffffff8000d18e: 0f 85 d5 fe ff ff    	jne	0xffffffff8000d069 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000d194: 8b 43 24             	movl	0x24(%rbx), %eax
ffffffff8000d197: a8 03                	testb	$0x3, %al
ffffffff8000d199: 0f 85 6e fb ff ff    	jne	0xffffffff8000cd0d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000d19f: a9 fc ff ff f7       	testl	$0xf7fffffc, %eax       # imm = 0xF7FFFFFC
ffffffff8000d1a4: 0f 84 20 fe ff ff    	je	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000d1aa: 66 83 7b 32 00       	cmpw	$0x0, 0x32(%rbx)
ffffffff8000d1af: 0f 85 b4 fe ff ff    	jne	0xffffffff8000d069 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000d1b5: 8b 43 24             	movl	0x24(%rbx), %eax
ffffffff8000d1b8: a8 03                	testb	$0x3, %al
ffffffff8000d1ba: 0f 85 4d fb ff ff    	jne	0xffffffff8000cd0d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000d1c0: a9 fc ff ff f7       	testl	$0xf7fffffc, %eax       # imm = 0xF7FFFFFC
ffffffff8000d1c5: 0f 84 ff fd ff ff    	je	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000d1cb: 66 c7 43 0e 1a 37    	movw	$0x371a, 0xe(%rbx)      # imm = 0x371A
ffffffff8000d1d1: 66 83 7b 32 00       	cmpw	$0x0, 0x32(%rbx)
ffffffff8000d1d6: 0f 85 8d fe ff ff    	jne	0xffffffff8000d069 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000d1dc: b8 ec 03 00 00       	movl	$0x3ec, %eax            # imm = 0x3EC
ffffffff8000d1e1: 48 83 c0 fc          	addq	$-0x4, %rax
ffffffff8000d1e5: 0f 84 2b 03 00 00    	je	0xffffffff8000d516 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xa96>
ffffffff8000d1eb: 0f b7 4b 30          	movzwl	0x30(%rbx), %ecx
ffffffff8000d1ef: f6 c1 01             	testb	$0x1, %cl
ffffffff8000d1f2: 75 1b                	jne	0xffffffff8000d20f <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x78f>
ffffffff8000d1f4: 0f b7 4b 30          	movzwl	0x30(%rbx), %ecx
ffffffff8000d1f8: f6 c1 01             	testb	$0x1, %cl
ffffffff8000d1fb: 75 12                	jne	0xffffffff8000d20f <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x78f>
ffffffff8000d1fd: 0f b7 4b 30          	movzwl	0x30(%rbx), %ecx
ffffffff8000d201: f6 c1 01             	testb	$0x1, %cl
ffffffff8000d204: 75 09                	jne	0xffffffff8000d20f <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x78f>
ffffffff8000d206: 0f b7 4b 30          	movzwl	0x30(%rbx), %ecx
ffffffff8000d20a: f6 c1 01             	testb	$0x1, %cl
ffffffff8000d20d: 74 d2                	je	0xffffffff8000d1e1 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x761>
ffffffff8000d20f: 66 c7 43 30 01 00    	movw	$0x1, 0x30(%rbx)
ffffffff8000d215: 8b 43 10             	movl	0x10(%rbx), %eax
ffffffff8000d218: 66 83 7b 32 00       	cmpw	$0x0, 0x32(%rbx)
ffffffff8000d21d: 0f 85 46 fe ff ff    	jne	0xffffffff8000d069 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000d223: 8b 43 24             	movl	0x24(%rbx), %eax
ffffffff8000d226: a8 03                	testb	$0x3, %al
ffffffff8000d228: 0f 85 df fa ff ff    	jne	0xffffffff8000cd0d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000d22e: a9 fc ff ff f7       	testl	$0xf7fffffc, %eax       # imm = 0xF7FFFFFC
ffffffff8000d233: 0f 84 91 fd ff ff    	je	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000d239: 66 83 7b 32 00       	cmpw	$0x0, 0x32(%rbx)
ffffffff8000d23e: 0f 85 25 fe ff ff    	jne	0xffffffff8000d069 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000d244: 8b 43 24             	movl	0x24(%rbx), %eax
ffffffff8000d247: a8 03                	testb	$0x3, %al
ffffffff8000d249: 0f 85 be fa ff ff    	jne	0xffffffff8000cd0d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000d24f: a9 fc ff ff f7       	testl	$0xf7fffffc, %eax       # imm = 0xF7FFFFFC
ffffffff8000d254: 0f 84 70 fd ff ff    	je	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000d25a: 66 c7 43 0e 02 29    	movw	$0x2902, 0xe(%rbx)      # imm = 0x2902
ffffffff8000d260: 66 83 7b 32 00       	cmpw	$0x0, 0x32(%rbx)
ffffffff8000d265: 0f 85 fe fd ff ff    	jne	0xffffffff8000d069 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000d26b: b8 ec 03 00 00       	movl	$0x3ec, %eax            # imm = 0x3EC
ffffffff8000d270: 48 83 c0 fc          	addq	$-0x4, %rax
ffffffff8000d274: 0f 84 9c 02 00 00    	je	0xffffffff8000d516 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xa96>
ffffffff8000d27a: 0f b7 4b 30          	movzwl	0x30(%rbx), %ecx
ffffffff8000d27e: f6 c1 01             	testb	$0x1, %cl
ffffffff8000d281: 75 1b                	jne	0xffffffff8000d29e <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x81e>
ffffffff8000d283: 0f b7 4b 30          	movzwl	0x30(%rbx), %ecx
ffffffff8000d287: f6 c1 01             	testb	$0x1, %cl
ffffffff8000d28a: 75 12                	jne	0xffffffff8000d29e <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x81e>
ffffffff8000d28c: 0f b7 4b 30          	movzwl	0x30(%rbx), %ecx
ffffffff8000d290: f6 c1 01             	testb	$0x1, %cl
ffffffff8000d293: 75 09                	jne	0xffffffff8000d29e <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x81e>
ffffffff8000d295: 0f b7 4b 30          	movzwl	0x30(%rbx), %ecx
ffffffff8000d299: f6 c1 01             	testb	$0x1, %cl
ffffffff8000d29c: 74 d2                	je	0xffffffff8000d270 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x7f0>
ffffffff8000d29e: 66 c7 43 30 01 00    	movw	$0x1, 0x30(%rbx)
ffffffff8000d2a4: 8b 43 10             	movl	0x10(%rbx), %eax
ffffffff8000d2a7: c7 43 08 00 00 00 00 	movl	$0x0, 0x8(%rbx)
ffffffff8000d2ae: 66 83 7b 32 00       	cmpw	$0x0, 0x32(%rbx)
ffffffff8000d2b3: 0f 85 b0 fd ff ff    	jne	0xffffffff8000d069 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000d2b9: 8b 4b 24             	movl	0x24(%rbx), %ecx
ffffffff8000d2bc: f6 c1 03             	testb	$0x3, %cl
ffffffff8000d2bf: 0f 85 48 fa ff ff    	jne	0xffffffff8000cd0d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000d2c5: f7 c1 fc ff ff f7    	testl	$0xf7fffffc, %ecx       # imm = 0xF7FFFFFC
ffffffff8000d2cb: 0f 84 f9 fc ff ff    	je	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000d2d1: 66 83 7b 32 00       	cmpw	$0x0, 0x32(%rbx)
ffffffff8000d2d6: 0f 85 8d fd ff ff    	jne	0xffffffff8000d069 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000d2dc: 8b 4b 24             	movl	0x24(%rbx), %ecx
ffffffff8000d2df: f6 c1 03             	testb	$0x3, %cl
ffffffff8000d2e2: 0f 85 25 fa ff ff    	jne	0xffffffff8000cd0d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000d2e8: f7 c1 fc ff ff f7    	testl	$0xf7fffffc, %ecx       # imm = 0xF7FFFFFC
ffffffff8000d2ee: 0f 84 d6 fc ff ff    	je	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000d2f4: 66 c7 43 0e 00 00    	movw	$0x0, 0xe(%rbx)
ffffffff8000d2fa: 66 83 7b 32 00       	cmpw	$0x0, 0x32(%rbx)
ffffffff8000d2ff: 0f 85 64 fd ff ff    	jne	0xffffffff8000d069 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000d305: 44 0f b6 f8          	movzbl	%al, %r15d
ffffffff8000d309: b8 ec 03 00 00       	movl	$0x3ec, %eax            # imm = 0x3EC
ffffffff8000d30e: 48 83 c0 fc          	addq	$-0x4, %rax
ffffffff8000d312: 0f 84 fe 01 00 00    	je	0xffffffff8000d516 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xa96>
ffffffff8000d318: 0f b7 4b 30          	movzwl	0x30(%rbx), %ecx
ffffffff8000d31c: f6 c1 01             	testb	$0x1, %cl
ffffffff8000d31f: 75 1b                	jne	0xffffffff8000d33c <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x8bc>
ffffffff8000d321: 0f b7 4b 30          	movzwl	0x30(%rbx), %ecx
ffffffff8000d325: f6 c1 01             	testb	$0x1, %cl
ffffffff8000d328: 75 12                	jne	0xffffffff8000d33c <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x8bc>
ffffffff8000d32a: 0f b7 4b 30          	movzwl	0x30(%rbx), %ecx
ffffffff8000d32e: f6 c1 01             	testb	$0x1, %cl
ffffffff8000d331: 75 09                	jne	0xffffffff8000d33c <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x8bc>
ffffffff8000d333: 0f b7 4b 30          	movzwl	0x30(%rbx), %ecx
ffffffff8000d337: f6 c1 01             	testb	$0x1, %cl
ffffffff8000d33a: 74 d2                	je	0xffffffff8000d30e <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x88e>
ffffffff8000d33c: 66 c7 43 30 01 00    	movw	$0x1, 0x30(%rbx)
ffffffff8000d342: c7 43 08 aa 01 00 00 	movl	$0x1aa, 0x8(%rbx)       # imm = 0x1AA
ffffffff8000d349: 66 83 7b 32 00       	cmpw	$0x0, 0x32(%rbx)
ffffffff8000d34e: 0f 85 15 fd ff ff    	jne	0xffffffff8000d069 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000d354: 8b 43 24             	movl	0x24(%rbx), %eax
ffffffff8000d357: a8 03                	testb	$0x3, %al
ffffffff8000d359: 0f 85 ae f9 ff ff    	jne	0xffffffff8000cd0d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000d35f: a9 fc ff ff f7       	testl	$0xf7fffffc, %eax       # imm = 0xF7FFFFFC
ffffffff8000d364: 0f 84 60 fc ff ff    	je	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000d36a: 66 83 7b 32 00       	cmpw	$0x0, 0x32(%rbx)
ffffffff8000d36f: 0f 85 f4 fc ff ff    	jne	0xffffffff8000d069 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x5e9>
ffffffff8000d375: 8b 43 24             	movl	0x24(%rbx), %eax
ffffffff8000d378: a8 03                	testb	$0x3, %al
ffffffff8000d37a: 0f 85 8d f9 ff ff    	jne	0xffffffff8000cd0d <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x28d>
ffffffff8000d380: a9 fc ff ff f7       	testl	$0xf7fffffc, %eax       # imm = 0xF7FFFFFC
ffffffff8000d385: 0f 84 3f fc ff ff    	je	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000d38b: 66 c7 43 0e 1a 08    	movw	$0x81a, 0xe(%rbx)       # imm = 0x81A
ffffffff8000d391: 66 83 7b 32 00       	cmpw	$0x0, 0x32(%rbx)
ffffffff8000d396: 40 b5 05             	movb	$0x5, %bpl
ffffffff8000d399: 0f 85 2b fc ff ff    	jne	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000d39f: b8 ec 03 00 00       	movl	$0x3ec, %eax            # imm = 0x3EC
ffffffff8000d3a4: 48 83 c0 fc          	addq	$-0x4, %rax
ffffffff8000d3a8: 0f 84 68 01 00 00    	je	0xffffffff8000d516 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xa96>
ffffffff8000d3ae: 0f b7 4b 30          	movzwl	0x30(%rbx), %ecx
ffffffff8000d3b2: f6 c1 01             	testb	$0x1, %cl
ffffffff8000d3b5: 75 1b                	jne	0xffffffff8000d3d2 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x952>
ffffffff8000d3b7: 0f b7 4b 30          	movzwl	0x30(%rbx), %ecx
ffffffff8000d3bb: f6 c1 01             	testb	$0x1, %cl
ffffffff8000d3be: 75 12                	jne	0xffffffff8000d3d2 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x952>
ffffffff8000d3c0: 0f b7 4b 30          	movzwl	0x30(%rbx), %ecx
ffffffff8000d3c4: f6 c1 01             	testb	$0x1, %cl
ffffffff8000d3c7: 75 09                	jne	0xffffffff8000d3d2 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x952>
ffffffff8000d3c9: 0f b7 4b 30          	movzwl	0x30(%rbx), %ecx
ffffffff8000d3cd: f6 c1 01             	testb	$0x1, %cl
ffffffff8000d3d0: 74 d2                	je	0xffffffff8000d3a4 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x924>
ffffffff8000d3d2: 66 c7 43 30 01 00    	movw	$0x1, 0x30(%rbx)
ffffffff8000d3d8: c7 43 08 00 00 00 00 	movl	$0x0, 0x8(%rbx)
ffffffff8000d3df: 48 89 e7             	movq	%rsp, %rdi
ffffffff8000d3e2: 48 8d 74 24 40       	leaq	0x40(%rsp), %rsi
ffffffff8000d3e7: ba 37 00 00 00       	movl	$0x37, %edx
ffffffff8000d3ec: b9 02 00 00 00       	movl	$0x2, %ecx
ffffffff8000d3f1: e8 5a 04 00 00       	callq	0xffffffff8000d850 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec>
ffffffff8000d3f6: 83 3c 24 03          	cmpl	$0x3, (%rsp)
ffffffff8000d3fa: 0f 84 4c 02 00 00    	je	0xffffffff8000d64c <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xbcc>
ffffffff8000d400: 41 81 cf 00 00 40 00 	orl	$0x400000, %r15d        # imm = 0x400000
ffffffff8000d407: 44 89 7b 08          	movl	%r15d, 0x8(%rbx)
ffffffff8000d40b: 48 89 e7             	movq	%rsp, %rdi
ffffffff8000d40e: 48 8d 74 24 40       	leaq	0x40(%rsp), %rsi
ffffffff8000d413: ba 29 00 00 00       	movl	$0x29, %edx
ffffffff8000d418: b9 04 00 00 00       	movl	$0x4, %ecx
ffffffff8000d41d: e8 2e 04 00 00       	callq	0xffffffff8000d850 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec>
ffffffff8000d422: 83 3c 24 03          	cmpl	$0x3, (%rsp)
ffffffff8000d426: 0f 84 20 02 00 00    	je	0xffffffff8000d64c <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xbcc>
ffffffff8000d42c: c7 43 08 00 00 00 00 	movl	$0x0, 0x8(%rbx)
ffffffff8000d433: 48 89 e7             	movq	%rsp, %rdi
ffffffff8000d436: 48 8d 74 24 40       	leaq	0x40(%rsp), %rsi
ffffffff8000d43b: ba 02 00 00 00       	movl	$0x2, %edx
ffffffff8000d440: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff8000d445: e8 06 04 00 00       	callq	0xffffffff8000d850 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec>
ffffffff8000d44a: 83 3c 24 03          	cmpl	$0x3, (%rsp)
ffffffff8000d44e: 0f 84 f8 01 00 00    	je	0xffffffff8000d64c <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xbcc>
ffffffff8000d454: c7 43 08 00 00 00 00 	movl	$0x0, 0x8(%rbx)
ffffffff8000d45b: 48 89 e7             	movq	%rsp, %rdi
ffffffff8000d45e: 48 8d 74 24 40       	leaq	0x40(%rsp), %rsi
ffffffff8000d463: ba 03 00 00 00       	movl	$0x3, %edx
ffffffff8000d468: b9 08 00 00 00       	movl	$0x8, %ecx
ffffffff8000d46d: e8 de 03 00 00       	callq	0xffffffff8000d850 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec>
ffffffff8000d472: 8b 04 24             	movl	(%rsp), %eax
ffffffff8000d475: 0f b6 6c 24 04       	movzbl	0x4(%rsp), %ebp
ffffffff8000d47a: 83 f8 03             	cmpl	$0x3, %eax
ffffffff8000d47d: 0f 84 47 fb ff ff    	je	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000d483: 83 f8 01             	cmpl	$0x1, %eax
ffffffff8000d486: 0f 85 9f 00 00 00    	jne	0xffffffff8000d52b <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xaab>
ffffffff8000d48c: 40 0f b6 c5          	movzbl	%bpl, %eax
ffffffff8000d490: 0f b6 4c 24 07       	movzbl	0x7(%rsp), %ecx
ffffffff8000d495: c1 e1 10             	shll	$0x10, %ecx
ffffffff8000d498: 0f b7 6c 24 05       	movzwl	0x5(%rsp), %ebp
ffffffff8000d49d: 09 cd                	orl	%ecx, %ebp
ffffffff8000d49f: c1 e5 08             	shll	$0x8, %ebp
ffffffff8000d4a2: 09 c5                	orl	%eax, %ebp
ffffffff8000d4a4: 89 6b 08             	movl	%ebp, 0x8(%rbx)
ffffffff8000d4a7: 48 89 e7             	movq	%rsp, %rdi
ffffffff8000d4aa: 48 8d 74 24 40       	leaq	0x40(%rsp), %rsi
ffffffff8000d4af: ba 09 00 00 00       	movl	$0x9, %edx
ffffffff8000d4b4: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff8000d4b9: e8 92 03 00 00       	callq	0xffffffff8000d850 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec>
ffffffff8000d4be: 8b 04 24             	movl	(%rsp), %eax
ffffffff8000d4c1: 83 f8 02             	cmpl	$0x2, %eax
ffffffff8000d4c4: 0f 84 9c 00 00 00    	je	0xffffffff8000d566 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xae6>
ffffffff8000d4ca: 83 f8 03             	cmpl	$0x3, %eax
ffffffff8000d4cd: 0f 84 79 01 00 00    	je	0xffffffff8000d64c <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xbcc>
ffffffff8000d4d3: 45 31 f6             	xorl	%r14d, %r14d
ffffffff8000d4d6: e9 31 01 00 00       	jmp	0xffffffff8000d60c <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xb8c>
ffffffff8000d4db: 48 c7 04 24 d8 f2 01 80      	movq	$-0x7ffe0d28, (%rsp) # imm = 0x8001F2D8
ffffffff8000d4e3: 48 c7 44 24 08 01 00 00 00   	movq	$0x1, 0x8(%rsp)
ffffffff8000d4ec: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff8000d4f5: 48 c7 44 24 10 08 00 00 00   	movq	$0x8, 0x10(%rsp)
ffffffff8000d4fe: 48 c7 44 24 18 00 00 00 00   	movq	$0x0, 0x18(%rsp)
ffffffff8000d507: 48 89 e7             	movq	%rsp, %rdi
ffffffff8000d50a: 48 c7 c6 e8 f2 01 80 	movq	$-0x7ffe0d18, %rsi      # imm = 0x8001F2E8
ffffffff8000d511: e8 da ee 00 00       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8000d516: 31 c0                	xorl	%eax, %eax
ffffffff8000d518: 66 83 7b 32 00       	cmpw	$0x0, 0x32(%rbx)
ffffffff8000d51d: 0f 95 c0             	setne	%al
ffffffff8000d520: 8d 2c 40             	leal	(%rax,%rax,2), %ebp
ffffffff8000d523: 83 c5 02             	addl	$0x2, %ebp
ffffffff8000d526: e9 9f fa ff ff       	jmp	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000d52b: 48 c7 04 24 28 f3 01 80      	movq	$-0x7ffe0cd8, (%rsp) # imm = 0x8001F328
ffffffff8000d533: 48 c7 44 24 08 01 00 00 00   	movq	$0x1, 0x8(%rsp)
ffffffff8000d53c: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff8000d545: 48 c7 44 24 10 08 00 00 00   	movq	$0x8, 0x10(%rsp)
ffffffff8000d54e: 48 c7 44 24 18 00 00 00 00   	movq	$0x0, 0x18(%rsp)
ffffffff8000d557: 48 89 e7             	movq	%rsp, %rdi
ffffffff8000d55a: 48 c7 c6 38 f3 01 80 	movq	$-0x7ffe0cc8, %rsi      # imm = 0x8001F338
ffffffff8000d561: e8 8a ee 00 00       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8000d566: 4c 8b 4c 24 18       	movq	0x18(%rsp), %r9
ffffffff8000d56b: 4c 8b 44 24 10       	movq	0x10(%rsp), %r8
ffffffff8000d570: 48 89 e7             	movq	%rsp, %rdi
ffffffff8000d573: 4c 89 f6             	movq	%r14, %rsi
ffffffff8000d576: 48 89 da             	movq	%rbx, %rdx
ffffffff8000d579: 89 e9                	movl	%ebp, %ecx
ffffffff8000d57b: e8 50 02 00 00       	callq	0xffffffff8000d7d0 <taos::devices::sd_card::get_full_sd_card_info::hd19259c5258a0358>
ffffffff8000d580: 80 3c 24 00          	cmpb	$0x0, (%rsp)
ffffffff8000d584: 74 0a                	je	0xffffffff8000d590 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xb10>
ffffffff8000d586: 0f b6 6c 24 01       	movzbl	0x1(%rsp), %ebp
ffffffff8000d58b: e9 3a fa ff ff       	jmp	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000d590: 48 8b 44 24 28       	movq	0x28(%rsp), %rax
ffffffff8000d595: 48 89 84 24 82 01 00 00      	movq	%rax, 0x182(%rsp)
ffffffff8000d59d: 48 8b 4c 24 20       	movq	0x20(%rsp), %rcx
ffffffff8000d5a2: 48 89 8c 24 7a 01 00 00      	movq	%rcx, 0x17a(%rsp)
ffffffff8000d5aa: 48 8b 54 24 18       	movq	0x18(%rsp), %rdx
ffffffff8000d5af: 48 8b 74 24 08       	movq	0x8(%rsp), %rsi
ffffffff8000d5b4: 48 8b 7c 24 10       	movq	0x10(%rsp), %rdi
ffffffff8000d5b9: 48 89 b4 24 e0 00 00 00      	movq	%rsi, 0xe0(%rsp)
ffffffff8000d5c1: 48 89 bc 24 e8 00 00 00      	movq	%rdi, 0xe8(%rsp)
ffffffff8000d5c9: 48 89 94 24 f0 00 00 00      	movq	%rdx, 0xf0(%rsp)
ffffffff8000d5d1: 48 89 8c 24 f8 00 00 00      	movq	%rcx, 0xf8(%rsp)
ffffffff8000d5d9: 48 89 84 24 00 01 00 00      	movq	%rax, 0x100(%rsp)
ffffffff8000d5e1: 48 89 84 24 aa 00 00 00      	movq	%rax, 0xaa(%rsp)
ffffffff8000d5e9: 48 89 8c 24 a2 00 00 00      	movq	%rcx, 0xa2(%rsp)
ffffffff8000d5f1: 48 89 94 24 9a 00 00 00      	movq	%rdx, 0x9a(%rsp)
ffffffff8000d5f9: 48 89 bc 24 92 00 00 00      	movq	%rdi, 0x92(%rsp)
ffffffff8000d601: 48 89 b4 24 8a 00 00 00      	movq	%rsi, 0x8a(%rsp)
ffffffff8000d609: 41 b6 01             	movb	$0x1, %r14b
ffffffff8000d60c: 89 6b 08             	movl	%ebp, 0x8(%rbx)
ffffffff8000d60f: 48 89 e7             	movq	%rsp, %rdi
ffffffff8000d612: 48 8d 74 24 40       	leaq	0x40(%rsp), %rsi
ffffffff8000d617: ba 0d 00 00 00       	movl	$0xd, %edx
ffffffff8000d61c: b9 02 00 00 00       	movl	$0x2, %ecx
ffffffff8000d621: e8 2a 02 00 00       	callq	0xffffffff8000d850 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec>
ffffffff8000d626: 83 3c 24 03          	cmpl	$0x3, (%rsp)
ffffffff8000d62a: 74 20                	je	0xffffffff8000d64c <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xbcc>
ffffffff8000d62c: 89 6b 08             	movl	%ebp, 0x8(%rbx)
ffffffff8000d62f: 48 89 e7             	movq	%rsp, %rdi
ffffffff8000d632: 48 8d 74 24 40       	leaq	0x40(%rsp), %rsi
ffffffff8000d637: ba 07 00 00 00       	movl	$0x7, %edx
ffffffff8000d63c: b9 03 00 00 00       	movl	$0x3, %ecx
ffffffff8000d641: e8 0a 02 00 00       	callq	0xffffffff8000d850 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec>
ffffffff8000d646: 83 3c 24 03          	cmpl	$0x3, (%rsp)
ffffffff8000d64a: 75 0a                	jne	0xffffffff8000d656 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xbd6>
ffffffff8000d64c: 0f b6 6c 24 04       	movzbl	0x4(%rsp), %ebp
ffffffff8000d651: e9 74 f9 ff ff       	jmp	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000d656: 48 8b 84 24 aa 00 00 00      	movq	0xaa(%rsp), %rax
ffffffff8000d65e: 48 89 44 24 76       	movq	%rax, 0x76(%rsp)
ffffffff8000d663: 48 8b 84 24 a4 00 00 00      	movq	0xa4(%rsp), %rax
ffffffff8000d66b: 48 89 44 24 70       	movq	%rax, 0x70(%rsp)
ffffffff8000d670: 48 8b 84 24 9c 00 00 00      	movq	0x9c(%rsp), %rax
ffffffff8000d678: 48 89 44 24 68       	movq	%rax, 0x68(%rsp)
ffffffff8000d67d: 48 8b 84 24 94 00 00 00      	movq	0x94(%rsp), %rax
ffffffff8000d685: 48 89 44 24 60       	movq	%rax, 0x60(%rsp)
ffffffff8000d68a: 48 8b 84 24 84 00 00 00      	movq	0x84(%rsp), %rax
ffffffff8000d692: 48 8b 8c 24 8c 00 00 00      	movq	0x8c(%rsp), %rcx
ffffffff8000d69a: 48 89 4c 24 58       	movq	%rcx, 0x58(%rsp)
ffffffff8000d69f: 48 89 44 24 50       	movq	%rax, 0x50(%rsp)
ffffffff8000d6a4: 40 b5 05             	movb	$0x5, %bpl
ffffffff8000d6a7: 45 84 f6             	testb	%r14b, %r14b
ffffffff8000d6aa: 0f 84 1a f9 ff ff    	je	0xffffffff8000cfca <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x54a>
ffffffff8000d6b0: 48 8b 44 24 76       	movq	0x76(%rsp), %rax
ffffffff8000d6b5: 48 8b 4c 24 6e       	movq	0x6e(%rsp), %rcx
ffffffff8000d6ba: 48 8b 54 24 66       	movq	0x66(%rsp), %rdx
ffffffff8000d6bf: 48 8b 74 24 56       	movq	0x56(%rsp), %rsi
ffffffff8000d6c4: 48 8b 7c 24 5e       	movq	0x5e(%rsp), %rdi
ffffffff8000d6c9: 48 89 b4 24 34 01 00 00      	movq	%rsi, 0x134(%rsp)
ffffffff8000d6d1: 48 89 bc 24 3c 01 00 00      	movq	%rdi, 0x13c(%rsp)
ffffffff8000d6d9: 48 89 b4 24 b8 00 00 00      	movq	%rsi, 0xb8(%rsp)
ffffffff8000d6e1: 48 89 bc 24 c0 00 00 00      	movq	%rdi, 0xc0(%rsp)
ffffffff8000d6e9: 48 89 94 24 c8 00 00 00      	movq	%rdx, 0xc8(%rsp)
ffffffff8000d6f1: 48 89 8c 24 d0 00 00 00      	movq	%rcx, 0xd0(%rsp)
ffffffff8000d6f9: 48 89 84 24 d8 00 00 00      	movq	%rax, 0xd8(%rsp)
ffffffff8000d701: 48 8b 84 24 d8 00 00 00      	movq	0xd8(%rsp), %rax
ffffffff8000d709: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff8000d70e: 48 8b 84 24 d0 00 00 00      	movq	0xd0(%rsp), %rax
ffffffff8000d716: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff8000d71b: 48 8b 84 24 c8 00 00 00      	movq	0xc8(%rsp), %rax
ffffffff8000d723: 48 89 44 24 10       	movq	%rax, 0x10(%rsp)
ffffffff8000d728: 48 8b 84 24 b8 00 00 00      	movq	0xb8(%rsp), %rax
ffffffff8000d730: 48 8b 8c 24 c0 00 00 00      	movq	0xc0(%rsp), %rcx
ffffffff8000d738: 48 89 4c 24 08       	movq	%rcx, 0x8(%rsp)
ffffffff8000d73d: 48 89 04 24          	movq	%rax, (%rsp)
ffffffff8000d741: b1 01                	movb	$0x1, %cl
ffffffff8000d743: 31 c0                	xorl	%eax, %eax
ffffffff8000d745: f0                   	lock
ffffffff8000d746: 0f b0 0d 2b 8b 01 00 	cmpxchgb	%cl, 0x18b2b(%rip)      # 0xffffffff80026278 <taos::devices::sd_card::SD_CARD::hbffb2fd9b2beae11>
ffffffff8000d74d: 75 04                	jne	0xffffffff8000d753 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xcd3>
ffffffff8000d74f: eb 0f                	jmp	0xffffffff8000d760 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xce0>
ffffffff8000d751: f3 90                	pause
ffffffff8000d753: 0f b6 05 1e 8b 01 00 	movzbl	0x18b1e(%rip), %eax     # 0xffffffff80026278 <taos::devices::sd_card::SD_CARD::hbffb2fd9b2beae11>
ffffffff8000d75a: 84 c0                	testb	%al, %al
ffffffff8000d75c: 75 f3                	jne	0xffffffff8000d751 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xcd1>
ffffffff8000d75e: eb e3                	jmp	0xffffffff8000d743 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xcc3>
ffffffff8000d760: 48 c7 05 15 8b 01 00 01 00 00 00     	movq	$0x1, 0x18b15(%rip) # 0xffffffff80026280 <taos::devices::sd_card::SD_CARD::hbffb2fd9b2beae11+0x8>
ffffffff8000d76b: 48 8b 04 24          	movq	(%rsp), %rax
ffffffff8000d76f: 48 8b 4c 24 08       	movq	0x8(%rsp), %rcx
ffffffff8000d774: 48 89 05 0d 8b 01 00 	movq	%rax, 0x18b0d(%rip)     # 0xffffffff80026288 <taos::devices::sd_card::SD_CARD::hbffb2fd9b2beae11+0x10>
ffffffff8000d77b: 48 89 0d 0e 8b 01 00 	movq	%rcx, 0x18b0e(%rip)     # 0xffffffff80026290 <taos::devices::sd_card::SD_CARD::hbffb2fd9b2beae11+0x18>
ffffffff8000d782: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff8000d787: 48 89 05 0a 8b 01 00 	movq	%rax, 0x18b0a(%rip)     # 0xffffffff80026298 <taos::devices::sd_card::SD_CARD::hbffb2fd9b2beae11+0x20>
ffffffff8000d78e: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff8000d793: 48 89 05 06 8b 01 00 	movq	%rax, 0x18b06(%rip)     # 0xffffffff800262a0 <taos::devices::sd_card::SD_CARD::hbffb2fd9b2beae11+0x28>
ffffffff8000d79a: 48 8b 44 24 20       	movq	0x20(%rsp), %rax
ffffffff8000d79f: 48 89 05 02 8b 01 00 	movq	%rax, 0x18b02(%rip)     # 0xffffffff800262a8 <taos::devices::sd_card::SD_CARD::hbffb2fd9b2beae11+0x30>
ffffffff8000d7a6: c6 05 cb 8a 01 00 00 	movb	$0x0, 0x18acb(%rip)     # 0xffffffff80026278 <taos::devices::sd_card::SD_CARD::hbffb2fd9b2beae11>
ffffffff8000d7ad: 41 c6 45 10 00       	movb	$0x0, 0x10(%r13)
ffffffff8000d7b2: 48 8b 44 24 38       	movq	0x38(%rsp), %rax
ffffffff8000d7b7: f0                   	lock
ffffffff8000d7b8: 48 ff 08             	decq	(%rax)
ffffffff8000d7bb: 75 0a                	jne	0xffffffff8000d7c7 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0xd47>
ffffffff8000d7bd: 48 8d 7c 24 38       	leaq	0x38(%rsp), %rdi
ffffffff8000d7c2: e8 59 e8 ff ff       	callq	0xffffffff8000c020 <alloc::sync::Arc<T,A>::drop_slow::h8360a5d89533dd40>
ffffffff8000d7c7: 40 b5 06             	movb	$0x6, %bpl
ffffffff8000d7ca: e9 15 f8 ff ff       	jmp	0xffffffff8000cfe4 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6+0x564>
ffffffff8000d7cf: cc                   	int3

ffffffff8000d7d0 <taos::devices::sd_card::get_full_sd_card_info::hd19259c5258a0358>:
ffffffff8000d7d0: 4c 89 c8             	movq	%r9, %rax
ffffffff8000d7d3: 48 c1 e8 3e          	shrq	$0x3e, %rax
ffffffff8000d7d7: 83 f8 01             	cmpl	$0x1, %eax
ffffffff8000d7da: 75 2a                	jne	0xffffffff8000d806 <taos::devices::sd_card::get_full_sd_card_info::hd19259c5258a0358+0x36>
ffffffff8000d7dc: 4d 0f a4 c1 10       	shldq	$0x10, %r8, %r9
ffffffff8000d7e1: 41 81 e1 ff ff ff 00 	andl	$0xffffff, %r9d         # imm = 0xFFFFFF
ffffffff8000d7e8: 49 ff c1             	incq	%r9
ffffffff8000d7eb: 48 89 77 08          	movq	%rsi, 0x8(%rdi)
ffffffff8000d7ef: 48 89 57 10          	movq	%rdx, 0x10(%rdi)
ffffffff8000d7f3: 48 c7 47 18 00 02 00 00      	movq	$0x200, 0x18(%rdi) # imm = 0x200
ffffffff8000d7fb: 4c 89 4f 20          	movq	%r9, 0x20(%rdi)
ffffffff8000d7ff: 89 4f 28             	movl	%ecx, 0x28(%rdi)
ffffffff8000d802: c6 07 00             	movb	$0x0, (%rdi)
ffffffff8000d805: c3                   	retq
ffffffff8000d806: 48 83 ec 38          	subq	$0x38, %rsp
ffffffff8000d80a: 48 c7 44 24 08 88 f3 01 80   	movq	$-0x7ffe0c78, 0x8(%rsp) # imm = 0x8001F388
ffffffff8000d813: 48 c7 44 24 10 01 00 00 00   	movq	$0x1, 0x10(%rsp)
ffffffff8000d81c: 48 c7 44 24 28 00 00 00 00   	movq	$0x0, 0x28(%rsp)
ffffffff8000d825: 48 c7 44 24 18 08 00 00 00   	movq	$0x8, 0x18(%rsp)
ffffffff8000d82e: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff8000d837: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff8000d83c: 48 c7 c6 98 f3 01 80 	movq	$-0x7ffe0c68, %rsi      # imm = 0x8001F398
ffffffff8000d843: e8 a8 eb 00 00       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8000d848: cc                   	int3
ffffffff8000d849: cc                   	int3
ffffffff8000d84a: cc                   	int3
ffffffff8000d84b: cc                   	int3
ffffffff8000d84c: cc                   	int3
ffffffff8000d84d: cc                   	int3
ffffffff8000d84e: cc                   	int3
ffffffff8000d84f: cc                   	int3

ffffffff8000d850 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec>:
ffffffff8000d850: 48 8b 46 08          	movq	0x8(%rsi), %rax
ffffffff8000d854: 40 b6 05             	movb	$0x5, %sil
ffffffff8000d857: 66 83 78 32 00       	cmpw	$0x0, 0x32(%rax)
ffffffff8000d85c: 74 0b                	je	0xffffffff8000d869 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec+0x19>
ffffffff8000d85e: 40 88 77 04          	movb	%sil, 0x4(%rdi)
ffffffff8000d862: c7 07 03 00 00 00    	movl	$0x3, (%rdi)
ffffffff8000d868: c3                   	retq
ffffffff8000d869: 8b 70 24             	movl	0x24(%rax), %esi
ffffffff8000d86c: 40 f6 c6 03          	testb	$0x3, %sil
ffffffff8000d870: 74 0d                	je	0xffffffff8000d87f <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec+0x2f>
ffffffff8000d872: 31 f6                	xorl	%esi, %esi
ffffffff8000d874: 40 88 77 04          	movb	%sil, 0x4(%rdi)
ffffffff8000d878: c7 07 03 00 00 00    	movl	$0x3, (%rdi)
ffffffff8000d87e: c3                   	retq
ffffffff8000d87f: f7 c6 fc ff ff f7    	testl	$0xf7fffffc, %esi       # imm = 0xF7FFFFFC
ffffffff8000d885: 74 38                	je	0xffffffff8000d8bf <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec+0x6f>
ffffffff8000d887: 0f b6 d2             	movzbl	%dl, %edx
ffffffff8000d88a: c1 e2 08             	shll	$0x8, %edx
ffffffff8000d88d: 48 0f be f1          	movsbq	%cl, %rsi
ffffffff8000d891: 49 c7 c0 fe ff ff ff 	movq	$-0x2, %r8
ffffffff8000d898: 66 41 0b 94 70 b0 f3 01 80   	orw	-0x7ffe0c50(%r8,%rsi,2), %dx
ffffffff8000d8a1: 41 0f b7 b4 70 c2 f3 01 80   	movzwl	-0x7ffe0c3e(%r8,%rsi,2), %esi
ffffffff8000d8aa: 41 b0 05             	movb	$0x5, %r8b
ffffffff8000d8ad: 66 83 78 32 00       	cmpw	$0x0, 0x32(%rax)
ffffffff8000d8b2: 74 19                	je	0xffffffff8000d8cd <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec+0x7d>
ffffffff8000d8b4: 44 88 47 04          	movb	%r8b, 0x4(%rdi)
ffffffff8000d8b8: c7 07 03 00 00 00    	movl	$0x3, (%rdi)
ffffffff8000d8be: c3                   	retq
ffffffff8000d8bf: 40 b6 01             	movb	$0x1, %sil
ffffffff8000d8c2: 40 88 77 04          	movb	%sil, 0x4(%rdi)
ffffffff8000d8c6: c7 07 03 00 00 00    	movl	$0x3, (%rdi)
ffffffff8000d8cc: c3                   	retq
ffffffff8000d8cd: 44 8b 40 24          	movl	0x24(%rax), %r8d
ffffffff8000d8d1: 41 f6 c0 03          	testb	$0x3, %r8b
ffffffff8000d8d5: 74 0e                	je	0xffffffff8000d8e5 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec+0x95>
ffffffff8000d8d7: 45 31 c0             	xorl	%r8d, %r8d
ffffffff8000d8da: 44 88 47 04          	movb	%r8b, 0x4(%rdi)
ffffffff8000d8de: c7 07 03 00 00 00    	movl	$0x3, (%rdi)
ffffffff8000d8e4: c3                   	retq
ffffffff8000d8e5: 41 f7 c0 fc ff ff f7 	testl	$0xf7fffffc, %r8d       # imm = 0xF7FFFFFC
ffffffff8000d8ec: 74 18                	je	0xffffffff8000d906 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec+0xb6>
ffffffff8000d8ee: 09 d6                	orl	%edx, %esi
ffffffff8000d8f0: 66 89 70 0e          	movw	%si, 0xe(%rax)
ffffffff8000d8f4: 66 83 78 32 00       	cmpw	$0x0, 0x32(%rax)
ffffffff8000d8f9: 74 19                	je	0xffffffff8000d914 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec+0xc4>
ffffffff8000d8fb: c6 47 04 05          	movb	$0x5, 0x4(%rdi)
ffffffff8000d8ff: c7 07 03 00 00 00    	movl	$0x3, (%rdi)
ffffffff8000d905: c3                   	retq
ffffffff8000d906: 41 b0 01             	movb	$0x1, %r8b
ffffffff8000d909: 44 88 47 04          	movb	%r8b, 0x4(%rdi)
ffffffff8000d90d: c7 07 03 00 00 00    	movl	$0x3, (%rdi)
ffffffff8000d913: c3                   	retq
ffffffff8000d914: ba ec 03 00 00       	movl	$0x3ec, %edx            # imm = 0x3EC
ffffffff8000d919: 48 83 c2 fc          	addq	$-0x4, %rdx
ffffffff8000d91d: 74 7b                	je	0xffffffff8000d99a <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec+0x14a>
ffffffff8000d91f: 0f b7 70 30          	movzwl	0x30(%rax), %esi
ffffffff8000d923: 40 f6 c6 01          	testb	$0x1, %sil
ffffffff8000d927: 75 1e                	jne	0xffffffff8000d947 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec+0xf7>
ffffffff8000d929: 0f b7 70 30          	movzwl	0x30(%rax), %esi
ffffffff8000d92d: 40 f6 c6 01          	testb	$0x1, %sil
ffffffff8000d931: 75 14                	jne	0xffffffff8000d947 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec+0xf7>
ffffffff8000d933: 0f b7 70 30          	movzwl	0x30(%rax), %esi
ffffffff8000d937: 40 f6 c6 01          	testb	$0x1, %sil
ffffffff8000d93b: 75 0a                	jne	0xffffffff8000d947 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec+0xf7>
ffffffff8000d93d: 0f b7 70 30          	movzwl	0x30(%rax), %esi
ffffffff8000d941: 40 f6 c6 01          	testb	$0x1, %sil
ffffffff8000d945: 74 d2                	je	0xffffffff8000d919 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec+0xc9>
ffffffff8000d947: 66 c7 40 30 01 00    	movw	$0x1, 0x30(%rax)
ffffffff8000d94d: 8b 50 10             	movl	0x10(%rax), %edx
ffffffff8000d950: 80 f9 01             	cmpb	$0x1, %cl
ffffffff8000d953: 75 32                	jne	0xffffffff8000d987 <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec+0x137>
ffffffff8000d955: 89 d1                	movl	%edx, %ecx
ffffffff8000d957: 8b 70 14             	movl	0x14(%rax), %esi
ffffffff8000d95a: 44 8b 40 18          	movl	0x18(%rax), %r8d
ffffffff8000d95e: 44 8b 48 1c          	movl	0x1c(%rax), %r9d
ffffffff8000d962: 49 c1 e1 28          	shlq	$0x28, %r9
ffffffff8000d966: 49 c1 e0 08          	shlq	$0x8, %r8
ffffffff8000d96a: 89 f0                	movl	%esi, %eax
ffffffff8000d96c: c1 e8 18             	shrl	$0x18, %eax
ffffffff8000d96f: 4c 09 c0             	orq	%r8, %rax
ffffffff8000d972: 4c 09 c8             	orq	%r9, %rax
ffffffff8000d975: 48 c1 e6 28          	shlq	$0x28, %rsi
ffffffff8000d979: 48 c1 e1 08          	shlq	$0x8, %rcx
ffffffff8000d97d: 48 09 f1             	orq	%rsi, %rcx
ffffffff8000d980: be 02 00 00 00       	movl	$0x2, %esi
ffffffff8000d985: eb 05                	jmp	0xffffffff8000d98c <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec+0x13c>
ffffffff8000d987: be 01 00 00 00       	movl	$0x1, %esi
ffffffff8000d98c: 89 37                	movl	%esi, (%rdi)
ffffffff8000d98e: 89 57 04             	movl	%edx, 0x4(%rdi)
ffffffff8000d991: 48 89 4f 10          	movq	%rcx, 0x10(%rdi)
ffffffff8000d995: 48 89 47 18          	movq	%rax, 0x18(%rdi)
ffffffff8000d999: c3                   	retq
ffffffff8000d99a: 66 83 78 32 00       	cmpw	$0x0, 0x32(%rax)
ffffffff8000d99f: 0f 85 56 ff ff ff    	jne	0xffffffff8000d8fb <taos::devices::sd_card::send_sd_command::hef240d7c20ee02ec+0xab>
ffffffff8000d9a5: c6 47 04 02          	movb	$0x2, 0x4(%rdi)
ffffffff8000d9a9: c7 07 03 00 00 00    	movl	$0x3, (%rdi)
ffffffff8000d9af: c3                   	retq

ffffffff8000d9b0 <futures_task::waker::drop_arc_raw::he500d30f482a79fb>:
ffffffff8000d9b0: 50                   	pushq	%rax
ffffffff8000d9b1: 48 8d 47 f0          	leaq	-0x10(%rdi), %rax
ffffffff8000d9b5: 48 89 04 24          	movq	%rax, (%rsp)
ffffffff8000d9b9: f0                   	lock
ffffffff8000d9ba: 48 ff 4f f0          	decq	-0x10(%rdi)
ffffffff8000d9be: 75 08                	jne	0xffffffff8000d9c8 <futures_task::waker::drop_arc_raw::he500d30f482a79fb+0x18>
ffffffff8000d9c0: 48 89 e7             	movq	%rsp, %rdi
ffffffff8000d9c3: e8 38 e4 ff ff       	callq	0xffffffff8000be00 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4>
ffffffff8000d9c8: 58                   	popq	%rax
ffffffff8000d9c9: c3                   	retq
ffffffff8000d9ca: cc                   	int3
ffffffff8000d9cb: cc                   	int3
ffffffff8000d9cc: cc                   	int3
ffffffff8000d9cd: cc                   	int3
ffffffff8000d9ce: cc                   	int3
ffffffff8000d9cf: cc                   	int3

ffffffff8000d9d0 <futures_task::waker::wake_arc_raw::h7f4e21f2db61fabe>:
ffffffff8000d9d0: 41 56                	pushq	%r14
ffffffff8000d9d2: 53                   	pushq	%rbx
ffffffff8000d9d3: 50                   	pushq	%rax
ffffffff8000d9d4: 48 8d 5f f0          	leaq	-0x10(%rdi), %rbx
ffffffff8000d9d8: 48 89 1c 24          	movq	%rbx, (%rsp)
ffffffff8000d9dc: 4c 8b 37             	movq	(%rdi), %r14
ffffffff8000d9df: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff8000d9e4: 31 c0                	xorl	%eax, %eax
ffffffff8000d9e6: f0                   	lock
ffffffff8000d9e7: 49 0f b1 4e 10       	cmpxchgq	%rcx, 0x10(%r14)
ffffffff8000d9ec: 74 0e                	je	0xffffffff8000d9fc <futures_task::waker::wake_arc_raw::h7f4e21f2db61fabe+0x2c>
ffffffff8000d9ee: 66 90                	nop
ffffffff8000d9f0: f3 90                	pause
ffffffff8000d9f2: 31 c0                	xorl	%eax, %eax
ffffffff8000d9f4: f0                   	lock
ffffffff8000d9f5: 49 0f b1 4e 10       	cmpxchgq	%rcx, 0x10(%r14)
ffffffff8000d9fa: 75 f4                	jne	0xffffffff8000d9f0 <futures_task::waker::wake_arc_raw::h7f4e21f2db61fabe+0x20>
ffffffff8000d9fc: f0                   	lock
ffffffff8000d9fd: 48 ff 03             	incq	(%rbx)
ffffffff8000da00: 7e 61                	jle	0xffffffff8000da63 <futures_task::waker::wake_arc_raw::h7f4e21f2db61fabe+0x93>
ffffffff8000da02: 49 8b 4e 18          	movq	0x18(%r14), %rcx
ffffffff8000da06: 49 8b 46 30          	movq	0x30(%r14), %rax
ffffffff8000da0a: 48 39 c8             	cmpq	%rcx, %rax
ffffffff8000da0d: 75 18                	jne	0xffffffff8000da27 <futures_task::waker::wake_arc_raw::h7f4e21f2db61fabe+0x57>
ffffffff8000da0f: 49 8d 7e 18          	leaq	0x18(%r14), %rdi
ffffffff8000da13: 48 c7 c6 88 e4 01 80 	movq	$-0x7ffe1b78, %rsi      # imm = 0x8001E488
ffffffff8000da1a: e8 51 e3 ff ff       	callq	0xffffffff8000bd70 <alloc::collections::vec_deque::VecDeque<T,A>::grow::h0ee91ef6b8134622>
ffffffff8000da1f: 49 8b 4e 18          	movq	0x18(%r14), %rcx
ffffffff8000da23: 49 8b 46 30          	movq	0x30(%r14), %rax
ffffffff8000da27: 49 03 46 28          	addq	0x28(%r14), %rax
ffffffff8000da2b: 31 d2                	xorl	%edx, %edx
ffffffff8000da2d: 48 39 c8             	cmpq	%rcx, %rax
ffffffff8000da30: 48 0f 43 d1          	cmovaeq	%rcx, %rdx
ffffffff8000da34: 48 29 d0             	subq	%rdx, %rax
ffffffff8000da37: 49 8b 4e 20          	movq	0x20(%r14), %rcx
ffffffff8000da3b: 48 89 1c c1          	movq	%rbx, (%rcx,%rax,8)
ffffffff8000da3f: 49 ff 46 30          	incq	0x30(%r14)
ffffffff8000da43: f0                   	lock
ffffffff8000da44: 49 83 66 10 fc       	andq	$-0x4, 0x10(%r14)
ffffffff8000da49: 48 8b 04 24          	movq	(%rsp), %rax
ffffffff8000da4d: f0                   	lock
ffffffff8000da4e: 48 ff 08             	decq	(%rax)
ffffffff8000da51: 75 08                	jne	0xffffffff8000da5b <futures_task::waker::wake_arc_raw::h7f4e21f2db61fabe+0x8b>
ffffffff8000da53: 48 89 e7             	movq	%rsp, %rdi
ffffffff8000da56: e8 a5 e3 ff ff       	callq	0xffffffff8000be00 <alloc::sync::Arc<T,A>::drop_slow::h08f322615b7581a4>
ffffffff8000da5b: 48 83 c4 08          	addq	$0x8, %rsp
ffffffff8000da5f: 5b                   	popq	%rbx
ffffffff8000da60: 41 5e                	popq	%r14
ffffffff8000da62: c3                   	retq
ffffffff8000da63: 0f 0b                	ud2
ffffffff8000da65: cc                   	int3
ffffffff8000da66: cc                   	int3
ffffffff8000da67: cc                   	int3
ffffffff8000da68: cc                   	int3
ffffffff8000da69: cc                   	int3
ffffffff8000da6a: cc                   	int3
ffffffff8000da6b: cc                   	int3
ffffffff8000da6c: cc                   	int3
ffffffff8000da6d: cc                   	int3
ffffffff8000da6e: cc                   	int3
ffffffff8000da6f: cc                   	int3

ffffffff8000da70 <futures_task::waker::wake_by_ref_arc_raw::hf6e8d0f249ba1af3>:
ffffffff8000da70: 41 56                	pushq	%r14
ffffffff8000da72: 53                   	pushq	%rbx
ffffffff8000da73: 50                   	pushq	%rax
ffffffff8000da74: 48 89 fb             	movq	%rdi, %rbx
ffffffff8000da77: 4c 8b 37             	movq	(%rdi), %r14
ffffffff8000da7a: 48 83 c3 f0          	addq	$-0x10, %rbx
ffffffff8000da7e: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff8000da83: 31 c0                	xorl	%eax, %eax
ffffffff8000da85: f0                   	lock
ffffffff8000da86: 49 0f b1 4e 10       	cmpxchgq	%rcx, 0x10(%r14)
ffffffff8000da8b: 74 0f                	je	0xffffffff8000da9c <futures_task::waker::wake_by_ref_arc_raw::hf6e8d0f249ba1af3+0x2c>
ffffffff8000da8d: 0f 1f 00             	nopl	(%rax)
ffffffff8000da90: f3 90                	pause
ffffffff8000da92: 31 c0                	xorl	%eax, %eax
ffffffff8000da94: f0                   	lock
ffffffff8000da95: 49 0f b1 4e 10       	cmpxchgq	%rcx, 0x10(%r14)
ffffffff8000da9a: 75 f4                	jne	0xffffffff8000da90 <futures_task::waker::wake_by_ref_arc_raw::hf6e8d0f249ba1af3+0x20>
ffffffff8000da9c: f0                   	lock
ffffffff8000da9d: 48 ff 03             	incq	(%rbx)
ffffffff8000daa0: 7e 4f                	jle	0xffffffff8000daf1 <futures_task::waker::wake_by_ref_arc_raw::hf6e8d0f249ba1af3+0x81>
ffffffff8000daa2: 49 8b 4e 18          	movq	0x18(%r14), %rcx
ffffffff8000daa6: 49 8b 46 30          	movq	0x30(%r14), %rax
ffffffff8000daaa: 48 39 c8             	cmpq	%rcx, %rax
ffffffff8000daad: 75 18                	jne	0xffffffff8000dac7 <futures_task::waker::wake_by_ref_arc_raw::hf6e8d0f249ba1af3+0x57>
ffffffff8000daaf: 49 8d 7e 18          	leaq	0x18(%r14), %rdi
ffffffff8000dab3: 48 c7 c6 88 e4 01 80 	movq	$-0x7ffe1b78, %rsi      # imm = 0x8001E488
ffffffff8000daba: e8 b1 e2 ff ff       	callq	0xffffffff8000bd70 <alloc::collections::vec_deque::VecDeque<T,A>::grow::h0ee91ef6b8134622>
ffffffff8000dabf: 49 8b 4e 18          	movq	0x18(%r14), %rcx
ffffffff8000dac3: 49 8b 46 30          	movq	0x30(%r14), %rax
ffffffff8000dac7: 49 03 46 28          	addq	0x28(%r14), %rax
ffffffff8000dacb: 31 d2                	xorl	%edx, %edx
ffffffff8000dacd: 48 39 c8             	cmpq	%rcx, %rax
ffffffff8000dad0: 48 0f 43 d1          	cmovaeq	%rcx, %rdx
ffffffff8000dad4: 48 29 d0             	subq	%rdx, %rax
ffffffff8000dad7: 49 8b 4e 20          	movq	0x20(%r14), %rcx
ffffffff8000dadb: 48 89 1c c1          	movq	%rbx, (%rcx,%rax,8)
ffffffff8000dadf: 49 ff 46 30          	incq	0x30(%r14)
ffffffff8000dae3: f0                   	lock
ffffffff8000dae4: 49 83 66 10 fc       	andq	$-0x4, 0x10(%r14)
ffffffff8000dae9: 48 83 c4 08          	addq	$0x8, %rsp
ffffffff8000daed: 5b                   	popq	%rbx
ffffffff8000daee: 41 5e                	popq	%r14
ffffffff8000daf0: c3                   	retq
ffffffff8000daf1: 0f 0b                	ud2
ffffffff8000daf3: cc                   	int3
ffffffff8000daf4: cc                   	int3
ffffffff8000daf5: cc                   	int3
ffffffff8000daf6: cc                   	int3
ffffffff8000daf7: cc                   	int3
ffffffff8000daf8: cc                   	int3
ffffffff8000daf9: cc                   	int3
ffffffff8000dafa: cc                   	int3
ffffffff8000dafb: cc                   	int3
ffffffff8000dafc: cc                   	int3
ffffffff8000dafd: cc                   	int3
ffffffff8000dafe: cc                   	int3
ffffffff8000daff: cc                   	int3

ffffffff8000db00 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09f62a01ec113f1c>:
ffffffff8000db00: 8b 46 24             	movl	0x24(%rsi), %eax
ffffffff8000db03: a8 10                	testb	$0x10, %al
ffffffff8000db05: 0f 85 15 b8 00 00    	jne	0xffffffff80019320 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hd0e7c1aefe0075e3>
ffffffff8000db0b: a8 20                	testb	$0x20, %al
ffffffff8000db0d: 0f 85 8d b8 00 00    	jne	0xffffffff800193a0 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::h869006add1042b35>
ffffffff8000db13: e9 a8 dd 00 00       	jmp	0xffffffff8001b8c0 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f>
ffffffff8000db18: cc                   	int3
ffffffff8000db19: cc                   	int3
ffffffff8000db1a: cc                   	int3
ffffffff8000db1b: cc                   	int3
ffffffff8000db1c: cc                   	int3
ffffffff8000db1d: cc                   	int3
ffffffff8000db1e: cc                   	int3
ffffffff8000db1f: cc                   	int3

ffffffff8000db20 <core::ptr::drop_in_place<goblin::error::Error>::hc001c3d67b53ad80>:
ffffffff8000db20: 83 3f 03             	cmpl	$0x3, (%rdi)
ffffffff8000db23: 75 56                	jne	0xffffffff8000db7b <core::ptr::drop_in_place<goblin::error::Error>::hc001c3d67b53ad80+0x5b>
ffffffff8000db25: 48 8b 4f 08          	movq	0x8(%rdi), %rcx
ffffffff8000db29: 48 85 c9             	testq	%rcx, %rcx
ffffffff8000db2c: 74 4d                	je	0xffffffff8000db7b <core::ptr::drop_in_place<goblin::error::Error>::hc001c3d67b53ad80+0x5b>
ffffffff8000db2e: 50                   	pushq	%rax
ffffffff8000db2f: 48 8b 77 10          	movq	0x10(%rdi), %rsi
ffffffff8000db33: b2 01                	movb	$0x1, %dl
ffffffff8000db35: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff8000db40: 31 c0                	xorl	%eax, %eax
ffffffff8000db42: f0                   	lock
ffffffff8000db43: 0f b0 15 06 75 01 00 	cmpxchgb	%dl, 0x17506(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000db4a: 75 06                	jne	0xffffffff8000db52 <core::ptr::drop_in_place<goblin::error::Error>::hc001c3d67b53ad80+0x32>
ffffffff8000db4c: eb 11                	jmp	0xffffffff8000db5f <core::ptr::drop_in_place<goblin::error::Error>::hc001c3d67b53ad80+0x3f>
ffffffff8000db4e: 66 90                	nop
ffffffff8000db50: f3 90                	pause
ffffffff8000db52: 0f b6 05 f7 74 01 00 	movzbl	0x174f7(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000db59: 84 c0                	testb	%al, %al
ffffffff8000db5b: 75 f3                	jne	0xffffffff8000db50 <core::ptr::drop_in_place<goblin::error::Error>::hc001c3d67b53ad80+0x30>
ffffffff8000db5d: eb e1                	jmp	0xffffffff8000db40 <core::ptr::drop_in_place<goblin::error::Error>::hc001c3d67b53ad80+0x20>
ffffffff8000db5f: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff8000db64: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000db6b: e8 30 55 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000db70: c6 05 d9 74 01 00 00 	movb	$0x0, 0x174d9(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000db77: 48 83 c4 08          	addq	$0x8, %rsp
ffffffff8000db7b: c3                   	retq
ffffffff8000db7c: cc                   	int3
ffffffff8000db7d: cc                   	int3
ffffffff8000db7e: cc                   	int3
ffffffff8000db7f: cc                   	int3

ffffffff8000db80 <<goblin::error::Error as core::fmt::Debug>::fmt::ha73702cbb56a1a4b>:
ffffffff8000db80: 48 83 ec 18          	subq	$0x18, %rsp
ffffffff8000db84: 48 8b 07             	movq	(%rdi), %rax
ffffffff8000db87: 48 83 c0 fd          	addq	$-0x3, %rax
ffffffff8000db8b: 48 83 f8 04          	cmpq	$0x4, %rax
ffffffff8000db8f: b9 02 00 00 00       	movl	$0x2, %ecx
ffffffff8000db94: 48 0f 42 c8          	cmovbq	%rax, %rcx
ffffffff8000db98: ff 24 cd d8 f3 01 80 	jmpq	*-0x7ffe0c28(,%rcx,8)
ffffffff8000db9f: 48 83 c7 08          	addq	$0x8, %rdi
ffffffff8000dba3: 48 89 7c 24 10       	movq	%rdi, 0x10(%rsp)
ffffffff8000dba8: 48 8d 4c 24 10       	leaq	0x10(%rsp), %rcx
ffffffff8000dbad: ba 09 00 00 00       	movl	$0x9, %edx
ffffffff8000dbb2: 48 89 f7             	movq	%rsi, %rdi
ffffffff8000dbb5: 48 c7 c6 c8 f4 01 80 	movq	$-0x7ffe0b38, %rsi      # imm = 0x8001F4C8
ffffffff8000dbbc: 49 c7 c0 a8 f4 01 80 	movq	$-0x7ffe0b58, %r8       # imm = 0x8001F4A8
ffffffff8000dbc3: e8 98 c4 00 00       	callq	0xffffffff8001a060 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>
ffffffff8000dbc8: 48 83 c4 18          	addq	$0x18, %rsp
ffffffff8000dbcc: c3                   	retq
ffffffff8000dbcd: 48 89 7c 24 10       	movq	%rdi, 0x10(%rsp)
ffffffff8000dbd2: 48 8d 4c 24 10       	leaq	0x10(%rsp), %rcx
ffffffff8000dbd7: ba 06 00 00 00       	movl	$0x6, %edx
ffffffff8000dbdc: 48 89 f7             	movq	%rsi, %rdi
ffffffff8000dbdf: 48 c7 c6 18 f5 01 80 	movq	$-0x7ffe0ae8, %rsi      # imm = 0x8001F518
ffffffff8000dbe6: 49 c7 c0 f8 f4 01 80 	movq	$-0x7ffe0b08, %r8       # imm = 0x8001F4F8
ffffffff8000dbed: e8 6e c4 00 00       	callq	0xffffffff8001a060 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>
ffffffff8000dbf2: 48 83 c4 18          	addq	$0x18, %rsp
ffffffff8000dbf6: c3                   	retq
ffffffff8000dbf7: 48 8d 4f 18          	leaq	0x18(%rdi), %rcx
ffffffff8000dbfb: 48 83 c7 08          	addq	$0x8, %rdi
ffffffff8000dbff: 48 89 7c 24 10       	movq	%rdi, 0x10(%rsp)
ffffffff8000dc04: 48 c7 04 24 40 f5 01 80      	movq	$-0x7ffe0ac0, (%rsp) # imm = 0x8001F540
ffffffff8000dc0c: 4c 8d 4c 24 10       	leaq	0x10(%rsp), %r9
ffffffff8000dc11: ba 0e 00 00 00       	movl	$0xe, %edx
ffffffff8000dc16: 48 89 f7             	movq	%rsi, %rdi
ffffffff8000dc19: 48 c7 c6 60 f5 01 80 	movq	$-0x7ffe0aa0, %rsi      # imm = 0x8001F560
ffffffff8000dc20: 49 c7 c0 20 f5 01 80 	movq	$-0x7ffe0ae0, %r8       # imm = 0x8001F520
ffffffff8000dc27: e8 b4 c5 00 00       	callq	0xffffffff8001a1e0 <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2>
ffffffff8000dc2c: 48 83 c4 18          	addq	$0x18, %rsp
ffffffff8000dc30: c3                   	retq
ffffffff8000dc31: 48 83 c7 08          	addq	$0x8, %rdi
ffffffff8000dc35: 48 89 7c 24 10       	movq	%rdi, 0x10(%rsp)
ffffffff8000dc3a: 48 8d 4c 24 10       	leaq	0x10(%rsp), %rcx
ffffffff8000dc3f: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff8000dc44: 48 89 f7             	movq	%rsi, %rdi
ffffffff8000dc47: 48 c7 c6 58 d1 01 80 	movq	$-0x7ffe2ea8, %rsi      # imm = 0x8001D158
ffffffff8000dc4e: 49 c7 c0 d8 f4 01 80 	movq	$-0x7ffe0b28, %r8       # imm = 0x8001F4D8
ffffffff8000dc55: e8 06 c4 00 00       	callq	0xffffffff8001a060 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>
ffffffff8000dc5a: 48 83 c4 18          	addq	$0x18, %rsp
ffffffff8000dc5e: c3                   	retq
ffffffff8000dc5f: cc                   	int3

ffffffff8000dc60 <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.16599521749034828659>:
ffffffff8000dc60: 41 57                	pushq	%r15
ffffffff8000dc62: 41 56                	pushq	%r14
ffffffff8000dc64: 53                   	pushq	%rbx
ffffffff8000dc65: 48 89 d3             	movq	%rdx, %rbx
ffffffff8000dc68: 49 89 f7             	movq	%rsi, %r15
ffffffff8000dc6b: 49 89 fe             	movq	%rdi, %r14
ffffffff8000dc6e: 48 83 79 08 00       	cmpq	$0x0, 0x8(%rcx)
ffffffff8000dc73: 74 26                	je	0xffffffff8000dc9b <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.16599521749034828659+0x3b>
ffffffff8000dc75: 48 8b 41 10          	movq	0x10(%rcx), %rax
ffffffff8000dc79: 48 85 c0             	testq	%rax, %rax
ffffffff8000dc7c: 74 51                	je	0xffffffff8000dccf <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.16599521749034828659+0x6f>
ffffffff8000dc7e: 48 8b 31             	movq	(%rcx), %rsi
ffffffff8000dc81: 48 c7 c7 50 50 02 80 	movq	$-0x7ffdafb0, %rdi      # imm = 0x80025050
ffffffff8000dc88: 4c 89 fa             	movq	%r15, %rdx
ffffffff8000dc8b: 48 89 c1             	movq	%rax, %rcx
ffffffff8000dc8e: 49 89 d8             	movq	%rbx, %r8
ffffffff8000dc91: e8 9a ea ff ff       	callq	0xffffffff8000c730 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553>
ffffffff8000dc96: e9 82 00 00 00       	jmp	0xffffffff8000dd1d <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.16599521749034828659+0xbd>
ffffffff8000dc9b: 48 85 db             	testq	%rbx, %rbx
ffffffff8000dc9e: 74 7a                	je	0xffffffff8000dd1a <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.16599521749034828659+0xba>
ffffffff8000dca0: 0f b6 05 3a 75 01 00 	movzbl	0x1753a(%rip), %eax     # 0xffffffff800251e1 <__rust_no_alloc_shim_is_unstable>
ffffffff8000dca7: b1 01                	movb	$0x1, %cl
ffffffff8000dca9: 0f 1f 80 00 00 00 00 	nopl	(%rax)
ffffffff8000dcb0: 31 c0                	xorl	%eax, %eax
ffffffff8000dcb2: f0                   	lock
ffffffff8000dcb3: 0f b0 0d 96 73 01 00 	cmpxchgb	%cl, 0x17396(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000dcba: 75 06                	jne	0xffffffff8000dcc2 <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.16599521749034828659+0x62>
ffffffff8000dcbc: eb 41                	jmp	0xffffffff8000dcff <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.16599521749034828659+0x9f>
ffffffff8000dcbe: 66 90                	nop
ffffffff8000dcc0: f3 90                	pause
ffffffff8000dcc2: 0f b6 05 87 73 01 00 	movzbl	0x17387(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000dcc9: 84 c0                	testb	%al, %al
ffffffff8000dccb: 75 f3                	jne	0xffffffff8000dcc0 <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.16599521749034828659+0x60>
ffffffff8000dccd: eb e1                	jmp	0xffffffff8000dcb0 <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.16599521749034828659+0x50>
ffffffff8000dccf: 48 85 db             	testq	%rbx, %rbx
ffffffff8000dcd2: 74 46                	je	0xffffffff8000dd1a <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.16599521749034828659+0xba>
ffffffff8000dcd4: 0f b6 05 06 75 01 00 	movzbl	0x17506(%rip), %eax     # 0xffffffff800251e1 <__rust_no_alloc_shim_is_unstable>
ffffffff8000dcdb: b1 01                	movb	$0x1, %cl
ffffffff8000dcdd: 0f 1f 00             	nopl	(%rax)
ffffffff8000dce0: 31 c0                	xorl	%eax, %eax
ffffffff8000dce2: f0                   	lock
ffffffff8000dce3: 0f b0 0d 66 73 01 00 	cmpxchgb	%cl, 0x17366(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000dcea: 75 06                	jne	0xffffffff8000dcf2 <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.16599521749034828659+0x92>
ffffffff8000dcec: eb 11                	jmp	0xffffffff8000dcff <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.16599521749034828659+0x9f>
ffffffff8000dcee: 66 90                	nop
ffffffff8000dcf0: f3 90                	pause
ffffffff8000dcf2: 0f b6 05 57 73 01 00 	movzbl	0x17357(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000dcf9: 84 c0                	testb	%al, %al
ffffffff8000dcfb: 75 f3                	jne	0xffffffff8000dcf0 <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.16599521749034828659+0x90>
ffffffff8000dcfd: eb e1                	jmp	0xffffffff8000dce0 <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.16599521749034828659+0x80>
ffffffff8000dcff: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000dd06: 4c 89 fe             	movq	%r15, %rsi
ffffffff8000dd09: 48 89 da             	movq	%rbx, %rdx
ffffffff8000dd0c: e8 ef 55 ff ff       	callq	0xffffffff80003300 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff8000dd11: c6 05 38 73 01 00 00 	movb	$0x0, 0x17338(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000dd18: eb 03                	jmp	0xffffffff8000dd1d <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.16599521749034828659+0xbd>
ffffffff8000dd1a: 4c 89 f8             	movq	%r15, %rax
ffffffff8000dd1d: 31 c9                	xorl	%ecx, %ecx
ffffffff8000dd1f: 48 85 c0             	testq	%rax, %rax
ffffffff8000dd22: 4c 0f 45 f8          	cmovneq	%rax, %r15
ffffffff8000dd26: 0f 94 c1             	sete	%cl
ffffffff8000dd29: 4d 89 7e 08          	movq	%r15, 0x8(%r14)
ffffffff8000dd2d: 49 89 5e 10          	movq	%rbx, 0x10(%r14)
ffffffff8000dd31: 49 89 0e             	movq	%rcx, (%r14)
ffffffff8000dd34: 5b                   	popq	%rbx
ffffffff8000dd35: 41 5e                	popq	%r14
ffffffff8000dd37: 41 5f                	popq	%r15
ffffffff8000dd39: c3                   	retq
ffffffff8000dd3a: cc                   	int3
ffffffff8000dd3b: cc                   	int3
ffffffff8000dd3c: cc                   	int3
ffffffff8000dd3d: cc                   	int3
ffffffff8000dd3e: cc                   	int3
ffffffff8000dd3f: cc                   	int3

ffffffff8000dd40 <alloc::raw_vec::RawVec<T,A>::grow_one::he6215f63c8fd4e69>:
ffffffff8000dd40: 41 57                	pushq	%r15
ffffffff8000dd42: 41 56                	pushq	%r14
ffffffff8000dd44: 53                   	pushq	%rbx
ffffffff8000dd45: 48 83 ec 30          	subq	$0x30, %rsp
ffffffff8000dd49: 49 89 fe             	movq	%rdi, %r14
ffffffff8000dd4c: 48 8b 07             	movq	(%rdi), %rax
ffffffff8000dd4f: 48 8d 48 01          	leaq	0x1(%rax), %rcx
ffffffff8000dd53: 48 8d 14 00          	leaq	(%rax,%rax), %rdx
ffffffff8000dd57: 48 39 d1             	cmpq	%rdx, %rcx
ffffffff8000dd5a: 48 0f 47 d1          	cmovaq	%rcx, %rdx
ffffffff8000dd5e: 48 89 f3             	movq	%rsi, %rbx
ffffffff8000dd61: 48 83 fa 05          	cmpq	$0x5, %rdx
ffffffff8000dd65: 41 bf 04 00 00 00    	movl	$0x4, %r15d
ffffffff8000dd6b: 4c 0f 43 fa          	cmovaeq	%rdx, %r15
ffffffff8000dd6f: 31 ff                	xorl	%edi, %edi
ffffffff8000dd71: 48 c1 ea 3d          	shrq	$0x3d, %rdx
ffffffff8000dd75: 75 6a                	jne	0xffffffff8000dde1 <alloc::raw_vec::RawVec<T,A>::grow_one::he6215f63c8fd4e69+0xa1>
ffffffff8000dd77: 4a 8d 14 fd 00 00 00 00      	leaq	(,%r15,8), %rdx
ffffffff8000dd7f: 48 b9 f8 ff ff ff ff ff ff 7f	movabsq	$0x7ffffffffffffff8, %rcx # imm = 0x7FFFFFFFFFFFFFF8
ffffffff8000dd89: 48 39 ca             	cmpq	%rcx, %rdx
ffffffff8000dd8c: 77 65                	ja	0xffffffff8000ddf3 <alloc::raw_vec::RawVec<T,A>::grow_one::he6215f63c8fd4e69+0xb3>
ffffffff8000dd8e: 48 85 c0             	testq	%rax, %rax
ffffffff8000dd91: 75 04                	jne	0xffffffff8000dd97 <alloc::raw_vec::RawVec<T,A>::grow_one::he6215f63c8fd4e69+0x57>
ffffffff8000dd93: 31 c0                	xorl	%eax, %eax
ffffffff8000dd95: eb 17                	jmp	0xffffffff8000ddae <alloc::raw_vec::RawVec<T,A>::grow_one::he6215f63c8fd4e69+0x6e>
ffffffff8000dd97: 49 8b 4e 08          	movq	0x8(%r14), %rcx
ffffffff8000dd9b: 48 c1 e0 03          	shlq	$0x3, %rax
ffffffff8000dd9f: 48 89 4c 24 18       	movq	%rcx, 0x18(%rsp)
ffffffff8000dda4: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff8000dda9: b8 08 00 00 00       	movl	$0x8, %eax
ffffffff8000ddae: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff8000ddb3: 48 89 e7             	movq	%rsp, %rdi
ffffffff8000ddb6: 48 8d 4c 24 18       	leaq	0x18(%rsp), %rcx
ffffffff8000ddbb: be 08 00 00 00       	movl	$0x8, %esi
ffffffff8000ddc0: e8 9b fe ff ff       	callq	0xffffffff8000dc60 <alloc::raw_vec::finish_grow::h9285a1bd88cf27b3.llvm.16599521749034828659>
ffffffff8000ddc5: 83 3c 24 01          	cmpl	$0x1, (%rsp)
ffffffff8000ddc9: 74 1e                	je	0xffffffff8000dde9 <alloc::raw_vec::RawVec<T,A>::grow_one::he6215f63c8fd4e69+0xa9>
ffffffff8000ddcb: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff8000ddd0: 49 89 46 08          	movq	%rax, 0x8(%r14)
ffffffff8000ddd4: 4d 89 3e             	movq	%r15, (%r14)
ffffffff8000ddd7: 48 83 c4 30          	addq	$0x30, %rsp
ffffffff8000dddb: 5b                   	popq	%rbx
ffffffff8000dddc: 41 5e                	popq	%r14
ffffffff8000ddde: 41 5f                	popq	%r15
ffffffff8000dde0: c3                   	retq
ffffffff8000dde1: 48 89 da             	movq	%rbx, %rdx
ffffffff8000dde4: e8 5e ad 00 00       	callq	0xffffffff80018b47 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff8000dde9: 48 8b 7c 24 08       	movq	0x8(%rsp), %rdi
ffffffff8000ddee: 48 8b 74 24 10       	movq	0x10(%rsp), %rsi
ffffffff8000ddf3: 48 89 da             	movq	%rbx, %rdx
ffffffff8000ddf6: e8 4c ad 00 00       	callq	0xffffffff80018b47 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff8000ddfb: cc                   	int3
ffffffff8000ddfc: cc                   	int3
ffffffff8000ddfd: cc                   	int3
ffffffff8000ddfe: cc                   	int3
ffffffff8000ddff: cc                   	int3

ffffffff8000de00 <<x86_64::structures::paging::mapper::UnmapError as core::fmt::Debug>::fmt::h012e894801cb220e>:
ffffffff8000de00: 48 8b 07             	movq	(%rdi), %rax
ffffffff8000de03: 48 85 c0             	testq	%rax, %rax
ffffffff8000de06: 74 19                	je	0xffffffff8000de21 <<x86_64::structures::paging::mapper::UnmapError as core::fmt::Debug>::fmt::h012e894801cb220e+0x21>
ffffffff8000de08: 83 f8 01             	cmpl	$0x1, %eax
ffffffff8000de0b: 75 28                	jne	0xffffffff8000de35 <<x86_64::structures::paging::mapper::UnmapError as core::fmt::Debug>::fmt::h012e894801cb220e+0x35>
ffffffff8000de0d: ba 0d 00 00 00       	movl	$0xd, %edx
ffffffff8000de12: 48 89 f7             	movq	%rsi, %rdi
ffffffff8000de15: 48 c7 c6 9b f5 01 80 	movq	$-0x7ffe0a65, %rsi      # imm = 0x8001F59B
ffffffff8000de1c: e9 bf c0 00 00       	jmp	0xffffffff80019ee0 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff8000de21: ba 13 00 00 00       	movl	$0x13, %edx
ffffffff8000de26: 48 89 f7             	movq	%rsi, %rdi
ffffffff8000de29: 48 c7 c6 88 f5 01 80 	movq	$-0x7ffe0a78, %rsi      # imm = 0x8001F588
ffffffff8000de30: e9 ab c0 00 00       	jmp	0xffffffff80019ee0 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff8000de35: 50                   	pushq	%rax
ffffffff8000de36: 48 83 c7 08          	addq	$0x8, %rdi
ffffffff8000de3a: 48 89 3c 24          	movq	%rdi, (%rsp)
ffffffff8000de3e: 48 89 e1             	movq	%rsp, %rcx
ffffffff8000de41: ba 13 00 00 00       	movl	$0x13, %edx
ffffffff8000de46: 48 89 f7             	movq	%rsi, %rdi
ffffffff8000de49: 48 c7 c6 c8 f5 01 80 	movq	$-0x7ffe0a38, %rsi      # imm = 0x8001F5C8
ffffffff8000de50: 49 c7 c0 a8 f5 01 80 	movq	$-0x7ffe0a58, %r8       # imm = 0x8001F5A8
ffffffff8000de57: e8 04 c2 00 00       	callq	0xffffffff8001a060 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>
ffffffff8000de5c: 59                   	popq	%rcx
ffffffff8000de5d: c3                   	retq
ffffffff8000de5e: cc                   	int3
ffffffff8000de5f: cc                   	int3

ffffffff8000de60 <taos::memory::heap::init_heap::hd4797709bd4047f7>:
ffffffff8000de60: 55                   	pushq	%rbp
ffffffff8000de61: 41 57                	pushq	%r15
ffffffff8000de63: 41 56                	pushq	%r14
ffffffff8000de65: 41 55                	pushq	%r13
ffffffff8000de67: 41 54                	pushq	%r12
ffffffff8000de69: 53                   	pushq	%rbx
ffffffff8000de6a: 48 83 ec 58          	subq	$0x58, %rsp
ffffffff8000de6e: 48 89 7c 24 38       	movq	%rdi, 0x38(%rsp)
ffffffff8000de73: 48 bf 00 00 00 00 00 81 ff ff	movabsq	$-0x7f0000000000, %rdi # imm = 0xFFFF810000000000
ffffffff8000de7d: 49 be 00 00 00 00 00 00 01 00	movabsq	$0x1000000000000, %r14 # imm = 0x1000000000000
ffffffff8000de87: 49 bf 00 f0 ff ff ff 7f 00 00	movabsq	$0x7ffffffff000, %r15 # imm = 0x7FFFFFFFF000
ffffffff8000de91: 4c 8d a7 00 f0 0f 00 	leaq	0xff000(%rdi), %r12
ffffffff8000de98: 40 b5 01             	movb	$0x1, %bpl
ffffffff8000de9b: 0f 1f 44 00 00       	nopl	(%rax,%rax)
ffffffff8000dea0: 48 81 ff 00 f0 ff ff 	cmpq	$-0x1000, %rdi          # imm = 0xF000
ffffffff8000dea7: 73 47                	jae	0xffffffff8000def0 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x90>
ffffffff8000dea9: 49 8d 04 3f          	leaq	(%r15,%rdi), %rax
ffffffff8000dead: 48 05 00 20 00 00    	addq	$0x2000, %rax           # imm = 0x2000
ffffffff8000deb3: 4c 39 f0             	cmpq	%r14, %rax
ffffffff8000deb6: 0f 83 96 02 00 00    	jae	0xffffffff8000e152 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x2f2>
ffffffff8000debc: 49 89 fd             	movq	%rdi, %r13
ffffffff8000debf: 49 c1 e5 10          	shlq	$0x10, %r13
ffffffff8000dec3: 49 81 e5 00 00 00 f0 	andq	$-0x10000000, %r13      # imm = 0xF0000000
ffffffff8000deca: 49 81 c5 00 00 00 10 	addq	$0x10000000, %r13       # imm = 0x10000000
ffffffff8000ded1: 49 c1 fd 10          	sarq	$0x10, %r13
ffffffff8000ded5: 0f b6 05 3c 83 01 00 	movzbl	0x1833c(%rip), %eax     # 0xffffffff80026218 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.6482013028561868880+0x18>
ffffffff8000dedc: 3c 02                	cmpb	$0x2, %al
ffffffff8000dede: 74 7d                	je	0xffffffff8000df5d <taos::memory::heap::init_heap::hd4797709bd4047f7+0xfd>
ffffffff8000dee0: eb 4c                	jmp	0xffffffff8000df2e <taos::memory::heap::init_heap::hd4797709bd4047f7+0xce>
ffffffff8000dee2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
ffffffff8000def0: 49 81 fc 00 10 00 00 	cmpq	$0x1000, %r12           # imm = 0x1000
ffffffff8000def7: 0f 82 6d 02 00 00    	jb	0xffffffff8000e16a <taos::memory::heap::init_heap::hd4797709bd4047f7+0x30a>
ffffffff8000defd: 4b 8d 04 3c          	leaq	(%r12,%r15), %rax
ffffffff8000df01: 4c 39 f0             	cmpq	%r14, %rax
ffffffff8000df04: 0f 83 48 02 00 00    	jae	0xffffffff8000e152 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x2f2>
ffffffff8000df0a: 49 c1 e4 10          	shlq	$0x10, %r12
ffffffff8000df0e: 49 81 c4 00 00 00 f0 	addq	$-0x10000000, %r12      # imm = 0xF0000000
ffffffff8000df15: 49 c1 fc 10          	sarq	$0x10, %r12
ffffffff8000df19: 49 81 e4 00 f0 ff ff 	andq	$-0x1000, %r12          # imm = 0xF000
ffffffff8000df20: 49 89 fd             	movq	%rdi, %r13
ffffffff8000df23: 0f b6 05 ee 82 01 00 	movzbl	0x182ee(%rip), %eax     # 0xffffffff80026218 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.6482013028561868880+0x18>
ffffffff8000df2a: 3c 02                	cmpb	$0x2, %al
ffffffff8000df2c: 74 2f                	je	0xffffffff8000df5d <taos::memory::heap::init_heap::hd4797709bd4047f7+0xfd>
ffffffff8000df2e: 48 89 fb             	movq	%rdi, %rbx
ffffffff8000df31: 48 c7 c7 00 62 02 80 	movq	$-0x7ffd9e00, %rdi      # imm = 0x80026200
ffffffff8000df38: e8 93 42 ff ff       	callq	0xffffffff800021d0 <spin::once::Once<T,R>::try_call_once_slow::h2c9ba4a48035d004.llvm.14359069980145722807>
ffffffff8000df3d: 48 89 df             	movq	%rbx, %rdi
ffffffff8000df40: eb 1b                	jmp	0xffffffff8000df5d <taos::memory::heap::init_heap::hd4797709bd4047f7+0xfd>
ffffffff8000df42: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
ffffffff8000df50: f3 90                	pause
ffffffff8000df52: 0f b6 05 a7 82 01 00 	movzbl	0x182a7(%rip), %eax     # 0xffffffff80026200 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.6482013028561868880>
ffffffff8000df59: 84 c0                	testb	%al, %al
ffffffff8000df5b: 75 f3                	jne	0xffffffff8000df50 <taos::memory::heap::init_heap::hd4797709bd4047f7+0xf0>
ffffffff8000df5d: 31 c0                	xorl	%eax, %eax
ffffffff8000df5f: f0                   	lock
ffffffff8000df60: 40 0f b0 2d 98 82 01 00      	cmpxchgb	%bpl, 0x18298(%rip) # 0xffffffff80026200 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.6482013028561868880>
ffffffff8000df68: 75 e8                	jne	0xffffffff8000df52 <taos::memory::heap::init_heap::hd4797709bd4047f7+0xf2>
ffffffff8000df6a: 48 c7 c6 08 62 02 80 	movq	$-0x7ffd9df8, %rsi      # imm = 0x80026208
ffffffff8000df71: 31 d2                	xorl	%edx, %edx
ffffffff8000df73: e8 38 32 ff ff       	callq	0xffffffff800011b0 <taos::memory::paging::create_mapping::h82f738cb2eb9bd37>
ffffffff8000df78: c6 05 81 82 01 00 00 	movb	$0x0, 0x18281(%rip)     # 0xffffffff80026200 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.6482013028561868880>
ffffffff8000df7f: 4c 89 ef             	movq	%r13, %rdi
ffffffff8000df82: 4d 39 e5             	cmpq	%r12, %r13
ffffffff8000df85: 0f 86 15 ff ff ff    	jbe	0xffffffff8000dea0 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x40>
ffffffff8000df8b: b1 01                	movb	$0x1, %cl
ffffffff8000df8d: 0f 1f 00             	nopl	(%rax)
ffffffff8000df90: 31 c0                	xorl	%eax, %eax
ffffffff8000df92: f0                   	lock
ffffffff8000df93: 0f b0 0d 66 70 01 00 	cmpxchgb	%cl, 0x17066(%rip)      # 0xffffffff80025000 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208>
ffffffff8000df9a: 75 06                	jne	0xffffffff8000dfa2 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x142>
ffffffff8000df9c: eb 11                	jmp	0xffffffff8000dfaf <taos::memory::heap::init_heap::hd4797709bd4047f7+0x14f>
ffffffff8000df9e: 66 90                	nop
ffffffff8000dfa0: f3 90                	pause
ffffffff8000dfa2: 0f b6 05 57 70 01 00 	movzbl	0x17057(%rip), %eax     # 0xffffffff80025000 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208>
ffffffff8000dfa9: 84 c0                	testb	%al, %al
ffffffff8000dfab: 75 f3                	jne	0xffffffff8000dfa0 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x140>
ffffffff8000dfad: eb e1                	jmp	0xffffffff8000df90 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x130>
ffffffff8000dfaf: 48 8b 05 52 70 01 00 	movq	0x17052(%rip), %rax     # 0xffffffff80025008 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x8>
ffffffff8000dfb6: 48 83 f8 02          	cmpq	$0x2, %rax
ffffffff8000dfba: 0f 83 b6 01 00 00    	jae	0xffffffff8000e176 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x316>
ffffffff8000dfc0: 48 85 c0             	testq	%rax, %rax
ffffffff8000dfc3: 0f 84 e8 01 00 00    	je	0xffffffff8000e1b1 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x351>
ffffffff8000dfc9: 48 8b 35 58 70 01 00 	movq	0x17058(%rip), %rsi     # 0xffffffff80025028 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x28>
ffffffff8000dfd0: 48 8b 05 39 70 01 00 	movq	0x17039(%rip), %rax     # 0xffffffff80025010 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x10>
ffffffff8000dfd7: 48 8b 0d 5a 70 01 00 	movq	0x1705a(%rip), %rcx     # 0xffffffff80025038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x38>
ffffffff8000dfde: 48 c7 44 24 40 00 00 00 00   	movq	$0x0, 0x40(%rsp)
ffffffff8000dfe7: 48 89 4c 24 48       	movq	%rcx, 0x48(%rsp)
ffffffff8000dfec: 48 89 44 24 50       	movq	%rax, 0x50(%rsp)
ffffffff8000dff1: 48 89 e7             	movq	%rsp, %rdi
ffffffff8000dff4: 4c 8d 74 24 40       	leaq	0x40(%rsp), %r14
ffffffff8000dff9: 4c 89 f2             	movq	%r14, %rdx
ffffffff8000dffc: e8 5f d7 ff ff       	callq	0xffffffff8000b760 <taos::memory::bitmap_frame_allocator::BitmapFrameAllocator::init::h40d2c32f1953982e>
ffffffff8000e001: 48 8b 05 00 70 01 00 	movq	0x17000(%rip), %rax     # 0xffffffff80025008 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x8>
ffffffff8000e008: 48 83 f8 03          	cmpq	$0x3, %rax
ffffffff8000e00c: 74 64                	je	0xffffffff8000e072 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x212>
ffffffff8000e00e: 83 f8 02             	cmpl	$0x2, %eax
ffffffff8000e011: 75 5f                	jne	0xffffffff8000e072 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x212>
ffffffff8000e013: 48 8b 0d fe 6f 01 00 	movq	0x16ffe(%rip), %rcx     # 0xffffffff80025018 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x18>
ffffffff8000e01a: 48 85 c9             	testq	%rcx, %rcx
ffffffff8000e01d: 74 53                	je	0xffffffff8000e072 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x212>
ffffffff8000e01f: 48 8b 35 ea 6f 01 00 	movq	0x16fea(%rip), %rsi     # 0xffffffff80025010 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x10>
ffffffff8000e026: 48 c1 e1 03          	shlq	$0x3, %rcx
ffffffff8000e02a: b2 01                	movb	$0x1, %dl
ffffffff8000e02c: 0f 1f 40 00          	nopl	(%rax)
ffffffff8000e030: 31 c0                	xorl	%eax, %eax
ffffffff8000e032: f0                   	lock
ffffffff8000e033: 0f b0 15 16 70 01 00 	cmpxchgb	%dl, 0x17016(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000e03a: 74 1e                	je	0xffffffff8000e05a <taos::memory::heap::init_heap::hd4797709bd4047f7+0x1fa>
ffffffff8000e03c: 0f 1f 40 00          	nopl	(%rax)
ffffffff8000e040: 0f b6 05 09 70 01 00 	movzbl	0x17009(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000e047: 84 c0                	testb	%al, %al
ffffffff8000e049: 74 e5                	je	0xffffffff8000e030 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x1d0>
ffffffff8000e04b: f3 90                	pause
ffffffff8000e04d: 0f b6 05 fc 6f 01 00 	movzbl	0x16ffc(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000e054: 84 c0                	testb	%al, %al
ffffffff8000e056: 75 f3                	jne	0xffffffff8000e04b <taos::memory::heap::init_heap::hd4797709bd4047f7+0x1eb>
ffffffff8000e058: eb d6                	jmp	0xffffffff8000e030 <taos::memory::heap::init_heap::hd4797709bd4047f7+0x1d0>
ffffffff8000e05a: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff8000e05f: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000e066: e8 35 50 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000e06b: c6 05 de 6f 01 00 00 	movb	$0x0, 0x16fde(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000e072: 48 c7 05 8b 6f 01 00 02 00 00 00     	movq	$0x2, 0x16f8b(%rip) # 0xffffffff80025008 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x8>
ffffffff8000e07d: 48 8b 04 24          	movq	(%rsp), %rax
ffffffff8000e081: 48 8b 4c 24 08       	movq	0x8(%rsp), %rcx
ffffffff8000e086: 48 89 05 83 6f 01 00 	movq	%rax, 0x16f83(%rip)     # 0xffffffff80025010 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x10>
ffffffff8000e08d: 48 89 0d 84 6f 01 00 	movq	%rcx, 0x16f84(%rip)     # 0xffffffff80025018 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x18>
ffffffff8000e094: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff8000e099: 48 89 05 80 6f 01 00 	movq	%rax, 0x16f80(%rip)     # 0xffffffff80025020 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x20>
ffffffff8000e0a0: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff8000e0a5: 48 89 05 7c 6f 01 00 	movq	%rax, 0x16f7c(%rip)     # 0xffffffff80025028 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x28>
ffffffff8000e0ac: 48 8b 44 24 20       	movq	0x20(%rsp), %rax
ffffffff8000e0b1: 48 89 05 78 6f 01 00 	movq	%rax, 0x16f78(%rip)     # 0xffffffff80025030 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x30>
ffffffff8000e0b8: 48 8b 44 24 28       	movq	0x28(%rsp), %rax
ffffffff8000e0bd: 48 89 05 74 6f 01 00 	movq	%rax, 0x16f74(%rip)     # 0xffffffff80025038 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x38>
ffffffff8000e0c4: 48 8b 44 24 30       	movq	0x30(%rsp), %rax
ffffffff8000e0c9: 48 89 05 70 6f 01 00 	movq	%rax, 0x16f70(%rip)     # 0xffffffff80025040 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x40>
ffffffff8000e0d0: 48 c7 04 24 30 f6 01 80      	movq	$-0x7ffe09d0, (%rsp) # imm = 0x8001F630
ffffffff8000e0d8: 48 c7 44 24 08 01 00 00 00   	movq	$0x1, 0x8(%rsp)
ffffffff8000e0e1: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff8000e0ea: 4c 89 74 24 10       	movq	%r14, 0x10(%rsp)
ffffffff8000e0ef: 48 c7 44 24 18 00 00 00 00   	movq	$0x0, 0x18(%rsp)
ffffffff8000e0f8: 48 89 e7             	movq	%rsp, %rdi
ffffffff8000e0fb: e8 50 d1 ff ff       	callq	0xffffffff8000b250 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff8000e100: c6 05 f9 6e 01 00 00 	movb	$0x0, 0x16ef9(%rip)     # 0xffffffff80025000 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208>
ffffffff8000e107: 48 c7 04 24 08 f6 01 80      	movq	$-0x7ffe09f8, (%rsp) # imm = 0x8001F608
ffffffff8000e10f: 48 c7 44 24 08 01 00 00 00   	movq	$0x1, 0x8(%rsp)
ffffffff8000e118: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff8000e121: 4c 89 74 24 10       	movq	%r14, 0x10(%rsp)
ffffffff8000e126: 48 c7 44 24 18 00 00 00 00   	movq	$0x0, 0x18(%rsp)
ffffffff8000e12f: 48 89 e7             	movq	%rsp, %rdi
ffffffff8000e132: e8 19 d1 ff ff       	callq	0xffffffff8000b250 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff8000e137: 48 8b 44 24 38       	movq	0x38(%rsp), %rax
ffffffff8000e13c: 48 c7 00 03 00 00 00 	movq	$0x3, (%rax)
ffffffff8000e143: 48 83 c4 58          	addq	$0x58, %rsp
ffffffff8000e147: 5b                   	popq	%rbx
ffffffff8000e148: 41 5c                	popq	%r12
ffffffff8000e14a: 41 5d                	popq	%r13
ffffffff8000e14c: 41 5e                	popq	%r14
ffffffff8000e14e: 41 5f                	popq	%r15
ffffffff8000e150: 5d                   	popq	%rbp
ffffffff8000e151: c3                   	retq
ffffffff8000e152: be 36 00 00 00       	movl	$0x36, %esi
ffffffff8000e157: 48 c7 c7 f8 f3 01 80 	movq	$-0x7ffe0c08, %rdi      # imm = 0x8001F3F8
ffffffff8000e15e: 48 c7 c2 90 f4 01 80 	movq	$-0x7ffe0b70, %rdx      # imm = 0x8001F490
ffffffff8000e165: e8 06 e3 00 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000e16a: 48 c7 c7 70 f5 01 80 	movq	$-0x7ffe0a90, %rdi      # imm = 0x8001F570
ffffffff8000e171: e8 fa e7 00 00       	callq	0xffffffff8001c970 <core::option::unwrap_failed::hd8ef34c781aa10a4>
ffffffff8000e176: 48 c7 04 24 78 f6 01 80      	movq	$-0x7ffe0988, (%rsp) # imm = 0x8001F678
ffffffff8000e17e: 48 c7 44 24 08 01 00 00 00   	movq	$0x1, 0x8(%rsp)
ffffffff8000e187: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff8000e190: 48 c7 44 24 10 08 00 00 00   	movq	$0x8, 0x10(%rsp)
ffffffff8000e199: 48 c7 44 24 18 00 00 00 00   	movq	$0x0, 0x18(%rsp)
ffffffff8000e1a2: 48 89 e7             	movq	%rsp, %rdi
ffffffff8000e1a5: 48 c7 c6 a0 f6 01 80 	movq	$-0x7ffe0960, %rsi      # imm = 0x8001F6A0
ffffffff8000e1ac: e8 3f e2 00 00       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8000e1b1: be 17 00 00 00       	movl	$0x17, %esi
ffffffff8000e1b6: 48 c7 c7 b0 eb 01 80 	movq	$-0x7ffe1450, %rdi      # imm = 0x8001EBB0
ffffffff8000e1bd: 48 c7 c2 c8 eb 01 80 	movq	$-0x7ffe1438, %rdx      # imm = 0x8001EBC8
ffffffff8000e1c4: e8 c7 e7 00 00       	callq	0xffffffff8001c990 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff8000e1c9: cc                   	int3
ffffffff8000e1ca: cc                   	int3
ffffffff8000e1cb: cc                   	int3
ffffffff8000e1cc: cc                   	int3
ffffffff8000e1cd: cc                   	int3
ffffffff8000e1ce: cc                   	int3
ffffffff8000e1cf: cc                   	int3

ffffffff8000e1d0 <taos::processes::loader::load_elf::ha68086dbc075a067>:
ffffffff8000e1d0: 55                   	pushq	%rbp
ffffffff8000e1d1: 41 57                	pushq	%r15
ffffffff8000e1d3: 41 56                	pushq	%r14
ffffffff8000e1d5: 41 55                	pushq	%r13
ffffffff8000e1d7: 41 54                	pushq	%r12
ffffffff8000e1d9: 53                   	pushq	%rbx
ffffffff8000e1da: 48 81 ec 68 05 00 00 	subq	$0x568, %rsp            # imm = 0x568
ffffffff8000e1e1: 48 89 cb             	movq	%rcx, %rbx
ffffffff8000e1e4: 49 89 d5             	movq	%rdx, %r13
ffffffff8000e1e7: 48 89 f2             	movq	%rsi, %rdx
ffffffff8000e1ea: 48 89 fe             	movq	%rdi, %rsi
ffffffff8000e1ed: 48 8d bc 24 38 01 00 00      	leaq	0x138(%rsp), %rdi
ffffffff8000e1f5: 48 89 b4 24 00 01 00 00      	movq	%rsi, 0x100(%rsp)
ffffffff8000e1fd: 48 89 14 24          	movq	%rdx, (%rsp)
ffffffff8000e201: e8 2a 2e 00 00       	callq	0xffffffff80011030 <goblin::elf::Elf::parse::hfb1810c3f1f87358>
ffffffff8000e206: 48 8b 8c 24 38 01 00 00      	movq	0x138(%rsp), %rcx
ffffffff8000e20e: 48 89 8c 24 e0 00 00 00      	movq	%rcx, 0xe0(%rsp)
ffffffff8000e216: 48 83 f9 03          	cmpq	$0x3, %rcx
ffffffff8000e21a: 0f 84 72 0a 00 00    	je	0xffffffff8000ec92 <taos::processes::loader::load_elf::ha68086dbc075a067+0xac2>
ffffffff8000e220: 48 bd 00 00 00 00 00 00 01 00	movabsq	$0x1000000000000, %rbp # imm = 0x1000000000000
ffffffff8000e22a: 49 bc 00 f0 ff ff ff 7f 00 00	movabsq	$0x7ffffffff000, %r12 # imm = 0x7FFFFFFFF000
ffffffff8000e234: 4c 8b bc 24 60 02 00 00      	movq	0x260(%rsp), %r15
ffffffff8000e23c: 48 8b 84 24 68 02 00 00      	movq	0x268(%rsp), %rax
ffffffff8000e244: 48 89 44 24 40       	movq	%rax, 0x40(%rsp)
ffffffff8000e249: 48 8b 84 24 78 02 00 00      	movq	0x278(%rsp), %rax
ffffffff8000e251: 48 89 84 24 90 00 00 00      	movq	%rax, 0x90(%rsp)
ffffffff8000e259: 48 8b 8c 24 80 02 00 00      	movq	0x280(%rsp), %rcx
ffffffff8000e261: 48 8b 84 24 90 02 00 00      	movq	0x290(%rsp), %rax
ffffffff8000e269: 48 89 84 24 98 00 00 00      	movq	%rax, 0x98(%rsp)
ffffffff8000e271: 48 8b 84 24 98 02 00 00      	movq	0x298(%rsp), %rax
ffffffff8000e279: 48 89 44 24 50       	movq	%rax, 0x50(%rsp)
ffffffff8000e27e: 48 8b 84 24 a8 02 00 00      	movq	0x2a8(%rsp), %rax
ffffffff8000e286: 48 89 84 24 a0 00 00 00      	movq	%rax, 0xa0(%rsp)
ffffffff8000e28e: 48 8b 84 24 b0 02 00 00      	movq	0x2b0(%rsp), %rax
ffffffff8000e296: 48 89 44 24 58       	movq	%rax, 0x58(%rsp)
ffffffff8000e29b: 48 8b 84 24 e0 02 00 00      	movq	0x2e0(%rsp), %rax
ffffffff8000e2a3: 48 89 84 24 a8 00 00 00      	movq	%rax, 0xa8(%rsp)
ffffffff8000e2ab: 48 8b 84 24 e8 02 00 00      	movq	0x2e8(%rsp), %rax
ffffffff8000e2b3: 48 89 44 24 60       	movq	%rax, 0x60(%rsp)
ffffffff8000e2b8: 48 8b 84 24 18 03 00 00      	movq	0x318(%rsp), %rax
ffffffff8000e2c0: 48 89 84 24 b0 00 00 00      	movq	%rax, 0xb0(%rsp)
ffffffff8000e2c8: 48 8b 84 24 20 03 00 00      	movq	0x320(%rsp), %rax
ffffffff8000e2d0: 48 89 44 24 68       	movq	%rax, 0x68(%rsp)
ffffffff8000e2d5: 48 6b 94 24 88 02 00 00 38   	imulq	$0x38, 0x288(%rsp), %rdx
ffffffff8000e2de: 48 01 ca             	addq	%rcx, %rdx
ffffffff8000e2e1: 48 8b 84 24 50 03 00 00      	movq	0x350(%rsp), %rax
ffffffff8000e2e9: 48 89 84 24 b8 00 00 00      	movq	%rax, 0xb8(%rsp)
ffffffff8000e2f1: 48 8b 84 24 58 03 00 00      	movq	0x358(%rsp), %rax
ffffffff8000e2f9: 48 89 44 24 70       	movq	%rax, 0x70(%rsp)
ffffffff8000e2fe: 48 8b 84 24 68 03 00 00      	movq	0x368(%rsp), %rax
ffffffff8000e306: 48 89 84 24 c0 00 00 00      	movq	%rax, 0xc0(%rsp)
ffffffff8000e30e: 48 8b 84 24 70 03 00 00      	movq	0x370(%rsp), %rax
ffffffff8000e316: 48 89 44 24 78       	movq	%rax, 0x78(%rsp)
ffffffff8000e31b: 48 8b 84 24 80 03 00 00      	movq	0x380(%rsp), %rax
ffffffff8000e323: 48 89 84 24 c8 00 00 00      	movq	%rax, 0xc8(%rsp)
ffffffff8000e32b: 48 8b 84 24 88 03 00 00      	movq	0x388(%rsp), %rax
ffffffff8000e333: 48 89 84 24 80 00 00 00      	movq	%rax, 0x80(%rsp)
ffffffff8000e33b: 48 8b 84 24 98 03 00 00      	movq	0x398(%rsp), %rax
ffffffff8000e343: 48 89 84 24 d0 00 00 00      	movq	%rax, 0xd0(%rsp)
ffffffff8000e34b: 48 8b 84 24 a0 03 00 00      	movq	0x3a0(%rsp), %rax
ffffffff8000e353: 48 89 84 24 88 00 00 00      	movq	%rax, 0x88(%rsp)
ffffffff8000e35b: 48 8b 84 24 08 05 00 00      	movq	0x508(%rsp), %rax
ffffffff8000e363: 48 89 84 24 d8 00 00 00      	movq	%rax, 0xd8(%rsp)
ffffffff8000e36b: 48 8d 43 08          	leaq	0x8(%rbx), %rax
ffffffff8000e36f: 48 89 84 24 10 01 00 00      	movq	%rax, 0x110(%rsp)
ffffffff8000e377: 48 89 4c 24 48       	movq	%rcx, 0x48(%rsp)
ffffffff8000e37c: 48 89 ce             	movq	%rcx, %rsi
ffffffff8000e37f: 4c 89 bc 24 f0 00 00 00      	movq	%r15, 0xf0(%rsp)
ffffffff8000e387: 4c 89 ac 24 20 01 00 00      	movq	%r13, 0x120(%rsp)
ffffffff8000e38f: 48 89 9c 24 18 01 00 00      	movq	%rbx, 0x118(%rsp)
ffffffff8000e397: 48 89 94 24 e8 00 00 00      	movq	%rdx, 0xe8(%rsp)
ffffffff8000e39f: 90                   	nop
ffffffff8000e3a0: 48 39 d6             	cmpq	%rdx, %rsi
ffffffff8000e3a3: 0f 84 7f 03 00 00    	je	0xffffffff8000e728 <taos::processes::loader::load_elf::ha68086dbc075a067+0x558>
ffffffff8000e3a9: 48 89 f7             	movq	%rsi, %rdi
ffffffff8000e3ac: 48 83 c6 38          	addq	$0x38, %rsi
ffffffff8000e3b0: 83 7f 30 01          	cmpl	$0x1, 0x30(%rdi)
ffffffff8000e3b4: 75 ea                	jne	0xffffffff8000e3a0 <taos::processes::loader::load_elf::ha68086dbc075a067+0x1d0>
ffffffff8000e3b6: 4c 8b 47 08          	movq	0x8(%rdi), %r8
ffffffff8000e3ba: 4b 8d 04 04          	leaq	(%r12,%r8), %rax
ffffffff8000e3be: 48 05 00 10 00 00    	addq	$0x1000, %rax           # imm = 0x1000
ffffffff8000e3c4: 48 39 e8             	cmpq	%rbp, %rax
ffffffff8000e3c7: 0f 83 fd 03 00 00    	jae	0xffffffff8000e7ca <taos::processes::loader::load_elf::ha68086dbc075a067+0x5fa>
ffffffff8000e3cd: 48 8b 47 20          	movq	0x20(%rdi), %rax
ffffffff8000e3d1: 49 8d 0c 00          	leaq	(%r8,%rax), %rcx
ffffffff8000e3d5: 4c 01 e1             	addq	%r12, %rcx
ffffffff8000e3d8: 48 81 c1 ff 0f 00 00 	addq	$0xfff, %rcx            # imm = 0xFFF
ffffffff8000e3df: 48 39 e9             	cmpq	%rbp, %rcx
ffffffff8000e3e2: 0f 83 e2 03 00 00    	jae	0xffffffff8000e7ca <taos::processes::loader::load_elf::ha68086dbc075a067+0x5fa>
ffffffff8000e3e8: 49 8d 0c 00          	leaq	(%r8,%rax), %rcx
ffffffff8000e3ec: 48 ff c9             	decq	%rcx
ffffffff8000e3ef: 49 81 e0 00 f0 ff ff 	andq	$-0x1000, %r8           # imm = 0xF000
ffffffff8000e3f6: 48 81 e1 00 f0 ff ff 	andq	$-0x1000, %rcx          # imm = 0xF000
ffffffff8000e3fd: 49 39 c8             	cmpq	%rcx, %r8
ffffffff8000e400: 77 9e                	ja	0xffffffff8000e3a0 <taos::processes::loader::load_elf::ha68086dbc075a067+0x1d0>
ffffffff8000e402: 48 89 b4 24 f8 00 00 00      	movq	%rsi, 0xf8(%rsp)
ffffffff8000e40a: 48 8b 07             	movq	(%rdi), %rax
ffffffff8000e40d: 48 89 84 24 08 01 00 00      	movq	%rax, 0x108(%rsp)
ffffffff8000e415: 48 89 bc 24 28 01 00 00      	movq	%rdi, 0x128(%rsp)
ffffffff8000e41d: 48 8b 47 18          	movq	0x18(%rdi), %rax
ffffffff8000e421: 48 89 44 24 08       	movq	%rax, 0x8(%rsp)
ffffffff8000e426: 4d 89 c4             	movq	%r8, %r12
ffffffff8000e429: 41 be 05 00 00 00    	movl	$0x5, %r14d
ffffffff8000e42f: 4c 89 84 24 30 01 00 00      	movq	%r8, 0x130(%rsp)
ffffffff8000e437: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
ffffffff8000e440: 49 81 fc 00 f0 ff ff 	cmpq	$-0x1000, %r12          # imm = 0xF000
ffffffff8000e447: 73 47                	jae	0xffffffff8000e490 <taos::processes::loader::load_elf::ha68086dbc075a067+0x2c0>
ffffffff8000e449: 48 b8 00 f0 ff ff ff 7f 00 00	movabsq	$0x7ffffffff000, %rax # imm = 0x7FFFFFFFF000
ffffffff8000e453: 4c 01 e0             	addq	%r12, %rax
ffffffff8000e456: 48 05 00 20 00 00    	addq	$0x2000, %rax           # imm = 0x2000
ffffffff8000e45c: 48 39 e8             	cmpq	%rbp, %rax
ffffffff8000e45f: 0f 83 65 03 00 00    	jae	0xffffffff8000e7ca <taos::processes::loader::load_elf::ha68086dbc075a067+0x5fa>
ffffffff8000e465: 48 89 4c 24 18       	movq	%rcx, 0x18(%rsp)
ffffffff8000e46a: 4c 89 e0             	movq	%r12, %rax
ffffffff8000e46d: 48 c1 e0 10          	shlq	$0x10, %rax
ffffffff8000e471: 48 25 00 00 00 f0    	andq	$-0x10000000, %rax      # imm = 0xF0000000
ffffffff8000e477: 48 05 00 00 00 10    	addq	$0x10000000, %rax       # imm = 0x10000000
ffffffff8000e47d: 48 c1 f8 10          	sarq	$0x10, %rax
ffffffff8000e481: 48 89 44 24 10       	movq	%rax, 0x10(%rsp)
ffffffff8000e486: eb 4b                	jmp	0xffffffff8000e4d3 <taos::processes::loader::load_elf::ha68086dbc075a067+0x303>
ffffffff8000e488: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
ffffffff8000e490: 48 81 f9 00 10 00 00 	cmpq	$0x1000, %rcx           # imm = 0x1000
ffffffff8000e497: 0f 82 06 07 00 00    	jb	0xffffffff8000eba3 <taos::processes::loader::load_elf::ha68086dbc075a067+0x9d3>
ffffffff8000e49d: 48 b8 00 f0 ff ff ff 7f 00 00	movabsq	$0x7ffffffff000, %rax # imm = 0x7FFFFFFFF000
ffffffff8000e4a7: 48 01 c8             	addq	%rcx, %rax
ffffffff8000e4aa: 48 39 e8             	cmpq	%rbp, %rax
ffffffff8000e4ad: 0f 83 17 03 00 00    	jae	0xffffffff8000e7ca <taos::processes::loader::load_elf::ha68086dbc075a067+0x5fa>
ffffffff8000e4b3: 48 c1 e1 10          	shlq	$0x10, %rcx
ffffffff8000e4b7: 48 81 c1 00 00 00 f0 	addq	$-0x10000000, %rcx      # imm = 0xF0000000
ffffffff8000e4be: 48 c1 f9 10          	sarq	$0x10, %rcx
ffffffff8000e4c2: 48 81 e1 00 f0 ff ff 	andq	$-0x1000, %rcx          # imm = 0xF000
ffffffff8000e4c9: 48 89 4c 24 18       	movq	%rcx, 0x18(%rsp)
ffffffff8000e4ce: 4c 89 64 24 10       	movq	%r12, 0x10(%rsp)
ffffffff8000e4d3: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff8000e4d8: b9 07 00 00 00       	movl	$0x7, %ecx
ffffffff8000e4dd: 4c 89 e7             	movq	%r12, %rdi
ffffffff8000e4e0: 4c 89 ee             	movq	%r13, %rsi
ffffffff8000e4e3: e8 c8 2c ff ff       	callq	0xffffffff800011b0 <taos::memory::paging::create_mapping::h82f738cb2eb9bd37>
ffffffff8000e4e8: ba 07 00 00 00       	movl	$0x7, %edx
ffffffff8000e4ed: 48 89 df             	movq	%rbx, %rdi
ffffffff8000e4f0: 48 89 c6             	movq	%rax, %rsi
ffffffff8000e4f3: e8 68 2e ff ff       	callq	0xffffffff80001360 <taos::memory::paging::map_kernel_frame::hd0419d03bd944108>
ffffffff8000e4f8: 48 89 c5             	movq	%rax, %rbp
ffffffff8000e4fb: 4d 89 e7             	movq	%r12, %r15
ffffffff8000e4fe: 4c 2b bc 24 30 01 00 00      	subq	0x130(%rsp), %r15
ffffffff8000e506: b9 00 00 00 00       	movl	$0x0, %ecx
ffffffff8000e50b: 4c 0f 42 f9          	cmovbq	%rcx, %r15
ffffffff8000e50f: 44 89 f8             	movl	%r15d, %eax
ffffffff8000e512: 25 ff 0f 00 00       	andl	$0xfff, %eax            # imm = 0xFFF
ffffffff8000e517: bb 00 10 00 00       	movl	$0x1000, %ebx           # imm = 0x1000
ffffffff8000e51c: 48 29 c3             	subq	%rax, %rbx
ffffffff8000e51f: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff8000e524: 49 89 c5             	movq	%rax, %r13
ffffffff8000e527: 4d 29 fd             	subq	%r15, %r13
ffffffff8000e52a: 4c 0f 42 e9          	cmovbq	%rcx, %r13
ffffffff8000e52e: 4c 39 eb             	cmpq	%r13, %rbx
ffffffff8000e531: 4c 89 ea             	movq	%r13, %rdx
ffffffff8000e534: 48 0f 42 d3          	cmovbq	%rbx, %rdx
ffffffff8000e538: 4c 39 f8             	cmpq	%r15, %rax
ffffffff8000e53b: 76 33                	jbe	0xffffffff8000e570 <taos::processes::loader::load_elf::ha68086dbc075a067+0x3a0>
ffffffff8000e53d: 48 8b 84 24 08 01 00 00      	movq	0x108(%rsp), %rax
ffffffff8000e545: 49 8d 34 07          	leaq	(%r15,%rax), %rsi
ffffffff8000e549: 48 89 d0             	movq	%rdx, %rax
ffffffff8000e54c: 48 01 f0             	addq	%rsi, %rax
ffffffff8000e54f: 0f 82 5a 06 00 00    	jb	0xffffffff8000ebaf <taos::processes::loader::load_elf::ha68086dbc075a067+0x9df>
ffffffff8000e555: 48 3b 04 24          	cmpq	(%rsp), %rax
ffffffff8000e559: 0f 87 62 06 00 00    	ja	0xffffffff8000ebc1 <taos::processes::loader::load_elf::ha68086dbc075a067+0x9f1>
ffffffff8000e55f: 48 03 b4 24 00 01 00 00      	addq	0x100(%rsp), %rsi
ffffffff8000e567: 48 89 ef             	movq	%rbp, %rdi
ffffffff8000e56a: ff 15 b0 7e 02 00    	callq	*0x27eb0(%rip)          # 0xffffffff80036420
ffffffff8000e570: 49 39 dd             	cmpq	%rbx, %r13
ffffffff8000e573: 73 26                	jae	0xffffffff8000e59b <taos::processes::loader::load_elf::ha68086dbc075a067+0x3cb>
ffffffff8000e575: 4c 39 7c 24 08       	cmpq	%r15, 0x8(%rsp)
ffffffff8000e57a: b8 00 00 00 00       	movl	$0x0, %eax
ffffffff8000e57f: 4c 0f 46 e8          	cmovbeq	%rax, %r13
ffffffff8000e583: 4c 29 eb             	subq	%r13, %rbx
ffffffff8000e586: 48 0f 42 d8          	cmovbq	%rax, %rbx
ffffffff8000e58a: 49 01 ed             	addq	%rbp, %r13
ffffffff8000e58d: 4c 89 ef             	movq	%r13, %rdi
ffffffff8000e590: 31 f6                	xorl	%esi, %esi
ffffffff8000e592: 48 89 da             	movq	%rbx, %rdx
ffffffff8000e595: ff 15 95 7e 02 00    	callq	*0x27e95(%rip)          # 0xffffffff80036430
ffffffff8000e59b: 48 8b 84 24 28 01 00 00      	movq	0x128(%rsp), %rax
ffffffff8000e5a3: 8b 40 34             	movl	0x34(%rax), %eax
ffffffff8000e5a6: 89 c1                	movl	%eax, %ecx
ffffffff8000e5a8: 83 e1 02             	andl	$0x2, %ecx
ffffffff8000e5ab: 4c 89 f2             	movq	%r14, %rdx
ffffffff8000e5ae: 48 09 ca             	orq	%rcx, %rdx
ffffffff8000e5b1: 49 89 d6             	movq	%rdx, %r14
ffffffff8000e5b4: 48 b9 00 00 00 00 00 00 00 80	movabsq	$-0x8000000000000000, %rcx # imm = 0x8000000000000000
ffffffff8000e5be: 49 09 ce             	orq	%rcx, %r14
ffffffff8000e5c1: a8 01                	testb	$0x1, %al
ffffffff8000e5c3: 4c 0f 45 f2          	cmovneq	%rdx, %r14
ffffffff8000e5c7: 4c 8d bc 24 38 01 00 00      	leaq	0x138(%rsp), %r15
ffffffff8000e5cf: 4c 89 ff             	movq	%r15, %rdi
ffffffff8000e5d2: 4c 8b ac 24 20 01 00 00      	movq	0x120(%rsp), %r13
ffffffff8000e5da: 4c 89 ee             	movq	%r13, %rsi
ffffffff8000e5dd: 4c 89 e2             	movq	%r12, %rdx
ffffffff8000e5e0: 4c 89 f1             	movq	%r14, %rcx
ffffffff8000e5e3: e8 e8 0c 00 00       	callq	0xffffffff8000f2d0 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf>
ffffffff8000e5e8: 80 bc 24 38 01 00 00 01      	cmpb	$0x1, 0x138(%rsp)
ffffffff8000e5f0: 0f 84 de 05 00 00    	je	0xffffffff8000ebd4 <taos::processes::loader::load_elf::ha68086dbc075a067+0xa04>
ffffffff8000e5f6: 4c 89 e7             	movq	%r12, %rdi
ffffffff8000e5f9: e8 72 1d 00 00       	callq	0xffffffff80010370 <taos::memory::tlb::tlb_shootdown::h677329e270f13473>
ffffffff8000e5fe: 48 c1 e5 10          	shlq	$0x10, %rbp
ffffffff8000e602: 48 c1 fd 10          	sarq	$0x10, %rbp
ffffffff8000e606: 48 81 e5 00 f0 ff ff 	andq	$-0x1000, %rbp          # imm = 0xF000
ffffffff8000e60d: 4c 89 ff             	movq	%r15, %rdi
ffffffff8000e610: 48 8b 9c 24 18 01 00 00      	movq	0x118(%rsp), %rbx
ffffffff8000e618: 48 89 de             	movq	%rbx, %rsi
ffffffff8000e61b: 48 89 ea             	movq	%rbp, %rdx
ffffffff8000e61e: e8 bd 0d 00 00       	callq	0xffffffff8000f3e0 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::unmap::h03e63a1f2cd90ad1>
ffffffff8000e623: f6 84 24 38 01 00 00 01      	testb	$0x1, 0x138(%rsp)
ffffffff8000e62b: 0f 85 23 06 00 00    	jne	0xffffffff8000ec54 <taos::processes::loader::load_elf::ha68086dbc075a067+0xa84>
ffffffff8000e631: 48 8b 84 24 48 01 00 00      	movq	0x148(%rsp), %rax
ffffffff8000e639: 0f 01 38             	invlpg	(%rax)
ffffffff8000e63c: 31 c0                	xorl	%eax, %eax
ffffffff8000e63e: b1 01                	movb	$0x1, %cl
ffffffff8000e640: f0                   	lock
ffffffff8000e641: 0f b0 0d b8 69 01 00 	cmpxchgb	%cl, 0x169b8(%rip)      # 0xffffffff80025000 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208>
ffffffff8000e648: 48 bd 00 00 00 00 00 00 01 00	movabsq	$0x1000000000000, %rbp # imm = 0x1000000000000
ffffffff8000e652: 75 0e                	jne	0xffffffff8000e662 <taos::processes::loader::load_elf::ha68086dbc075a067+0x492>
ffffffff8000e654: eb 23                	jmp	0xffffffff8000e679 <taos::processes::loader::load_elf::ha68086dbc075a067+0x4a9>
ffffffff8000e656: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
ffffffff8000e660: f3 90                	pause
ffffffff8000e662: 0f b6 05 97 69 01 00 	movzbl	0x16997(%rip), %eax     # 0xffffffff80025000 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208>
ffffffff8000e669: 84 c0                	testb	%al, %al
ffffffff8000e66b: 75 f3                	jne	0xffffffff8000e660 <taos::processes::loader::load_elf::ha68086dbc075a067+0x490>
ffffffff8000e66d: 31 c0                	xorl	%eax, %eax
ffffffff8000e66f: f0                   	lock
ffffffff8000e670: 0f b0 0d 89 69 01 00 	cmpxchgb	%cl, 0x16989(%rip)      # 0xffffffff80025000 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208>
ffffffff8000e677: 75 e9                	jne	0xffffffff8000e662 <taos::processes::loader::load_elf::ha68086dbc075a067+0x492>
ffffffff8000e679: 83 3d 88 69 01 00 03 	cmpl	$0x3, 0x16988(%rip)     # 0xffffffff80025008 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x8>
ffffffff8000e680: 0f 84 7e 05 00 00    	je	0xffffffff8000ec04 <taos::processes::loader::load_elf::ha68086dbc075a067+0xa34>
ffffffff8000e686: 48 c7 84 24 38 01 00 00 00 00 00 00  	movq	$0x0, 0x138(%rsp)
ffffffff8000e692: 48 c7 84 24 40 01 00 00 00 f0 ff ff  	movq	$-0x1000, 0x140(%rsp) # imm = 0xF000
ffffffff8000e69e: 48 8b 3b             	movq	(%rbx), %rdi
ffffffff8000e6a1: 48 8b b4 24 10 01 00 00      	movq	0x110(%rsp), %rsi
ffffffff8000e6a9: ba 04 00 00 00       	movl	$0x4, %edx
ffffffff8000e6ae: 4c 89 f9             	movq	%r15, %rcx
ffffffff8000e6b1: 49 c7 c0 08 50 02 80 	movq	$-0x7ffdaff8, %r8       # imm = 0x80025008
ffffffff8000e6b8: e8 a3 07 00 00       	callq	0xffffffff8000ee60 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::he60484b4342ae869>
ffffffff8000e6bd: c6 05 3c 69 01 00 00 	movb	$0x0, 0x1693c(%rip)     # 0xffffffff80025000 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208>
ffffffff8000e6c4: 4c 89 ff             	movq	%r15, %rdi
ffffffff8000e6c7: 4c 89 ee             	movq	%r13, %rsi
ffffffff8000e6ca: 4c 89 e2             	movq	%r12, %rdx
ffffffff8000e6cd: 4c 89 f1             	movq	%r14, %rcx
ffffffff8000e6d0: e8 fb 0b 00 00       	callq	0xffffffff8000f2d0 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf>
ffffffff8000e6d5: 80 bc 24 38 01 00 00 01      	cmpb	$0x1, 0x138(%rsp)
ffffffff8000e6dd: 0f 84 f1 04 00 00    	je	0xffffffff8000ebd4 <taos::processes::loader::load_elf::ha68086dbc075a067+0xa04>
ffffffff8000e6e3: 4c 89 e7             	movq	%r12, %rdi
ffffffff8000e6e6: e8 85 1c 00 00       	callq	0xffffffff80010370 <taos::memory::tlb::tlb_shootdown::h677329e270f13473>
ffffffff8000e6eb: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff8000e6f0: 49 89 c4             	movq	%rax, %r12
ffffffff8000e6f3: 48 8b 4c 24 18       	movq	0x18(%rsp), %rcx
ffffffff8000e6f8: 48 39 c8             	cmpq	%rcx, %rax
ffffffff8000e6fb: 0f 86 3f fd ff ff    	jbe	0xffffffff8000e440 <taos::processes::loader::load_elf::ha68086dbc075a067+0x270>
ffffffff8000e701: 4c 8b bc 24 f0 00 00 00      	movq	0xf0(%rsp), %r15
ffffffff8000e709: 49 bc 00 f0 ff ff ff 7f 00 00	movabsq	$0x7ffffffff000, %r12 # imm = 0x7FFFFFFFF000
ffffffff8000e713: 48 8b 94 24 e8 00 00 00      	movq	0xe8(%rsp), %rdx
ffffffff8000e71b: 48 8b b4 24 f8 00 00 00      	movq	0xf8(%rsp), %rsi
ffffffff8000e723: e9 78 fc ff ff       	jmp	0xffffffff8000e3a0 <taos::processes::loader::load_elf::ha68086dbc075a067+0x1d0>
ffffffff8000e728: 48 bf 00 00 00 00 00 70 00 00	movabsq	$0x700000000000, %rdi # imm = 0x700000000000
ffffffff8000e732: 48 8d 9f 00 20 00 00 	leaq	0x2000(%rdi), %rbx
ffffffff8000e739: eb 38                	jmp	0xffffffff8000e773 <taos::processes::loader::load_elf::ha68086dbc075a067+0x5a3>
ffffffff8000e73b: 0f 1f 44 00 00       	nopl	(%rax,%rax)
ffffffff8000e740: 48 c1 e3 10          	shlq	$0x10, %rbx
ffffffff8000e744: 48 81 c3 00 00 00 f0 	addq	$-0x10000000, %rbx      # imm = 0xF0000000
ffffffff8000e74b: 48 c1 fb 10          	sarq	$0x10, %rbx
ffffffff8000e74f: 48 81 e3 00 f0 ff ff 	andq	$-0x1000, %rbx          # imm = 0xF000
ffffffff8000e756: 49 89 fe             	movq	%rdi, %r14
ffffffff8000e759: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff8000e75e: b9 07 00 00 00       	movl	$0x7, %ecx
ffffffff8000e763: 4c 89 ee             	movq	%r13, %rsi
ffffffff8000e766: e8 45 2a ff ff       	callq	0xffffffff800011b0 <taos::memory::paging::create_mapping::h82f738cb2eb9bd37>
ffffffff8000e76b: 4c 89 f7             	movq	%r14, %rdi
ffffffff8000e76e: 49 39 de             	cmpq	%rbx, %r14
ffffffff8000e771: 77 6f                	ja	0xffffffff8000e7e2 <taos::processes::loader::load_elf::ha68086dbc075a067+0x612>
ffffffff8000e773: 48 81 ff 00 f0 ff ff 	cmpq	$-0x1000, %rdi          # imm = 0xF000
ffffffff8000e77a: 73 34                	jae	0xffffffff8000e7b0 <taos::processes::loader::load_elf::ha68086dbc075a067+0x5e0>
ffffffff8000e77c: 49 8d 04 3c          	leaq	(%r12,%rdi), %rax
ffffffff8000e780: 48 05 00 20 00 00    	addq	$0x2000, %rax           # imm = 0x2000
ffffffff8000e786: 48 39 e8             	cmpq	%rbp, %rax
ffffffff8000e789: 73 3f                	jae	0xffffffff8000e7ca <taos::processes::loader::load_elf::ha68086dbc075a067+0x5fa>
ffffffff8000e78b: 49 89 fe             	movq	%rdi, %r14
ffffffff8000e78e: 49 c1 e6 10          	shlq	$0x10, %r14
ffffffff8000e792: 49 81 e6 00 00 00 f0 	andq	$-0x10000000, %r14      # imm = 0xF0000000
ffffffff8000e799: 49 81 c6 00 00 00 10 	addq	$0x10000000, %r14       # imm = 0x10000000
ffffffff8000e7a0: 49 c1 fe 10          	sarq	$0x10, %r14
ffffffff8000e7a4: eb b3                	jmp	0xffffffff8000e759 <taos::processes::loader::load_elf::ha68086dbc075a067+0x589>
ffffffff8000e7a6: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
ffffffff8000e7b0: 48 81 fb 00 10 00 00 	cmpq	$0x1000, %rbx           # imm = 0x1000
ffffffff8000e7b7: 0f 82 e6 03 00 00    	jb	0xffffffff8000eba3 <taos::processes::loader::load_elf::ha68086dbc075a067+0x9d3>
ffffffff8000e7bd: 4a 8d 04 23          	leaq	(%rbx,%r12), %rax
ffffffff8000e7c1: 48 39 e8             	cmpq	%rbp, %rax
ffffffff8000e7c4: 0f 82 76 ff ff ff    	jb	0xffffffff8000e740 <taos::processes::loader::load_elf::ha68086dbc075a067+0x570>
ffffffff8000e7ca: be 36 00 00 00       	movl	$0x36, %esi
ffffffff8000e7cf: 48 c7 c7 f8 f3 01 80 	movq	$-0x7ffe0c08, %rdi      # imm = 0x8001F3F8
ffffffff8000e7d6: 48 c7 c2 90 f4 01 80 	movq	$-0x7ffe0b70, %rdx      # imm = 0x8001F490
ffffffff8000e7dd: e8 8e dc 00 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000e7e2: 48 8b 84 24 90 00 00 00      	movq	0x90(%rsp), %rax
ffffffff8000e7ea: 48 85 c0             	testq	%rax, %rax
ffffffff8000e7ed: 74 4d                	je	0xffffffff8000e83c <taos::processes::loader::load_elf::ha68086dbc075a067+0x66c>
ffffffff8000e7ef: 48 6b c8 38          	imulq	$0x38, %rax, %rcx
ffffffff8000e7f3: b2 01                	movb	$0x1, %dl
ffffffff8000e7f5: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff8000e800: 31 c0                	xorl	%eax, %eax
ffffffff8000e802: f0                   	lock
ffffffff8000e803: 0f b0 15 46 68 01 00 	cmpxchgb	%dl, 0x16846(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000e80a: 75 06                	jne	0xffffffff8000e812 <taos::processes::loader::load_elf::ha68086dbc075a067+0x642>
ffffffff8000e80c: eb 11                	jmp	0xffffffff8000e81f <taos::processes::loader::load_elf::ha68086dbc075a067+0x64f>
ffffffff8000e80e: 66 90                	nop
ffffffff8000e810: f3 90                	pause
ffffffff8000e812: 0f b6 05 37 68 01 00 	movzbl	0x16837(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000e819: 84 c0                	testb	%al, %al
ffffffff8000e81b: 75 f3                	jne	0xffffffff8000e810 <taos::processes::loader::load_elf::ha68086dbc075a067+0x640>
ffffffff8000e81d: eb e1                	jmp	0xffffffff8000e800 <taos::processes::loader::load_elf::ha68086dbc075a067+0x630>
ffffffff8000e81f: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff8000e824: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000e82b: 48 8b 74 24 48       	movq	0x48(%rsp), %rsi
ffffffff8000e830: e8 6b 48 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000e835: c6 05 14 68 01 00 00 	movb	$0x0, 0x16814(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000e83c: 48 8b 84 24 98 00 00 00      	movq	0x98(%rsp), %rax
ffffffff8000e844: 48 85 c0             	testq	%rax, %rax
ffffffff8000e847: 74 53                	je	0xffffffff8000e89c <taos::processes::loader::load_elf::ha68086dbc075a067+0x6cc>
ffffffff8000e849: 48 c1 e0 03          	shlq	$0x3, %rax
ffffffff8000e84d: 48 8d 0c c0          	leaq	(%rax,%rax,8), %rcx
ffffffff8000e851: b2 01                	movb	$0x1, %dl
ffffffff8000e853: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
ffffffff8000e860: 31 c0                	xorl	%eax, %eax
ffffffff8000e862: f0                   	lock
ffffffff8000e863: 0f b0 15 e6 67 01 00 	cmpxchgb	%dl, 0x167e6(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000e86a: 75 06                	jne	0xffffffff8000e872 <taos::processes::loader::load_elf::ha68086dbc075a067+0x6a2>
ffffffff8000e86c: eb 11                	jmp	0xffffffff8000e87f <taos::processes::loader::load_elf::ha68086dbc075a067+0x6af>
ffffffff8000e86e: 66 90                	nop
ffffffff8000e870: f3 90                	pause
ffffffff8000e872: 0f b6 05 d7 67 01 00 	movzbl	0x167d7(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000e879: 84 c0                	testb	%al, %al
ffffffff8000e87b: 75 f3                	jne	0xffffffff8000e870 <taos::processes::loader::load_elf::ha68086dbc075a067+0x6a0>
ffffffff8000e87d: eb e1                	jmp	0xffffffff8000e860 <taos::processes::loader::load_elf::ha68086dbc075a067+0x690>
ffffffff8000e87f: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff8000e884: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000e88b: 48 8b 74 24 50       	movq	0x50(%rsp), %rsi
ffffffff8000e890: e8 0b 48 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000e895: c6 05 b4 67 01 00 00 	movb	$0x0, 0x167b4(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000e89c: 48 8b 84 24 a0 00 00 00      	movq	0xa0(%rsp), %rax
ffffffff8000e8a4: 48 85 c0             	testq	%rax, %rax
ffffffff8000e8a7: 74 53                	je	0xffffffff8000e8fc <taos::processes::loader::load_elf::ha68086dbc075a067+0x72c>
ffffffff8000e8a9: 48 c1 e0 03          	shlq	$0x3, %rax
ffffffff8000e8ad: 48 8d 0c 40          	leaq	(%rax,%rax,2), %rcx
ffffffff8000e8b1: b2 01                	movb	$0x1, %dl
ffffffff8000e8b3: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
ffffffff8000e8c0: 31 c0                	xorl	%eax, %eax
ffffffff8000e8c2: f0                   	lock
ffffffff8000e8c3: 0f b0 15 86 67 01 00 	cmpxchgb	%dl, 0x16786(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000e8ca: 75 06                	jne	0xffffffff8000e8d2 <taos::processes::loader::load_elf::ha68086dbc075a067+0x702>
ffffffff8000e8cc: eb 11                	jmp	0xffffffff8000e8df <taos::processes::loader::load_elf::ha68086dbc075a067+0x70f>
ffffffff8000e8ce: 66 90                	nop
ffffffff8000e8d0: f3 90                	pause
ffffffff8000e8d2: 0f b6 05 77 67 01 00 	movzbl	0x16777(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000e8d9: 84 c0                	testb	%al, %al
ffffffff8000e8db: 75 f3                	jne	0xffffffff8000e8d0 <taos::processes::loader::load_elf::ha68086dbc075a067+0x700>
ffffffff8000e8dd: eb e1                	jmp	0xffffffff8000e8c0 <taos::processes::loader::load_elf::ha68086dbc075a067+0x6f0>
ffffffff8000e8df: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff8000e8e4: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000e8eb: 48 8b 74 24 58       	movq	0x58(%rsp), %rsi
ffffffff8000e8f0: e8 ab 47 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000e8f5: c6 05 54 67 01 00 00 	movb	$0x0, 0x16754(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000e8fc: 48 8b 84 24 a8 00 00 00      	movq	0xa8(%rsp), %rax
ffffffff8000e904: 48 85 c0             	testq	%rax, %rax
ffffffff8000e907: 74 53                	je	0xffffffff8000e95c <taos::processes::loader::load_elf::ha68086dbc075a067+0x78c>
ffffffff8000e909: 48 c1 e0 03          	shlq	$0x3, %rax
ffffffff8000e90d: 48 8d 0c 40          	leaq	(%rax,%rax,2), %rcx
ffffffff8000e911: b2 01                	movb	$0x1, %dl
ffffffff8000e913: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
ffffffff8000e920: 31 c0                	xorl	%eax, %eax
ffffffff8000e922: f0                   	lock
ffffffff8000e923: 0f b0 15 26 67 01 00 	cmpxchgb	%dl, 0x16726(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000e92a: 75 06                	jne	0xffffffff8000e932 <taos::processes::loader::load_elf::ha68086dbc075a067+0x762>
ffffffff8000e92c: eb 11                	jmp	0xffffffff8000e93f <taos::processes::loader::load_elf::ha68086dbc075a067+0x76f>
ffffffff8000e92e: 66 90                	nop
ffffffff8000e930: f3 90                	pause
ffffffff8000e932: 0f b6 05 17 67 01 00 	movzbl	0x16717(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000e939: 84 c0                	testb	%al, %al
ffffffff8000e93b: 75 f3                	jne	0xffffffff8000e930 <taos::processes::loader::load_elf::ha68086dbc075a067+0x760>
ffffffff8000e93d: eb e1                	jmp	0xffffffff8000e920 <taos::processes::loader::load_elf::ha68086dbc075a067+0x750>
ffffffff8000e93f: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff8000e944: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000e94b: 48 8b 74 24 60       	movq	0x60(%rsp), %rsi
ffffffff8000e950: e8 4b 47 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000e955: c6 05 f4 66 01 00 00 	movb	$0x0, 0x166f4(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000e95c: 48 8b 84 24 b0 00 00 00      	movq	0xb0(%rsp), %rax
ffffffff8000e964: 48 85 c0             	testq	%rax, %rax
ffffffff8000e967: 74 53                	je	0xffffffff8000e9bc <taos::processes::loader::load_elf::ha68086dbc075a067+0x7ec>
ffffffff8000e969: 48 c1 e0 03          	shlq	$0x3, %rax
ffffffff8000e96d: 48 8d 0c 40          	leaq	(%rax,%rax,2), %rcx
ffffffff8000e971: b2 01                	movb	$0x1, %dl
ffffffff8000e973: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
ffffffff8000e980: 31 c0                	xorl	%eax, %eax
ffffffff8000e982: f0                   	lock
ffffffff8000e983: 0f b0 15 c6 66 01 00 	cmpxchgb	%dl, 0x166c6(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000e98a: 75 06                	jne	0xffffffff8000e992 <taos::processes::loader::load_elf::ha68086dbc075a067+0x7c2>
ffffffff8000e98c: eb 11                	jmp	0xffffffff8000e99f <taos::processes::loader::load_elf::ha68086dbc075a067+0x7cf>
ffffffff8000e98e: 66 90                	nop
ffffffff8000e990: f3 90                	pause
ffffffff8000e992: 0f b6 05 b7 66 01 00 	movzbl	0x166b7(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000e999: 84 c0                	testb	%al, %al
ffffffff8000e99b: 75 f3                	jne	0xffffffff8000e990 <taos::processes::loader::load_elf::ha68086dbc075a067+0x7c0>
ffffffff8000e99d: eb e1                	jmp	0xffffffff8000e980 <taos::processes::loader::load_elf::ha68086dbc075a067+0x7b0>
ffffffff8000e99f: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff8000e9a4: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000e9ab: 48 8b 74 24 68       	movq	0x68(%rsp), %rsi
ffffffff8000e9b0: e8 eb 46 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000e9b5: c6 05 94 66 01 00 00 	movb	$0x0, 0x16694(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000e9bc: 83 bc 24 e0 00 00 00 02      	cmpl	$0x2, 0xe0(%rsp)
ffffffff8000e9c4: 0f 94 c0             	sete	%al
ffffffff8000e9c7: 4d 85 ff             	testq	%r15, %r15
ffffffff8000e9ca: 0f 94 c1             	sete	%cl
ffffffff8000e9cd: 08 c1                	orb	%al, %cl
ffffffff8000e9cf: 75 4e                	jne	0xffffffff8000ea1f <taos::processes::loader::load_elf::ha68086dbc075a067+0x84f>
ffffffff8000e9d1: 49 c1 e7 04          	shlq	$0x4, %r15
ffffffff8000e9d5: b1 01                	movb	$0x1, %cl
ffffffff8000e9d7: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
ffffffff8000e9e0: 31 c0                	xorl	%eax, %eax
ffffffff8000e9e2: f0                   	lock
ffffffff8000e9e3: 0f b0 0d 66 66 01 00 	cmpxchgb	%cl, 0x16666(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000e9ea: 75 06                	jne	0xffffffff8000e9f2 <taos::processes::loader::load_elf::ha68086dbc075a067+0x822>
ffffffff8000e9ec: eb 11                	jmp	0xffffffff8000e9ff <taos::processes::loader::load_elf::ha68086dbc075a067+0x82f>
ffffffff8000e9ee: 66 90                	nop
ffffffff8000e9f0: f3 90                	pause
ffffffff8000e9f2: 0f b6 05 57 66 01 00 	movzbl	0x16657(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000e9f9: 84 c0                	testb	%al, %al
ffffffff8000e9fb: 75 f3                	jne	0xffffffff8000e9f0 <taos::processes::loader::load_elf::ha68086dbc075a067+0x820>
ffffffff8000e9fd: eb e1                	jmp	0xffffffff8000e9e0 <taos::processes::loader::load_elf::ha68086dbc075a067+0x810>
ffffffff8000e9ff: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff8000ea04: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000ea0b: 48 8b 74 24 40       	movq	0x40(%rsp), %rsi
ffffffff8000ea10: 4c 89 f9             	movq	%r15, %rcx
ffffffff8000ea13: e8 88 46 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000ea18: c6 05 31 66 01 00 00 	movb	$0x0, 0x16631(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000ea1f: 48 8b 84 24 b8 00 00 00      	movq	0xb8(%rsp), %rax
ffffffff8000ea27: 48 85 c0             	testq	%rax, %rax
ffffffff8000ea2a: 74 50                	je	0xffffffff8000ea7c <taos::processes::loader::load_elf::ha68086dbc075a067+0x8ac>
ffffffff8000ea2c: 48 6b c8 38          	imulq	$0x38, %rax, %rcx
ffffffff8000ea30: b2 01                	movb	$0x1, %dl
ffffffff8000ea32: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
ffffffff8000ea40: 31 c0                	xorl	%eax, %eax
ffffffff8000ea42: f0                   	lock
ffffffff8000ea43: 0f b0 15 06 66 01 00 	cmpxchgb	%dl, 0x16606(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000ea4a: 75 06                	jne	0xffffffff8000ea52 <taos::processes::loader::load_elf::ha68086dbc075a067+0x882>
ffffffff8000ea4c: eb 11                	jmp	0xffffffff8000ea5f <taos::processes::loader::load_elf::ha68086dbc075a067+0x88f>
ffffffff8000ea4e: 66 90                	nop
ffffffff8000ea50: f3 90                	pause
ffffffff8000ea52: 0f b6 05 f7 65 01 00 	movzbl	0x165f7(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000ea59: 84 c0                	testb	%al, %al
ffffffff8000ea5b: 75 f3                	jne	0xffffffff8000ea50 <taos::processes::loader::load_elf::ha68086dbc075a067+0x880>
ffffffff8000ea5d: eb e1                	jmp	0xffffffff8000ea40 <taos::processes::loader::load_elf::ha68086dbc075a067+0x870>
ffffffff8000ea5f: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff8000ea64: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000ea6b: 48 8b 74 24 70       	movq	0x70(%rsp), %rsi
ffffffff8000ea70: e8 2b 46 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000ea75: c6 05 d4 65 01 00 00 	movb	$0x0, 0x165d4(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000ea7c: 48 8b 8c 24 c0 00 00 00      	movq	0xc0(%rsp), %rcx
ffffffff8000ea84: 48 85 c9             	testq	%rcx, %rcx
ffffffff8000ea87: 74 43                	je	0xffffffff8000eacc <taos::processes::loader::load_elf::ha68086dbc075a067+0x8fc>
ffffffff8000ea89: 48 c1 e1 04          	shlq	$0x4, %rcx
ffffffff8000ea8d: b2 01                	movb	$0x1, %dl
ffffffff8000ea8f: 90                   	nop
ffffffff8000ea90: 31 c0                	xorl	%eax, %eax
ffffffff8000ea92: f0                   	lock
ffffffff8000ea93: 0f b0 15 b6 65 01 00 	cmpxchgb	%dl, 0x165b6(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000ea9a: 75 06                	jne	0xffffffff8000eaa2 <taos::processes::loader::load_elf::ha68086dbc075a067+0x8d2>
ffffffff8000ea9c: eb 11                	jmp	0xffffffff8000eaaf <taos::processes::loader::load_elf::ha68086dbc075a067+0x8df>
ffffffff8000ea9e: 66 90                	nop
ffffffff8000eaa0: f3 90                	pause
ffffffff8000eaa2: 0f b6 05 a7 65 01 00 	movzbl	0x165a7(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000eaa9: 84 c0                	testb	%al, %al
ffffffff8000eaab: 75 f3                	jne	0xffffffff8000eaa0 <taos::processes::loader::load_elf::ha68086dbc075a067+0x8d0>
ffffffff8000eaad: eb e1                	jmp	0xffffffff8000ea90 <taos::processes::loader::load_elf::ha68086dbc075a067+0x8c0>
ffffffff8000eaaf: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff8000eab4: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000eabb: 48 8b 74 24 78       	movq	0x78(%rsp), %rsi
ffffffff8000eac0: e8 db 45 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000eac5: c6 05 84 65 01 00 00 	movb	$0x0, 0x16584(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000eacc: 48 8b 8c 24 c8 00 00 00      	movq	0xc8(%rsp), %rcx
ffffffff8000ead4: 48 85 c9             	testq	%rcx, %rcx
ffffffff8000ead7: 74 46                	je	0xffffffff8000eb1f <taos::processes::loader::load_elf::ha68086dbc075a067+0x94f>
ffffffff8000ead9: 48 c1 e1 04          	shlq	$0x4, %rcx
ffffffff8000eadd: b2 01                	movb	$0x1, %dl
ffffffff8000eadf: 90                   	nop
ffffffff8000eae0: 31 c0                	xorl	%eax, %eax
ffffffff8000eae2: f0                   	lock
ffffffff8000eae3: 0f b0 15 66 65 01 00 	cmpxchgb	%dl, 0x16566(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000eaea: 75 06                	jne	0xffffffff8000eaf2 <taos::processes::loader::load_elf::ha68086dbc075a067+0x922>
ffffffff8000eaec: eb 11                	jmp	0xffffffff8000eaff <taos::processes::loader::load_elf::ha68086dbc075a067+0x92f>
ffffffff8000eaee: 66 90                	nop
ffffffff8000eaf0: f3 90                	pause
ffffffff8000eaf2: 0f b6 05 57 65 01 00 	movzbl	0x16557(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000eaf9: 84 c0                	testb	%al, %al
ffffffff8000eafb: 75 f3                	jne	0xffffffff8000eaf0 <taos::processes::loader::load_elf::ha68086dbc075a067+0x920>
ffffffff8000eafd: eb e1                	jmp	0xffffffff8000eae0 <taos::processes::loader::load_elf::ha68086dbc075a067+0x910>
ffffffff8000eaff: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff8000eb04: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000eb0b: 48 8b b4 24 80 00 00 00      	movq	0x80(%rsp), %rsi
ffffffff8000eb13: e8 88 45 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000eb18: c6 05 31 65 01 00 00 	movb	$0x0, 0x16531(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000eb1f: 48 8b 8c 24 d0 00 00 00      	movq	0xd0(%rsp), %rcx
ffffffff8000eb27: 48 85 c9             	testq	%rcx, %rcx
ffffffff8000eb2a: 74 53                	je	0xffffffff8000eb7f <taos::processes::loader::load_elf::ha68086dbc075a067+0x9af>
ffffffff8000eb2c: 48 c1 e1 04          	shlq	$0x4, %rcx
ffffffff8000eb30: b2 01                	movb	$0x1, %dl
ffffffff8000eb32: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
ffffffff8000eb40: 31 c0                	xorl	%eax, %eax
ffffffff8000eb42: f0                   	lock
ffffffff8000eb43: 0f b0 15 06 65 01 00 	cmpxchgb	%dl, 0x16506(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000eb4a: 75 06                	jne	0xffffffff8000eb52 <taos::processes::loader::load_elf::ha68086dbc075a067+0x982>
ffffffff8000eb4c: eb 11                	jmp	0xffffffff8000eb5f <taos::processes::loader::load_elf::ha68086dbc075a067+0x98f>
ffffffff8000eb4e: 66 90                	nop
ffffffff8000eb50: f3 90                	pause
ffffffff8000eb52: 0f b6 05 f7 64 01 00 	movzbl	0x164f7(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000eb59: 84 c0                	testb	%al, %al
ffffffff8000eb5b: 75 f3                	jne	0xffffffff8000eb50 <taos::processes::loader::load_elf::ha68086dbc075a067+0x980>
ffffffff8000eb5d: eb e1                	jmp	0xffffffff8000eb40 <taos::processes::loader::load_elf::ha68086dbc075a067+0x970>
ffffffff8000eb5f: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff8000eb64: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000eb6b: 48 8b b4 24 88 00 00 00      	movq	0x88(%rsp), %rsi
ffffffff8000eb73: e8 28 45 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000eb78: c6 05 d1 64 01 00 00 	movb	$0x0, 0x164d1(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000eb7f: 48 b8 00 20 00 00 00 70 00 00	movabsq	$0x700000002000, %rax # imm = 0x700000002000
ffffffff8000eb89: 48 8b 94 24 d8 00 00 00      	movq	0xd8(%rsp), %rdx
ffffffff8000eb91: 48 81 c4 68 05 00 00 	addq	$0x568, %rsp            # imm = 0x568
ffffffff8000eb98: 5b                   	popq	%rbx
ffffffff8000eb99: 41 5c                	popq	%r12
ffffffff8000eb9b: 41 5d                	popq	%r13
ffffffff8000eb9d: 41 5e                	popq	%r14
ffffffff8000eb9f: 41 5f                	popq	%r15
ffffffff8000eba1: 5d                   	popq	%rbp
ffffffff8000eba2: c3                   	retq
ffffffff8000eba3: 48 c7 c7 70 f5 01 80 	movq	$-0x7ffe0a90, %rdi      # imm = 0x8001F570
ffffffff8000ebaa: e8 c1 dd 00 00       	callq	0xffffffff8001c970 <core::option::unwrap_failed::hd8ef34c781aa10a4>
ffffffff8000ebaf: 48 89 f7             	movq	%rsi, %rdi
ffffffff8000ebb2: 48 89 c6             	movq	%rax, %rsi
ffffffff8000ebb5: 48 c7 c2 d0 f6 01 80 	movq	$-0x7ffe0930, %rdx      # imm = 0x8001F6D0
ffffffff8000ebbc: e8 cf d3 00 00       	callq	0xffffffff8001bf90 <core::slice::index::slice_index_order_fail::h1a167d6bc7fac2e8>
ffffffff8000ebc1: 48 89 c7             	movq	%rax, %rdi
ffffffff8000ebc4: 48 8b 34 24          	movq	(%rsp), %rsi
ffffffff8000ebc8: 48 c7 c2 d0 f6 01 80 	movq	$-0x7ffe0930, %rdx      # imm = 0x8001F6D0
ffffffff8000ebcf: e8 ac d3 00 00       	callq	0xffffffff8001bf80 <core::slice::index::slice_end_index_len_fail::h34b67e5519833f02>
ffffffff8000ebd4: 0f b6 84 24 39 01 00 00      	movzbl	0x139(%rsp), %eax
ffffffff8000ebdc: 88 44 24 20          	movb	%al, 0x20(%rsp)
ffffffff8000ebe0: 48 8d 54 24 20       	leaq	0x20(%rsp), %rdx
ffffffff8000ebe5: be 15 00 00 00       	movl	$0x15, %esi
ffffffff8000ebea: 48 c7 c7 d0 d7 01 80 	movq	$-0x7ffe2830, %rdi      # imm = 0x8001D7D0
ffffffff8000ebf1: 48 c7 c1 b0 d7 01 80 	movq	$-0x7ffe2850, %rcx      # imm = 0x8001D7B0
ffffffff8000ebf8: 49 c7 c0 e8 d7 01 80 	movq	$-0x7ffe2818, %r8       # imm = 0x8001D7E8
ffffffff8000ebff: e8 dc d2 00 00       	callq	0xffffffff8001bee0 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff8000ec04: 48 c7 84 24 38 01 00 00 50 f1 01 80  	movq	$-0x7ffe0eb0, 0x138(%rsp) # imm = 0x8001F150
ffffffff8000ec10: 48 c7 84 24 40 01 00 00 01 00 00 00  	movq	$0x1, 0x140(%rsp)
ffffffff8000ec1c: 48 c7 84 24 58 01 00 00 00 00 00 00  	movq	$0x0, 0x158(%rsp)
ffffffff8000ec28: 48 c7 84 24 48 01 00 00 08 00 00 00  	movq	$0x8, 0x148(%rsp)
ffffffff8000ec34: 48 c7 84 24 50 01 00 00 00 00 00 00  	movq	$0x0, 0x150(%rsp)
ffffffff8000ec40: 48 8d bc 24 38 01 00 00      	leaq	0x138(%rsp), %rdi
ffffffff8000ec48: 48 c7 c6 80 f1 01 80 	movq	$-0x7ffe0e80, %rsi      # imm = 0x8001F180
ffffffff8000ec4f: e8 9c d7 00 00       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8000ec54: 48 8b 84 24 40 01 00 00      	movq	0x140(%rsp), %rax
ffffffff8000ec5c: 48 8b 8c 24 48 01 00 00      	movq	0x148(%rsp), %rcx
ffffffff8000ec64: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff8000ec69: 48 89 4c 24 28       	movq	%rcx, 0x28(%rsp)
ffffffff8000ec6e: 48 8d 54 24 20       	leaq	0x20(%rsp), %rdx
ffffffff8000ec73: be 1d 00 00 00       	movl	$0x1d, %esi
ffffffff8000ec78: 48 c7 c7 08 f7 01 80 	movq	$-0x7ffe08f8, %rdi      # imm = 0x8001F708
ffffffff8000ec7f: 48 c7 c1 e8 f6 01 80 	movq	$-0x7ffe0918, %rcx      # imm = 0x8001F6E8
ffffffff8000ec86: 49 c7 c0 28 f7 01 80 	movq	$-0x7ffe08d8, %r8       # imm = 0x8001F728
ffffffff8000ec8d: e8 4e d2 00 00       	callq	0xffffffff8001bee0 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff8000ec92: 48 8b 84 24 58 01 00 00      	movq	0x158(%rsp), %rax
ffffffff8000ec9a: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff8000ec9f: 48 8b 84 24 50 01 00 00      	movq	0x150(%rsp), %rax
ffffffff8000eca7: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff8000ecac: 48 8b 84 24 40 01 00 00      	movq	0x140(%rsp), %rax
ffffffff8000ecb4: 48 8b 8c 24 48 01 00 00      	movq	0x148(%rsp), %rcx
ffffffff8000ecbc: 48 89 4c 24 28       	movq	%rcx, 0x28(%rsp)
ffffffff8000ecc1: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff8000ecc6: 48 8d 54 24 20       	leaq	0x20(%rsp), %rdx
ffffffff8000eccb: be 12 00 00 00       	movl	$0x12, %esi
ffffffff8000ecd0: 48 c7 c7 60 f7 01 80 	movq	$-0x7ffe08a0, %rdi      # imm = 0x8001F760
ffffffff8000ecd7: 48 c7 c1 40 f7 01 80 	movq	$-0x7ffe08c0, %rcx      # imm = 0x8001F740
ffffffff8000ecde: 49 c7 c0 78 f7 01 80 	movq	$-0x7ffe0888, %r8       # imm = 0x8001F778
ffffffff8000ece5: e8 f6 d1 00 00       	callq	0xffffffff8001bee0 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff8000ecea: cc                   	int3
ffffffff8000eceb: cc                   	int3
ffffffff8000ecec: cc                   	int3
ffffffff8000eced: cc                   	int3
ffffffff8000ecee: cc                   	int3
ffffffff8000ecef: cc                   	int3

ffffffff8000ecf0 <__rust_alloc>:
ffffffff8000ecf0: 50                   	pushq	%rax
ffffffff8000ecf1: 48 89 fa             	movq	%rdi, %rdx
ffffffff8000ecf4: b1 01                	movb	$0x1, %cl
ffffffff8000ecf6: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
ffffffff8000ed00: 31 c0                	xorl	%eax, %eax
ffffffff8000ed02: f0                   	lock
ffffffff8000ed03: 0f b0 0d 46 63 01 00 	cmpxchgb	%cl, 0x16346(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000ed0a: 75 06                	jne	0xffffffff8000ed12 <__rust_alloc+0x22>
ffffffff8000ed0c: eb 11                	jmp	0xffffffff8000ed1f <__rust_alloc+0x2f>
ffffffff8000ed0e: 66 90                	nop
ffffffff8000ed10: f3 90                	pause
ffffffff8000ed12: 0f b6 05 37 63 01 00 	movzbl	0x16337(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000ed19: 84 c0                	testb	%al, %al
ffffffff8000ed1b: 75 f3                	jne	0xffffffff8000ed10 <__rust_alloc+0x20>
ffffffff8000ed1d: eb e1                	jmp	0xffffffff8000ed00 <__rust_alloc+0x10>
ffffffff8000ed1f: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000ed26: e8 d5 45 ff ff       	callq	0xffffffff80003300 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff8000ed2b: c6 05 1e 63 01 00 00 	movb	$0x0, 0x1631e(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000ed32: 59                   	popq	%rcx
ffffffff8000ed33: c3                   	retq
ffffffff8000ed34: cc                   	int3
ffffffff8000ed35: cc                   	int3
ffffffff8000ed36: cc                   	int3
ffffffff8000ed37: cc                   	int3
ffffffff8000ed38: cc                   	int3
ffffffff8000ed39: cc                   	int3
ffffffff8000ed3a: cc                   	int3
ffffffff8000ed3b: cc                   	int3
ffffffff8000ed3c: cc                   	int3
ffffffff8000ed3d: cc                   	int3
ffffffff8000ed3e: cc                   	int3
ffffffff8000ed3f: cc                   	int3

ffffffff8000ed40 <__rust_dealloc>:
ffffffff8000ed40: 50                   	pushq	%rax
ffffffff8000ed41: 48 89 f1             	movq	%rsi, %rcx
ffffffff8000ed44: 48 89 fe             	movq	%rdi, %rsi
ffffffff8000ed47: 40 b7 01             	movb	$0x1, %dil
ffffffff8000ed4a: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff8000ed50: 31 c0                	xorl	%eax, %eax
ffffffff8000ed52: f0                   	lock
ffffffff8000ed53: 40 0f b0 3d f5 62 01 00      	cmpxchgb	%dil, 0x162f5(%rip) # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000ed5b: 75 05                	jne	0xffffffff8000ed62 <__rust_dealloc+0x22>
ffffffff8000ed5d: eb 10                	jmp	0xffffffff8000ed6f <__rust_dealloc+0x2f>
ffffffff8000ed5f: 90                   	nop
ffffffff8000ed60: f3 90                	pause
ffffffff8000ed62: 0f b6 05 e7 62 01 00 	movzbl	0x162e7(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000ed69: 84 c0                	testb	%al, %al
ffffffff8000ed6b: 75 f3                	jne	0xffffffff8000ed60 <__rust_dealloc+0x20>
ffffffff8000ed6d: eb e1                	jmp	0xffffffff8000ed50 <__rust_dealloc+0x10>
ffffffff8000ed6f: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000ed76: e8 25 43 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000ed7b: c6 05 ce 62 01 00 00 	movb	$0x0, 0x162ce(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000ed82: 58                   	popq	%rax
ffffffff8000ed83: c3                   	retq
ffffffff8000ed84: cc                   	int3
ffffffff8000ed85: cc                   	int3
ffffffff8000ed86: cc                   	int3
ffffffff8000ed87: cc                   	int3
ffffffff8000ed88: cc                   	int3
ffffffff8000ed89: cc                   	int3
ffffffff8000ed8a: cc                   	int3
ffffffff8000ed8b: cc                   	int3
ffffffff8000ed8c: cc                   	int3
ffffffff8000ed8d: cc                   	int3
ffffffff8000ed8e: cc                   	int3
ffffffff8000ed8f: cc                   	int3

ffffffff8000ed90 <__rust_realloc>:
ffffffff8000ed90: 49 89 c8             	movq	%rcx, %r8
ffffffff8000ed93: 48 89 f1             	movq	%rsi, %rcx
ffffffff8000ed96: 48 89 fe             	movq	%rdi, %rsi
ffffffff8000ed99: 48 c7 c7 50 50 02 80 	movq	$-0x7ffdafb0, %rdi      # imm = 0x80025050
ffffffff8000eda0: e9 8b d9 ff ff       	jmp	0xffffffff8000c730 <<talc::talck::Talck<R,O> as core::alloc::global::GlobalAlloc>::realloc::h02796078c7382553>
ffffffff8000eda5: cc                   	int3
ffffffff8000eda6: cc                   	int3
ffffffff8000eda7: cc                   	int3
ffffffff8000eda8: cc                   	int3
ffffffff8000eda9: cc                   	int3
ffffffff8000edaa: cc                   	int3
ffffffff8000edab: cc                   	int3
ffffffff8000edac: cc                   	int3
ffffffff8000edad: cc                   	int3
ffffffff8000edae: cc                   	int3
ffffffff8000edaf: cc                   	int3

ffffffff8000edb0 <<core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::nth::h7c8afe11e8a77b06>:
ffffffff8000edb0: 48 8b 47 20          	movq	0x20(%rdi), %rax
ffffffff8000edb4: 48 39 f0             	cmpq	%rsi, %rax
ffffffff8000edb7: 76 60                	jbe	0xffffffff8000ee19 <<core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::nth::h7c8afe11e8a77b06+0x69>
ffffffff8000edb9: 48 89 f1             	movq	%rsi, %rcx
ffffffff8000edbc: 48 f7 d1             	notq	%rcx
ffffffff8000edbf: 48 01 c8             	addq	%rcx, %rax
ffffffff8000edc2: 48 89 47 20          	movq	%rax, 0x20(%rdi)
ffffffff8000edc6: 48 8b 0f             	movq	(%rdi), %rcx
ffffffff8000edc9: 4c 8b 47 08          	movq	0x8(%rdi), %r8
ffffffff8000edcd: 48 8d 04 cd 00 00 00 00      	leaq	(,%rcx,8), %rax
ffffffff8000edd5: 48 f7 d8             	negq	%rax
ffffffff8000edd8: 31 d2                	xorl	%edx, %edx
ffffffff8000edda: 49 89 f1             	movq	%rsi, %r9
ffffffff8000eddd: 0f 1f 00             	nopl	(%rax)
ffffffff8000ede0: 4c 39 c1             	cmpq	%r8, %rcx
ffffffff8000ede3: 73 74                	jae	0xffffffff8000ee59 <<core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::nth::h7c8afe11e8a77b06+0xa9>
ffffffff8000ede5: 48 ff c1             	incq	%rcx
ffffffff8000ede8: 48 89 0f             	movq	%rcx, (%rdi)
ffffffff8000edeb: 48 83 c0 f8          	addq	$-0x8, %rax
ffffffff8000edef: 49 ff c9             	decq	%r9
ffffffff8000edf2: 75 ec                	jne	0xffffffff8000ede0 <<core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::nth::h7c8afe11e8a77b06+0x30>
ffffffff8000edf4: 4c 39 c1             	cmpq	%r8, %rcx
ffffffff8000edf7: 73 5e                	jae	0xffffffff8000ee57 <<core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::nth::h7c8afe11e8a77b06+0xa7>
ffffffff8000edf9: 48 ff c1             	incq	%rcx
ffffffff8000edfc: 48 89 0f             	movq	%rcx, (%rdi)
ffffffff8000edff: 48 8b 57 10          	movq	0x10(%rdi), %rdx
ffffffff8000ee03: 48 8b 4f 18          	movq	0x18(%rdi), %rcx
ffffffff8000ee07: 48 29 c2             	subq	%rax, %rdx
ffffffff8000ee0a: 48 8d 04 31          	leaq	(%rcx,%rsi), %rax
ffffffff8000ee0e: 48 01 f1             	addq	%rsi, %rcx
ffffffff8000ee11: 48 ff c1             	incq	%rcx
ffffffff8000ee14: 48 89 4f 18          	movq	%rcx, 0x18(%rdi)
ffffffff8000ee18: c3                   	retq
ffffffff8000ee19: 48 85 c0             	testq	%rax, %rax
ffffffff8000ee1c: 74 39                	je	0xffffffff8000ee57 <<core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::nth::h7c8afe11e8a77b06+0xa7>
ffffffff8000ee1e: 48 89 c6             	movq	%rax, %rsi
ffffffff8000ee21: 48 8b 0f             	movq	(%rdi), %rcx
ffffffff8000ee24: 48 8b 57 08          	movq	0x8(%rdi), %rdx
ffffffff8000ee28: 48 ff ce             	decq	%rsi
ffffffff8000ee2b: 74 13                	je	0xffffffff8000ee40 <<core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::nth::h7c8afe11e8a77b06+0x90>
ffffffff8000ee2d: 0f 1f 00             	nopl	(%rax)
ffffffff8000ee30: 48 39 d1             	cmpq	%rdx, %rcx
ffffffff8000ee33: 73 1a                	jae	0xffffffff8000ee4f <<core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::nth::h7c8afe11e8a77b06+0x9f>
ffffffff8000ee35: 48 ff c1             	incq	%rcx
ffffffff8000ee38: 48 89 0f             	movq	%rcx, (%rdi)
ffffffff8000ee3b: 48 ff ce             	decq	%rsi
ffffffff8000ee3e: 75 f0                	jne	0xffffffff8000ee30 <<core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::nth::h7c8afe11e8a77b06+0x80>
ffffffff8000ee40: 48 39 d1             	cmpq	%rdx, %rcx
ffffffff8000ee43: 73 0a                	jae	0xffffffff8000ee4f <<core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::nth::h7c8afe11e8a77b06+0x9f>
ffffffff8000ee45: 48 ff c1             	incq	%rcx
ffffffff8000ee48: 48 89 0f             	movq	%rcx, (%rdi)
ffffffff8000ee4b: 48 01 47 18          	addq	%rax, 0x18(%rdi)
ffffffff8000ee4f: 48 c7 47 20 00 00 00 00      	movq	$0x0, 0x20(%rdi)
ffffffff8000ee57: 31 d2                	xorl	%edx, %edx
ffffffff8000ee59: c3                   	retq
ffffffff8000ee5a: cc                   	int3
ffffffff8000ee5b: cc                   	int3
ffffffff8000ee5c: cc                   	int3
ffffffff8000ee5d: cc                   	int3
ffffffff8000ee5e: cc                   	int3
ffffffff8000ee5f: cc                   	int3

ffffffff8000ee60 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::he60484b4342ae869>:
ffffffff8000ee60: 55                   	pushq	%rbp
ffffffff8000ee61: 41 57                	pushq	%r15
ffffffff8000ee63: 41 56                	pushq	%r14
ffffffff8000ee65: 41 55                	pushq	%r13
ffffffff8000ee67: 41 54                	pushq	%r12
ffffffff8000ee69: 53                   	pushq	%rbx
ffffffff8000ee6a: 48 83 ec 68          	subq	$0x68, %rsp
ffffffff8000ee6e: 4c 89 44 24 08       	movq	%r8, 0x8(%rsp)
ffffffff8000ee73: 48 89 74 24 10       	movq	%rsi, 0x10(%rsp)
ffffffff8000ee78: 4c 8b 21             	movq	(%rcx), %r12
ffffffff8000ee7b: 4c 8b 71 08          	movq	0x8(%rcx), %r14
ffffffff8000ee7f: 4d 39 f4             	cmpq	%r14, %r12
ffffffff8000ee82: 76 11                	jbe	0xffffffff8000ee95 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::he60484b4342ae869+0x35>
ffffffff8000ee84: 31 c0                	xorl	%eax, %eax
ffffffff8000ee86: 48 83 c4 68          	addq	$0x68, %rsp
ffffffff8000ee8a: 5b                   	popq	%rbx
ffffffff8000ee8b: 41 5c                	popq	%r12
ffffffff8000ee8d: 41 5d                	popq	%r13
ffffffff8000ee8f: 41 5e                	popq	%r14
ffffffff8000ee91: 41 5f                	popq	%r15
ffffffff8000ee93: 5d                   	popq	%rbp
ffffffff8000ee94: c3                   	retq
ffffffff8000ee95: 48 89 fb             	movq	%rdi, %rbx
ffffffff8000ee98: 0f b6 fa             	movzbl	%dl, %edi
ffffffff8000ee9b: 8d 04 ff             	leal	(%rdi,%rdi,8), %eax
ffffffff8000ee9e: 8d 48 0c             	leal	0xc(%rax), %ecx
ffffffff8000eea1: 4d 89 e7             	movq	%r12, %r15
ffffffff8000eea4: 49 d3 ef             	shrq	%cl, %r15
ffffffff8000eea7: 49 d3 e7             	shlq	%cl, %r15
ffffffff8000eeaa: 4c 89 e6             	movq	%r12, %rsi
ffffffff8000eead: 48 c1 ee 0c          	shrq	$0xc, %rsi
ffffffff8000eeb1: 8d 48 37             	leal	0x37(%rax), %ecx
ffffffff8000eeb4: 48 d3 ee             	shrq	%cl, %rsi
ffffffff8000eeb7: 4c 89 f2             	movq	%r14, %rdx
ffffffff8000eeba: 48 c1 ea 0c          	shrq	$0xc, %rdx
ffffffff8000eebe: 48 d3 ea             	shrq	%cl, %rdx
ffffffff8000eec1: ff cf                	decl	%edi
ffffffff8000eec3: ff 24 fd 90 f7 01 80 	jmpq	*-0x7ffe0870(,%rdi,8)
ffffffff8000eeca: b9 02 00 00 00       	movl	$0x2, %ecx
ffffffff8000eecf: 90                   	nop
ffffffff8000eed0: 48 83 7c cb f0 00    	cmpq	$0x0, -0x10(%rbx,%rcx,8)
ffffffff8000eed6: 75 ac                	jne	0xffffffff8000ee84 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::he60484b4342ae869+0x24>
ffffffff8000eed8: 48 83 7c cb f8 00    	cmpq	$0x0, -0x8(%rbx,%rcx,8)
ffffffff8000eede: 75 a4                	jne	0xffffffff8000ee84 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::he60484b4342ae869+0x24>
ffffffff8000eee0: 48 81 f9 00 02 00 00 	cmpq	$0x200, %rcx            # imm = 0x200
ffffffff8000eee7: 0f 94 c0             	sete	%al
ffffffff8000eeea: 74 9a                	je	0xffffffff8000ee86 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::he60484b4342ae869+0x26>
ffffffff8000eeec: 48 83 3c cb 00       	cmpq	$0x0, (%rbx,%rcx,8)
ffffffff8000eef1: 48 8d 49 03          	leaq	0x3(%rcx), %rcx
ffffffff8000eef5: 74 d9                	je	0xffffffff8000eed0 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::he60484b4342ae869+0x70>
ffffffff8000eef7: eb 8d                	jmp	0xffffffff8000ee86 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::he60484b4342ae869+0x26>
ffffffff8000eef9: 40 b7 02             	movb	$0x2, %dil
ffffffff8000eefc: eb 08                	jmp	0xffffffff8000ef06 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::he60484b4342ae869+0xa6>
ffffffff8000eefe: 40 b7 03             	movb	$0x3, %dil
ffffffff8000ef01: eb 03                	jmp	0xffffffff8000ef06 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::he60484b4342ae869+0xa6>
ffffffff8000ef03: 40 b7 01             	movb	$0x1, %dil
ffffffff8000ef06: 49 c1 e7 10          	shlq	$0x10, %r15
ffffffff8000ef0a: 49 c1 ff 10          	sarq	$0x10, %r15
ffffffff8000ef0e: 81 e6 ff 01 00 00    	andl	$0x1ff, %esi            # imm = 0x1FF
ffffffff8000ef14: 81 e2 ff 01 00 00    	andl	$0x1ff, %edx            # imm = 0x1FF
ffffffff8000ef1a: 04 03                	addb	$0x3, %al
ffffffff8000ef1c: 0f b6 c8             	movzbl	%al, %ecx
ffffffff8000ef1f: 48 ff c2             	incq	%rdx
ffffffff8000ef22: 48 c7 44 24 18 00 00 00 00   	movq	$0x0, 0x18(%rsp)
ffffffff8000ef2b: 48 c7 44 24 20 00 02 00 00   	movq	$0x200, 0x20(%rsp) # imm = 0x200
ffffffff8000ef34: 48 89 5c 24 28       	movq	%rbx, 0x28(%rsp)
ffffffff8000ef39: 48 c7 44 24 30 00 00 00 00   	movq	$0x0, 0x30(%rsp)
ffffffff8000ef42: 48 c7 c0 ff ff ff ff 	movq	$-0x1, %rax
ffffffff8000ef49: 48 89 4c 24 60       	movq	%rcx, 0x60(%rsp)
ffffffff8000ef4e: 48 d3 e0             	shlq	%cl, %rax
ffffffff8000ef51: 48 89 54 24 38       	movq	%rdx, 0x38(%rsp)
ffffffff8000ef56: 48 89 74 24 40       	movq	%rsi, 0x40(%rsp)
ffffffff8000ef5b: 48 f7 d0             	notq	%rax
ffffffff8000ef5e: 48 89 44 24 58       	movq	%rax, 0x58(%rsp)
ffffffff8000ef63: 40 0f b6 c7          	movzbl	%dil, %eax
ffffffff8000ef67: 89 44 24 04          	movl	%eax, 0x4(%rsp)
ffffffff8000ef6b: eb 08                	jmp	0xffffffff8000ef75 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::he60484b4342ae869+0x115>
ffffffff8000ef6d: 0f 1f 00             	nopl	(%rax)
ffffffff8000ef70: 48 8b 74 24 40       	movq	0x40(%rsp), %rsi
ffffffff8000ef75: 48 85 f6             	testq	%rsi, %rsi
ffffffff8000ef78: 0f 85 61 01 00 00    	jne	0xffffffff8000f0df <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::he60484b4342ae869+0x27f>
ffffffff8000ef7e: 48 8b 44 24 38       	movq	0x38(%rsp), %rax
ffffffff8000ef83: 48 85 c0             	testq	%rax, %rax
ffffffff8000ef86: 0f 84 3e ff ff ff    	je	0xffffffff8000eeca <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::he60484b4342ae869+0x6a>
ffffffff8000ef8c: 48 ff c8             	decq	%rax
ffffffff8000ef8f: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff8000ef94: 4c 8b 6c 24 18       	movq	0x18(%rsp), %r13
ffffffff8000ef99: 4c 3b 6c 24 20       	cmpq	0x20(%rsp), %r13
ffffffff8000ef9e: 0f 83 26 ff ff ff    	jae	0xffffffff8000eeca <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::he60484b4342ae869+0x6a>
ffffffff8000efa4: 49 8d 45 01          	leaq	0x1(%r13), %rax
ffffffff8000efa8: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff8000efad: 49 c1 e5 03          	shlq	$0x3, %r13
ffffffff8000efb1: 4c 03 6c 24 28       	addq	0x28(%rsp), %r13
ffffffff8000efb6: 48 8b 6c 24 30       	movq	0x30(%rsp), %rbp
ffffffff8000efbb: 48 8d 45 01          	leaq	0x1(%rbp), %rax
ffffffff8000efbf: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff8000efc4: 49 8b 75 00          	movq	(%r13), %rsi
ffffffff8000efc8: 89 f0                	movl	%esi, %eax
ffffffff8000efca: 25 81 00 00 00       	andl	$0x81, %eax
ffffffff8000efcf: 83 f8 01             	cmpl	$0x1, %eax
ffffffff8000efd2: 75 9c                	jne	0xffffffff8000ef70 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::he60484b4342ae869+0x110>
ffffffff8000efd4: 48 b8 00 f0 ff ff ff ff 0f 00	movabsq	$0xffffffffff000, %rax # imm = 0xFFFFFFFFFF000
ffffffff8000efde: 48 21 c6             	andq	%rax, %rsi
ffffffff8000efe1: 48 8b 7c 24 10       	movq	0x10(%rsp), %rdi
ffffffff8000efe6: e8 d5 90 00 00       	callq	0xffffffff800180c0 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>
ffffffff8000efeb: 48 8b 4c 24 60       	movq	0x60(%rsp), %rcx
ffffffff8000eff0: 48 d3 e5             	shlq	%cl, %rbp
ffffffff8000eff3: 48 be 00 00 00 00 00 00 01 00	movabsq	$0x1000000000000, %rsi # imm = 0x1000000000000
ffffffff8000effd: 48 39 f5             	cmpq	%rsi, %rbp
ffffffff8000f000: 0f 87 00 01 00 00    	ja	0xffffffff8000f106 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::he60484b4342ae869+0x2a6>
ffffffff8000f006: 4c 01 fd             	addq	%r15, %rbp
ffffffff8000f009: 0f 82 f7 00 00 00    	jb	0xffffffff8000f106 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::he60484b4342ae869+0x2a6>
ffffffff8000f00f: 48 89 e9             	movq	%rbp, %rcx
ffffffff8000f012: 48 c1 e9 2f          	shrq	$0x2f, %rcx
ffffffff8000f016: 48 83 f9 01          	cmpq	$0x1, %rcx
ffffffff8000f01a: 74 14                	je	0xffffffff8000f030 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::he60484b4342ae869+0x1d0>
ffffffff8000f01c: 83 f9 02             	cmpl	$0x2, %ecx
ffffffff8000f01f: 75 1c                	jne	0xffffffff8000f03d <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::he60484b4342ae869+0x1dd>
ffffffff8000f021: e9 e0 00 00 00       	jmp	0xffffffff8000f106 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::he60484b4342ae869+0x2a6>
ffffffff8000f026: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
ffffffff8000f030: 48 b9 00 00 00 00 00 80 ff ff	movabsq	$-0x800000000000, %rcx # imm = 0xFFFF800000000000
ffffffff8000f03a: 48 09 cd             	orq	%rcx, %rbp
ffffffff8000f03d: 48 8b 4c 24 58       	movq	0x58(%rsp), %rcx
ffffffff8000f042: 48 01 e9             	addq	%rbp, %rcx
ffffffff8000f045: 48 ba 00 00 00 00 00 80 00 00	movabsq	$0x800000000000, %rdx # imm = 0x800000000000
ffffffff8000f04f: 48 01 ca             	addq	%rcx, %rdx
ffffffff8000f052: 48 39 f2             	cmpq	%rsi, %rdx
ffffffff8000f055: 0f 83 b7 00 00 00    	jae	0xffffffff8000f112 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::he60484b4342ae869+0x2b2>
ffffffff8000f05b: 48 c1 e5 10          	shlq	$0x10, %rbp
ffffffff8000f05f: 48 c1 fd 10          	sarq	$0x10, %rbp
ffffffff8000f063: 48 81 e5 00 f0 ff ff 	andq	$-0x1000, %rbp          # imm = 0xF000
ffffffff8000f06a: 49 39 ec             	cmpq	%rbp, %r12
ffffffff8000f06d: 49 0f 47 ec          	cmovaq	%r12, %rbp
ffffffff8000f071: 48 81 e1 00 f0 ff ff 	andq	$-0x1000, %rcx          # imm = 0xF000
ffffffff8000f078: 49 39 ce             	cmpq	%rcx, %r14
ffffffff8000f07b: 49 0f 42 ce          	cmovbq	%r14, %rcx
ffffffff8000f07f: 48 89 6c 24 48       	movq	%rbp, 0x48(%rsp)
ffffffff8000f084: 48 89 4c 24 50       	movq	%rcx, 0x50(%rsp)
ffffffff8000f089: 48 89 c7             	movq	%rax, %rdi
ffffffff8000f08c: 48 8b 74 24 10       	movq	0x10(%rsp), %rsi
ffffffff8000f091: 8b 54 24 04          	movl	0x4(%rsp), %edx
ffffffff8000f095: 48 8d 4c 24 48       	leaq	0x48(%rsp), %rcx
ffffffff8000f09a: 4c 8b 44 24 08       	movq	0x8(%rsp), %r8
ffffffff8000f09f: e8 bc fd ff ff       	callq	0xffffffff8000ee60 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::he60484b4342ae869>
ffffffff8000f0a4: 84 c0                	testb	%al, %al
ffffffff8000f0a6: 0f 84 c4 fe ff ff    	je	0xffffffff8000ef70 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::he60484b4342ae869+0x110>
ffffffff8000f0ac: 49 8b 75 00          	movq	(%r13), %rsi
ffffffff8000f0b0: 40 f6 c6 01          	testb	$0x1, %sil
ffffffff8000f0b4: 74 78                	je	0xffffffff8000f12e <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::he60484b4342ae869+0x2ce>
ffffffff8000f0b6: 40 84 f6             	testb	%sil, %sil
ffffffff8000f0b9: 78 6f                	js	0xffffffff8000f12a <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::he60484b4342ae869+0x2ca>
ffffffff8000f0bb: 48 b8 00 f0 ff ff ff ff 0f 00	movabsq	$0xffffffffff000, %rax # imm = 0xFFFFFFFFFF000
ffffffff8000f0c5: 48 21 c6             	andq	%rax, %rsi
ffffffff8000f0c8: 49 c7 45 00 00 00 00 00      	movq	$0x0, (%r13)
ffffffff8000f0d0: 48 8b 7c 24 08       	movq	0x8(%rsp), %rdi
ffffffff8000f0d5: e8 76 d3 ff ff       	callq	0xffffffff8000c450 <<taos::memory::frame_allocator::GlobalFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::hcfaf6e33df90393d>
ffffffff8000f0da: e9 91 fe ff ff       	jmp	0xffffffff8000ef70 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::he60484b4342ae869+0x110>
ffffffff8000f0df: 48 c7 44 24 40 00 00 00 00   	movq	$0x0, 0x40(%rsp)
ffffffff8000f0e8: 48 8d 7c 24 18       	leaq	0x18(%rsp), %rdi
ffffffff8000f0ed: e8 be fc ff ff       	callq	0xffffffff8000edb0 <<core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::nth::h7c8afe11e8a77b06>
ffffffff8000f0f2: 48 85 d2             	testq	%rdx, %rdx
ffffffff8000f0f5: 0f 84 cf fd ff ff    	je	0xffffffff8000eeca <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::he60484b4342ae869+0x6a>
ffffffff8000f0fb: 48 89 c5             	movq	%rax, %rbp
ffffffff8000f0fe: 49 89 d5             	movq	%rdx, %r13
ffffffff8000f101: e9 be fe ff ff       	jmp	0xffffffff8000efc4 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::he60484b4342ae869+0x164>
ffffffff8000f106: 48 c7 c7 38 f8 01 80 	movq	$-0x7ffe07c8, %rdi      # imm = 0x8001F838
ffffffff8000f10d: e8 5e d8 00 00       	callq	0xffffffff8001c970 <core::option::unwrap_failed::hd8ef34c781aa10a4>
ffffffff8000f112: be 36 00 00 00       	movl	$0x36, %esi
ffffffff8000f117: 48 c7 c7 50 f8 01 80 	movq	$-0x7ffe07b0, %rdi      # imm = 0x8001F850
ffffffff8000f11e: 48 c7 c2 e8 f8 01 80 	movq	$-0x7ffe0718, %rdx      # imm = 0x8001F8E8
ffffffff8000f125: e8 46 d3 00 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000f12a: b0 01                	movb	$0x1, %al
ffffffff8000f12c: eb 02                	jmp	0xffffffff8000f130 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::CleanUp>::clean_up_addr_range::clean_up::he60484b4342ae869+0x2d0>
ffffffff8000f12e: 31 c0                	xorl	%eax, %eax
ffffffff8000f130: 88 44 24 48          	movb	%al, 0x48(%rsp)
ffffffff8000f134: 48 8d 54 24 48       	leaq	0x48(%rsp), %rdx
ffffffff8000f139: be 2b 00 00 00       	movl	$0x2b, %esi
ffffffff8000f13e: 48 c7 c7 20 f9 01 80 	movq	$-0x7ffe06e0, %rdi      # imm = 0x8001F920
ffffffff8000f145: 48 c7 c1 00 f9 01 80 	movq	$-0x7ffe0700, %rcx      # imm = 0x8001F900
ffffffff8000f14c: 49 c7 c0 50 f9 01 80 	movq	$-0x7ffe06b0, %r8       # imm = 0x8001F950
ffffffff8000f153: e8 88 cd 00 00       	callq	0xffffffff8001bee0 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff8000f158: cc                   	int3
ffffffff8000f159: cc                   	int3
ffffffff8000f15a: cc                   	int3
ffffffff8000f15b: cc                   	int3
ffffffff8000f15c: cc                   	int3
ffffffff8000f15d: cc                   	int3
ffffffff8000f15e: cc                   	int3
ffffffff8000f15f: cc                   	int3

ffffffff8000f160 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Translate>::translate::ha2f3ac841296f80f>:
ffffffff8000f160: 41 57                	pushq	%r15
ffffffff8000f162: 41 56                	pushq	%r14
ffffffff8000f164: 41 55                	pushq	%r13
ffffffff8000f166: 41 54                	pushq	%r12
ffffffff8000f168: 53                   	pushq	%rbx
ffffffff8000f169: 49 89 f7             	movq	%rsi, %r15
ffffffff8000f16c: 48 89 fb             	movq	%rdi, %rbx
ffffffff8000f16f: 48 89 d0             	movq	%rdx, %rax
ffffffff8000f172: 48 c1 e8 27          	shrq	$0x27, %rax
ffffffff8000f176: 25 ff 01 00 00       	andl	$0x1ff, %eax            # imm = 0x1FF
ffffffff8000f17b: 48 8b 0e             	movq	(%rsi), %rcx
ffffffff8000f17e: 48 8b 34 c1          	movq	(%rcx,%rax,8), %rsi
ffffffff8000f182: 40 f6 c6 01          	testb	$0x1, %sil
ffffffff8000f186: 74 3d                	je	0xffffffff8000f1c5 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Translate>::translate::ha2f3ac841296f80f+0x65>
ffffffff8000f188: 40 84 f6             	testb	%sil, %sil
ffffffff8000f18b: 0f 88 27 01 00 00    	js	0xffffffff8000f2b8 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Translate>::translate::ha2f3ac841296f80f+0x158>
ffffffff8000f191: 49 89 d6             	movq	%rdx, %r14
ffffffff8000f194: 49 83 c7 08          	addq	$0x8, %r15
ffffffff8000f198: 49 89 d5             	movq	%rdx, %r13
ffffffff8000f19b: 49 c1 ed 1e          	shrq	$0x1e, %r13
ffffffff8000f19f: 49 bc 00 f0 ff ff ff ff 0f 00	movabsq	$0xffffffffff000, %r12 # imm = 0xFFFFFFFFFF000
ffffffff8000f1a9: 4c 21 e6             	andq	%r12, %rsi
ffffffff8000f1ac: 4c 89 ff             	movq	%r15, %rdi
ffffffff8000f1af: e8 0c 8f 00 00       	callq	0xffffffff800180c0 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>
ffffffff8000f1b4: 41 81 e5 ff 01 00 00 	andl	$0x1ff, %r13d           # imm = 0x1FF
ffffffff8000f1bb: 4a 8b 34 e8          	movq	(%rax,%r13,8), %rsi
ffffffff8000f1bf: 40 f6 c6 01          	testb	$0x1, %sil
ffffffff8000f1c3: 75 14                	jne	0xffffffff8000f1d9 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Translate>::translate::ha2f3ac841296f80f+0x79>
ffffffff8000f1c5: 48 c7 03 03 00 00 00 	movq	$0x3, (%rbx)
ffffffff8000f1cc: 48 89 d8             	movq	%rbx, %rax
ffffffff8000f1cf: 5b                   	popq	%rbx
ffffffff8000f1d0: 41 5c                	popq	%r12
ffffffff8000f1d2: 41 5d                	popq	%r13
ffffffff8000f1d4: 41 5e                	popq	%r14
ffffffff8000f1d6: 41 5f                	popq	%r15
ffffffff8000f1d8: c3                   	retq
ffffffff8000f1d9: 40 84 f6             	testb	%sil, %sil
ffffffff8000f1dc: 78 7d                	js	0xffffffff8000f25b <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Translate>::translate::ha2f3ac841296f80f+0xfb>
ffffffff8000f1de: 4d 89 f5             	movq	%r14, %r13
ffffffff8000f1e1: 49 c1 ed 15          	shrq	$0x15, %r13
ffffffff8000f1e5: 4c 21 e6             	andq	%r12, %rsi
ffffffff8000f1e8: 4c 89 ff             	movq	%r15, %rdi
ffffffff8000f1eb: e8 d0 8e 00 00       	callq	0xffffffff800180c0 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>
ffffffff8000f1f0: 41 81 e5 ff 01 00 00 	andl	$0x1ff, %r13d           # imm = 0x1FF
ffffffff8000f1f7: 4a 8b 34 e8          	movq	(%rax,%r13,8), %rsi
ffffffff8000f1fb: 40 f6 c6 01          	testb	$0x1, %sil
ffffffff8000f1ff: 74 c4                	je	0xffffffff8000f1c5 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Translate>::translate::ha2f3ac841296f80f+0x65>
ffffffff8000f201: 40 84 f6             	testb	%sil, %sil
ffffffff8000f204: 0f 88 87 00 00 00    	js	0xffffffff8000f291 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Translate>::translate::ha2f3ac841296f80f+0x131>
ffffffff8000f20a: 4d 89 f5             	movq	%r14, %r13
ffffffff8000f20d: 49 c1 ed 0c          	shrq	$0xc, %r13
ffffffff8000f211: 4c 21 e6             	andq	%r12, %rsi
ffffffff8000f214: 4c 89 ff             	movq	%r15, %rdi
ffffffff8000f217: e8 a4 8e 00 00       	callq	0xffffffff800180c0 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>
ffffffff8000f21c: 41 81 e5 ff 01 00 00 	andl	$0x1ff, %r13d           # imm = 0x1FF
ffffffff8000f223: 4a 8b 04 e8          	movq	(%rax,%r13,8), %rax
ffffffff8000f227: 48 85 c0             	testq	%rax, %rax
ffffffff8000f22a: 74 99                	je	0xffffffff8000f1c5 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Translate>::translate::ha2f3ac841296f80f+0x65>
ffffffff8000f22c: 49 21 c4             	andq	%rax, %r12
ffffffff8000f22f: 41 81 e6 ff 0f 00 00 	andl	$0xfff, %r14d           # imm = 0xFFF
ffffffff8000f236: 48 b9 ff 0f 00 00 00 00 f0 ff	movabsq	$-0xffffffffff001, %rcx # imm = 0xFFF0000000000FFF
ffffffff8000f240: 48 21 c1             	andq	%rax, %rcx
ffffffff8000f243: 48 c7 03 00 00 00 00 	movq	$0x0, (%rbx)
ffffffff8000f24a: 4c 89 63 08          	movq	%r12, 0x8(%rbx)
ffffffff8000f24e: 4c 89 73 10          	movq	%r14, 0x10(%rbx)
ffffffff8000f252: 48 89 4b 18          	movq	%rcx, 0x18(%rbx)
ffffffff8000f256: e9 71 ff ff ff       	jmp	0xffffffff8000f1cc <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Translate>::translate::ha2f3ac841296f80f+0x6c>
ffffffff8000f25b: 49 81 c4 00 10 00 c0 	addq	$-0x3ffff000, %r12      # imm = 0xC0001000
ffffffff8000f262: 49 21 f4             	andq	%rsi, %r12
ffffffff8000f265: 41 81 e6 ff ff ff 3f 	andl	$0x3fffffff, %r14d      # imm = 0x3FFFFFFF
ffffffff8000f26c: 48 b8 ff 0f 00 00 00 00 f0 ff	movabsq	$-0xffffffffff001, %rax # imm = 0xFFF0000000000FFF
ffffffff8000f276: 48 21 f0             	andq	%rsi, %rax
ffffffff8000f279: 48 c7 03 02 00 00 00 	movq	$0x2, (%rbx)
ffffffff8000f280: 4c 89 63 08          	movq	%r12, 0x8(%rbx)
ffffffff8000f284: 4c 89 73 10          	movq	%r14, 0x10(%rbx)
ffffffff8000f288: 48 89 43 18          	movq	%rax, 0x18(%rbx)
ffffffff8000f28c: e9 3b ff ff ff       	jmp	0xffffffff8000f1cc <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Translate>::translate::ha2f3ac841296f80f+0x6c>
ffffffff8000f291: 49 81 c4 00 10 e0 ff 	addq	$-0x1ff000, %r12        # imm = 0xFFE01000
ffffffff8000f298: 49 21 f4             	andq	%rsi, %r12
ffffffff8000f29b: 41 81 e6 ff ff 1f 00 	andl	$0x1fffff, %r14d        # imm = 0x1FFFFF
ffffffff8000f2a2: 48 b8 ff 0f 00 00 00 00 f0 ff	movabsq	$-0xffffffffff001, %rax # imm = 0xFFF0000000000FFF
ffffffff8000f2ac: 48 21 f0             	andq	%rsi, %rax
ffffffff8000f2af: 48 c7 03 01 00 00 00 	movq	$0x1, (%rbx)
ffffffff8000f2b6: eb c8                	jmp	0xffffffff8000f280 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Translate>::translate::ha2f3ac841296f80f+0x120>
ffffffff8000f2b8: be 23 00 00 00       	movl	$0x23, %esi
ffffffff8000f2bd: 48 c7 c7 68 f9 01 80 	movq	$-0x7ffe0698, %rdi      # imm = 0x8001F968
ffffffff8000f2c4: 48 c7 c2 90 f9 01 80 	movq	$-0x7ffe0670, %rdx      # imm = 0x8001F990
ffffffff8000f2cb: e8 a0 d1 00 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>

ffffffff8000f2d0 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf>:
ffffffff8000f2d0: 55                   	pushq	%rbp
ffffffff8000f2d1: 41 57                	pushq	%r15
ffffffff8000f2d3: 41 56                	pushq	%r14
ffffffff8000f2d5: 41 55                	pushq	%r13
ffffffff8000f2d7: 41 54                	pushq	%r12
ffffffff8000f2d9: 53                   	pushq	%rbx
ffffffff8000f2da: 50                   	pushq	%rax
ffffffff8000f2db: 48 89 f8             	movq	%rdi, %rax
ffffffff8000f2de: 48 89 d7             	movq	%rdx, %rdi
ffffffff8000f2e1: 48 c1 ef 27          	shrq	$0x27, %rdi
ffffffff8000f2e5: 81 e7 ff 01 00 00    	andl	$0x1ff, %edi            # imm = 0x1FF
ffffffff8000f2eb: 4c 8b 06             	movq	(%rsi), %r8
ffffffff8000f2ee: 4d 8b 04 f8          	movq	(%r8,%rdi,8), %r8
ffffffff8000f2f2: 41 f6 c0 01          	testb	$0x1, %r8b
ffffffff8000f2f6: 75 04                	jne	0xffffffff8000f2fc <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf+0x2c>
ffffffff8000f2f8: 31 ff                	xorl	%edi, %edi
ffffffff8000f2fa: eb 4e                	jmp	0xffffffff8000f34a <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf+0x7a>
ffffffff8000f2fc: 40 b7 01             	movb	$0x1, %dil
ffffffff8000f2ff: 45 84 c0             	testb	%r8b, %r8b
ffffffff8000f302: 78 46                	js	0xffffffff8000f34a <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf+0x7a>
ffffffff8000f304: 49 89 cf             	movq	%rcx, %r15
ffffffff8000f307: 49 89 c6             	movq	%rax, %r14
ffffffff8000f30a: 48 83 c6 08          	addq	$0x8, %rsi
ffffffff8000f30e: 49 89 d4             	movq	%rdx, %r12
ffffffff8000f311: 48 89 d5             	movq	%rdx, %rbp
ffffffff8000f314: 48 c1 ed 1e          	shrq	$0x1e, %rbp
ffffffff8000f318: 49 bd 00 f0 ff ff ff ff 0f 00	movabsq	$0xffffffffff000, %r13 # imm = 0xFFFFFFFFFF000
ffffffff8000f322: 4d 21 e8             	andq	%r13, %r8
ffffffff8000f325: 48 89 f3             	movq	%rsi, %rbx
ffffffff8000f328: 48 89 f7             	movq	%rsi, %rdi
ffffffff8000f32b: 4c 89 c6             	movq	%r8, %rsi
ffffffff8000f32e: e8 8d 8d 00 00       	callq	0xffffffff800180c0 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>
ffffffff8000f333: 81 e5 ff 01 00 00    	andl	$0x1ff, %ebp            # imm = 0x1FF
ffffffff8000f339: 48 8b 34 e8          	movq	(%rax,%rbp,8), %rsi
ffffffff8000f33d: 40 f6 c6 01          	testb	$0x1, %sil
ffffffff8000f341: 75 0d                	jne	0xffffffff8000f350 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf+0x80>
ffffffff8000f343: 31 c9                	xorl	%ecx, %ecx
ffffffff8000f345: 4c 89 f0             	movq	%r14, %rax
ffffffff8000f348: eb 74                	jmp	0xffffffff8000f3be <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf+0xee>
ffffffff8000f34a: 40 88 78 01          	movb	%dil, 0x1(%rax)
ffffffff8000f34e: eb 71                	jmp	0xffffffff8000f3c1 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf+0xf1>
ffffffff8000f350: b1 01                	movb	$0x1, %cl
ffffffff8000f352: 40 84 f6             	testb	%sil, %sil
ffffffff8000f355: 4c 89 f0             	movq	%r14, %rax
ffffffff8000f358: 78 64                	js	0xffffffff8000f3be <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf+0xee>
ffffffff8000f35a: 4c 89 e5             	movq	%r12, %rbp
ffffffff8000f35d: 48 c1 ed 15          	shrq	$0x15, %rbp
ffffffff8000f361: 4c 21 ee             	andq	%r13, %rsi
ffffffff8000f364: 48 89 df             	movq	%rbx, %rdi
ffffffff8000f367: e8 54 8d 00 00       	callq	0xffffffff800180c0 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>
ffffffff8000f36c: 81 e5 ff 01 00 00    	andl	$0x1ff, %ebp            # imm = 0x1FF
ffffffff8000f372: 48 8b 34 e8          	movq	(%rax,%rbp,8), %rsi
ffffffff8000f376: 40 f6 c6 01          	testb	$0x1, %sil
ffffffff8000f37a: 74 c7                	je	0xffffffff8000f343 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf+0x73>
ffffffff8000f37c: b1 01                	movb	$0x1, %cl
ffffffff8000f37e: 40 84 f6             	testb	%sil, %sil
ffffffff8000f381: 4c 89 f0             	movq	%r14, %rax
ffffffff8000f384: 78 38                	js	0xffffffff8000f3be <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf+0xee>
ffffffff8000f386: 4c 89 e5             	movq	%r12, %rbp
ffffffff8000f389: 48 c1 ed 0c          	shrq	$0xc, %rbp
ffffffff8000f38d: 4c 21 ee             	andq	%r13, %rsi
ffffffff8000f390: 48 89 df             	movq	%rbx, %rdi
ffffffff8000f393: e8 28 8d 00 00       	callq	0xffffffff800180c0 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>
ffffffff8000f398: 81 e5 ff 01 00 00    	andl	$0x1ff, %ebp            # imm = 0x1FF
ffffffff8000f39e: 89 e9                	movl	%ebp, %ecx
ffffffff8000f3a0: 48 8b 0c c8          	movq	(%rax,%rcx,8), %rcx
ffffffff8000f3a4: 48 85 c9             	testq	%rcx, %rcx
ffffffff8000f3a7: 74 2b                	je	0xffffffff8000f3d4 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf+0x104>
ffffffff8000f3a9: 4c 21 e9             	andq	%r13, %rcx
ffffffff8000f3ac: 4c 09 f9             	orq	%r15, %rcx
ffffffff8000f3af: 48 89 0c e8          	movq	%rcx, (%rax,%rbp,8)
ffffffff8000f3b3: 4c 89 f0             	movq	%r14, %rax
ffffffff8000f3b6: 4d 89 66 08          	movq	%r12, 0x8(%r14)
ffffffff8000f3ba: 31 c9                	xorl	%ecx, %ecx
ffffffff8000f3bc: eb 05                	jmp	0xffffffff8000f3c3 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf+0xf3>
ffffffff8000f3be: 88 48 01             	movb	%cl, 0x1(%rax)
ffffffff8000f3c1: b1 01                	movb	$0x1, %cl
ffffffff8000f3c3: 88 08                	movb	%cl, (%rax)
ffffffff8000f3c5: 48 83 c4 08          	addq	$0x8, %rsp
ffffffff8000f3c9: 5b                   	popq	%rbx
ffffffff8000f3ca: 41 5c                	popq	%r12
ffffffff8000f3cc: 41 5d                	popq	%r13
ffffffff8000f3ce: 41 5e                	popq	%r14
ffffffff8000f3d0: 41 5f                	popq	%r15
ffffffff8000f3d2: 5d                   	popq	%rbp
ffffffff8000f3d3: c3                   	retq
ffffffff8000f3d4: 4c 89 f0             	movq	%r14, %rax
ffffffff8000f3d7: 41 c6 46 01 00       	movb	$0x0, 0x1(%r14)
ffffffff8000f3dc: eb e3                	jmp	0xffffffff8000f3c1 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::update_flags::h4d0090408b81cbbf+0xf1>
ffffffff8000f3de: cc                   	int3
ffffffff8000f3df: cc                   	int3

ffffffff8000f3e0 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::unmap::h03e63a1f2cd90ad1>:
ffffffff8000f3e0: 41 57                	pushq	%r15
ffffffff8000f3e2: 41 56                	pushq	%r14
ffffffff8000f3e4: 41 55                	pushq	%r13
ffffffff8000f3e6: 41 54                	pushq	%r12
ffffffff8000f3e8: 53                   	pushq	%rbx
ffffffff8000f3e9: 49 89 f7             	movq	%rsi, %r15
ffffffff8000f3ec: 48 89 fb             	movq	%rdi, %rbx
ffffffff8000f3ef: 48 89 d0             	movq	%rdx, %rax
ffffffff8000f3f2: 48 c1 e8 27          	shrq	$0x27, %rax
ffffffff8000f3f6: 25 ff 01 00 00       	andl	$0x1ff, %eax            # imm = 0x1FF
ffffffff8000f3fb: 48 8b 0e             	movq	(%rsi), %rcx
ffffffff8000f3fe: 48 8b 34 c1          	movq	(%rcx,%rax,8), %rsi
ffffffff8000f402: 89 f0                	movl	%esi, %eax
ffffffff8000f404: 25 81 00 00 00       	andl	$0x81, %eax
ffffffff8000f409: 83 f8 01             	cmpl	$0x1, %eax
ffffffff8000f40c: 0f 85 a7 00 00 00    	jne	0xffffffff8000f4b9 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::unmap::h03e63a1f2cd90ad1+0xd9>
ffffffff8000f412: 49 89 d6             	movq	%rdx, %r14
ffffffff8000f415: 49 83 c7 08          	addq	$0x8, %r15
ffffffff8000f419: 49 bc 00 f0 ff ff ff ff 0f 00	movabsq	$0xffffffffff000, %r12 # imm = 0xFFFFFFFFFF000
ffffffff8000f423: 49 89 d5             	movq	%rdx, %r13
ffffffff8000f426: 49 c1 ed 1e          	shrq	$0x1e, %r13
ffffffff8000f42a: 4c 21 e6             	andq	%r12, %rsi
ffffffff8000f42d: 4c 89 ff             	movq	%r15, %rdi
ffffffff8000f430: e8 8b 8c 00 00       	callq	0xffffffff800180c0 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>
ffffffff8000f435: 41 81 e5 ff 01 00 00 	andl	$0x1ff, %r13d           # imm = 0x1FF
ffffffff8000f43c: 4a 8b 34 e8          	movq	(%rax,%r13,8), %rsi
ffffffff8000f440: 89 f0                	movl	%esi, %eax
ffffffff8000f442: 25 81 00 00 00       	andl	$0x81, %eax
ffffffff8000f447: 83 f8 01             	cmpl	$0x1, %eax
ffffffff8000f44a: 75 6d                	jne	0xffffffff8000f4b9 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::unmap::h03e63a1f2cd90ad1+0xd9>
ffffffff8000f44c: 4d 89 f5             	movq	%r14, %r13
ffffffff8000f44f: 49 c1 ed 15          	shrq	$0x15, %r13
ffffffff8000f453: 4c 21 e6             	andq	%r12, %rsi
ffffffff8000f456: 4c 89 ff             	movq	%r15, %rdi
ffffffff8000f459: e8 62 8c 00 00       	callq	0xffffffff800180c0 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>
ffffffff8000f45e: 41 81 e5 ff 01 00 00 	andl	$0x1ff, %r13d           # imm = 0x1FF
ffffffff8000f465: 4a 8b 34 e8          	movq	(%rax,%r13,8), %rsi
ffffffff8000f469: 89 f0                	movl	%esi, %eax
ffffffff8000f46b: 25 81 00 00 00       	andl	$0x81, %eax
ffffffff8000f470: 83 f8 01             	cmpl	$0x1, %eax
ffffffff8000f473: 75 44                	jne	0xffffffff8000f4b9 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::unmap::h03e63a1f2cd90ad1+0xd9>
ffffffff8000f475: 4d 89 f5             	movq	%r14, %r13
ffffffff8000f478: 49 c1 ed 0c          	shrq	$0xc, %r13
ffffffff8000f47c: 4c 21 e6             	andq	%r12, %rsi
ffffffff8000f47f: 4c 89 ff             	movq	%r15, %rdi
ffffffff8000f482: e8 39 8c 00 00       	callq	0xffffffff800180c0 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>
ffffffff8000f487: 41 81 e5 ff 01 00 00 	andl	$0x1ff, %r13d           # imm = 0x1FF
ffffffff8000f48e: 44 89 e9             	movl	%r13d, %ecx
ffffffff8000f491: 48 8b 0c c8          	movq	(%rax,%rcx,8), %rcx
ffffffff8000f495: 89 ca                	movl	%ecx, %edx
ffffffff8000f497: 81 e2 81 00 00 00    	andl	$0x81, %edx
ffffffff8000f49d: 83 fa 01             	cmpl	$0x1, %edx
ffffffff8000f4a0: 75 35                	jne	0xffffffff8000f4d7 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::unmap::h03e63a1f2cd90ad1+0xf7>
ffffffff8000f4a2: 4c 21 e1             	andq	%r12, %rcx
ffffffff8000f4a5: 4a c7 04 e8 00 00 00 00      	movq	$0x0, (%rax,%r13,8)
ffffffff8000f4ad: 48 89 4b 08          	movq	%rcx, 0x8(%rbx)
ffffffff8000f4b1: 4c 89 73 10          	movq	%r14, 0x10(%rbx)
ffffffff8000f4b5: 31 c0                	xorl	%eax, %eax
ffffffff8000f4b7: eb 0e                	jmp	0xffffffff8000f4c7 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::unmap::h03e63a1f2cd90ad1+0xe7>
ffffffff8000f4b9: f7 d6                	notl	%esi
ffffffff8000f4bb: 83 e6 01             	andl	$0x1, %esi
ffffffff8000f4be: 48 89 73 08          	movq	%rsi, 0x8(%rbx)
ffffffff8000f4c2: b8 01 00 00 00       	movl	$0x1, %eax
ffffffff8000f4c7: 48 89 03             	movq	%rax, (%rbx)
ffffffff8000f4ca: 48 89 d8             	movq	%rbx, %rax
ffffffff8000f4cd: 5b                   	popq	%rbx
ffffffff8000f4ce: 41 5c                	popq	%r12
ffffffff8000f4d0: 41 5d                	popq	%r13
ffffffff8000f4d2: 41 5e                	popq	%r14
ffffffff8000f4d4: 41 5f                	popq	%r15
ffffffff8000f4d6: c3                   	retq
ffffffff8000f4d7: f7 d1                	notl	%ecx
ffffffff8000f4d9: 83 e1 01             	andl	$0x1, %ecx
ffffffff8000f4dc: 48 89 4b 08          	movq	%rcx, 0x8(%rbx)
ffffffff8000f4e0: eb e0                	jmp	0xffffffff8000f4c2 <<x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P> as x86_64::structures::paging::mapper::Mapper<x86_64::structures::paging::page::Size4KiB>>::unmap::h03e63a1f2cd90ad1+0xe2>
ffffffff8000f4e2: cc                   	int3
ffffffff8000f4e3: cc                   	int3
ffffffff8000f4e4: cc                   	int3
ffffffff8000f4e5: cc                   	int3
ffffffff8000f4e6: cc                   	int3
ffffffff8000f4e7: cc                   	int3
ffffffff8000f4e8: cc                   	int3
ffffffff8000f4e9: cc                   	int3
ffffffff8000f4ea: cc                   	int3
ffffffff8000f4eb: cc                   	int3
ffffffff8000f4ec: cc                   	int3
ffffffff8000f4ed: cc                   	int3
ffffffff8000f4ee: cc                   	int3
ffffffff8000f4ef: cc                   	int3

ffffffff8000f4f0 <x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P>::map_to_4kib::hf126fe5c9974d9a9>:
ffffffff8000f4f0: 55                   	pushq	%rbp
ffffffff8000f4f1: 41 57                	pushq	%r15
ffffffff8000f4f3: 41 56                	pushq	%r14
ffffffff8000f4f5: 41 55                	pushq	%r13
ffffffff8000f4f7: 41 54                	pushq	%r12
ffffffff8000f4f9: 53                   	pushq	%rbx
ffffffff8000f4fa: 48 83 ec 18          	subq	$0x18, %rsp
ffffffff8000f4fe: 4d 89 cd             	movq	%r9, %r13
ffffffff8000f501: 4c 89 44 24 10       	movq	%r8, 0x10(%rsp)
ffffffff8000f506: 49 89 cf             	movq	%rcx, %r15
ffffffff8000f509: 49 89 d4             	movq	%rdx, %r12
ffffffff8000f50c: 49 89 f6             	movq	%rsi, %r14
ffffffff8000f50f: 48 89 fb             	movq	%rdi, %rbx
ffffffff8000f512: 48 8b 6c 24 50       	movq	0x50(%rsp), %rbp
ffffffff8000f517: 48 c1 ea 27          	shrq	$0x27, %rdx
ffffffff8000f51b: 81 e2 ff 01 00 00    	andl	$0x1ff, %edx            # imm = 0x1FF
ffffffff8000f521: c1 e2 03             	shll	$0x3, %edx
ffffffff8000f524: 48 03 16             	addq	(%rsi), %rdx
ffffffff8000f527: 49 83 c6 08          	addq	$0x8, %r14
ffffffff8000f52b: 48 89 e7             	movq	%rsp, %rdi
ffffffff8000f52e: 4c 89 f6             	movq	%r14, %rsi
ffffffff8000f531: 4c 89 c9             	movq	%r9, %rcx
ffffffff8000f534: 49 89 e8             	movq	%rbp, %r8
ffffffff8000f537: e8 04 01 00 00       	callq	0xffffffff8000f640 <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h793677091b21e242.llvm.245072174073143757>
ffffffff8000f53c: 80 3c 24 00          	cmpb	$0x0, (%rsp)
ffffffff8000f540: 75 58                	jne	0xffffffff8000f59a <x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P>::map_to_4kib::hf126fe5c9974d9a9+0xaa>
ffffffff8000f542: 4c 89 e2             	movq	%r12, %rdx
ffffffff8000f545: 48 c1 ea 1e          	shrq	$0x1e, %rdx
ffffffff8000f549: 81 e2 ff 01 00 00    	andl	$0x1ff, %edx            # imm = 0x1FF
ffffffff8000f54f: c1 e2 03             	shll	$0x3, %edx
ffffffff8000f552: 48 03 54 24 08       	addq	0x8(%rsp), %rdx
ffffffff8000f557: 48 89 e7             	movq	%rsp, %rdi
ffffffff8000f55a: 4c 89 f6             	movq	%r14, %rsi
ffffffff8000f55d: 4c 89 e9             	movq	%r13, %rcx
ffffffff8000f560: 49 89 e8             	movq	%rbp, %r8
ffffffff8000f563: e8 d8 00 00 00       	callq	0xffffffff8000f640 <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h793677091b21e242.llvm.245072174073143757>
ffffffff8000f568: 80 3c 24 00          	cmpb	$0x0, (%rsp)
ffffffff8000f56c: 75 2c                	jne	0xffffffff8000f59a <x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P>::map_to_4kib::hf126fe5c9974d9a9+0xaa>
ffffffff8000f56e: 4c 89 e2             	movq	%r12, %rdx
ffffffff8000f571: 48 c1 ea 15          	shrq	$0x15, %rdx
ffffffff8000f575: 81 e2 ff 01 00 00    	andl	$0x1ff, %edx            # imm = 0x1FF
ffffffff8000f57b: c1 e2 03             	shll	$0x3, %edx
ffffffff8000f57e: 48 03 54 24 08       	addq	0x8(%rsp), %rdx
ffffffff8000f583: 48 89 e7             	movq	%rsp, %rdi
ffffffff8000f586: 4c 89 f6             	movq	%r14, %rsi
ffffffff8000f589: 4c 89 e9             	movq	%r13, %rcx
ffffffff8000f58c: 49 89 e8             	movq	%rbp, %r8
ffffffff8000f58f: e8 ac 00 00 00       	callq	0xffffffff8000f640 <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h793677091b21e242.llvm.245072174073143757>
ffffffff8000f594: 80 3c 24 00          	cmpb	$0x0, (%rsp)
ffffffff8000f598: 74 1e                	je	0xffffffff8000f5b8 <x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P>::map_to_4kib::hf126fe5c9974d9a9+0xc8>
ffffffff8000f59a: 0f b6 44 24 01       	movzbl	0x1(%rsp), %eax
ffffffff8000f59f: 48 83 f0 01          	xorq	$0x1, %rax
ffffffff8000f5a3: 48 89 03             	movq	%rax, (%rbx)
ffffffff8000f5a6: 48 89 d8             	movq	%rbx, %rax
ffffffff8000f5a9: 48 83 c4 18          	addq	$0x18, %rsp
ffffffff8000f5ad: 5b                   	popq	%rbx
ffffffff8000f5ae: 41 5c                	popq	%r12
ffffffff8000f5b0: 41 5d                	popq	%r13
ffffffff8000f5b2: 41 5e                	popq	%r14
ffffffff8000f5b4: 41 5f                	popq	%r15
ffffffff8000f5b6: 5d                   	popq	%rbp
ffffffff8000f5b7: c3                   	retq
ffffffff8000f5b8: 4c 89 e0             	movq	%r12, %rax
ffffffff8000f5bb: 48 c1 e8 0c          	shrq	$0xc, %rax
ffffffff8000f5bf: 48 8b 4c 24 08       	movq	0x8(%rsp), %rcx
ffffffff8000f5c4: 25 ff 01 00 00       	andl	$0x1ff, %eax            # imm = 0x1FF
ffffffff8000f5c9: 89 c2                	movl	%eax, %edx
ffffffff8000f5cb: 48 83 3c d1 00       	cmpq	$0x0, (%rcx,%rdx,8)
ffffffff8000f5d0: 74 0d                	je	0xffffffff8000f5df <x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P>::map_to_4kib::hf126fe5c9974d9a9+0xef>
ffffffff8000f5d2: 48 c7 03 02 00 00 00 	movq	$0x2, (%rbx)
ffffffff8000f5d9: 4c 89 7b 08          	movq	%r15, 0x8(%rbx)
ffffffff8000f5dd: eb c7                	jmp	0xffffffff8000f5a6 <x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P>::map_to_4kib::hf126fe5c9974d9a9+0xb6>
ffffffff8000f5df: 48 8b 74 24 10       	movq	0x10(%rsp), %rsi
ffffffff8000f5e4: 40 84 f6             	testb	%sil, %sil
ffffffff8000f5e7: 78 1d                	js	0xffffffff8000f606 <x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P>::map_to_4kib::hf126fe5c9974d9a9+0x116>
ffffffff8000f5e9: 4c 89 fa             	movq	%r15, %rdx
ffffffff8000f5ec: 48 c1 e2 34          	shlq	$0x34, %rdx
ffffffff8000f5f0: 75 2c                	jne	0xffffffff8000f61e <x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P>::map_to_4kib::hf126fe5c9974d9a9+0x12e>
ffffffff8000f5f2: 4c 09 fe             	orq	%r15, %rsi
ffffffff8000f5f5: 48 89 34 c1          	movq	%rsi, (%rcx,%rax,8)
ffffffff8000f5f9: 4c 89 63 08          	movq	%r12, 0x8(%rbx)
ffffffff8000f5fd: 48 c7 03 03 00 00 00 	movq	$0x3, (%rbx)
ffffffff8000f604: eb a0                	jmp	0xffffffff8000f5a6 <x86_64::structures::paging::mapper::mapped_page_table::MappedPageTable<P>::map_to_4kib::hf126fe5c9974d9a9+0xb6>
ffffffff8000f606: be 3c 00 00 00       	movl	$0x3c, %esi
ffffffff8000f60b: 48 c7 c7 a8 f9 01 80 	movq	$-0x7ffe0658, %rdi      # imm = 0x8001F9A8
ffffffff8000f612: 48 c7 c2 60 fa 01 80 	movq	$-0x7ffe05a0, %rdx      # imm = 0x8001FA60
ffffffff8000f619: e8 52 ce 00 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000f61e: be 31 00 00 00       	movl	$0x31, %esi
ffffffff8000f623: 48 c7 c7 78 fa 01 80 	movq	$-0x7ffe0588, %rdi      # imm = 0x8001FA78
ffffffff8000f62a: 48 c7 c2 b0 fa 01 80 	movq	$-0x7ffe0550, %rdx      # imm = 0x8001FAB0
ffffffff8000f631: e8 3a ce 00 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000f636: cc                   	int3
ffffffff8000f637: cc                   	int3
ffffffff8000f638: cc                   	int3
ffffffff8000f639: cc                   	int3
ffffffff8000f63a: cc                   	int3
ffffffff8000f63b: cc                   	int3
ffffffff8000f63c: cc                   	int3
ffffffff8000f63d: cc                   	int3
ffffffff8000f63e: cc                   	int3
ffffffff8000f63f: cc                   	int3

ffffffff8000f640 <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h793677091b21e242.llvm.245072174073143757>:
ffffffff8000f640: 41 57                	pushq	%r15
ffffffff8000f642: 41 56                	pushq	%r14
ffffffff8000f644: 41 54                	pushq	%r12
ffffffff8000f646: 53                   	pushq	%rbx
ffffffff8000f647: 48 83 ec 18          	subq	$0x18, %rsp
ffffffff8000f64b: 49 89 ce             	movq	%rcx, %r14
ffffffff8000f64e: 48 89 fb             	movq	%rdi, %rbx
ffffffff8000f651: 48 8b 02             	movq	(%rdx), %rax
ffffffff8000f654: 48 85 c0             	testq	%rax, %rax
ffffffff8000f657: 74 4c                	je	0xffffffff8000f6a5 <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h793677091b21e242.llvm.245072174073143757+0x65>
ffffffff8000f659: 4d 85 f6             	testq	%r14, %r14
ffffffff8000f65c: 74 1e                	je	0xffffffff8000f67c <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h793677091b21e242.llvm.245072174073143757+0x3c>
ffffffff8000f65e: 4c 89 f1             	movq	%r14, %rcx
ffffffff8000f661: 48 21 c1             	andq	%rax, %rcx
ffffffff8000f664: 48 bf ff 0f 00 00 00 00 f0 ff	movabsq	$-0xffffffffff001, %rdi # imm = 0xFFF0000000000FFF
ffffffff8000f66e: 48 21 cf             	andq	%rcx, %rdi
ffffffff8000f671: 4c 39 f7             	cmpq	%r14, %rdi
ffffffff8000f674: 74 06                	je	0xffffffff8000f67c <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h793677091b21e242.llvm.245072174073143757+0x3c>
ffffffff8000f676: 4c 09 f0             	orq	%r14, %rax
ffffffff8000f679: 48 89 02             	movq	%rax, (%rdx)
ffffffff8000f67c: a8 01                	testb	$0x1, %al
ffffffff8000f67e: 0f 84 f4 00 00 00    	je	0xffffffff8000f778 <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h793677091b21e242.llvm.245072174073143757+0x138>
ffffffff8000f684: 84 c0                	testb	%al, %al
ffffffff8000f686: 78 48                	js	0xffffffff8000f6d0 <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h793677091b21e242.llvm.245072174073143757+0x90>
ffffffff8000f688: 48 b9 00 f0 ff ff ff ff 0f 00	movabsq	$0xffffffffff000, %rcx # imm = 0xFFFFFFFFFF000
ffffffff8000f692: 48 21 c8             	andq	%rcx, %rax
ffffffff8000f695: 48 89 f7             	movq	%rsi, %rdi
ffffffff8000f698: 48 89 c6             	movq	%rax, %rsi
ffffffff8000f69b: e8 20 8a 00 00       	callq	0xffffffff800180c0 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>
ffffffff8000f6a0: e9 90 00 00 00       	jmp	0xffffffff8000f735 <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h793677091b21e242.llvm.245072174073143757+0xf5>
ffffffff8000f6a5: 49 89 d7             	movq	%rdx, %r15
ffffffff8000f6a8: 49 89 f4             	movq	%rsi, %r12
ffffffff8000f6ab: 41 83 38 02          	cmpl	$0x2, (%r8)
ffffffff8000f6af: 75 26                	jne	0xffffffff8000f6d7 <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h793677091b21e242.llvm.245072174073143757+0x97>
ffffffff8000f6b1: 49 83 c0 08          	addq	$0x8, %r8
ffffffff8000f6b5: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff8000f6ba: 4c 89 c6             	movq	%r8, %rsi
ffffffff8000f6bd: e8 ae c5 ff ff       	callq	0xffffffff8000bc70 <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h034757e32ae64125>
ffffffff8000f6c2: f6 44 24 08 01       	testb	$0x1, 0x8(%rsp)
ffffffff8000f6c7: 75 22                	jne	0xffffffff8000f6eb <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h793677091b21e242.llvm.245072174073143757+0xab>
ffffffff8000f6c9: 66 c7 03 01 01       	movw	$0x101, (%rbx)          # imm = 0x101
ffffffff8000f6ce: eb 6c                	jmp	0xffffffff8000f73c <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h793677091b21e242.llvm.245072174073143757+0xfc>
ffffffff8000f6d0: 66 c7 03 01 00       	movw	$0x1, (%rbx)
ffffffff8000f6d5: eb 65                	jmp	0xffffffff8000f73c <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h793677091b21e242.llvm.245072174073143757+0xfc>
ffffffff8000f6d7: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff8000f6dc: 4c 89 c6             	movq	%r8, %rsi
ffffffff8000f6df: e8 5c bd ff ff       	callq	0xffffffff8000b440 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683>
ffffffff8000f6e4: f6 44 24 08 01       	testb	$0x1, 0x8(%rsp)
ffffffff8000f6e9: 74 de                	je	0xffffffff8000f6c9 <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h793677091b21e242.llvm.245072174073143757+0x89>
ffffffff8000f6eb: 45 84 f6             	testb	%r14b, %r14b
ffffffff8000f6ee: 78 58                	js	0xffffffff8000f748 <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h793677091b21e242.llvm.245072174073143757+0x108>
ffffffff8000f6f0: 48 8b 74 24 10       	movq	0x10(%rsp), %rsi
ffffffff8000f6f5: 48 89 f0             	movq	%rsi, %rax
ffffffff8000f6f8: 48 c1 e0 34          	shlq	$0x34, %rax
ffffffff8000f6fc: 75 62                	jne	0xffffffff8000f760 <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h793677091b21e242.llvm.245072174073143757+0x120>
ffffffff8000f6fe: 4c 09 f6             	orq	%r14, %rsi
ffffffff8000f701: 49 89 37             	movq	%rsi, (%r15)
ffffffff8000f704: 41 f6 c6 01          	testb	$0x1, %r14b
ffffffff8000f708: 74 6e                	je	0xffffffff8000f778 <x86_64::structures::paging::mapper::mapped_page_table::PageTableWalker<P>::create_next_table::h793677091b21e242.llvm.245072174073143757+0x138>
ffffffff8000f70a: 4c 89 e7             	movq	%r12, %rdi
ffffffff8000f70d: 48 b8 00 f0 ff ff ff ff 0f 00	movabsq	$0xffffffffff000, %rax # imm = 0xFFFFFFFFFF000
ffffffff8000f717: 48 21 c6             	andq	%rax, %rsi
ffffffff8000f71a: e8 a1 89 00 00       	callq	0xffffffff800180c0 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>
ffffffff8000f71f: 49 89 c6             	movq	%rax, %r14
ffffffff8000f722: ba 00 10 00 00       	movl	$0x1000, %edx           # imm = 0x1000
ffffffff8000f727: 48 89 c7             	movq	%rax, %rdi
ffffffff8000f72a: 31 f6                	xorl	%esi, %esi
ffffffff8000f72c: ff 15 fe 6c 02 00    	callq	*0x26cfe(%rip)          # 0xffffffff80036430
ffffffff8000f732: 4c 89 f0             	movq	%r14, %rax
ffffffff8000f735: 48 89 43 08          	movq	%rax, 0x8(%rbx)
ffffffff8000f739: c6 03 00             	movb	$0x0, (%rbx)
ffffffff8000f73c: 48 83 c4 18          	addq	$0x18, %rsp
ffffffff8000f740: 5b                   	popq	%rbx
ffffffff8000f741: 41 5c                	popq	%r12
ffffffff8000f743: 41 5e                	popq	%r14
ffffffff8000f745: 41 5f                	popq	%r15
ffffffff8000f747: c3                   	retq
ffffffff8000f748: be 3c 00 00 00       	movl	$0x3c, %esi
ffffffff8000f74d: 48 c7 c7 a8 f9 01 80 	movq	$-0x7ffe0658, %rdi      # imm = 0x8001F9A8
ffffffff8000f754: 48 c7 c2 60 fa 01 80 	movq	$-0x7ffe05a0, %rdx      # imm = 0x8001FA60
ffffffff8000f75b: e8 10 cd 00 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000f760: be 31 00 00 00       	movl	$0x31, %esi
ffffffff8000f765: 48 c7 c7 78 fa 01 80 	movq	$-0x7ffe0588, %rdi      # imm = 0x8001FA78
ffffffff8000f76c: 48 c7 c2 b0 fa 01 80 	movq	$-0x7ffe0550, %rdx      # imm = 0x8001FAB0
ffffffff8000f773: e8 f8 cc 00 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000f778: be 24 00 00 00       	movl	$0x24, %esi
ffffffff8000f77d: 48 c7 c7 c8 fa 01 80 	movq	$-0x7ffe0538, %rdi      # imm = 0x8001FAC8
ffffffff8000f784: 48 c7 c2 f0 fa 01 80 	movq	$-0x7ffe0510, %rdx      # imm = 0x8001FAF0
ffffffff8000f78b: e8 e0 cc 00 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>

ffffffff8000f790 <<x86_64::structures::paging::page_table::FrameError as core::fmt::Debug>::fmt::h5195bcaf09baa688>:
ffffffff8000f790: 80 3f 00             	cmpb	$0x0, (%rdi)
ffffffff8000f793: b8 09 00 00 00       	movl	$0x9, %eax
ffffffff8000f798: ba 0f 00 00 00       	movl	$0xf, %edx
ffffffff8000f79d: 48 0f 45 d0          	cmovneq	%rax, %rdx
ffffffff8000f7a1: 48 c7 c1 17 fb 01 80 	movq	$-0x7ffe04e9, %rcx      # imm = 0x8001FB17
ffffffff8000f7a8: 48 c7 c0 08 fb 01 80 	movq	$-0x7ffe04f8, %rax      # imm = 0x8001FB08
ffffffff8000f7af: 48 0f 45 c1          	cmovneq	%rcx, %rax
ffffffff8000f7b3: 48 89 f7             	movq	%rsi, %rdi
ffffffff8000f7b6: 48 89 c6             	movq	%rax, %rsi
ffffffff8000f7b9: e9 22 a7 00 00       	jmp	0xffffffff80019ee0 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff8000f7be: cc                   	int3
ffffffff8000f7bf: cc                   	int3

ffffffff8000f7c0 <call_process>:
ffffffff8000f7c0: 55                   	pushq	%rbp
ffffffff8000f7c1: 41 57                	pushq	%r15
ffffffff8000f7c3: 41 56                	pushq	%r14
ffffffff8000f7c5: 41 55                	pushq	%r13
ffffffff8000f7c7: 41 54                	pushq	%r12
ffffffff8000f7c9: 41 53                	pushq	%r11
ffffffff8000f7cb: 41 52                	pushq	%r10
ffffffff8000f7cd: 41 51                	pushq	%r9
ffffffff8000f7cf: 41 50                	pushq	%r8
ffffffff8000f7d1: 57                   	pushq	%rdi
ffffffff8000f7d2: 56                   	pushq	%rsi
ffffffff8000f7d3: 53                   	pushq	%rbx
ffffffff8000f7d4: 49 89 e3             	movq	%rsp, %r11
ffffffff8000f7d7: 4c 89 19             	movq	%r11, (%rcx)
ffffffff8000f7da: 56                   	pushq	%rsi
ffffffff8000f7db: 48 8b 47 78          	movq	0x78(%rdi), %rax
ffffffff8000f7df: 50                   	pushq	%rax
ffffffff8000f7e0: 48 8b 87 88 00 00 00 	movq	0x88(%rdi), %rax
ffffffff8000f7e7: 50                   	pushq	%rax
ffffffff8000f7e8: 52                   	pushq	%rdx
ffffffff8000f7e9: 48 8b 87 80 00 00 00 	movq	0x80(%rdi), %rax
ffffffff8000f7f0: 50                   	pushq	%rax
ffffffff8000f7f1: 41 c6 00 02          	movb	$0x2, (%r8)
ffffffff8000f7f5: 48 8b 07             	movq	(%rdi), %rax
ffffffff8000f7f8: 48 8b 5f 08          	movq	0x8(%rdi), %rbx
ffffffff8000f7fc: 48 8b 4f 10          	movq	0x10(%rdi), %rcx
ffffffff8000f800: 48 8b 57 18          	movq	0x18(%rdi), %rdx
ffffffff8000f804: 48 8b 77 20          	movq	0x20(%rdi), %rsi
ffffffff8000f808: 4c 8b 47 30          	movq	0x30(%rdi), %r8
ffffffff8000f80c: 4c 8b 4f 38          	movq	0x38(%rdi), %r9
ffffffff8000f810: 4c 8b 57 40          	movq	0x40(%rdi), %r10
ffffffff8000f814: 4c 8b 5f 48          	movq	0x48(%rdi), %r11
ffffffff8000f818: 4c 8b 67 50          	movq	0x50(%rdi), %r12
ffffffff8000f81c: 4c 8b 6f 58          	movq	0x58(%rdi), %r13
ffffffff8000f820: 4c 8b 77 60          	movq	0x60(%rdi), %r14
ffffffff8000f824: 4c 8b 7f 68          	movq	0x68(%rdi), %r15
ffffffff8000f828: 48 8b 6f 70          	movq	0x70(%rdi), %rbp
ffffffff8000f82c: 48 8b 7f 28          	movq	0x28(%rdi), %rdi
ffffffff8000f830: fb                   	sti
ffffffff8000f831: 48 cf                	iretq
ffffffff8000f833: cc                   	int3

ffffffff8000f834 <return_process>:
ffffffff8000f834: fa                   	cli
ffffffff8000f835: 5b                   	popq	%rbx
ffffffff8000f836: 5e                   	popq	%rsi
ffffffff8000f837: 5f                   	popq	%rdi
ffffffff8000f838: 41 58                	popq	%r8
ffffffff8000f83a: 41 59                	popq	%r9
ffffffff8000f83c: 41 5a                	popq	%r10
ffffffff8000f83e: 41 5b                	popq	%r11
ffffffff8000f840: 41 5c                	popq	%r12
ffffffff8000f842: 41 5d                	popq	%r13
ffffffff8000f844: 41 5e                	popq	%r14
ffffffff8000f846: 41 5f                	popq	%r15
ffffffff8000f848: 5d                   	popq	%rbp
ffffffff8000f849: c3                   	retq
ffffffff8000f84a: cc                   	int3
ffffffff8000f84b: cc                   	int3

ffffffff8000f84c <syscall_handler_64_naked>:
ffffffff8000f84c: 0f 01 f8             	swapgs
ffffffff8000f84f: fa                   	cli
ffffffff8000f850: 49 89 cc             	movq	%rcx, %r12
ffffffff8000f853: 4d 89 dd             	movq	%r11, %r13
ffffffff8000f856: 49 89 c6             	movq	%rax, %r14
ffffffff8000f859: e8 92 12 00 00       	callq	0xffffffff80010af0 <get_ring_0_rsp>
ffffffff8000f85e: 48 89 c4             	movq	%rax, %rsp
ffffffff8000f861: 4c 89 f0             	movq	%r14, %rax
ffffffff8000f864: 53                   	pushq	%rbx
ffffffff8000f865: 48 83 ec 38          	subq	$0x38, %rsp
ffffffff8000f869: 48 89 04 24          	movq	%rax, (%rsp)
ffffffff8000f86d: 48 89 7c 24 08       	movq	%rdi, 0x8(%rsp)
ffffffff8000f872: 48 89 74 24 10       	movq	%rsi, 0x10(%rsp)
ffffffff8000f877: 48 89 54 24 18       	movq	%rdx, 0x18(%rsp)
ffffffff8000f87c: 4c 89 54 24 20       	movq	%r10, 0x20(%rsp)
ffffffff8000f881: 4c 89 44 24 28       	movq	%r8, 0x28(%rsp)
ffffffff8000f886: 4c 89 4c 24 30       	movq	%r9, 0x30(%rsp)
ffffffff8000f88b: 48 89 e7             	movq	%rsp, %rdi
ffffffff8000f88e: e8 bd 12 00 00       	callq	0xffffffff80010b50 <syscall_handler_impl>
ffffffff8000f893: 48 83 c4 38          	addq	$0x38, %rsp
ffffffff8000f897: 5b                   	popq	%rbx
ffffffff8000f898: 4c 89 e1             	movq	%r12, %rcx
ffffffff8000f89b: 4d 89 eb             	movq	%r13, %r11
ffffffff8000f89e: 0f 01 f8             	swapgs
ffffffff8000f8a1: 48 0f 07             	sysretq
ffffffff8000f8a4: cc                   	int3
ffffffff8000f8a5: cc                   	int3
ffffffff8000f8a6: cc                   	int3
ffffffff8000f8a7: cc                   	int3
ffffffff8000f8a8: cc                   	int3
ffffffff8000f8a9: cc                   	int3
ffffffff8000f8aa: cc                   	int3
ffffffff8000f8ab: cc                   	int3
ffffffff8000f8ac: cc                   	int3
ffffffff8000f8ad: cc                   	int3
ffffffff8000f8ae: cc                   	int3
ffffffff8000f8af: cc                   	int3

ffffffff8000f8b0 <<&T as core::fmt::Debug>::fmt::hc628756f65627099>:
ffffffff8000f8b0: 48 89 f2             	movq	%rsi, %rdx
ffffffff8000f8b3: 48 8b 07             	movq	(%rdi), %rax
ffffffff8000f8b6: 48 8b 78 08          	movq	0x8(%rax), %rdi
ffffffff8000f8ba: 48 8b 70 10          	movq	0x10(%rax), %rsi
ffffffff8000f8be: e9 7d ab 00 00       	jmp	0xffffffff8001a440 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790>
ffffffff8000f8c3: cc                   	int3
ffffffff8000f8c4: cc                   	int3
ffffffff8000f8c5: cc                   	int3
ffffffff8000f8c6: cc                   	int3
ffffffff8000f8c7: cc                   	int3
ffffffff8000f8c8: cc                   	int3
ffffffff8000f8c9: cc                   	int3
ffffffff8000f8ca: cc                   	int3
ffffffff8000f8cb: cc                   	int3
ffffffff8000f8cc: cc                   	int3
ffffffff8000f8cd: cc                   	int3
ffffffff8000f8ce: cc                   	int3
ffffffff8000f8cf: cc                   	int3

ffffffff8000f8d0 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09f62a01ec113f1c>:
ffffffff8000f8d0: 8b 46 24             	movl	0x24(%rsi), %eax
ffffffff8000f8d3: a8 10                	testb	$0x10, %al
ffffffff8000f8d5: 0f 85 45 9a 00 00    	jne	0xffffffff80019320 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hd0e7c1aefe0075e3>
ffffffff8000f8db: a8 20                	testb	$0x20, %al
ffffffff8000f8dd: 0f 85 bd 9a 00 00    	jne	0xffffffff800193a0 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::h869006add1042b35>
ffffffff8000f8e3: e9 d8 bf 00 00       	jmp	0xffffffff8001b8c0 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f>
ffffffff8000f8e8: cc                   	int3
ffffffff8000f8e9: cc                   	int3
ffffffff8000f8ea: cc                   	int3
ffffffff8000f8eb: cc                   	int3
ffffffff8000f8ec: cc                   	int3
ffffffff8000f8ed: cc                   	int3
ffffffff8000f8ee: cc                   	int3
ffffffff8000f8ef: cc                   	int3

ffffffff8000f8f0 <<core::str::error::Utf8Error as core::fmt::Debug>::fmt::h6ce4b9efecb5b2c5>:
ffffffff8000f8f0: 50                   	pushq	%rax
ffffffff8000f8f1: 49 89 f9             	movq	%rdi, %r9
ffffffff8000f8f4: 48 8d 47 08          	leaq	0x8(%rdi), %rax
ffffffff8000f8f8: 48 89 04 24          	movq	%rax, (%rsp)
ffffffff8000f8fc: 48 83 ec 08          	subq	$0x8, %rsp
ffffffff8000f900: 48 8d 44 24 08       	leaq	0x8(%rsp), %rax
ffffffff8000f905: ba 09 00 00 00       	movl	$0x9, %edx
ffffffff8000f90a: 41 b8 0b 00 00 00    	movl	$0xb, %r8d
ffffffff8000f910: 48 89 f7             	movq	%rsi, %rdi
ffffffff8000f913: 48 c7 c6 60 fb 01 80 	movq	$-0x7ffe04a0, %rsi      # imm = 0x8001FB60
ffffffff8000f91a: 48 c7 c1 69 fb 01 80 	movq	$-0x7ffe0497, %rcx      # imm = 0x8001FB69
ffffffff8000f921: 68 40 fb 01 80       	pushq	$-0x7ffe04c0            # imm = 0x8001FB40
ffffffff8000f926: 50                   	pushq	%rax
ffffffff8000f927: 6a 09                	pushq	$0x9
ffffffff8000f929: 68 74 fb 01 80       	pushq	$-0x7ffe048c            # imm = 0x8001FB74
ffffffff8000f92e: 68 20 fb 01 80       	pushq	$-0x7ffe04e0            # imm = 0x8001FB20
ffffffff8000f933: e8 08 a6 00 00       	callq	0xffffffff80019f40 <core::fmt::Formatter::debug_struct_field2_finish::h83a85978f04b0b76>
ffffffff8000f938: 48 83 c4 30          	addq	$0x30, %rsp
ffffffff8000f93c: 59                   	popq	%rcx
ffffffff8000f93d: c3                   	retq
ffffffff8000f93e: cc                   	int3
ffffffff8000f93f: cc                   	int3

ffffffff8000f940 <taos::devices::init::h61c9013a5b982c46>:
ffffffff8000f940: 41 56                	pushq	%r14
ffffffff8000f942: 53                   	pushq	%rbx
ffffffff8000f943: 48 83 ec 58          	subq	$0x58, %rsp
ffffffff8000f947: 85 ff                	testl	%edi, %edi
ffffffff8000f949: 74 08                	je	0xffffffff8000f953 <taos::devices::init::h61c9013a5b982c46+0x13>
ffffffff8000f94b: 48 83 c4 58          	addq	$0x58, %rsp
ffffffff8000f94f: 5b                   	popq	%rbx
ffffffff8000f950: 41 5e                	popq	%r14
ffffffff8000f952: c3                   	retq
ffffffff8000f953: 48 c7 c7 48 51 02 80 	movq	$-0x7ffdaeb8, %rdi      # imm = 0x80025148
ffffffff8000f95a: e8 31 8f 00 00       	callq	0xffffffff80018890 <limine::request::BootloaderInfoRequest::get_response::h5ddf6f18b059e155>
ffffffff8000f95f: 48 85 c0             	testq	%rax, %rax
ffffffff8000f962: 0f 84 92 00 00 00    	je	0xffffffff8000f9fa <taos::devices::init::h61c9013a5b982c46+0xba>
ffffffff8000f968: 48 89 c3             	movq	%rax, %rbx
ffffffff8000f96b: 48 c7 44 24 10 90 fb 01 80   	movq	$-0x7ffe0470, 0x10(%rsp) # imm = 0x8001FB90
ffffffff8000f974: 48 c7 44 24 18 01 00 00 00   	movq	$0x1, 0x18(%rsp)
ffffffff8000f97d: 48 c7 44 24 30 00 00 00 00   	movq	$0x0, 0x30(%rsp)
ffffffff8000f986: 48 89 e0             	movq	%rsp, %rax
ffffffff8000f989: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff8000f98e: 48 c7 44 24 28 00 00 00 00   	movq	$0x0, 0x28(%rsp)
ffffffff8000f997: 48 8d 7c 24 10       	leaq	0x10(%rsp), %rdi
ffffffff8000f99c: e8 af b8 ff ff       	callq	0xffffffff8000b250 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff8000f9a1: 48 8b 43 10          	movq	0x10(%rbx), %rax
ffffffff8000f9a5: 48 85 c0             	testq	%rax, %rax
ffffffff8000f9a8: 74 50                	je	0xffffffff8000f9fa <taos::devices::init::h61c9013a5b982c46+0xba>
ffffffff8000f9aa: 48 83 7b 08 00       	cmpq	$0x0, 0x8(%rbx)
ffffffff8000f9af: 74 49                	je	0xffffffff8000f9fa <taos::devices::init::h61c9013a5b982c46+0xba>
ffffffff8000f9b1: 48 8b 00             	movq	(%rax), %rax
ffffffff8000f9b4: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff8000f9b9: 0f 1f 80 00 00 00 00 	nopl	(%rax)
ffffffff8000f9c0: 48 8d 51 ff          	leaq	-0x1(%rcx), %rdx
ffffffff8000f9c4: 48 8b 30             	movq	(%rax), %rsi
ffffffff8000f9c7: 48 8b 78 18          	movq	0x18(%rax), %rdi
ffffffff8000f9cb: 48 83 c7 04          	addq	$0x4, %rdi
ffffffff8000f9cf: 48 0f af fa          	imulq	%rdx, %rdi
ffffffff8000f9d3: c7 04 3e ff ff ff ff 	movl	$0xffffffff, (%rsi,%rdi) # imm = 0xFFFFFFFF
ffffffff8000f9da: 48 8b 10             	movq	(%rax), %rdx
ffffffff8000f9dd: 48 8b 70 18          	movq	0x18(%rax), %rsi
ffffffff8000f9e1: 48 83 c6 04          	addq	$0x4, %rsi
ffffffff8000f9e5: 48 0f af f1          	imulq	%rcx, %rsi
ffffffff8000f9e9: c7 04 32 ff ff ff ff 	movl	$0xffffffff, (%rdx,%rsi) # imm = 0xFFFFFFFF
ffffffff8000f9f0: 48 83 c1 02          	addq	$0x2, %rcx
ffffffff8000f9f4: 48 83 f9 65          	cmpq	$0x65, %rcx
ffffffff8000f9f8: 75 c6                	jne	0xffffffff8000f9c0 <taos::devices::init::h61c9013a5b982c46+0x80>
ffffffff8000f9fa: 48 8d 5c 24 40       	leaq	0x40(%rsp), %rbx
ffffffff8000f9ff: 48 89 df             	movq	%rbx, %rdi
ffffffff8000fa02: e8 59 b5 ff ff       	callq	0xffffffff8000af60 <taos::devices::pci::walk_pci_bus::h998c210d438d5b90>
ffffffff8000fa07: 48 89 df             	movq	%rbx, %rdi
ffffffff8000fa0a: e8 91 cf ff ff       	callq	0xffffffff8000c9a0 <taos::devices::sd_card::find_sd_card::h198d8dcfad45e7ac>
ffffffff8000fa0f: 48 85 c0             	testq	%rax, %rax
ffffffff8000fa12: 0f 84 53 01 00 00    	je	0xffffffff8000fb6b <taos::devices::init::h61c9013a5b982c46+0x22b>
ffffffff8000fa18: 48 89 44 24 08       	movq	%rax, 0x8(%rsp)
ffffffff8000fa1d: 0f b6 05 f4 67 01 00 	movzbl	0x167f4(%rip), %eax     # 0xffffffff80026218 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.6482013028561868880+0x18>
ffffffff8000fa24: 3c 02                	cmpb	$0x2, %al
ffffffff8000fa26: 0f 85 2e 01 00 00    	jne	0xffffffff8000fb5a <taos::devices::init::h61c9013a5b982c46+0x21a>
ffffffff8000fa2c: b1 01                	movb	$0x1, %cl
ffffffff8000fa2e: 66 90                	nop
ffffffff8000fa30: 31 c0                	xorl	%eax, %eax
ffffffff8000fa32: f0                   	lock
ffffffff8000fa33: 0f b0 0d c6 67 01 00 	cmpxchgb	%cl, 0x167c6(%rip)      # 0xffffffff80026200 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.6482013028561868880>
ffffffff8000fa3a: 75 06                	jne	0xffffffff8000fa42 <taos::devices::init::h61c9013a5b982c46+0x102>
ffffffff8000fa3c: eb 11                	jmp	0xffffffff8000fa4f <taos::devices::init::h61c9013a5b982c46+0x10f>
ffffffff8000fa3e: 66 90                	nop
ffffffff8000fa40: f3 90                	pause
ffffffff8000fa42: 0f b6 05 b7 67 01 00 	movzbl	0x167b7(%rip), %eax     # 0xffffffff80026200 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.6482013028561868880>
ffffffff8000fa49: 84 c0                	testb	%al, %al
ffffffff8000fa4b: 75 f3                	jne	0xffffffff8000fa40 <taos::devices::init::h61c9013a5b982c46+0x100>
ffffffff8000fa4d: eb e1                	jmp	0xffffffff8000fa30 <taos::devices::init::h61c9013a5b982c46+0xf0>
ffffffff8000fa4f: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff8000fa54: 48 c7 c6 08 62 02 80 	movq	$-0x7ffd9df8, %rsi      # imm = 0x80026208
ffffffff8000fa5b: e8 20 d0 ff ff       	callq	0xffffffff8000ca80 <taos::devices::sd_card::initalize_sd_card::ha0b373c24a370cd6>
ffffffff8000fa60: 3c 06                	cmpb	$0x6, %al
ffffffff8000fa62: 0f 85 1b 01 00 00    	jne	0xffffffff8000fb83 <taos::devices::init::h61c9013a5b982c46+0x243>
ffffffff8000fa68: 48 c7 44 24 10 10 fc 01 80   	movq	$-0x7ffe03f0, 0x10(%rsp) # imm = 0x8001FC10
ffffffff8000fa71: 48 c7 44 24 18 01 00 00 00   	movq	$0x1, 0x18(%rsp)
ffffffff8000fa7a: 48 c7 44 24 30 00 00 00 00   	movq	$0x0, 0x30(%rsp)
ffffffff8000fa83: 48 89 e0             	movq	%rsp, %rax
ffffffff8000fa86: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff8000fa8b: 48 c7 44 24 28 00 00 00 00   	movq	$0x0, 0x28(%rsp)
ffffffff8000fa94: 48 8d 7c 24 10       	leaq	0x10(%rsp), %rdi
ffffffff8000fa99: e8 b2 b7 ff ff       	callq	0xffffffff8000b250 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff8000fa9e: c6 05 5b 67 01 00 00 	movb	$0x0, 0x1675b(%rip)     # 0xffffffff80026200 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.6482013028561868880>
ffffffff8000faa5: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff8000faaa: f0                   	lock
ffffffff8000faab: 48 ff 08             	decq	(%rax)
ffffffff8000faae: 75 0a                	jne	0xffffffff8000faba <taos::devices::init::h61c9013a5b982c46+0x17a>
ffffffff8000fab0: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff8000fab5: e8 66 c5 ff ff       	callq	0xffffffff8000c020 <alloc::sync::Arc<T,A>::drop_slow::h8360a5d89533dd40>
ffffffff8000faba: 4c 8b 74 24 50       	movq	0x50(%rsp), %r14
ffffffff8000fabf: 4d 85 f6             	testq	%r14, %r14
ffffffff8000fac2: 74 28                	je	0xffffffff8000faec <taos::devices::init::h61c9013a5b982c46+0x1ac>
ffffffff8000fac4: 48 8b 5c 24 48       	movq	0x48(%rsp), %rbx
ffffffff8000fac9: eb 0e                	jmp	0xffffffff8000fad9 <taos::devices::init::h61c9013a5b982c46+0x199>
ffffffff8000facb: 0f 1f 44 00 00       	nopl	(%rax,%rax)
ffffffff8000fad0: 48 83 c3 08          	addq	$0x8, %rbx
ffffffff8000fad4: 49 ff ce             	decq	%r14
ffffffff8000fad7: 74 13                	je	0xffffffff8000faec <taos::devices::init::h61c9013a5b982c46+0x1ac>
ffffffff8000fad9: 48 8b 03             	movq	(%rbx), %rax
ffffffff8000fadc: f0                   	lock
ffffffff8000fadd: 48 ff 08             	decq	(%rax)
ffffffff8000fae0: 75 ee                	jne	0xffffffff8000fad0 <taos::devices::init::h61c9013a5b982c46+0x190>
ffffffff8000fae2: 48 89 df             	movq	%rbx, %rdi
ffffffff8000fae5: e8 36 c5 ff ff       	callq	0xffffffff8000c020 <alloc::sync::Arc<T,A>::drop_slow::h8360a5d89533dd40>
ffffffff8000faea: eb e4                	jmp	0xffffffff8000fad0 <taos::devices::init::h61c9013a5b982c46+0x190>
ffffffff8000faec: 48 8b 4c 24 40       	movq	0x40(%rsp), %rcx
ffffffff8000faf1: 48 85 c9             	testq	%rcx, %rcx
ffffffff8000faf4: 0f 84 51 fe ff ff    	je	0xffffffff8000f94b <taos::devices::init::h61c9013a5b982c46+0xb>
ffffffff8000fafa: 48 8b 74 24 48       	movq	0x48(%rsp), %rsi
ffffffff8000faff: 48 c1 e1 03          	shlq	$0x3, %rcx
ffffffff8000fb03: b2 01                	movb	$0x1, %dl
ffffffff8000fb05: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff8000fb10: 31 c0                	xorl	%eax, %eax
ffffffff8000fb12: f0                   	lock
ffffffff8000fb13: 0f b0 15 36 55 01 00 	cmpxchgb	%dl, 0x15536(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000fb1a: 74 1e                	je	0xffffffff8000fb3a <taos::devices::init::h61c9013a5b982c46+0x1fa>
ffffffff8000fb1c: 0f 1f 40 00          	nopl	(%rax)
ffffffff8000fb20: 0f b6 05 29 55 01 00 	movzbl	0x15529(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000fb27: 84 c0                	testb	%al, %al
ffffffff8000fb29: 74 e5                	je	0xffffffff8000fb10 <taos::devices::init::h61c9013a5b982c46+0x1d0>
ffffffff8000fb2b: f3 90                	pause
ffffffff8000fb2d: 0f b6 05 1c 55 01 00 	movzbl	0x1551c(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000fb34: 84 c0                	testb	%al, %al
ffffffff8000fb36: 75 f3                	jne	0xffffffff8000fb2b <taos::devices::init::h61c9013a5b982c46+0x1eb>
ffffffff8000fb38: eb d6                	jmp	0xffffffff8000fb10 <taos::devices::init::h61c9013a5b982c46+0x1d0>
ffffffff8000fb3a: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff8000fb3f: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8000fb46: e8 55 35 ff ff       	callq	0xffffffff800030a0 <talc::talc::Talc<O>::free::h7e62b8a7acfe2464>
ffffffff8000fb4b: c6 05 fe 54 01 00 00 	movb	$0x0, 0x154fe(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8000fb52: 48 83 c4 58          	addq	$0x58, %rsp
ffffffff8000fb56: 5b                   	popq	%rbx
ffffffff8000fb57: 41 5e                	popq	%r14
ffffffff8000fb59: c3                   	retq
ffffffff8000fb5a: 48 c7 c7 00 62 02 80 	movq	$-0x7ffd9e00, %rdi      # imm = 0x80026200
ffffffff8000fb61: e8 6a 26 ff ff       	callq	0xffffffff800021d0 <spin::once::Once<T,R>::try_call_once_slow::h2c9ba4a48035d004.llvm.14359069980145722807>
ffffffff8000fb66: e9 c1 fe ff ff       	jmp	0xffffffff8000fa2c <taos::devices::init::h61c9013a5b982c46+0xec>
ffffffff8000fb6b: be 29 00 00 00       	movl	$0x29, %esi
ffffffff8000fb70: 48 c7 c7 a0 fb 01 80 	movq	$-0x7ffe0460, %rdi      # imm = 0x8001FBA0
ffffffff8000fb77: 48 c7 c2 e0 fb 01 80 	movq	$-0x7ffe0420, %rdx      # imm = 0x8001FBE0
ffffffff8000fb7e: e8 0d ce 00 00       	callq	0xffffffff8001c990 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff8000fb83: 88 44 24 10          	movb	%al, 0x10(%rsp)
ffffffff8000fb87: 48 8d 54 24 10       	leaq	0x10(%rsp), %rdx
ffffffff8000fb8c: be 2b 00 00 00       	movl	$0x2b, %esi
ffffffff8000fb91: 48 c7 c7 40 fc 01 80 	movq	$-0x7ffe03c0, %rdi      # imm = 0x8001FC40
ffffffff8000fb98: 48 c7 c1 20 fc 01 80 	movq	$-0x7ffe03e0, %rcx      # imm = 0x8001FC20
ffffffff8000fb9f: 49 c7 c0 70 fc 01 80 	movq	$-0x7ffe0390, %r8       # imm = 0x8001FC70
ffffffff8000fba6: e8 35 c3 00 00       	callq	0xffffffff8001bee0 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff8000fbab: cc                   	int3
ffffffff8000fbac: cc                   	int3
ffffffff8000fbad: cc                   	int3
ffffffff8000fbae: cc                   	int3
ffffffff8000fbaf: cc                   	int3

ffffffff8000fbb0 <taos::init::init::h50db611692509fc0>:
ffffffff8000fbb0: 41 57                	pushq	%r15
ffffffff8000fbb2: 41 56                	pushq	%r14
ffffffff8000fbb4: 41 54                	pushq	%r12
ffffffff8000fbb6: 53                   	pushq	%rbx
ffffffff8000fbb7: 48 83 ec 78          	subq	$0x78, %rsp
ffffffff8000fbbb: 48 c7 c7 78 51 02 80 	movq	$-0x7ffdae88, %rdi      # imm = 0x80025178
ffffffff8000fbc2: e8 d9 8c 00 00       	callq	0xffffffff800188a0 <limine::BaseRevision::is_supported::h4d97ddcac02f0bb0>
ffffffff8000fbc7: 84 c0                	testb	%al, %al
ffffffff8000fbc9: 0f 84 0d 03 00 00    	je	0xffffffff8000fedc <taos::init::init::h50db611692509fc0+0x32c>
ffffffff8000fbcf: 31 ff                	xorl	%edi, %edi
ffffffff8000fbd1: e8 8a 05 00 00       	callq	0xffffffff80010160 <taos::interrupts::gdt::init::hd5e0114d64446afe>
ffffffff8000fbd6: 31 ff                	xorl	%edi, %edi
ffffffff8000fbd8: e8 23 08 ff ff       	callq	0xffffffff80000400 <taos::interrupts::idt::init_idt::hdcaef96650e17ee9>
ffffffff8000fbdd: bf 64 00 00 00       	movl	$0x64, %edi
ffffffff8000fbe2: e8 49 12 ff ff       	callq	0xffffffff80000e30 <taos::interrupts::x2apic::X2ApicManager::bsp_init::h253783201cccabbe>
ffffffff8000fbe7: 3c 07                	cmpb	$0x7, %al
ffffffff8000fbe9: 0f 85 05 03 00 00    	jne	0xffffffff8000fef4 <taos::init::init::h50db611692509fc0+0x344>
ffffffff8000fbef: 31 ff                	xorl	%edi, %edi
ffffffff8000fbf1: e8 8a 18 ff ff       	callq	0xffffffff80001480 <taos::memory::init::h991c0fb9746e9f2b>
ffffffff8000fbf6: 31 ff                	xorl	%edi, %edi
ffffffff8000fbf8: e8 43 fd ff ff       	callq	0xffffffff8000f940 <taos::devices::init::h61c9013a5b982c46>
ffffffff8000fbfd: 48 c7 c7 71 62 02 80 	movq	$-0x7ffd9d8f, %rdi      # imm = 0x80026271
ffffffff8000fc04: 48 c7 c6 d0 e9 01 80 	movq	$-0x7ffe1630, %rsi      # imm = 0x8001E9D0
ffffffff8000fc0b: e8 a0 7e 00 00       	callq	0xffffffff80017ab0 <log::set_logger::h21c01bbeecbbb945>
ffffffff8000fc10: 84 c0                	testb	%al, %al
ffffffff8000fc12: 0f 85 04 03 00 00    	jne	0xffffffff8000ff1c <taos::init::init::h50db611692509fc0+0x36c>
ffffffff8000fc18: 48 c7 05 f5 67 02 00 03 00 00 00     	movq	$0x3, 0x267f5(%rip) # 0xffffffff80036418 <log::MAX_LOG_LEVEL_FILTER::hebff44fa7f6797f5>
ffffffff8000fc23: 48 8b 05 ee 67 02 00 	movq	0x267ee(%rip), %rax     # 0xffffffff80036418 <log::MAX_LOG_LEVEL_FILTER::hebff44fa7f6797f5>
ffffffff8000fc2a: 48 83 f8 04          	cmpq	$0x4, %rax
ffffffff8000fc2e: 72 78                	jb	0xffffffff8000fca8 <taos::init::init::h50db611692509fc0+0xf8>
ffffffff8000fc30: 48 c7 44 24 08 f0 fc 01 80   	movq	$-0x7ffe0310, 0x8(%rsp) # imm = 0x8001FCF0
ffffffff8000fc39: 48 c7 44 24 10 01 00 00 00   	movq	$0x1, 0x10(%rsp)
ffffffff8000fc42: 48 c7 44 24 28 00 00 00 00   	movq	$0x0, 0x28(%rsp)
ffffffff8000fc4b: 48 c7 44 24 18 08 00 00 00   	movq	$0x8, 0x18(%rsp)
ffffffff8000fc54: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff8000fc5d: 48 c7 c7 00 fd 01 80 	movq	$-0x7ffe0300, %rdi      # imm = 0x8001FD00
ffffffff8000fc64: e8 e7 7f 00 00       	callq	0xffffffff80017c50 <log::__private_api::loc::h7d13c00ac743e0a8>
ffffffff8000fc69: 48 c7 44 24 40 18 fd 01 80   	movq	$-0x7ffe02e8, 0x40(%rsp) # imm = 0x8001FD18
ffffffff8000fc72: 48 c7 44 24 48 0a 00 00 00   	movq	$0xa, 0x48(%rsp)
ffffffff8000fc7b: 48 c7 44 24 50 18 fd 01 80   	movq	$-0x7ffe02e8, 0x50(%rsp) # imm = 0x8001FD18
ffffffff8000fc84: 48 c7 44 24 58 0a 00 00 00   	movq	$0xa, 0x58(%rsp)
ffffffff8000fc8d: 48 89 44 24 60       	movq	%rax, 0x60(%rsp)
ffffffff8000fc92: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff8000fc97: 48 8d 54 24 40       	leaq	0x40(%rsp), %rdx
ffffffff8000fc9c: be 04 00 00 00       	movl	$0x4, %esi
ffffffff8000fca1: 31 c9                	xorl	%ecx, %ecx
ffffffff8000fca3: e8 68 7e 00 00       	callq	0xffffffff80017b10 <log::__private_api::log_impl::hbf977b1a5812fb97>
ffffffff8000fca8: 48 c7 c7 90 51 02 80 	movq	$-0x7ffdae70, %rdi      # imm = 0x80025190
ffffffff8000fcaf: e8 cc 8b 00 00       	callq	0xffffffff80018880 <limine::request::SmpRequest::get_response::h21f02c6510d3c825>
ffffffff8000fcb4: 48 85 c0             	testq	%rax, %rax
ffffffff8000fcb7: 0f 84 83 02 00 00    	je	0xffffffff8000ff40 <taos::init::init::h50db611692509fc0+0x390>
ffffffff8000fcbd: 49 89 c6             	movq	%rax, %r14
ffffffff8000fcc0: 4c 8b 78 10          	movq	0x10(%rax), %r15
ffffffff8000fcc4: 4c 89 7c 24 38       	movq	%r15, 0x38(%rsp)
ffffffff8000fcc9: 8b 58 0c             	movl	0xc(%rax), %ebx
ffffffff8000fccc: 48 8b 05 45 67 02 00 	movq	0x26745(%rip), %rax     # 0xffffffff80036418 <log::MAX_LOG_LEVEL_FILTER::hebff44fa7f6797f5>
ffffffff8000fcd3: 48 83 f8 05          	cmpq	$0x5, %rax
ffffffff8000fcd7: 0f 85 90 00 00 00    	jne	0xffffffff8000fd6d <taos::init::init::h50db611692509fc0+0x1bd>
ffffffff8000fcdd: 48 8d 44 24 38       	leaq	0x38(%rsp), %rax
ffffffff8000fce2: 48 89 44 24 68       	movq	%rax, 0x68(%rsp)
ffffffff8000fce7: 48 c7 44 24 70 c0 b8 01 80   	movq	$-0x7ffe4740, 0x70(%rsp) # imm = 0x8001B8C0
ffffffff8000fcf0: 48 c7 44 24 08 a0 20 02 80   	movq	$-0x7ffddf60, 0x8(%rsp) # imm = 0x800220A0
ffffffff8000fcf9: 48 c7 44 24 10 02 00 00 00   	movq	$0x2, 0x10(%rsp)
ffffffff8000fd02: 48 c7 44 24 28 00 00 00 00   	movq	$0x0, 0x28(%rsp)
ffffffff8000fd0b: 48 8d 44 24 68       	leaq	0x68(%rsp), %rax
ffffffff8000fd10: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff8000fd15: 48 c7 44 24 20 01 00 00 00   	movq	$0x1, 0x20(%rsp)
ffffffff8000fd1e: 48 c7 c7 c0 20 02 80 	movq	$-0x7ffddf40, %rdi      # imm = 0x800220C0
ffffffff8000fd25: e8 26 7f 00 00       	callq	0xffffffff80017c50 <log::__private_api::loc::h7d13c00ac743e0a8>
ffffffff8000fd2a: 48 c7 44 24 40 18 fd 01 80   	movq	$-0x7ffe02e8, 0x40(%rsp) # imm = 0x8001FD18
ffffffff8000fd33: 48 c7 44 24 48 0a 00 00 00   	movq	$0xa, 0x48(%rsp)
ffffffff8000fd3c: 48 c7 44 24 50 18 fd 01 80   	movq	$-0x7ffe02e8, 0x50(%rsp) # imm = 0x8001FD18
ffffffff8000fd45: 48 c7 44 24 58 0a 00 00 00   	movq	$0xa, 0x58(%rsp)
ffffffff8000fd4e: 48 89 44 24 60       	movq	%rax, 0x60(%rsp)
ffffffff8000fd53: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff8000fd58: 48 8d 54 24 40       	leaq	0x40(%rsp), %rdx
ffffffff8000fd5d: be 05 00 00 00       	movl	$0x5, %esi
ffffffff8000fd62: 31 c9                	xorl	%ecx, %ecx
ffffffff8000fd64: e8 a7 7d 00 00       	callq	0xffffffff80017b10 <log::__private_api::log_impl::hbf977b1a5812fb97>
ffffffff8000fd69: 4d 8b 7e 10          	movq	0x10(%r14), %r15
ffffffff8000fd6d: 4d 85 ff             	testq	%r15, %r15
ffffffff8000fd70: 74 40                	je	0xffffffff8000fdb2 <taos::init::init::h50db611692509fc0+0x202>
ffffffff8000fd72: 4d 8b 76 18          	movq	0x18(%r14), %r14
ffffffff8000fd76: 49 c1 e7 03          	shlq	$0x3, %r15
ffffffff8000fd7a: 45 31 e4             	xorl	%r12d, %r12d
ffffffff8000fd7d: eb 0a                	jmp	0xffffffff8000fd89 <taos::init::init::h50db611692509fc0+0x1d9>
ffffffff8000fd7f: 90                   	nop
ffffffff8000fd80: 49 83 c4 08          	addq	$0x8, %r12
ffffffff8000fd84: 4d 39 e7             	cmpq	%r12, %r15
ffffffff8000fd87: 74 29                	je	0xffffffff8000fdb2 <taos::init::init::h50db611692509fc0+0x202>
ffffffff8000fd89: 4b 8b 3c 26          	movq	(%r14,%r12), %rdi
ffffffff8000fd8d: 39 1f                	cmpl	%ebx, (%rdi)
ffffffff8000fd8f: 74 ef                	je	0xffffffff8000fd80 <taos::init::init::h50db611692509fc0+0x1d0>
ffffffff8000fd91: 48 83 c7 10          	addq	$0x10, %rdi
ffffffff8000fd95: 48 c7 c6 60 ff 00 80 	movq	$-0x7fff00a0, %rsi      # imm = 0x8000FF60
ffffffff8000fd9c: e8 bf 8a 00 00       	callq	0xffffffff80018860 <limine::smp::GotoAddress::write::h253e0ab8f56c7fe5>
ffffffff8000fda1: eb dd                	jmp	0xffffffff8000fd80 <taos::init::init::h50db611692509fc0+0x1d0>
ffffffff8000fda3: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
ffffffff8000fdb0: f3 90                	pause
ffffffff8000fdb2: 48 8b 05 ff 64 01 00 	movq	0x164ff(%rip), %rax     # 0xffffffff800262b8 <taos::init::CPU_COUNT::h9b0ec5070bdfc0ec>
ffffffff8000fdb9: 48 8b 4c 24 38       	movq	0x38(%rsp), %rcx
ffffffff8000fdbe: 48 ff c9             	decq	%rcx
ffffffff8000fdc1: 48 39 c8             	cmpq	%rcx, %rax
ffffffff8000fdc4: 72 ea                	jb	0xffffffff8000fdb0 <taos::init::init::h50db611692509fc0+0x200>
ffffffff8000fdc6: b0 01                	movb	$0x1, %al
ffffffff8000fdc8: 86 05 e2 64 01 00    	xchgb	%al, 0x164e2(%rip)      # 0xffffffff800262b0 <taos::init::BOOT_COMPLETE::hab3ebd8b8e240210.0>
ffffffff8000fdce: 48 8b 05 43 66 02 00 	movq	0x26643(%rip), %rax     # 0xffffffff80036418 <log::MAX_LOG_LEVEL_FILTER::hebff44fa7f6797f5>
ffffffff8000fdd5: 48 83 f8 04          	cmpq	$0x4, %rax
ffffffff8000fdd9: 72 78                	jb	0xffffffff8000fe53 <taos::init::init::h50db611692509fc0+0x2a3>
ffffffff8000fddb: 48 c7 44 24 08 f0 20 02 80   	movq	$-0x7ffddf10, 0x8(%rsp) # imm = 0x800220F0
ffffffff8000fde4: 48 c7 44 24 10 01 00 00 00   	movq	$0x1, 0x10(%rsp)
ffffffff8000fded: 48 c7 44 24 28 00 00 00 00   	movq	$0x0, 0x28(%rsp)
ffffffff8000fdf6: 48 c7 44 24 18 08 00 00 00   	movq	$0x8, 0x18(%rsp)
ffffffff8000fdff: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff8000fe08: 48 c7 c7 00 21 02 80 	movq	$-0x7ffddf00, %rdi      # imm = 0x80022100
ffffffff8000fe0f: e8 3c 7e 00 00       	callq	0xffffffff80017c50 <log::__private_api::loc::h7d13c00ac743e0a8>
ffffffff8000fe14: 48 c7 44 24 40 18 fd 01 80   	movq	$-0x7ffe02e8, 0x40(%rsp) # imm = 0x8001FD18
ffffffff8000fe1d: 48 c7 44 24 48 0a 00 00 00   	movq	$0xa, 0x48(%rsp)
ffffffff8000fe26: 48 c7 44 24 50 18 fd 01 80   	movq	$-0x7ffe02e8, 0x50(%rsp) # imm = 0x8001FD18
ffffffff8000fe2f: 48 c7 44 24 58 0a 00 00 00   	movq	$0xa, 0x58(%rsp)
ffffffff8000fe38: 48 89 44 24 60       	movq	%rax, 0x60(%rsp)
ffffffff8000fe3d: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff8000fe42: 48 8d 54 24 40       	leaq	0x40(%rsp), %rdx
ffffffff8000fe47: be 04 00 00 00       	movl	$0x4, %esi
ffffffff8000fe4c: 31 c9                	xorl	%ecx, %ecx
ffffffff8000fe4e: e8 bd 7c 00 00       	callq	0xffffffff80017b10 <log::__private_api::log_impl::hbf977b1a5812fb97>
ffffffff8000fe53: 89 5c 24 08          	movl	%ebx, 0x8(%rsp)
ffffffff8000fe57: 9c                   	pushfq
ffffffff8000fe58: 58                   	popq	%rax
ffffffff8000fe59: a9 00 02 00 00       	testl	$0x200, %eax            # imm = 0x200
ffffffff8000fe5e: 75 0c                	jne	0xffffffff8000fe6c <taos::init::init::h50db611692509fc0+0x2bc>
ffffffff8000fe60: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff8000fe65: e8 76 a2 ff ff       	callq	0xffffffff8000a0e0 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580>
ffffffff8000fe6a: eb 0c                	jmp	0xffffffff8000fe78 <taos::init::init::h50db611692509fc0+0x2c8>
ffffffff8000fe6c: fa                   	cli
ffffffff8000fe6d: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff8000fe72: e8 69 a2 ff ff       	callq	0xffffffff8000a0e0 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580>
ffffffff8000fe77: fb                   	sti
ffffffff8000fe78: fb                   	sti
ffffffff8000fe79: be 98 22 00 00       	movl	$0x2298, %esi           # imm = 0x2298
ffffffff8000fe7e: 48 c7 c7 22 fd 01 80 	movq	$-0x7ffe02de, %rdi      # imm = 0x8001FD22
ffffffff8000fe85: e8 76 05 00 00       	callq	0xffffffff80010400 <taos::processes::process::create_process::ha385fce1049c264a>
ffffffff8000fe8a: 89 c1                	movl	%eax, %ecx
ffffffff8000fe8c: 89 5c 24 68          	movl	%ebx, 0x68(%rsp)
ffffffff8000fe90: 89 44 24 40          	movl	%eax, 0x40(%rsp)
ffffffff8000fe94: 48 8d 44 24 68       	leaq	0x68(%rsp), %rax
ffffffff8000fe99: 48 89 44 24 08       	movq	%rax, 0x8(%rsp)
ffffffff8000fe9e: 48 89 4c 24 18       	movq	%rcx, 0x18(%rsp)
ffffffff8000fea3: 48 8d 44 24 40       	leaq	0x40(%rsp), %rax
ffffffff8000fea8: 48 89 44 24 10       	movq	%rax, 0x10(%rsp)
ffffffff8000fead: 9c                   	pushfq
ffffffff8000feae: 58                   	popq	%rax
ffffffff8000feaf: a9 00 02 00 00       	testl	$0x200, %eax            # imm = 0x200
ffffffff8000feb4: 75 0c                	jne	0xffffffff8000fec2 <taos::init::init::h50db611692509fc0+0x312>
ffffffff8000feb6: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff8000febb: e8 20 9e ff ff       	callq	0xffffffff80009ce0 <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580>
ffffffff8000fec0: eb 0c                	jmp	0xffffffff8000fece <taos::init::init::h50db611692509fc0+0x31e>
ffffffff8000fec2: fa                   	cli
ffffffff8000fec3: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff8000fec8: e8 13 9e ff ff       	callq	0xffffffff80009ce0 <taos::events::schedule_process::{{closure}}::h4c5ef2382cacb9ee.llvm.2213946183514802580>
ffffffff8000fecd: fb                   	sti
ffffffff8000fece: 89 d8                	movl	%ebx, %eax
ffffffff8000fed0: 48 83 c4 78          	addq	$0x78, %rsp
ffffffff8000fed4: 5b                   	popq	%rbx
ffffffff8000fed5: 41 5c                	popq	%r12
ffffffff8000fed7: 41 5e                	popq	%r14
ffffffff8000fed9: 41 5f                	popq	%r15
ffffffff8000fedb: c3                   	retq
ffffffff8000fedc: be 2e 00 00 00       	movl	$0x2e, %esi
ffffffff8000fee1: 48 c7 c7 88 fc 01 80 	movq	$-0x7ffe0378, %rdi      # imm = 0x8001FC88
ffffffff8000fee8: 48 c7 c2 c8 fc 01 80 	movq	$-0x7ffe0338, %rdx      # imm = 0x8001FCC8
ffffffff8000feef: e8 7c c5 00 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8000fef4: 88 44 24 08          	movb	%al, 0x8(%rsp)
ffffffff8000fef8: 48 8d 54 24 08       	leaq	0x8(%rsp), %rdx
ffffffff8000fefd: be 1a 00 00 00       	movl	$0x1a, %esi
ffffffff8000ff02: 48 c7 c7 48 e6 01 80 	movq	$-0x7ffe19b8, %rdi      # imm = 0x8001E648
ffffffff8000ff09: 48 c7 c1 28 e6 01 80 	movq	$-0x7ffe19d8, %rcx      # imm = 0x8001E628
ffffffff8000ff10: 49 c7 c0 78 e6 01 80 	movq	$-0x7ffe1988, %r8       # imm = 0x8001E678
ffffffff8000ff17: e8 c4 bf 00 00       	callq	0xffffffff8001bee0 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff8000ff1c: 48 8d 54 24 08       	leaq	0x8(%rsp), %rdx
ffffffff8000ff21: be 1c 00 00 00       	movl	$0x1c, %esi
ffffffff8000ff26: 48 c7 c7 20 ea 01 80 	movq	$-0x7ffe15e0, %rdi      # imm = 0x8001EA20
ffffffff8000ff2d: 48 c7 c1 00 ea 01 80 	movq	$-0x7ffe1600, %rcx      # imm = 0x8001EA00
ffffffff8000ff34: 49 c7 c0 50 ea 01 80 	movq	$-0x7ffe15b0, %r8       # imm = 0x8001EA50
ffffffff8000ff3b: e8 a0 bf 00 00       	callq	0xffffffff8001bee0 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff8000ff40: be 12 00 00 00       	movl	$0x12, %esi
ffffffff8000ff45: 48 c7 c7 58 20 02 80 	movq	$-0x7ffddfa8, %rdi      # imm = 0x80022058
ffffffff8000ff4c: 48 c7 c2 70 20 02 80 	movq	$-0x7ffddf90, %rdx      # imm = 0x80022070
ffffffff8000ff53: e8 38 ca 00 00       	callq	0xffffffff8001c990 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff8000ff58: cc                   	int3
ffffffff8000ff59: cc                   	int3
ffffffff8000ff5a: cc                   	int3
ffffffff8000ff5b: cc                   	int3
ffffffff8000ff5c: cc                   	int3
ffffffff8000ff5d: cc                   	int3
ffffffff8000ff5e: cc                   	int3
ffffffff8000ff5f: cc                   	int3

ffffffff8000ff60 <secondary_cpu_main>:
ffffffff8000ff60: 53                   	pushq	%rbx
ffffffff8000ff61: 48 83 ec 70          	subq	$0x70, %rsp
ffffffff8000ff65: 48 89 fb             	movq	%rdi, %rbx
ffffffff8000ff68: f0                   	lock
ffffffff8000ff69: 48 ff 05 48 63 01 00 	incq	0x16348(%rip)           # 0xffffffff800262b8 <taos::init::CPU_COUNT::h9b0ec5070bdfc0ec>
ffffffff8000ff70: 8b 3f                	movl	(%rdi), %edi
ffffffff8000ff72: e8 89 ab ff ff       	callq	0xffffffff8000ab00 <taos::interrupts::init::hac2ac04b3d342161>
ffffffff8000ff77: 8b 3b                	movl	(%rbx), %edi
ffffffff8000ff79: e8 02 15 ff ff       	callq	0xffffffff80001480 <taos::memory::init::h991c0fb9746e9f2b>
ffffffff8000ff7e: 83 3b 00             	cmpl	$0x0, (%rbx)
ffffffff8000ff81: 75 46                	jne	0xffffffff8000ffc9 <secondary_cpu_main+0x69>
ffffffff8000ff83: 48 c7 c7 71 62 02 80 	movq	$-0x7ffd9d8f, %rdi      # imm = 0x80026271
ffffffff8000ff8a: 48 c7 c6 d0 e9 01 80 	movq	$-0x7ffe1630, %rsi      # imm = 0x8001E9D0
ffffffff8000ff91: e8 1a 7b 00 00       	callq	0xffffffff80017ab0 <log::set_logger::h21c01bbeecbbb945>
ffffffff8000ff96: 84 c0                	testb	%al, %al
ffffffff8000ff98: 74 24                	je	0xffffffff8000ffbe <secondary_cpu_main+0x5e>
ffffffff8000ff9a: 48 8d 54 24 18       	leaq	0x18(%rsp), %rdx
ffffffff8000ff9f: be 1c 00 00 00       	movl	$0x1c, %esi
ffffffff8000ffa4: 48 c7 c7 20 ea 01 80 	movq	$-0x7ffe15e0, %rdi      # imm = 0x8001EA20
ffffffff8000ffab: 48 c7 c1 00 ea 01 80 	movq	$-0x7ffe1600, %rcx      # imm = 0x8001EA00
ffffffff8000ffb2: 49 c7 c0 50 ea 01 80 	movq	$-0x7ffe15b0, %r8       # imm = 0x8001EA50
ffffffff8000ffb9: e8 22 bf 00 00       	callq	0xffffffff8001bee0 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff8000ffbe: 48 c7 05 4f 64 02 00 03 00 00 00     	movq	$0x3, 0x2644f(%rip) # 0xffffffff80036418 <log::MAX_LOG_LEVEL_FILTER::hebff44fa7f6797f5>
ffffffff8000ffc9: 48 8b 05 48 64 02 00 	movq	0x26448(%rip), %rax     # 0xffffffff80036418 <log::MAX_LOG_LEVEL_FILTER::hebff44fa7f6797f5>
ffffffff8000ffd0: 48 83 f8 04          	cmpq	$0x4, %rax
ffffffff8000ffd4: 0f 82 98 00 00 00    	jb	0xffffffff80010072 <secondary_cpu_main+0x112>
ffffffff8000ffda: 48 89 5c 24 08       	movq	%rbx, 0x8(%rsp)
ffffffff8000ffdf: 48 c7 44 24 10 a0 b7 01 80   	movq	$-0x7ffe4860, 0x10(%rsp) # imm = 0x8001B7A0
ffffffff8000ffe8: 48 c7 44 24 18 d0 1f 02 80   	movq	$-0x7ffde030, 0x18(%rsp) # imm = 0x80021FD0
ffffffff8000fff1: 48 c7 44 24 20 02 00 00 00   	movq	$0x2, 0x20(%rsp)
ffffffff8000fffa: 48 c7 44 24 38 00 00 00 00   	movq	$0x0, 0x38(%rsp)
ffffffff80010003: 48 8d 44 24 08       	leaq	0x8(%rsp), %rax
ffffffff80010008: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff8001000d: 48 c7 44 24 30 01 00 00 00   	movq	$0x1, 0x30(%rsp)
ffffffff80010016: 48 c7 c7 f0 1f 02 80 	movq	$-0x7ffde010, %rdi      # imm = 0x80021FF0
ffffffff8001001d: e8 2e 7c 00 00       	callq	0xffffffff80017c50 <log::__private_api::loc::h7d13c00ac743e0a8>
ffffffff80010022: 48 c7 44 24 48 18 fd 01 80   	movq	$-0x7ffe02e8, 0x48(%rsp) # imm = 0x8001FD18
ffffffff8001002b: 48 c7 44 24 50 0a 00 00 00   	movq	$0xa, 0x50(%rsp)
ffffffff80010034: 48 c7 44 24 58 18 fd 01 80   	movq	$-0x7ffe02e8, 0x58(%rsp) # imm = 0x8001FD18
ffffffff8001003d: 48 c7 44 24 60 0a 00 00 00   	movq	$0xa, 0x60(%rsp)
ffffffff80010046: 48 89 44 24 68       	movq	%rax, 0x68(%rsp)
ffffffff8001004b: 48 8d 7c 24 18       	leaq	0x18(%rsp), %rdi
ffffffff80010050: 48 8d 54 24 48       	leaq	0x48(%rsp), %rdx
ffffffff80010055: be 04 00 00 00       	movl	$0x4, %esi
ffffffff8001005a: 31 c9                	xorl	%ecx, %ecx
ffffffff8001005c: e8 af 7a 00 00       	callq	0xffffffff80017b10 <log::__private_api::log_impl::hbf977b1a5812fb97>
ffffffff80010061: eb 0f                	jmp	0xffffffff80010072 <secondary_cpu_main+0x112>
ffffffff80010063: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
ffffffff80010070: f3 90                	pause
ffffffff80010072: 0f b6 05 37 62 01 00 	movzbl	0x16237(%rip), %eax     # 0xffffffff800262b0 <taos::init::BOOT_COMPLETE::hab3ebd8b8e240210.0>
ffffffff80010079: 84 c0                	testb	%al, %al
ffffffff8001007b: 74 f3                	je	0xffffffff80010070 <secondary_cpu_main+0x110>
ffffffff8001007d: 8b 03                	movl	(%rbx), %eax
ffffffff8001007f: 89 44 24 18          	movl	%eax, 0x18(%rsp)
ffffffff80010083: 9c                   	pushfq
ffffffff80010084: 58                   	popq	%rax
ffffffff80010085: a9 00 02 00 00       	testl	$0x200, %eax            # imm = 0x200
ffffffff8001008a: 75 1d                	jne	0xffffffff800100a9 <secondary_cpu_main+0x149>
ffffffff8001008c: 48 8d 7c 24 18       	leaq	0x18(%rsp), %rdi
ffffffff80010091: e8 4a a0 ff ff       	callq	0xffffffff8000a0e0 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580>
ffffffff80010096: fb                   	sti
ffffffff80010097: 48 8b 05 7a 63 02 00 	movq	0x2637a(%rip), %rax     # 0xffffffff80036418 <log::MAX_LOG_LEVEL_FILTER::hebff44fa7f6797f5>
ffffffff8001009e: 48 83 f8 04          	cmpq	$0x4, %rax
ffffffff800100a2: 73 23                	jae	0xffffffff800100c7 <secondary_cpu_main+0x167>
ffffffff800100a4: e9 a5 00 00 00       	jmp	0xffffffff8001014e <secondary_cpu_main+0x1ee>
ffffffff800100a9: fa                   	cli
ffffffff800100aa: 48 8d 7c 24 18       	leaq	0x18(%rsp), %rdi
ffffffff800100af: e8 2c a0 ff ff       	callq	0xffffffff8000a0e0 <taos::events::register_event_runner::{{closure}}::haa9afa65288faa57.llvm.2213946183514802580>
ffffffff800100b4: fb                   	sti
ffffffff800100b5: fb                   	sti
ffffffff800100b6: 48 8b 05 5b 63 02 00 	movq	0x2635b(%rip), %rax     # 0xffffffff80036418 <log::MAX_LOG_LEVEL_FILTER::hebff44fa7f6797f5>
ffffffff800100bd: 48 83 f8 04          	cmpq	$0x4, %rax
ffffffff800100c1: 0f 82 87 00 00 00    	jb	0xffffffff8001014e <secondary_cpu_main+0x1ee>
ffffffff800100c7: 48 89 5c 24 08       	movq	%rbx, 0x8(%rsp)
ffffffff800100cc: 48 c7 44 24 10 a0 b7 01 80   	movq	$-0x7ffe4860, 0x10(%rsp) # imm = 0x8001B7A0
ffffffff800100d5: 48 c7 44 24 18 20 20 02 80   	movq	$-0x7ffddfe0, 0x18(%rsp) # imm = 0x80022020
ffffffff800100de: 48 c7 44 24 20 02 00 00 00   	movq	$0x2, 0x20(%rsp)
ffffffff800100e7: 48 c7 44 24 38 00 00 00 00   	movq	$0x0, 0x38(%rsp)
ffffffff800100f0: 48 8d 44 24 08       	leaq	0x8(%rsp), %rax
ffffffff800100f5: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff800100fa: 48 c7 44 24 30 01 00 00 00   	movq	$0x1, 0x30(%rsp)
ffffffff80010103: 48 c7 c7 40 20 02 80 	movq	$-0x7ffddfc0, %rdi      # imm = 0x80022040
ffffffff8001010a: e8 41 7b 00 00       	callq	0xffffffff80017c50 <log::__private_api::loc::h7d13c00ac743e0a8>
ffffffff8001010f: 48 c7 44 24 48 18 fd 01 80   	movq	$-0x7ffe02e8, 0x48(%rsp) # imm = 0x8001FD18
ffffffff80010118: 48 c7 44 24 50 0a 00 00 00   	movq	$0xa, 0x50(%rsp)
ffffffff80010121: 48 c7 44 24 58 18 fd 01 80   	movq	$-0x7ffe02e8, 0x58(%rsp) # imm = 0x8001FD18
ffffffff8001012a: 48 c7 44 24 60 0a 00 00 00   	movq	$0xa, 0x60(%rsp)
ffffffff80010133: 48 89 44 24 68       	movq	%rax, 0x68(%rsp)
ffffffff80010138: 48 8d 7c 24 18       	leaq	0x18(%rsp), %rdi
ffffffff8001013d: 48 8d 54 24 48       	leaq	0x48(%rsp), %rdx
ffffffff80010142: be 04 00 00 00       	movl	$0x4, %esi
ffffffff80010147: 31 c9                	xorl	%ecx, %ecx
ffffffff80010149: e8 c2 79 00 00       	callq	0xffffffff80017b10 <log::__private_api::log_impl::hbf977b1a5812fb97>
ffffffff8001014e: 8b 3b                	movl	(%rbx), %edi
ffffffff80010150: e8 5b 9a ff ff       	callq	0xffffffff80009bb0 <taos::events::run_loop::hb7053eb66eece363>
ffffffff80010155: cc                   	int3
ffffffff80010156: cc                   	int3
ffffffff80010157: cc                   	int3
ffffffff80010158: cc                   	int3
ffffffff80010159: cc                   	int3
ffffffff8001015a: cc                   	int3
ffffffff8001015b: cc                   	int3
ffffffff8001015c: cc                   	int3
ffffffff8001015d: cc                   	int3
ffffffff8001015e: cc                   	int3
ffffffff8001015f: cc                   	int3

ffffffff80010160 <taos::interrupts::gdt::init::hd5e0114d64446afe>:
ffffffff80010160: 53                   	pushq	%rbx
ffffffff80010161: 48 83 ec 30          	subq	$0x30, %rsp
ffffffff80010165: 83 ff 02             	cmpl	$0x2, %edi
ffffffff80010168: 0f 83 c2 01 00 00    	jae	0xffffffff80010330 <taos::interrupts::gdt::init::hd5e0114d64446afe+0x1d0>
ffffffff8001016e: 89 fb                	movl	%edi, %ebx
ffffffff80010170: 0f b6 05 81 62 01 00 	movzbl	0x16281(%rip), %eax     # 0xffffffff800263f8 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.4978740807361014121+0x60>
ffffffff80010177: 3c 02                	cmpb	$0x2, %al
ffffffff80010179: 0f 85 fb 00 00 00    	jne	0xffffffff8001027a <taos::interrupts::gdt::init::hd5e0114d64446afe+0x11a>
ffffffff8001017f: 48 b8 00 00 00 00 00 80 00 00	movabsq	$0x800000000000, %rax # imm = 0x800000000000
ffffffff80010189: 48 8d 80 98 63 02 80 	leaq	-0x7ffd9c68(%rax), %rax
ffffffff80010190: 48 c1 e8 30          	shrq	$0x30, %rax
ffffffff80010194: 0f 85 07 01 00 00    	jne	0xffffffff800102a1 <taos::interrupts::gdt::init::hd5e0114d64446afe+0x141>
ffffffff8001019a: 8b 05 40 62 01 00    	movl	0x16240(%rip), %eax     # 0xffffffff800263e0 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.4978740807361014121+0x48>
ffffffff800101a0: 8d 04 c5 ff ff ff ff 	leal	-0x1(,%rax,8), %eax
ffffffff800101a7: 66 89 04 24          	movw	%ax, (%rsp)
ffffffff800101ab: 48 c7 44 24 02 98 63 02 80   	movq	$-0x7ffd9c68, 0x2(%rsp) # imm = 0x80026398
ffffffff800101b4: 48 89 e0             	movq	%rsp, %rax
ffffffff800101b7: 0f 01 10             	lgdtq	(%rax)
ffffffff800101ba: 0f b6 05 37 62 01 00 	movzbl	0x16237(%rip), %eax     # 0xffffffff800263f8 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.4978740807361014121+0x60>
ffffffff800101c1: 3c 02                	cmpb	$0x2, %al
ffffffff800101c3: 0f 85 f0 00 00 00    	jne	0xffffffff800102b9 <taos::interrupts::gdt::init::hd5e0114d64446afe+0x159>
ffffffff800101c9: 0f b7 05 1c 62 01 00 	movzwl	0x1621c(%rip), %eax     # 0xffffffff800263ec <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.4978740807361014121+0x54>
ffffffff800101d0: 50                   	pushq	%rax
ffffffff800101d1: 48 8d 05 03 00 00 00 	leaq	0x3(%rip), %rax         # 0xffffffff800101db <taos::interrupts::gdt::init::hd5e0114d64446afe+0x7b>
ffffffff800101d8: 50                   	pushq	%rax
ffffffff800101d9: 48 cb                	lretq
ffffffff800101db: 0f b6 05 16 62 01 00 	movzbl	0x16216(%rip), %eax     # 0xffffffff800263f8 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.4978740807361014121+0x60>
ffffffff800101e2: 3c 02                	cmpb	$0x2, %al
ffffffff800101e4: 0f 85 e0 00 00 00    	jne	0xffffffff800102ca <taos::interrupts::gdt::init::hd5e0114d64446afe+0x16a>
ffffffff800101ea: 0f b7 05 fd 61 01 00 	movzwl	0x161fd(%rip), %eax     # 0xffffffff800263ee <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.4978740807361014121+0x56>
ffffffff800101f1: 66 8e c0             	movw	%ax, %es
ffffffff800101f4: 0f b6 05 fd 61 01 00 	movzbl	0x161fd(%rip), %eax     # 0xffffffff800263f8 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.4978740807361014121+0x60>
ffffffff800101fb: 3c 02                	cmpb	$0x2, %al
ffffffff800101fd: 0f 85 d8 00 00 00    	jne	0xffffffff800102db <taos::interrupts::gdt::init::hd5e0114d64446afe+0x17b>
ffffffff80010203: 0f b7 05 e4 61 01 00 	movzwl	0x161e4(%rip), %eax     # 0xffffffff800263ee <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.4978740807361014121+0x56>
ffffffff8001020a: 66 8e d8             	movw	%ax, %ds
ffffffff8001020d: 0f b6 05 e4 61 01 00 	movzbl	0x161e4(%rip), %eax     # 0xffffffff800263f8 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.4978740807361014121+0x60>
ffffffff80010214: 3c 02                	cmpb	$0x2, %al
ffffffff80010216: 0f 85 d0 00 00 00    	jne	0xffffffff800102ec <taos::interrupts::gdt::init::hd5e0114d64446afe+0x18c>
ffffffff8001021c: 0f b7 05 cb 61 01 00 	movzwl	0x161cb(%rip), %eax     # 0xffffffff800263ee <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.4978740807361014121+0x56>
ffffffff80010223: 66 8e d0             	movw	%ax, %ss
ffffffff80010226: 0f b6 05 cb 61 01 00 	movzbl	0x161cb(%rip), %eax     # 0xffffffff800263f8 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.4978740807361014121+0x60>
ffffffff8001022d: 3c 02                	cmpb	$0x2, %al
ffffffff8001022f: 0f 85 c8 00 00 00    	jne	0xffffffff800102fd <taos::interrupts::gdt::init::hd5e0114d64446afe+0x19d>
ffffffff80010235: 0f b7 05 b2 61 01 00 	movzwl	0x161b2(%rip), %eax     # 0xffffffff800263ee <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.4978740807361014121+0x56>
ffffffff8001023c: 66 8e e0             	movw	%ax, %fs
ffffffff8001023f: 0f b6 05 b2 61 01 00 	movzbl	0x161b2(%rip), %eax     # 0xffffffff800263f8 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.4978740807361014121+0x60>
ffffffff80010246: 3c 02                	cmpb	$0x2, %al
ffffffff80010248: 0f 85 c0 00 00 00    	jne	0xffffffff8001030e <taos::interrupts::gdt::init::hd5e0114d64446afe+0x1ae>
ffffffff8001024e: 0f b7 05 99 61 01 00 	movzwl	0x16199(%rip), %eax     # 0xffffffff800263ee <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.4978740807361014121+0x56>
ffffffff80010255: 66 8e e8             	movw	%ax, %gs
ffffffff80010258: 0f b6 05 99 61 01 00 	movzbl	0x16199(%rip), %eax     # 0xffffffff800263f8 <<taos::interrupts::gdt::GDT as core::ops::deref::Deref>::deref::__stability::LAZY::h803e20d2872af905.llvm.4978740807361014121+0x60>
ffffffff8001025f: 3c 02                	cmpb	$0x2, %al
ffffffff80010261: 0f 85 b8 00 00 00    	jne	0xffffffff8001031f <taos::interrupts::gdt::init::hd5e0114d64446afe+0x1bf>
ffffffff80010267: 89 d8                	movl	%ebx, %eax
ffffffff80010269: 0f b7 84 00 e8 63 02 80      	movzwl	-0x7ffd9c18(%rax,%rax), %eax
ffffffff80010271: 0f 00 d8             	ltrw	%ax
ffffffff80010274: 48 83 c4 30          	addq	$0x30, %rsp
ffffffff80010278: 5b                   	popq	%rbx
ffffffff80010279: c3                   	retq
ffffffff8001027a: 48 c7 c7 98 63 02 80 	movq	$-0x7ffd9c68, %rdi      # imm = 0x80026398
ffffffff80010281: e8 9a 27 ff ff       	callq	0xffffffff80002a20 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.14359069980145722807>
ffffffff80010286: 48 b8 00 00 00 00 00 80 00 00	movabsq	$0x800000000000, %rax # imm = 0x800000000000
ffffffff80010290: 48 8d 80 98 63 02 80 	leaq	-0x7ffd9c68(%rax), %rax
ffffffff80010297: 48 c1 e8 30          	shrq	$0x30, %rax
ffffffff8001029b: 0f 84 f9 fe ff ff    	je	0xffffffff8001019a <taos::interrupts::gdt::init::hd5e0114d64446afe+0x3a>
ffffffff800102a1: be 36 00 00 00       	movl	$0x36, %esi
ffffffff800102a6: 48 c7 c7 80 f0 01 80 	movq	$-0x7ffe0f80, %rdi      # imm = 0x8001F080
ffffffff800102ad: 48 c7 c2 18 f1 01 80 	movq	$-0x7ffe0ee8, %rdx      # imm = 0x8001F118
ffffffff800102b4: e8 b7 c1 00 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff800102b9: 48 c7 c7 98 63 02 80 	movq	$-0x7ffd9c68, %rdi      # imm = 0x80026398
ffffffff800102c0: e8 5b 27 ff ff       	callq	0xffffffff80002a20 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.14359069980145722807>
ffffffff800102c5: e9 ff fe ff ff       	jmp	0xffffffff800101c9 <taos::interrupts::gdt::init::hd5e0114d64446afe+0x69>
ffffffff800102ca: 48 c7 c7 98 63 02 80 	movq	$-0x7ffd9c68, %rdi      # imm = 0x80026398
ffffffff800102d1: e8 4a 27 ff ff       	callq	0xffffffff80002a20 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.14359069980145722807>
ffffffff800102d6: e9 0f ff ff ff       	jmp	0xffffffff800101ea <taos::interrupts::gdt::init::hd5e0114d64446afe+0x8a>
ffffffff800102db: 48 c7 c7 98 63 02 80 	movq	$-0x7ffd9c68, %rdi      # imm = 0x80026398
ffffffff800102e2: e8 39 27 ff ff       	callq	0xffffffff80002a20 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.14359069980145722807>
ffffffff800102e7: e9 17 ff ff ff       	jmp	0xffffffff80010203 <taos::interrupts::gdt::init::hd5e0114d64446afe+0xa3>
ffffffff800102ec: 48 c7 c7 98 63 02 80 	movq	$-0x7ffd9c68, %rdi      # imm = 0x80026398
ffffffff800102f3: e8 28 27 ff ff       	callq	0xffffffff80002a20 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.14359069980145722807>
ffffffff800102f8: e9 1f ff ff ff       	jmp	0xffffffff8001021c <taos::interrupts::gdt::init::hd5e0114d64446afe+0xbc>
ffffffff800102fd: 48 c7 c7 98 63 02 80 	movq	$-0x7ffd9c68, %rdi      # imm = 0x80026398
ffffffff80010304: e8 17 27 ff ff       	callq	0xffffffff80002a20 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.14359069980145722807>
ffffffff80010309: e9 27 ff ff ff       	jmp	0xffffffff80010235 <taos::interrupts::gdt::init::hd5e0114d64446afe+0xd5>
ffffffff8001030e: 48 c7 c7 98 63 02 80 	movq	$-0x7ffd9c68, %rdi      # imm = 0x80026398
ffffffff80010315: e8 06 27 ff ff       	callq	0xffffffff80002a20 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.14359069980145722807>
ffffffff8001031a: e9 2f ff ff ff       	jmp	0xffffffff8001024e <taos::interrupts::gdt::init::hd5e0114d64446afe+0xee>
ffffffff8001031f: 48 c7 c7 98 63 02 80 	movq	$-0x7ffd9c68, %rdi      # imm = 0x80026398
ffffffff80010326: e8 f5 26 ff ff       	callq	0xffffffff80002a20 <spin::once::Once<T,R>::try_call_once_slow::h67a9ee2027ceb24c.llvm.14359069980145722807>
ffffffff8001032b: e9 37 ff ff ff       	jmp	0xffffffff80010267 <taos::interrupts::gdt::init::hd5e0114d64446afe+0x107>
ffffffff80010330: 48 c7 04 24 30 21 02 80      	movq	$-0x7ffdded0, (%rsp) # imm = 0x80022130
ffffffff80010338: 48 c7 44 24 08 01 00 00 00   	movq	$0x1, 0x8(%rsp)
ffffffff80010341: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff8001034a: 48 c7 44 24 10 08 00 00 00   	movq	$0x8, 0x10(%rsp)
ffffffff80010353: 48 c7 44 24 18 00 00 00 00   	movq	$0x0, 0x18(%rsp)
ffffffff8001035c: 48 89 e7             	movq	%rsp, %rdi
ffffffff8001035f: 48 c7 c6 58 21 02 80 	movq	$-0x7ffddea8, %rsi      # imm = 0x80022158
ffffffff80010366: e8 85 c0 00 00       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8001036b: cc                   	int3
ffffffff8001036c: cc                   	int3
ffffffff8001036d: cc                   	int3
ffffffff8001036e: cc                   	int3
ffffffff8001036f: cc                   	int3

ffffffff80010370 <taos::memory::tlb::tlb_shootdown::h677329e270f13473>:
ffffffff80010370: b9 02 08 00 00       	movl	$0x802, %ecx            # imm = 0x802
ffffffff80010375: 0f 32                	rdmsr
ffffffff80010377: 48 c1 e2 20          	shlq	$0x20, %rdx
ffffffff8001037b: 89 c6                	movl	%eax, %esi
ffffffff8001037d: 48 09 d6             	orq	%rdx, %rsi
ffffffff80010380: b1 01                	movb	$0x1, %cl
ffffffff80010382: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
ffffffff80010390: 31 c0                	xorl	%eax, %eax
ffffffff80010392: f0                   	lock
ffffffff80010393: 0f b0 0d 96 5e 01 00 	cmpxchgb	%cl, 0x15e96(%rip)      # 0xffffffff80026230 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30>
ffffffff8001039a: 75 06                	jne	0xffffffff800103a2 <taos::memory::tlb::tlb_shootdown::h677329e270f13473+0x32>
ffffffff8001039c: eb 11                	jmp	0xffffffff800103af <taos::memory::tlb::tlb_shootdown::h677329e270f13473+0x3f>
ffffffff8001039e: 66 90                	nop
ffffffff800103a0: f3 90                	pause
ffffffff800103a2: 0f b6 05 87 5e 01 00 	movzbl	0x15e87(%rip), %eax     # 0xffffffff80026230 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30>
ffffffff800103a9: 84 c0                	testb	%al, %al
ffffffff800103ab: 75 f3                	jne	0xffffffff800103a0 <taos::memory::tlb::tlb_shootdown::h677329e270f13473+0x30>
ffffffff800103ad: eb e1                	jmp	0xffffffff80010390 <taos::memory::tlb::tlb_shootdown::h677329e270f13473+0x20>
ffffffff800103af: 48 85 f6             	testq	%rsi, %rsi
ffffffff800103b2: 74 1b                	je	0xffffffff800103cf <taos::memory::tlb::tlb_shootdown::h677329e270f13473+0x5f>
ffffffff800103b4: 48 89 3d 7d 5e 01 00 	movq	%rdi, 0x15e7d(%rip)     # 0xffffffff80026238 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30+0x8>
ffffffff800103bb: b9 30 08 00 00       	movl	$0x830, %ecx            # imm = 0x830
ffffffff800103c0: b8 21 00 00 00       	movl	$0x21, %eax
ffffffff800103c5: 31 d2                	xorl	%edx, %edx
ffffffff800103c7: 0f 30                	wrmsr
ffffffff800103c9: 48 83 fe 01          	cmpq	$0x1, %rsi
ffffffff800103cd: 74 18                	je	0xffffffff800103e7 <taos::memory::tlb::tlb_shootdown::h677329e270f13473+0x77>
ffffffff800103cf: 48 89 3d 6a 5e 01 00 	movq	%rdi, 0x15e6a(%rip)     # 0xffffffff80026240 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30+0x10>
ffffffff800103d6: b9 30 08 00 00       	movl	$0x830, %ecx            # imm = 0x830
ffffffff800103db: b8 21 00 00 00       	movl	$0x21, %eax
ffffffff800103e0: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff800103e5: 0f 30                	wrmsr
ffffffff800103e7: c6 05 42 5e 01 00 00 	movb	$0x0, 0x15e42(%rip)     # 0xffffffff80026230 <taos::interrupts::x2apic::TLB_SHOOTDOWN_ADDR::hfd343955ad009f30>
ffffffff800103ee: 0f 01 3f             	invlpg	(%rdi)
ffffffff800103f1: c3                   	retq
ffffffff800103f2: cc                   	int3
ffffffff800103f3: cc                   	int3
ffffffff800103f4: cc                   	int3
ffffffff800103f5: cc                   	int3
ffffffff800103f6: cc                   	int3
ffffffff800103f7: cc                   	int3
ffffffff800103f8: cc                   	int3
ffffffff800103f9: cc                   	int3
ffffffff800103fa: cc                   	int3
ffffffff800103fb: cc                   	int3
ffffffff800103fc: cc                   	int3
ffffffff800103fd: cc                   	int3
ffffffff800103fe: cc                   	int3
ffffffff800103ff: cc                   	int3

ffffffff80010400 <taos::processes::process::create_process::ha385fce1049c264a>:
ffffffff80010400: 55                   	pushq	%rbp
ffffffff80010401: 41 57                	pushq	%r15
ffffffff80010403: 41 56                	pushq	%r14
ffffffff80010405: 41 55                	pushq	%r13
ffffffff80010407: 41 54                	pushq	%r12
ffffffff80010409: 53                   	pushq	%rbx
ffffffff8001040a: 48 81 ec 98 00 00 00 	subq	$0x98, %rsp
ffffffff80010411: 48 89 f3             	movq	%rsi, %rbx
ffffffff80010414: 49 89 fe             	movq	%rdi, %r14
ffffffff80010417: bd 01 00 00 00       	movl	$0x1, %ebp
ffffffff8001041c: f0                   	lock
ffffffff8001041d: 0f c1 2d 5c 4c 01 00 	xaddl	%ebp, 0x14c5c(%rip)     # 0xffffffff80025080 <taos::processes::process::NEXT_PID::h2fc14043a26d336e>
ffffffff80010424: b1 01                	movb	$0x1, %cl
ffffffff80010426: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
ffffffff80010430: 31 c0                	xorl	%eax, %eax
ffffffff80010432: f0                   	lock
ffffffff80010433: 0f b0 0d c6 4b 01 00 	cmpxchgb	%cl, 0x14bc6(%rip)      # 0xffffffff80025000 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208>
ffffffff8001043a: 75 06                	jne	0xffffffff80010442 <taos::processes::process::create_process::ha385fce1049c264a+0x42>
ffffffff8001043c: eb 11                	jmp	0xffffffff8001044f <taos::processes::process::create_process::ha385fce1049c264a+0x4f>
ffffffff8001043e: 66 90                	nop
ffffffff80010440: f3 90                	pause
ffffffff80010442: 0f b6 05 b7 4b 01 00 	movzbl	0x14bb7(%rip), %eax     # 0xffffffff80025000 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208>
ffffffff80010449: 84 c0                	testb	%al, %al
ffffffff8001044b: 75 f3                	jne	0xffffffff80010440 <taos::processes::process::create_process::ha385fce1049c264a+0x40>
ffffffff8001044d: eb e1                	jmp	0xffffffff80010430 <taos::processes::process::create_process::ha385fce1049c264a+0x30>
ffffffff8001044f: 48 8b 05 b2 4b 01 00 	movq	0x14bb2(%rip), %rax     # 0xffffffff80025008 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208+0x8>
ffffffff80010456: 48 83 f8 02          	cmpq	$0x2, %rax
ffffffff8001045a: 74 1c                	je	0xffffffff80010478 <taos::processes::process::create_process::ha385fce1049c264a+0x78>
ffffffff8001045c: 83 f8 03             	cmpl	$0x3, %eax
ffffffff8001045f: 0f 84 77 05 00 00    	je	0xffffffff800109dc <taos::processes::process::create_process::ha385fce1049c264a+0x5dc>
ffffffff80010465: 48 8d 7c 24 10       	leaq	0x10(%rsp), %rdi
ffffffff8001046a: 48 c7 c6 08 50 02 80 	movq	$-0x7ffdaff8, %rsi      # imm = 0x80025008
ffffffff80010471: e8 ca af ff ff       	callq	0xffffffff8000b440 <<taos::memory::boot_frame_allocator::BootIntoFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h20e43825b41c2683>
ffffffff80010476: eb 11                	jmp	0xffffffff80010489 <taos::processes::process::create_process::ha385fce1049c264a+0x89>
ffffffff80010478: 48 8d 7c 24 10       	leaq	0x10(%rsp), %rdi
ffffffff8001047d: 48 c7 c6 10 50 02 80 	movq	$-0x7ffdaff0, %rsi      # imm = 0x80025010
ffffffff80010484: e8 e7 b7 ff ff       	callq	0xffffffff8000bc70 <<taos::memory::bitmap_frame_allocator::BitmapFrameAllocator as x86_64::structures::paging::frame_alloc::FrameAllocator<x86_64::structures::paging::page::Size4KiB>>::allocate_frame::h034757e32ae64125>
ffffffff80010489: c6 05 70 4b 01 00 00 	movb	$0x0, 0x14b70(%rip)     # 0xffffffff80025000 <taos::memory::frame_allocator::FRAME_ALLOCATOR::h0678d4f78df1a208>
ffffffff80010490: f6 44 24 10 01       	testb	$0x1, 0x10(%rsp)
ffffffff80010495: 0f 84 18 05 00 00    	je	0xffffffff800109b3 <taos::processes::process::create_process::ha385fce1049c264a+0x5b3>
ffffffff8001049b: 4c 8b 64 24 18       	movq	0x18(%rsp), %r12
ffffffff800104a0: 0f b6 05 81 5d 01 00 	movzbl	0x15d81(%rip), %eax     # 0xffffffff80026228 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.6482013028561868880+0x8>
ffffffff800104a7: 3c 02                	cmpb	$0x2, %al
ffffffff800104a9: 0f 85 86 04 00 00    	jne	0xffffffff80010935 <taos::processes::process::create_process::ha385fce1049c264a+0x535>
ffffffff800104af: 49 bd 00 00 00 00 00 80 00 00	movabsq	$0x800000000000, %r13 # imm = 0x800000000000
ffffffff800104b9: 4c 8b 3d 60 5d 01 00 	movq	0x15d60(%rip), %r15     # 0xffffffff80026220 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.6482013028561868880>
ffffffff800104c0: 4d 01 e7             	addq	%r12, %r15
ffffffff800104c3: 4b 8d 04 2f          	leaq	(%r15,%r13), %rax
ffffffff800104c7: 48 c1 e8 30          	shrq	$0x30, %rax
ffffffff800104cb: 0f 85 ca 04 00 00    	jne	0xffffffff8001099b <taos::processes::process::create_process::ha385fce1049c264a+0x59b>
ffffffff800104d1: 0f b6 05 40 5d 01 00 	movzbl	0x15d40(%rip), %eax     # 0xffffffff80026218 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.6482013028561868880+0x18>
ffffffff800104d8: 3c 02                	cmpb	$0x2, %al
ffffffff800104da: 0f 85 66 04 00 00    	jne	0xffffffff80010946 <taos::processes::process::create_process::ha385fce1049c264a+0x546>
ffffffff800104e0: 4c 89 64 24 48       	movq	%r12, 0x48(%rsp)
ffffffff800104e5: b1 01                	movb	$0x1, %cl
ffffffff800104e7: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
ffffffff800104f0: 31 c0                	xorl	%eax, %eax
ffffffff800104f2: f0                   	lock
ffffffff800104f3: 0f b0 0d 06 5d 01 00 	cmpxchgb	%cl, 0x15d06(%rip)      # 0xffffffff80026200 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.6482013028561868880>
ffffffff800104fa: 75 06                	jne	0xffffffff80010502 <taos::processes::process::create_process::ha385fce1049c264a+0x102>
ffffffff800104fc: eb 11                	jmp	0xffffffff8001050f <taos::processes::process::create_process::ha385fce1049c264a+0x10f>
ffffffff800104fe: 66 90                	nop
ffffffff80010500: f3 90                	pause
ffffffff80010502: 0f b6 05 f7 5c 01 00 	movzbl	0x15cf7(%rip), %eax     # 0xffffffff80026200 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.6482013028561868880>
ffffffff80010509: 84 c0                	testb	%al, %al
ffffffff8001050b: 75 f3                	jne	0xffffffff80010500 <taos::processes::process::create_process::ha385fce1049c264a+0x100>
ffffffff8001050d: eb e1                	jmp	0xffffffff800104f0 <taos::processes::process::create_process::ha385fce1049c264a+0xf0>
ffffffff8001050f: 41 89 ec             	movl	%ebp, %r12d
ffffffff80010512: 4c 89 f5             	movq	%r14, %rbp
ffffffff80010515: 45 31 f6             	xorl	%r14d, %r14d
ffffffff80010518: ba 00 10 00 00       	movl	$0x1000, %edx           # imm = 0x1000
ffffffff8001051d: 4c 89 ff             	movq	%r15, %rdi
ffffffff80010520: 31 f6                	xorl	%esi, %esi
ffffffff80010522: ff 15 08 5f 02 00    	callq	*0x25f08(%rip)          # 0xffffffff80036430
ffffffff80010528: 48 8b 05 d9 5c 01 00 	movq	0x15cd9(%rip), %rax     # 0xffffffff80026208 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.6482013028561868880+0x8>
ffffffff8001052f: 49 81 c7 18 08 00 00 	addq	$0x818, %r15            # imm = 0x818
ffffffff80010536: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
ffffffff80010540: 4a 8b 8c f0 00 08 00 00      	movq	0x800(%rax,%r14,8), %rcx
ffffffff80010548: 4b 89 4c f7 e8       	movq	%rcx, -0x18(%r15,%r14,8)
ffffffff8001054d: 4a 8b 8c f0 08 08 00 00      	movq	0x808(%rax,%r14,8), %rcx
ffffffff80010555: 4b 89 4c f7 f0       	movq	%rcx, -0x10(%r15,%r14,8)
ffffffff8001055a: 4a 8b 8c f0 10 08 00 00      	movq	0x810(%rax,%r14,8), %rcx
ffffffff80010562: 4b 89 4c f7 f8       	movq	%rcx, -0x8(%r15,%r14,8)
ffffffff80010567: 4a 8b 8c f0 18 08 00 00      	movq	0x818(%rax,%r14,8), %rcx
ffffffff8001056f: 4b 89 0c f7          	movq	%rcx, (%r15,%r14,8)
ffffffff80010573: 49 83 c6 04          	addq	$0x4, %r14
ffffffff80010577: 49 81 fe 00 01 00 00 	cmpq	$0x100, %r14            # imm = 0x100
ffffffff8001057e: 75 c0                	jne	0xffffffff80010540 <taos::processes::process::create_process::ha385fce1049c264a+0x140>
ffffffff80010580: c6 05 79 5c 01 00 00 	movb	$0x0, 0x15c79(%rip)     # 0xffffffff80026200 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.6482013028561868880>
ffffffff80010587: 0f b6 05 9a 5c 01 00 	movzbl	0x15c9a(%rip), %eax     # 0xffffffff80026228 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.6482013028561868880+0x8>
ffffffff8001058e: 3c 02                	cmpb	$0x2, %al
ffffffff80010590: 0f 85 c1 03 00 00    	jne	0xffffffff80010957 <taos::processes::process::create_process::ha385fce1049c264a+0x557>
ffffffff80010596: 4c 8b 35 83 5c 01 00 	movq	0x15c83(%rip), %r14     # 0xffffffff80026220 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.6482013028561868880>
ffffffff8001059d: 4c 03 74 24 48       	addq	0x48(%rsp), %r14
ffffffff800105a2: 4d 01 f5             	addq	%r14, %r13
ffffffff800105a5: 48 b8 00 00 00 00 00 00 01 00	movabsq	$0x1000000000000, %rax # imm = 0x1000000000000
ffffffff800105af: 49 39 c5             	cmpq	%rax, %r13
ffffffff800105b2: 0f 83 e3 03 00 00    	jae	0xffffffff8001099b <taos::processes::process::create_process::ha385fce1049c264a+0x59b>
ffffffff800105b8: 0f b6 05 69 5c 01 00 	movzbl	0x15c69(%rip), %eax     # 0xffffffff80026228 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.6482013028561868880+0x8>
ffffffff800105bf: 3c 02                	cmpb	$0x2, %al
ffffffff800105c1: 0f 85 a1 03 00 00    	jne	0xffffffff80010968 <taos::processes::process::create_process::ha385fce1049c264a+0x568>
ffffffff800105c7: 48 8b 05 52 5c 01 00 	movq	0x15c52(%rip), %rax     # 0xffffffff80026220 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.6482013028561868880>
ffffffff800105ce: 4c 89 74 24 50       	movq	%r14, 0x50(%rsp)
ffffffff800105d3: 48 89 44 24 58       	movq	%rax, 0x58(%rsp)
ffffffff800105d8: 0f b6 05 39 5c 01 00 	movzbl	0x15c39(%rip), %eax     # 0xffffffff80026218 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.6482013028561868880+0x18>
ffffffff800105df: 3c 02                	cmpb	$0x2, %al
ffffffff800105e1: 0f 85 92 03 00 00    	jne	0xffffffff80010979 <taos::processes::process::create_process::ha385fce1049c264a+0x579>
ffffffff800105e7: 41 b7 01             	movb	$0x1, %r15b
ffffffff800105ea: 31 c0                	xorl	%eax, %eax
ffffffff800105ec: f0                   	lock
ffffffff800105ed: 44 0f b0 3d 0b 5c 01 00      	cmpxchgb	%r15b, 0x15c0b(%rip) # 0xffffffff80026200 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.6482013028561868880>
ffffffff800105f5: 48 89 ef             	movq	%rbp, %rdi
ffffffff800105f8: 44 89 e5             	movl	%r12d, %ebp
ffffffff800105fb: 75 05                	jne	0xffffffff80010602 <taos::processes::process::create_process::ha385fce1049c264a+0x202>
ffffffff800105fd: eb 1b                	jmp	0xffffffff8001061a <taos::processes::process::create_process::ha385fce1049c264a+0x21a>
ffffffff800105ff: 90                   	nop
ffffffff80010600: f3 90                	pause
ffffffff80010602: 0f b6 05 f7 5b 01 00 	movzbl	0x15bf7(%rip), %eax     # 0xffffffff80026200 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.6482013028561868880>
ffffffff80010609: 84 c0                	testb	%al, %al
ffffffff8001060b: 75 f3                	jne	0xffffffff80010600 <taos::processes::process::create_process::ha385fce1049c264a+0x200>
ffffffff8001060d: 31 c0                	xorl	%eax, %eax
ffffffff8001060f: f0                   	lock
ffffffff80010610: 44 0f b0 3d e8 5b 01 00      	cmpxchgb	%r15b, 0x15be8(%rip) # 0xffffffff80026200 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.6482013028561868880>
ffffffff80010618: 75 e8                	jne	0xffffffff80010602 <taos::processes::process::create_process::ha385fce1049c264a+0x202>
ffffffff8001061a: 48 8d 54 24 50       	leaq	0x50(%rsp), %rdx
ffffffff8001061f: 48 89 de             	movq	%rbx, %rsi
ffffffff80010622: 48 c7 c1 08 62 02 80 	movq	$-0x7ffd9df8, %rcx      # imm = 0x80026208
ffffffff80010629: e8 a2 db ff ff       	callq	0xffffffff8000e1d0 <taos::processes::loader::load_elf::ha68086dbc075a067>
ffffffff8001062e: 48 89 c3             	movq	%rax, %rbx
ffffffff80010631: 49 89 d6             	movq	%rdx, %r14
ffffffff80010634: c6 05 c5 5b 01 00 00 	movb	$0x0, 0x15bc5(%rip)     # 0xffffffff80026200 <<taos::memory::MAPPER as core::ops::deref::Deref>::deref::__stability::LAZY::h739235d69caec391.llvm.6482013028561868880>
ffffffff8001063b: 0f b6 05 9f 4b 01 00 	movzbl	0x14b9f(%rip), %eax     # 0xffffffff800251e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80010642: 31 c0                	xorl	%eax, %eax
ffffffff80010644: f0                   	lock
ffffffff80010645: 44 0f b0 3d 03 4a 01 00      	cmpxchgb	%r15b, 0x14a03(%rip) # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff8001064d: 4c 8b 64 24 48       	movq	0x48(%rsp), %r12
ffffffff80010652: 74 25                	je	0xffffffff80010679 <taos::processes::process::create_process::ha385fce1049c264a+0x279>
ffffffff80010654: b1 01                	movb	$0x1, %cl
ffffffff80010656: eb 0a                	jmp	0xffffffff80010662 <taos::processes::process::create_process::ha385fce1049c264a+0x262>
ffffffff80010658: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
ffffffff80010660: f3 90                	pause
ffffffff80010662: 0f b6 05 e7 49 01 00 	movzbl	0x149e7(%rip), %eax     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80010669: 84 c0                	testb	%al, %al
ffffffff8001066b: 75 f3                	jne	0xffffffff80010660 <taos::processes::process::create_process::ha385fce1049c264a+0x260>
ffffffff8001066d: 31 c0                	xorl	%eax, %eax
ffffffff8001066f: f0                   	lock
ffffffff80010670: 0f b0 0d d9 49 01 00 	cmpxchgb	%cl, 0x149d9(%rip)      # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80010677: 75 e9                	jne	0xffffffff80010662 <taos::processes::process::create_process::ha385fce1049c264a+0x262>
ffffffff80010679: be 08 00 00 00       	movl	$0x8, %esi
ffffffff8001067e: ba c0 00 00 00       	movl	$0xc0, %edx
ffffffff80010683: 48 c7 c7 58 50 02 80 	movq	$-0x7ffdafa8, %rdi      # imm = 0x80025058
ffffffff8001068a: e8 71 2c ff ff       	callq	0xffffffff80003300 <talc::talc::Talc<O>::malloc::ha1622a2b87738445>
ffffffff8001068f: c6 05 ba 49 01 00 00 	movb	$0x0, 0x149ba(%rip)     # 0xffffffff80025050 <taos::memory::heap::ALLOCATOR::hb0e7626af0a91001.llvm.16599521749034828659>
ffffffff80010696: 48 85 c0             	testq	%rax, %rax
ffffffff80010699: 0f 84 2c 03 00 00    	je	0xffffffff800109cb <taos::processes::process::create_process::ha385fce1049c264a+0x5cb>
ffffffff8001069f: 49 89 c7             	movq	%rax, %r15
ffffffff800106a2: 48 c7 00 01 00 00 00 	movq	$0x1, (%rax)
ffffffff800106a9: 48 c7 40 08 01 00 00 00      	movq	$0x1, 0x8(%rax)
ffffffff800106b1: 48 89 c7             	movq	%rax, %rdi
ffffffff800106b4: 48 83 c7 10          	addq	$0x10, %rdi
ffffffff800106b8: ba 88 00 00 00       	movl	$0x88, %edx
ffffffff800106bd: 31 f6                	xorl	%esi, %esi
ffffffff800106bf: ff 15 6b 5d 02 00    	callq	*0x25d6b(%rip)          # 0xffffffff80036430
ffffffff800106c5: 49 89 9f 98 00 00 00 	movq	%rbx, 0x98(%r15)
ffffffff800106cc: 4d 89 b7 a0 00 00 00 	movq	%r14, 0xa0(%r15)
ffffffff800106d3: 49 c7 87 a8 00 00 00 02 02 00 00     	movq	$0x202, 0xa8(%r15) # imm = 0x202
ffffffff800106de: 4d 89 a7 b0 00 00 00 	movq	%r12, 0xb0(%r15)
ffffffff800106e5: 41 89 af b8 00 00 00 	movl	%ebp, 0xb8(%r15)
ffffffff800106ec: 41 c6 87 bc 00 00 00 00      	movb	$0x0, 0xbc(%r15)
ffffffff800106f4: 4c 89 7c 24 40       	movq	%r15, 0x40(%rsp)
ffffffff800106f9: 89 6c 24 0c          	movl	%ebp, 0xc(%rsp)
ffffffff800106fd: 0f b6 05 04 5d 01 00 	movzbl	0x15d04(%rip), %eax     # 0xffffffff80026408 <_ZN83_$LT$taos..processes..process..PROCESS_TABLE$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17he905a56e6b762301E.llvm.4978740807361014121+0x8>
ffffffff80010704: 3c 02                	cmpb	$0x2, %al
ffffffff80010706: 0f 85 7e 02 00 00    	jne	0xffffffff8001098a <taos::processes::process::create_process::ha385fce1049c264a+0x58a>
ffffffff8001070c: 48 8b 1d ed 5c 01 00 	movq	0x15ced(%rip), %rbx     # 0xffffffff80026400 <_ZN83_$LT$taos..processes..process..PROCESS_TABLE$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17he905a56e6b762301E.llvm.4978740807361014121>
ffffffff80010713: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff80010718: 31 c0                	xorl	%eax, %eax
ffffffff8001071a: f0                   	lock
ffffffff8001071b: 48 0f b1 4b 10       	cmpxchgq	%rcx, 0x10(%rbx)
ffffffff80010720: 74 1a                	je	0xffffffff8001073c <taos::processes::process::create_process::ha385fce1049c264a+0x33c>
ffffffff80010722: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
ffffffff80010730: f3 90                	pause
ffffffff80010732: 31 c0                	xorl	%eax, %eax
ffffffff80010734: f0                   	lock
ffffffff80010735: 48 0f b1 4b 10       	cmpxchgq	%rcx, 0x10(%rbx)
ffffffff8001073a: 75 f4                	jne	0xffffffff80010730 <taos::processes::process::create_process::ha385fce1049c264a+0x330>
ffffffff8001073c: 8b 44 24 0c          	movl	0xc(%rsp), %eax
ffffffff80010740: 48 8b 74 24 40       	movq	0x40(%rsp), %rsi
ffffffff80010745: f0                   	lock
ffffffff80010746: 48 ff 06             	incq	(%rsi)
ffffffff80010749: 0f 8e 8b 02 00 00    	jle	0xffffffff800109da <taos::processes::process::create_process::ha385fce1049c264a+0x5da>
ffffffff8001074f: 48 8d 4b 18          	leaq	0x18(%rbx), %rcx
ffffffff80010753: 48 8b 11             	movq	(%rcx), %rdx
ffffffff80010756: 48 85 d2             	testq	%rdx, %rdx
ffffffff80010759: 0f 84 c1 00 00 00    	je	0xffffffff80010820 <taos::processes::process::create_process::ha385fce1049c264a+0x420>
ffffffff8001075f: 48 8b 7b 20          	movq	0x20(%rbx), %rdi
ffffffff80010763: 41 b8 ff 00 00 00    	movl	$0xff, %r8d
ffffffff80010769: 44 0f b7 92 8e 00 00 00      	movzwl	0x8e(%rdx), %r10d
ffffffff80010771: 45 89 d3             	movl	%r10d, %r11d
ffffffff80010774: 41 c1 e3 02          	shll	$0x2, %r11d
ffffffff80010778: 49 c7 c1 ff ff ff ff 	movq	$-0x1, %r9
ffffffff8001077f: 90                   	nop
ffffffff80010780: 4d 85 db             	testq	%r11, %r11
ffffffff80010783: 74 2b                	je	0xffffffff800107b0 <taos::processes::process::create_process::ha385fce1049c264a+0x3b0>
ffffffff80010785: 31 ed                	xorl	%ebp, %ebp
ffffffff80010787: 42 39 44 8a 64       	cmpl	%eax, 0x64(%rdx,%r9,4)
ffffffff8001078c: 40 0f 95 c5          	setne	%bpl
ffffffff80010790: 41 0f 47 e8          	cmoval	%r8d, %ebp
ffffffff80010794: 49 ff c1             	incq	%r9
ffffffff80010797: 49 83 c3 fc          	addq	$-0x4, %r11
ffffffff8001079b: 40 80 fd 01          	cmpb	$0x1, %bpl
ffffffff8001079f: 74 df                	je	0xffffffff80010780 <taos::processes::process::create_process::ha385fce1049c264a+0x380>
ffffffff800107a1: 44 0f b6 d5          	movzbl	%bpl, %r10d
ffffffff800107a5: 45 85 d2             	testl	%r10d, %r10d
ffffffff800107a8: 74 19                	je	0xffffffff800107c3 <taos::processes::process::create_process::ha385fce1049c264a+0x3c3>
ffffffff800107aa: eb 07                	jmp	0xffffffff800107b3 <taos::processes::process::create_process::ha385fce1049c264a+0x3b3>
ffffffff800107ac: 0f 1f 40 00          	nopl	(%rax)
ffffffff800107b0: 4d 89 d1             	movq	%r10, %r9
ffffffff800107b3: 48 83 ef 01          	subq	$0x1, %rdi
ffffffff800107b7: 72 69                	jb	0xffffffff80010822 <taos::processes::process::create_process::ha385fce1049c264a+0x422>
ffffffff800107b9: 4a 8b 94 ca 90 00 00 00      	movq	0x90(%rdx,%r9,8), %rdx
ffffffff800107c1: eb a6                	jmp	0xffffffff80010769 <taos::processes::process::create_process::ha385fce1049c264a+0x369>
ffffffff800107c3: 4a 8b 44 ca 08       	movq	0x8(%rdx,%r9,8), %rax
ffffffff800107c8: 4a 89 74 ca 08       	movq	%rsi, 0x8(%rdx,%r9,8)
ffffffff800107cd: 48 89 44 24 10       	movq	%rax, 0x10(%rsp)
ffffffff800107d2: f0                   	lock
ffffffff800107d3: 48 ff 08             	decq	(%rax)
ffffffff800107d6: 0f 84 8b 00 00 00    	je	0xffffffff80010867 <taos::processes::process::create_process::ha385fce1049c264a+0x467>
ffffffff800107dc: f0                   	lock
ffffffff800107dd: 48 83 63 10 fc       	andq	$-0x4, 0x10(%rbx)
ffffffff800107e2: 48 8b 05 2f 5c 02 00 	movq	0x25c2f(%rip), %rax     # 0xffffffff80036418 <log::MAX_LOG_LEVEL_FILTER::hebff44fa7f6797f5>
ffffffff800107e9: 48 83 f8 04          	cmpq	$0x4, %rax
ffffffff800107ed: 0f 83 95 00 00 00    	jae	0xffffffff80010888 <taos::processes::process::create_process::ha385fce1049c264a+0x488>
ffffffff800107f3: 8b 5c 24 0c          	movl	0xc(%rsp), %ebx
ffffffff800107f7: 48 8b 44 24 40       	movq	0x40(%rsp), %rax
ffffffff800107fc: f0                   	lock
ffffffff800107fd: 48 ff 08             	decq	(%rax)
ffffffff80010800: 75 0a                	jne	0xffffffff8001080c <taos::processes::process::create_process::ha385fce1049c264a+0x40c>
ffffffff80010802: 48 8d 7c 24 40       	leaq	0x40(%rsp), %rdi
ffffffff80010807: e8 e4 b6 ff ff       	callq	0xffffffff8000bef0 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58>
ffffffff8001080c: 89 d8                	movl	%ebx, %eax
ffffffff8001080e: 48 81 c4 98 00 00 00 	addq	$0x98, %rsp
ffffffff80010815: 5b                   	popq	%rbx
ffffffff80010816: 41 5c                	popq	%r12
ffffffff80010818: 41 5d                	popq	%r13
ffffffff8001081a: 41 5e                	popq	%r14
ffffffff8001081c: 41 5f                	popq	%r15
ffffffff8001081e: 5d                   	popq	%rbp
ffffffff8001081f: c3                   	retq
ffffffff80010820: 31 d2                	xorl	%edx, %edx
ffffffff80010822: 48 89 4c 24 10       	movq	%rcx, 0x10(%rsp)
ffffffff80010827: 48 89 54 24 18       	movq	%rdx, 0x18(%rsp)
ffffffff8001082c: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff80010835: 4c 89 4c 24 28       	movq	%r9, 0x28(%rsp)
ffffffff8001083a: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff8001083f: 48 8d 7c 24 10       	leaq	0x10(%rsp), %rdi
ffffffff80010844: e8 27 34 ff ff       	callq	0xffffffff80003c70 <alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert::h3ca3ac26a9d75275>
ffffffff80010849: 48 c7 44 24 10 00 00 00 00   	movq	$0x0, 0x10(%rsp)
ffffffff80010852: f0                   	lock
ffffffff80010853: 48 83 63 10 fc       	andq	$-0x4, 0x10(%rbx)
ffffffff80010858: 48 8b 05 b9 5b 02 00 	movq	0x25bb9(%rip), %rax     # 0xffffffff80036418 <log::MAX_LOG_LEVEL_FILTER::hebff44fa7f6797f5>
ffffffff8001085f: 48 83 f8 04          	cmpq	$0x4, %rax
ffffffff80010863: 72 8e                	jb	0xffffffff800107f3 <taos::processes::process::create_process::ha385fce1049c264a+0x3f3>
ffffffff80010865: eb 21                	jmp	0xffffffff80010888 <taos::processes::process::create_process::ha385fce1049c264a+0x488>
ffffffff80010867: 48 8d 7c 24 10       	leaq	0x10(%rsp), %rdi
ffffffff8001086c: e8 7f b6 ff ff       	callq	0xffffffff8000bef0 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58>
ffffffff80010871: f0                   	lock
ffffffff80010872: 48 83 63 10 fc       	andq	$-0x4, 0x10(%rbx)
ffffffff80010877: 48 8b 05 9a 5b 02 00 	movq	0x25b9a(%rip), %rax     # 0xffffffff80036418 <log::MAX_LOG_LEVEL_FILTER::hebff44fa7f6797f5>
ffffffff8001087e: 48 83 f8 04          	cmpq	$0x4, %rax
ffffffff80010882: 0f 82 6b ff ff ff    	jb	0xffffffff800107f3 <taos::processes::process::create_process::ha385fce1049c264a+0x3f3>
ffffffff80010888: 48 8d 44 24 0c       	leaq	0xc(%rsp), %rax
ffffffff8001088d: 48 89 44 24 60       	movq	%rax, 0x60(%rsp)
ffffffff80010892: 48 c7 44 24 68 a0 b7 01 80   	movq	$-0x7ffe4860, 0x68(%rsp) # imm = 0x8001B7A0
ffffffff8001089b: 48 c7 44 24 10 40 22 02 80   	movq	$-0x7ffdddc0, 0x10(%rsp) # imm = 0x80022240
ffffffff800108a4: 48 c7 44 24 18 01 00 00 00   	movq	$0x1, 0x18(%rsp)
ffffffff800108ad: 48 c7 44 24 30 00 00 00 00   	movq	$0x0, 0x30(%rsp)
ffffffff800108b6: 48 8d 44 24 60       	leaq	0x60(%rsp), %rax
ffffffff800108bb: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff800108c0: 48 c7 44 24 28 01 00 00 00   	movq	$0x1, 0x28(%rsp)
ffffffff800108c9: 48 c7 c7 68 22 02 80 	movq	$-0x7ffddd98, %rdi      # imm = 0x80022268
ffffffff800108d0: e8 7b 73 00 00       	callq	0xffffffff80017c50 <log::__private_api::loc::h7d13c00ac743e0a8>
ffffffff800108d5: 48 c7 44 24 70 80 22 02 80   	movq	$-0x7ffddd80, 0x70(%rsp) # imm = 0x80022280
ffffffff800108de: 48 c7 44 24 78 18 00 00 00   	movq	$0x18, 0x78(%rsp)
ffffffff800108e7: 48 c7 84 24 80 00 00 00 80 22 02 80  	movq	$-0x7ffddd80, 0x80(%rsp) # imm = 0x80022280
ffffffff800108f3: 48 c7 84 24 88 00 00 00 18 00 00 00  	movq	$0x18, 0x88(%rsp)
ffffffff800108ff: 48 89 84 24 90 00 00 00      	movq	%rax, 0x90(%rsp)
ffffffff80010907: 48 8d 7c 24 10       	leaq	0x10(%rsp), %rdi
ffffffff8001090c: 48 8d 54 24 70       	leaq	0x70(%rsp), %rdx
ffffffff80010911: be 04 00 00 00       	movl	$0x4, %esi
ffffffff80010916: 31 c9                	xorl	%ecx, %ecx
ffffffff80010918: e8 f3 71 00 00       	callq	0xffffffff80017b10 <log::__private_api::log_impl::hbf977b1a5812fb97>
ffffffff8001091d: 8b 5c 24 0c          	movl	0xc(%rsp), %ebx
ffffffff80010921: 48 8b 44 24 40       	movq	0x40(%rsp), %rax
ffffffff80010926: f0                   	lock
ffffffff80010927: 48 ff 08             	decq	(%rax)
ffffffff8001092a: 0f 84 d2 fe ff ff    	je	0xffffffff80010802 <taos::processes::process::create_process::ha385fce1049c264a+0x402>
ffffffff80010930: e9 d7 fe ff ff       	jmp	0xffffffff8001080c <taos::processes::process::create_process::ha385fce1049c264a+0x40c>
ffffffff80010935: 48 c7 c7 20 62 02 80 	movq	$-0x7ffd9de0, %rdi      # imm = 0x80026220
ffffffff8001093c: e8 4f 24 ff ff       	callq	0xffffffff80002d90 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.14359069980145722807>
ffffffff80010941: e9 69 fb ff ff       	jmp	0xffffffff800104af <taos::processes::process::create_process::ha385fce1049c264a+0xaf>
ffffffff80010946: 48 c7 c7 00 62 02 80 	movq	$-0x7ffd9e00, %rdi      # imm = 0x80026200
ffffffff8001094d: e8 7e 18 ff ff       	callq	0xffffffff800021d0 <spin::once::Once<T,R>::try_call_once_slow::h2c9ba4a48035d004.llvm.14359069980145722807>
ffffffff80010952: e9 89 fb ff ff       	jmp	0xffffffff800104e0 <taos::processes::process::create_process::ha385fce1049c264a+0xe0>
ffffffff80010957: 48 c7 c7 20 62 02 80 	movq	$-0x7ffd9de0, %rdi      # imm = 0x80026220
ffffffff8001095e: e8 2d 24 ff ff       	callq	0xffffffff80002d90 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.14359069980145722807>
ffffffff80010963: e9 2e fc ff ff       	jmp	0xffffffff80010596 <taos::processes::process::create_process::ha385fce1049c264a+0x196>
ffffffff80010968: 48 c7 c7 20 62 02 80 	movq	$-0x7ffd9de0, %rdi      # imm = 0x80026220
ffffffff8001096f: e8 1c 24 ff ff       	callq	0xffffffff80002d90 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.14359069980145722807>
ffffffff80010974: e9 4e fc ff ff       	jmp	0xffffffff800105c7 <taos::processes::process::create_process::ha385fce1049c264a+0x1c7>
ffffffff80010979: 48 c7 c7 00 62 02 80 	movq	$-0x7ffd9e00, %rdi      # imm = 0x80026200
ffffffff80010980: e8 4b 18 ff ff       	callq	0xffffffff800021d0 <spin::once::Once<T,R>::try_call_once_slow::h2c9ba4a48035d004.llvm.14359069980145722807>
ffffffff80010985: e9 5d fc ff ff       	jmp	0xffffffff800105e7 <taos::processes::process::create_process::ha385fce1049c264a+0x1e7>
ffffffff8001098a: 48 c7 c7 00 64 02 80 	movq	$-0x7ffd9c00, %rdi      # imm = 0x80026400
ffffffff80010991: e8 fa 16 ff ff       	callq	0xffffffff80002090 <spin::once::Once<T,R>::try_call_once_slow::h18e40e08e0d1d65a.llvm.14359069980145722807>
ffffffff80010996: e9 71 fd ff ff       	jmp	0xffffffff8001070c <taos::processes::process::create_process::ha385fce1049c264a+0x30c>
ffffffff8001099b: be 36 00 00 00       	movl	$0x36, %esi
ffffffff800109a0: 48 c7 c7 70 21 02 80 	movq	$-0x7ffdde90, %rdi      # imm = 0x80022170
ffffffff800109a7: 48 c7 c2 08 22 02 80 	movq	$-0x7ffdddf8, %rdx      # imm = 0x80022208
ffffffff800109ae: e8 bd ba 00 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff800109b3: be 1d 00 00 00       	movl	$0x1d, %esi
ffffffff800109b8: 48 c7 c7 98 22 02 80 	movq	$-0x7ffddd68, %rdi      # imm = 0x80022298
ffffffff800109bf: 48 c7 c2 b8 22 02 80 	movq	$-0x7ffddd48, %rdx      # imm = 0x800222B8
ffffffff800109c6: e8 c5 bf 00 00       	callq	0xffffffff8001c990 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff800109cb: bf 08 00 00 00       	movl	$0x8, %edi
ffffffff800109d0: be c0 00 00 00       	movl	$0xc0, %esi
ffffffff800109d5: e8 88 86 00 00       	callq	0xffffffff80019062 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff800109da: 0f 0b                	ud2
ffffffff800109dc: 48 c7 44 24 10 50 f1 01 80   	movq	$-0x7ffe0eb0, 0x10(%rsp) # imm = 0x8001F150
ffffffff800109e5: 48 c7 44 24 18 01 00 00 00   	movq	$0x1, 0x18(%rsp)
ffffffff800109ee: 48 c7 44 24 30 00 00 00 00   	movq	$0x0, 0x30(%rsp)
ffffffff800109f7: 48 c7 44 24 20 08 00 00 00   	movq	$0x8, 0x20(%rsp)
ffffffff80010a00: 48 c7 44 24 28 00 00 00 00   	movq	$0x0, 0x28(%rsp)
ffffffff80010a09: 48 8d 7c 24 10       	leaq	0x10(%rsp), %rdi
ffffffff80010a0e: 48 c7 c6 80 f1 01 80 	movq	$-0x7ffe0e80, %rsi      # imm = 0x8001F180
ffffffff80010a15: e8 d6 b9 00 00       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff80010a1a: cc                   	int3
ffffffff80010a1b: cc                   	int3
ffffffff80010a1c: cc                   	int3
ffffffff80010a1d: cc                   	int3
ffffffff80010a1e: cc                   	int3
ffffffff80010a1f: cc                   	int3

ffffffff80010a20 <taos::processes::process::free_page_table::h2635cc42af21bb35>:
ffffffff80010a20: 55                   	pushq	%rbp
ffffffff80010a21: 41 57                	pushq	%r15
ffffffff80010a23: 41 56                	pushq	%r14
ffffffff80010a25: 41 55                	pushq	%r13
ffffffff80010a27: 41 54                	pushq	%r12
ffffffff80010a29: 53                   	pushq	%rbx
ffffffff80010a2a: 50                   	pushq	%rax
ffffffff80010a2b: 48 89 d3             	movq	%rdx, %rbx
ffffffff80010a2e: 49 bc 00 f0 ff ff ff ff 0f 00	movabsq	$0xffffffffff000, %r12 # imm = 0xFFFFFFFFFF000
ffffffff80010a38: 48 89 3c 24          	movq	%rdi, (%rsp)
ffffffff80010a3c: 4c 8d 2c 39          	leaq	(%rcx,%rdi), %r13
ffffffff80010a40: 40 80 fe 01          	cmpb	$0x1, %sil
ffffffff80010a44: 76 4b                	jbe	0xffffffff80010a91 <taos::processes::process::free_page_table::h2635cc42af21bb35+0x71>
ffffffff80010a46: 49 89 cf             	movq	%rcx, %r15
ffffffff80010a49: 40 fe ce             	decb	%sil
ffffffff80010a4c: 45 31 f6             	xorl	%r14d, %r14d
ffffffff80010a4f: 40 0f b6 ee          	movzbl	%sil, %ebp
ffffffff80010a53: eb 17                	jmp	0xffffffff80010a6c <taos::processes::process::free_page_table::h2635cc42af21bb35+0x4c>
ffffffff80010a55: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff80010a60: 49 ff c6             	incq	%r14
ffffffff80010a63: 49 81 fe 00 02 00 00 	cmpq	$0x200, %r14            # imm = 0x200
ffffffff80010a6a: 74 60                	je	0xffffffff80010acc <taos::processes::process::free_page_table::h2635cc42af21bb35+0xac>
ffffffff80010a6c: 4b 8b 7c f5 00       	movq	(%r13,%r14,8), %rdi
ffffffff80010a71: 48 85 ff             	testq	%rdi, %rdi
ffffffff80010a74: 74 ea                	je	0xffffffff80010a60 <taos::processes::process::free_page_table::h2635cc42af21bb35+0x40>
ffffffff80010a76: 4c 21 e7             	andq	%r12, %rdi
ffffffff80010a79: 89 ee                	movl	%ebp, %esi
ffffffff80010a7b: 48 89 da             	movq	%rbx, %rdx
ffffffff80010a7e: 4c 89 f9             	movq	%r15, %rcx
ffffffff80010a81: e8 9a ff ff ff       	callq	0xffffffff80010a20 <taos::processes::process::free_page_table::h2635cc42af21bb35>
ffffffff80010a86: 4b c7 44 f5 00 00 00 00 00   	movq	$0x0, (%r13,%r14,8)
ffffffff80010a8f: eb cf                	jmp	0xffffffff80010a60 <taos::processes::process::free_page_table::h2635cc42af21bb35+0x40>
ffffffff80010a91: 45 31 f6             	xorl	%r14d, %r14d
ffffffff80010a94: eb 16                	jmp	0xffffffff80010aac <taos::processes::process::free_page_table::h2635cc42af21bb35+0x8c>
ffffffff80010a96: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
ffffffff80010aa0: 49 ff c6             	incq	%r14
ffffffff80010aa3: 49 81 fe 00 02 00 00 	cmpq	$0x200, %r14            # imm = 0x200
ffffffff80010aaa: 74 20                	je	0xffffffff80010acc <taos::processes::process::free_page_table::h2635cc42af21bb35+0xac>
ffffffff80010aac: 4b 8b 74 f5 00       	movq	(%r13,%r14,8), %rsi
ffffffff80010ab1: 48 85 f6             	testq	%rsi, %rsi
ffffffff80010ab4: 74 ea                	je	0xffffffff80010aa0 <taos::processes::process::free_page_table::h2635cc42af21bb35+0x80>
ffffffff80010ab6: 4c 21 e6             	andq	%r12, %rsi
ffffffff80010ab9: 48 89 df             	movq	%rbx, %rdi
ffffffff80010abc: e8 8f b9 ff ff       	callq	0xffffffff8000c450 <<taos::memory::frame_allocator::GlobalFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::hcfaf6e33df90393d>
ffffffff80010ac1: 4b c7 44 f5 00 00 00 00 00   	movq	$0x0, (%r13,%r14,8)
ffffffff80010aca: eb d4                	jmp	0xffffffff80010aa0 <taos::processes::process::free_page_table::h2635cc42af21bb35+0x80>
ffffffff80010acc: 48 89 df             	movq	%rbx, %rdi
ffffffff80010acf: 48 8b 34 24          	movq	(%rsp), %rsi
ffffffff80010ad3: 48 83 c4 08          	addq	$0x8, %rsp
ffffffff80010ad7: 5b                   	popq	%rbx
ffffffff80010ad8: 41 5c                	popq	%r12
ffffffff80010ada: 41 5d                	popq	%r13
ffffffff80010adc: 41 5e                	popq	%r14
ffffffff80010ade: 41 5f                	popq	%r15
ffffffff80010ae0: 5d                   	popq	%rbp
ffffffff80010ae1: e9 6a b9 ff ff       	jmp	0xffffffff8000c450 <<taos::memory::frame_allocator::GlobalFrameAllocator as x86_64::structures::paging::frame_alloc::FrameDeallocator<x86_64::structures::paging::page::Size4KiB>>::deallocate_frame::hcfaf6e33df90393d>
ffffffff80010ae6: cc                   	int3
ffffffff80010ae7: cc                   	int3
ffffffff80010ae8: cc                   	int3
ffffffff80010ae9: cc                   	int3
ffffffff80010aea: cc                   	int3
ffffffff80010aeb: cc                   	int3
ffffffff80010aec: cc                   	int3
ffffffff80010aed: cc                   	int3
ffffffff80010aee: cc                   	int3
ffffffff80010aef: cc                   	int3

ffffffff80010af0 <get_ring_0_rsp>:
ffffffff80010af0: 53                   	pushq	%rbx
ffffffff80010af1: b9 02 08 00 00       	movl	$0x802, %ecx            # imm = 0x802
ffffffff80010af6: 0f 32                	rdmsr
ffffffff80010af8: 48 c1 e2 20          	shlq	$0x20, %rdx
ffffffff80010afc: 89 c3                	movl	%eax, %ebx
ffffffff80010afe: 48 09 d3             	orq	%rdx, %rbx
ffffffff80010b01: 0f b6 05 88 58 01 00 	movzbl	0x15888(%rip), %eax     # 0xffffffff80026390 <<taos::interrupts::gdt::TSSS as core::ops::deref::Deref>::deref::__stability::LAZY::h1d4821f1ca9c6a27.llvm.4978740807361014121+0xd0>
ffffffff80010b08: 3c 02                	cmpb	$0x2, %al
ffffffff80010b0a: 75 13                	jne	0xffffffff80010b1f <get_ring_0_rsp+0x2f>
ffffffff80010b0c: 48 83 fb 01          	cmpq	$0x1, %rbx
ffffffff80010b10: 77 1f                	ja	0xffffffff80010b31 <get_ring_0_rsp+0x41>
ffffffff80010b12: 48 6b c3 68          	imulq	$0x68, %rbx, %rax
ffffffff80010b16: 48 8b 80 c4 62 02 80 	movq	-0x7ffd9d3c(%rax), %rax
ffffffff80010b1d: 5b                   	popq	%rbx
ffffffff80010b1e: c3                   	retq
ffffffff80010b1f: 48 c7 c7 c0 62 02 80 	movq	$-0x7ffd9d40, %rdi      # imm = 0x800262C0
ffffffff80010b26: e8 35 0b ff ff       	callq	0xffffffff80001660 <spin::once::Once<T,R>::try_call_once_slow::h0e8b40bf3c019c33.llvm.14359069980145722807>
ffffffff80010b2b: 48 83 fb 01          	cmpq	$0x1, %rbx
ffffffff80010b2f: 76 e1                	jbe	0xffffffff80010b12 <get_ring_0_rsp+0x22>
ffffffff80010b31: be 02 00 00 00       	movl	$0x2, %esi
ffffffff80010b36: 48 89 df             	movq	%rbx, %rdi
ffffffff80010b39: 48 c7 c2 d0 22 02 80 	movq	$-0x7ffddd30, %rdx      # imm = 0x800222D0
ffffffff80010b40: e8 74 b9 00 00       	callq	0xffffffff8001c4b9 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff80010b45: cc                   	int3
ffffffff80010b46: cc                   	int3
ffffffff80010b47: cc                   	int3
ffffffff80010b48: cc                   	int3
ffffffff80010b49: cc                   	int3
ffffffff80010b4a: cc                   	int3
ffffffff80010b4b: cc                   	int3
ffffffff80010b4c: cc                   	int3
ffffffff80010b4d: cc                   	int3
ffffffff80010b4e: cc                   	int3
ffffffff80010b4f: cc                   	int3

ffffffff80010b50 <syscall_handler_impl>:
ffffffff80010b50: 41 56                	pushq	%r14
ffffffff80010b52: 53                   	pushq	%rbx
ffffffff80010b53: 48 83 ec 58          	subq	$0x58, %rsp
ffffffff80010b57: 48 89 fb             	movq	%rdi, %rbx
ffffffff80010b5a: 48 89 7c 24 08       	movq	%rdi, 0x8(%rsp)
ffffffff80010b5f: 48 c7 44 24 10 c0 b8 01 80   	movq	$-0x7ffe4740, 0x10(%rsp) # imm = 0x8001B8C0
ffffffff80010b68: 48 c7 44 24 18 f8 22 02 80   	movq	$-0x7ffddd08, 0x18(%rsp) # imm = 0x800222F8
ffffffff80010b71: 48 c7 44 24 20 02 00 00 00   	movq	$0x2, 0x20(%rsp)
ffffffff80010b7a: 48 c7 44 24 38 00 00 00 00   	movq	$0x0, 0x38(%rsp)
ffffffff80010b83: 4c 8d 74 24 08       	leaq	0x8(%rsp), %r14
ffffffff80010b88: 4c 89 74 24 28       	movq	%r14, 0x28(%rsp)
ffffffff80010b8d: 48 c7 44 24 30 01 00 00 00   	movq	$0x1, 0x30(%rsp)
ffffffff80010b96: 48 8d 7c 24 18       	leaq	0x18(%rsp), %rdi
ffffffff80010b9b: e8 b0 a6 ff ff       	callq	0xffffffff8000b250 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff80010ba0: 8b 03                	movl	(%rbx), %eax
ffffffff80010ba2: 83 f8 01             	cmpl	$0x1, %eax
ffffffff80010ba5: 0f 84 93 00 00 00    	je	0xffffffff80010c3e <syscall_handler_impl+0xee>
ffffffff80010bab: 83 f8 03             	cmpl	$0x3, %eax
ffffffff80010bae: 0f 85 9b 00 00 00    	jne	0xffffffff80010c4f <syscall_handler_impl+0xff>
ffffffff80010bb4: 48 8b 5b 08          	movq	0x8(%rbx), %rbx
ffffffff80010bb8: 48 89 df             	movq	%rbx, %rdi
ffffffff80010bbb: e8 b0 be 00 00       	callq	0xffffffff8001ca70 <strlen>
ffffffff80010bc0: 48 8d 50 01          	leaq	0x1(%rax), %rdx
ffffffff80010bc4: 48 8d 7c 24 18       	leaq	0x18(%rsp), %rdi
ffffffff80010bc9: 48 89 de             	movq	%rbx, %rsi
ffffffff80010bcc: e8 8f b3 00 00       	callq	0xffffffff8001bf60 <core::ffi::c_str::CStr::to_str::hb93d7efd1cbb2ca0>
ffffffff80010bd1: 83 7c 24 18 01       	cmpl	$0x1, 0x18(%rsp)
ffffffff80010bd6: 0f 84 bb 00 00 00    	je	0xffffffff80010c97 <syscall_handler_impl+0x147>
ffffffff80010bdc: 48 8b 44 24 20       	movq	0x20(%rsp), %rax
ffffffff80010be1: 48 8b 4c 24 28       	movq	0x28(%rsp), %rcx
ffffffff80010be6: 48 89 44 24 48       	movq	%rax, 0x48(%rsp)
ffffffff80010beb: 48 89 4c 24 50       	movq	%rcx, 0x50(%rsp)
ffffffff80010bf0: 48 8d 44 24 48       	leaq	0x48(%rsp), %rax
ffffffff80010bf5: 48 89 44 24 08       	movq	%rax, 0x8(%rsp)
ffffffff80010bfa: 48 c7 44 24 10 f0 02 00 80   	movq	$-0x7ffffd10, 0x10(%rsp) # imm = 0x800002F0
ffffffff80010c03: 48 c7 44 24 18 20 24 02 80   	movq	$-0x7ffddbe0, 0x18(%rsp) # imm = 0x80022420
ffffffff80010c0c: 48 c7 44 24 20 02 00 00 00   	movq	$0x2, 0x20(%rsp)
ffffffff80010c15: 48 c7 44 24 38 00 00 00 00   	movq	$0x0, 0x38(%rsp)
ffffffff80010c1e: 4c 89 74 24 28       	movq	%r14, 0x28(%rsp)
ffffffff80010c23: 48 c7 44 24 30 01 00 00 00   	movq	$0x1, 0x30(%rsp)
ffffffff80010c2c: 48 8d 7c 24 18       	leaq	0x18(%rsp), %rdi
ffffffff80010c31: e8 1a a6 ff ff       	callq	0xffffffff8000b250 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff80010c36: 48 83 c4 58          	addq	$0x58, %rsp
ffffffff80010c3a: 5b                   	popq	%rbx
ffffffff80010c3b: 41 5e                	popq	%r14
ffffffff80010c3d: c3                   	retq
ffffffff80010c3e: 48 8b 7b 08          	movq	0x8(%rbx), %rdi
ffffffff80010c42: e8 89 00 00 00       	callq	0xffffffff80010cd0 <taos::syscalls::syscall_handlers::sys_exit::h32fe19e9a1355d1a>
ffffffff80010c47: 48 83 c4 58          	addq	$0x58, %rsp
ffffffff80010c4b: 5b                   	popq	%rbx
ffffffff80010c4c: 41 5e                	popq	%r14
ffffffff80010c4e: c3                   	retq
ffffffff80010c4f: 48 89 5c 24 08       	movq	%rbx, 0x8(%rsp)
ffffffff80010c54: 48 c7 44 24 10 c0 b8 01 80   	movq	$-0x7ffe4740, 0x10(%rsp) # imm = 0x8001B8C0
ffffffff80010c5d: 48 c7 44 24 18 30 23 02 80   	movq	$-0x7ffddcd0, 0x18(%rsp) # imm = 0x80022330
ffffffff80010c66: 48 c7 44 24 20 01 00 00 00   	movq	$0x1, 0x20(%rsp)
ffffffff80010c6f: 48 c7 44 24 38 00 00 00 00   	movq	$0x0, 0x38(%rsp)
ffffffff80010c78: 4c 89 74 24 28       	movq	%r14, 0x28(%rsp)
ffffffff80010c7d: 48 c7 44 24 30 01 00 00 00   	movq	$0x1, 0x30(%rsp)
ffffffff80010c86: 48 8d 7c 24 18       	leaq	0x18(%rsp), %rdi
ffffffff80010c8b: 48 c7 c6 40 23 02 80 	movq	$-0x7ffddcc0, %rsi      # imm = 0x80022340
ffffffff80010c92: e8 59 b7 00 00       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff80010c97: 48 8b 44 24 20       	movq	0x20(%rsp), %rax
ffffffff80010c9c: 48 8b 4c 24 28       	movq	0x28(%rsp), %rcx
ffffffff80010ca1: 48 89 4c 24 10       	movq	%rcx, 0x10(%rsp)
ffffffff80010ca6: 48 89 44 24 08       	movq	%rax, 0x8(%rsp)
ffffffff80010cab: 48 8d 54 24 08       	leaq	0x8(%rsp), %rdx
ffffffff80010cb0: be 14 00 00 00       	movl	$0x14, %esi
ffffffff80010cb5: 48 c7 c7 60 24 02 80 	movq	$-0x7ffddba0, %rdi      # imm = 0x80022460
ffffffff80010cbc: 48 c7 c1 40 24 02 80 	movq	$-0x7ffddbc0, %rcx      # imm = 0x80022440
ffffffff80010cc3: 49 c7 c0 78 24 02 80 	movq	$-0x7ffddb88, %r8       # imm = 0x80022478
ffffffff80010cca: e8 11 b2 00 00       	callq	0xffffffff8001bee0 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff80010ccf: cc                   	int3

ffffffff80010cd0 <taos::syscalls::syscall_handlers::sys_exit::h32fe19e9a1355d1a>:
ffffffff80010cd0: 41 57                	pushq	%r15
ffffffff80010cd2: 41 56                	pushq	%r14
ffffffff80010cd4: 41 54                	pushq	%r12
ffffffff80010cd6: 53                   	pushq	%rbx
ffffffff80010cd7: 48 83 ec 68          	subq	$0x68, %rsp
ffffffff80010cdb: 48 89 7c 24 40       	movq	%rdi, 0x40(%rsp)
ffffffff80010ce0: b9 02 08 00 00       	movl	$0x802, %ecx            # imm = 0x802
ffffffff80010ce5: 0f 32                	rdmsr
ffffffff80010ce7: 89 c7                	movl	%eax, %edi
ffffffff80010ce9: e8 92 9c ff ff       	callq	0xffffffff8000a980 <taos::events::current_running_event_info::h26232e862fef7a5d>
ffffffff80010cee: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff80010cf3: 48 8d 44 24 38       	leaq	0x38(%rsp), %rax
ffffffff80010cf8: 89 54 24 38          	movl	%edx, 0x38(%rsp)
ffffffff80010cfc: 48 89 44 24 48       	movq	%rax, 0x48(%rsp)
ffffffff80010d01: 48 c7 44 24 50 a0 b7 01 80   	movq	$-0x7ffe4860, 0x50(%rsp) # imm = 0x8001B7A0
ffffffff80010d0a: 48 8d 44 24 40       	leaq	0x40(%rsp), %rax
ffffffff80010d0f: 48 89 44 24 58       	movq	%rax, 0x58(%rsp)
ffffffff80010d14: 48 c7 44 24 60 c0 b8 01 80   	movq	$-0x7ffe4740, 0x60(%rsp) # imm = 0x8001B8C0
ffffffff80010d1d: 48 c7 04 24 70 23 02 80      	movq	$-0x7ffddc90, (%rsp) # imm = 0x80022370
ffffffff80010d25: 48 c7 44 24 08 03 00 00 00   	movq	$0x3, 0x8(%rsp)
ffffffff80010d2e: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff80010d37: 48 8d 44 24 48       	leaq	0x48(%rsp), %rax
ffffffff80010d3c: 48 89 44 24 10       	movq	%rax, 0x10(%rsp)
ffffffff80010d41: 48 c7 44 24 18 02 00 00 00   	movq	$0x2, 0x18(%rsp)
ffffffff80010d4a: 48 89 e7             	movq	%rsp, %rdi
ffffffff80010d4d: e8 fe a4 ff ff       	callq	0xffffffff8000b250 <taos::devices::serial::_print::h2727b219b98997eb>
ffffffff80010d52: 83 7c 24 38 00       	cmpl	$0x0, 0x38(%rsp)
ffffffff80010d57: 0f 84 2b 02 00 00    	je	0xffffffff80010f88 <taos::syscalls::syscall_handlers::sys_exit::h32fe19e9a1355d1a+0x2b8>
ffffffff80010d5d: 0f b6 05 a4 56 01 00 	movzbl	0x156a4(%rip), %eax     # 0xffffffff80026408 <_ZN83_$LT$taos..processes..process..PROCESS_TABLE$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17he905a56e6b762301E.llvm.4978740807361014121+0x8>
ffffffff80010d64: 3c 02                	cmpb	$0x2, %al
ffffffff80010d66: 0f 85 e9 01 00 00    	jne	0xffffffff80010f55 <taos::syscalls::syscall_handlers::sys_exit::h32fe19e9a1355d1a+0x285>
ffffffff80010d6c: 48 8b 1d 8d 56 01 00 	movq	0x1568d(%rip), %rbx     # 0xffffffff80026400 <_ZN83_$LT$taos..processes..process..PROCESS_TABLE$u20$as$u20$core..ops..deref..Deref$GT$5deref11__stability4LAZY17he905a56e6b762301E.llvm.4978740807361014121>
ffffffff80010d73: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff80010d78: 31 c0                	xorl	%eax, %eax
ffffffff80010d7a: f0                   	lock
ffffffff80010d7b: 48 0f b1 4b 10       	cmpxchgq	%rcx, 0x10(%rbx)
ffffffff80010d80: 74 1a                	je	0xffffffff80010d9c <taos::syscalls::syscall_handlers::sys_exit::h32fe19e9a1355d1a+0xcc>
ffffffff80010d82: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
ffffffff80010d90: f3 90                	pause
ffffffff80010d92: 31 c0                	xorl	%eax, %eax
ffffffff80010d94: f0                   	lock
ffffffff80010d95: 48 0f b1 4b 10       	cmpxchgq	%rcx, 0x10(%rbx)
ffffffff80010d9a: 75 f4                	jne	0xffffffff80010d90 <taos::syscalls::syscall_handlers::sys_exit::h32fe19e9a1355d1a+0xc0>
ffffffff80010d9c: 48 8b 43 18          	movq	0x18(%rbx), %rax
ffffffff80010da0: 48 85 c0             	testq	%rax, %rax
ffffffff80010da3: 0f 84 32 02 00 00    	je	0xffffffff80010fdb <taos::syscalls::syscall_handlers::sys_exit::h32fe19e9a1355d1a+0x30b>
ffffffff80010da9: 4c 8d 73 18          	leaq	0x18(%rbx), %r14
ffffffff80010dad: 48 8b 4b 20          	movq	0x20(%rbx), %rcx
ffffffff80010db1: 8b 54 24 38          	movl	0x38(%rsp), %edx
ffffffff80010db5: be ff 00 00 00       	movl	$0xff, %esi
ffffffff80010dba: 44 0f b7 80 8e 00 00 00      	movzwl	0x8e(%rax), %r8d
ffffffff80010dc2: 45 89 c1             	movl	%r8d, %r9d
ffffffff80010dc5: 41 c1 e1 02          	shll	$0x2, %r9d
ffffffff80010dc9: 48 c7 c7 ff ff ff ff 	movq	$-0x1, %rdi
ffffffff80010dd0: 4d 85 c9             	testq	%r9, %r9
ffffffff80010dd3: 74 2b                	je	0xffffffff80010e00 <taos::syscalls::syscall_handlers::sys_exit::h32fe19e9a1355d1a+0x130>
ffffffff80010dd5: 45 31 d2             	xorl	%r10d, %r10d
ffffffff80010dd8: 39 54 b8 64          	cmpl	%edx, 0x64(%rax,%rdi,4)
ffffffff80010ddc: 41 0f 95 c2          	setne	%r10b
ffffffff80010de0: 44 0f 47 d6          	cmoval	%esi, %r10d
ffffffff80010de4: 48 ff c7             	incq	%rdi
ffffffff80010de7: 49 83 c1 fc          	addq	$-0x4, %r9
ffffffff80010deb: 41 80 fa 01          	cmpb	$0x1, %r10b
ffffffff80010def: 74 df                	je	0xffffffff80010dd0 <taos::syscalls::syscall_handlers::sys_exit::h32fe19e9a1355d1a+0x100>
ffffffff80010df1: 45 0f b6 c2          	movzbl	%r10b, %r8d
ffffffff80010df5: 45 85 c0             	testl	%r8d, %r8d
ffffffff80010df8: 74 1d                	je	0xffffffff80010e17 <taos::syscalls::syscall_handlers::sys_exit::h32fe19e9a1355d1a+0x147>
ffffffff80010dfa: eb 07                	jmp	0xffffffff80010e03 <taos::syscalls::syscall_handlers::sys_exit::h32fe19e9a1355d1a+0x133>
ffffffff80010dfc: 0f 1f 40 00          	nopl	(%rax)
ffffffff80010e00: 4c 89 c7             	movq	%r8, %rdi
ffffffff80010e03: 48 83 e9 01          	subq	$0x1, %rcx
ffffffff80010e07: 0f 82 ce 01 00 00    	jb	0xffffffff80010fdb <taos::syscalls::syscall_handlers::sys_exit::h32fe19e9a1355d1a+0x30b>
ffffffff80010e0d: 48 8b 84 f8 90 00 00 00      	movq	0x90(%rax,%rdi,8), %rax
ffffffff80010e15: eb a3                	jmp	0xffffffff80010dba <taos::syscalls::syscall_handlers::sys_exit::h32fe19e9a1355d1a+0xea>
ffffffff80010e17: 4c 8b 7c f8 08       	movq	0x8(%rax,%rdi,8), %r15
ffffffff80010e1c: 41 c6 87 bc 00 00 00 04      	movb	$0x4, 0xbc(%r15)
ffffffff80010e24: 4d 8b a7 b0 00 00 00 	movq	0xb0(%r15), %r12
ffffffff80010e2b: 4c 89 64 24 48       	movq	%r12, 0x48(%rsp)
ffffffff80010e30: 0f b6 05 f1 53 01 00 	movzbl	0x153f1(%rip), %eax     # 0xffffffff80026228 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.6482013028561868880+0x8>
ffffffff80010e37: 3c 02                	cmpb	$0x2, %al
ffffffff80010e39: 0f 85 27 01 00 00    	jne	0xffffffff80010f66 <taos::syscalls::syscall_handlers::sys_exit::h32fe19e9a1355d1a+0x296>
ffffffff80010e3f: 4c 03 25 da 53 01 00 	addq	0x153da(%rip), %r12     # 0xffffffff80026220 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.6482013028561868880>
ffffffff80010e46: 48 b8 00 00 00 00 00 80 00 00	movabsq	$0x800000000000, %rax # imm = 0x800000000000
ffffffff80010e50: 4c 01 e0             	addq	%r12, %rax
ffffffff80010e53: 48 c1 e8 30          	shrq	$0x30, %rax
ffffffff80010e57: 0f 85 66 01 00 00    	jne	0xffffffff80010fc3 <taos::syscalls::syscall_handlers::sys_exit::h32fe19e9a1355d1a+0x2f3>
ffffffff80010e5d: 0f b6 05 c4 53 01 00 	movzbl	0x153c4(%rip), %eax     # 0xffffffff80026228 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.6482013028561868880+0x8>
ffffffff80010e64: 3c 02                	cmpb	$0x2, %al
ffffffff80010e66: 0f 85 0b 01 00 00    	jne	0xffffffff80010f77 <taos::syscalls::syscall_handlers::sys_exit::h32fe19e9a1355d1a+0x2a7>
ffffffff80010e6c: 48 8b 05 ad 53 01 00 	movq	0x153ad(%rip), %rax     # 0xffffffff80026220 <<taos::memory::HHDM_OFFSET as core::ops::deref::Deref>::deref::__stability::LAZY::ha8ea49edc752025e.llvm.6482013028561868880>
ffffffff80010e73: 4c 89 24 24          	movq	%r12, (%rsp)
ffffffff80010e77: 48 89 44 24 08       	movq	%rax, 0x8(%rsp)
ffffffff80010e7c: 48 89 e7             	movq	%rsp, %rdi
ffffffff80010e7f: 48 8d 74 24 48       	leaq	0x48(%rsp), %rsi
ffffffff80010e84: e8 87 b6 ff ff       	callq	0xffffffff8000c510 <taos::memory::frame_allocator::with_generic_allocator::h19f2dcf74e209599>
ffffffff80010e89: 49 8b 06             	movq	(%r14), %rax
ffffffff80010e8c: 48 85 c0             	testq	%rax, %rax
ffffffff80010e8f: 0f 84 a0 00 00 00    	je	0xffffffff80010f35 <taos::syscalls::syscall_handlers::sys_exit::h32fe19e9a1355d1a+0x265>
ffffffff80010e95: 48 8b 4b 20          	movq	0x20(%rbx), %rcx
ffffffff80010e99: 8b 54 24 38          	movl	0x38(%rsp), %edx
ffffffff80010e9d: be ff 00 00 00       	movl	$0xff, %esi
ffffffff80010ea2: 44 0f b7 80 8e 00 00 00      	movzwl	0x8e(%rax), %r8d
ffffffff80010eaa: 45 89 c1             	movl	%r8d, %r9d
ffffffff80010ead: 41 c1 e1 02          	shll	$0x2, %r9d
ffffffff80010eb1: 48 c7 c7 ff ff ff ff 	movq	$-0x1, %rdi
ffffffff80010eb8: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
ffffffff80010ec0: 4d 85 c9             	testq	%r9, %r9
ffffffff80010ec3: 74 2b                	je	0xffffffff80010ef0 <taos::syscalls::syscall_handlers::sys_exit::h32fe19e9a1355d1a+0x220>
ffffffff80010ec5: 45 31 d2             	xorl	%r10d, %r10d
ffffffff80010ec8: 39 54 b8 64          	cmpl	%edx, 0x64(%rax,%rdi,4)
ffffffff80010ecc: 41 0f 95 c2          	setne	%r10b
ffffffff80010ed0: 44 0f 47 d6          	cmoval	%esi, %r10d
ffffffff80010ed4: 48 ff c7             	incq	%rdi
ffffffff80010ed7: 49 83 c1 fc          	addq	$-0x4, %r9
ffffffff80010edb: 41 80 fa 01          	cmpb	$0x1, %r10b
ffffffff80010edf: 74 df                	je	0xffffffff80010ec0 <taos::syscalls::syscall_handlers::sys_exit::h32fe19e9a1355d1a+0x1f0>
ffffffff80010ee1: 45 0f b6 c2          	movzbl	%r10b, %r8d
ffffffff80010ee5: 45 85 c0             	testl	%r8d, %r8d
ffffffff80010ee8: 74 19                	je	0xffffffff80010f03 <taos::syscalls::syscall_handlers::sys_exit::h32fe19e9a1355d1a+0x233>
ffffffff80010eea: eb 07                	jmp	0xffffffff80010ef3 <taos::syscalls::syscall_handlers::sys_exit::h32fe19e9a1355d1a+0x223>
ffffffff80010eec: 0f 1f 40 00          	nopl	(%rax)
ffffffff80010ef0: 4c 89 c7             	movq	%r8, %rdi
ffffffff80010ef3: 48 83 e9 01          	subq	$0x1, %rcx
ffffffff80010ef7: 72 3c                	jb	0xffffffff80010f35 <taos::syscalls::syscall_handlers::sys_exit::h32fe19e9a1355d1a+0x265>
ffffffff80010ef9: 48 8b 84 f8 90 00 00 00      	movq	0x90(%rax,%rdi,8), %rax
ffffffff80010f01: eb 9f                	jmp	0xffffffff80010ea2 <taos::syscalls::syscall_handlers::sys_exit::h32fe19e9a1355d1a+0x1d2>
ffffffff80010f03: 48 89 04 24          	movq	%rax, (%rsp)
ffffffff80010f07: 48 89 4c 24 08       	movq	%rcx, 0x8(%rsp)
ffffffff80010f0c: 48 89 7c 24 10       	movq	%rdi, 0x10(%rsp)
ffffffff80010f11: 4c 89 74 24 18       	movq	%r14, 0x18(%rsp)
ffffffff80010f16: 48 89 e7             	movq	%rsp, %rdi
ffffffff80010f19: e8 82 2f ff ff       	callq	0xffffffff80003ea0 <alloc::collections::btree::map::entry::OccupiedEntry<K,V,A>::remove_kv::ha3f2fcf3897ae665>
ffffffff80010f1e: 48 89 14 24          	movq	%rdx, (%rsp)
ffffffff80010f22: 48 85 d2             	testq	%rdx, %rdx
ffffffff80010f25: 74 0e                	je	0xffffffff80010f35 <taos::syscalls::syscall_handlers::sys_exit::h32fe19e9a1355d1a+0x265>
ffffffff80010f27: f0                   	lock
ffffffff80010f28: 48 ff 0a             	decq	(%rdx)
ffffffff80010f2b: 75 08                	jne	0xffffffff80010f35 <taos::syscalls::syscall_handlers::sys_exit::h32fe19e9a1355d1a+0x265>
ffffffff80010f2d: 48 89 e7             	movq	%rsp, %rdi
ffffffff80010f30: e8 bb af ff ff       	callq	0xffffffff8000bef0 <alloc::sync::Arc<T,A>::drop_slow::h15438cbba4242f58>
ffffffff80010f35: 49 8b 47 10          	movq	0x10(%r15), %rax
ffffffff80010f39: 49 8b 4f 18          	movq	0x18(%r15), %rcx
ffffffff80010f3d: f0                   	lock
ffffffff80010f3e: 48 83 63 10 fc       	andq	$-0x4, 0x10(%rbx)
ffffffff80010f43: 48 89 c4             	movq	%rax, %rsp
ffffffff80010f46: 51                   	pushq	%rcx
ffffffff80010f47: f9                   	stc
ffffffff80010f48: c3                   	retq
ffffffff80010f49: 48 83 c4 68          	addq	$0x68, %rsp
ffffffff80010f4d: 5b                   	popq	%rbx
ffffffff80010f4e: 41 5c                	popq	%r12
ffffffff80010f50: 41 5e                	popq	%r14
ffffffff80010f52: 41 5f                	popq	%r15
ffffffff80010f54: c3                   	retq
ffffffff80010f55: 48 c7 c7 00 64 02 80 	movq	$-0x7ffd9c00, %rdi      # imm = 0x80026400
ffffffff80010f5c: e8 2f 11 ff ff       	callq	0xffffffff80002090 <spin::once::Once<T,R>::try_call_once_slow::h18e40e08e0d1d65a.llvm.14359069980145722807>
ffffffff80010f61: e9 06 fe ff ff       	jmp	0xffffffff80010d6c <taos::syscalls::syscall_handlers::sys_exit::h32fe19e9a1355d1a+0x9c>
ffffffff80010f66: 48 c7 c7 20 62 02 80 	movq	$-0x7ffd9de0, %rdi      # imm = 0x80026220
ffffffff80010f6d: e8 1e 1e ff ff       	callq	0xffffffff80002d90 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.14359069980145722807>
ffffffff80010f72: e9 c8 fe ff ff       	jmp	0xffffffff80010e3f <taos::syscalls::syscall_handlers::sys_exit::h32fe19e9a1355d1a+0x16f>
ffffffff80010f77: 48 c7 c7 20 62 02 80 	movq	$-0x7ffd9de0, %rdi      # imm = 0x80026220
ffffffff80010f7e: e8 0d 1e ff ff       	callq	0xffffffff80002d90 <spin::once::Once<T,R>::try_call_once_slow::hc2b91daec250f938.llvm.14359069980145722807>
ffffffff80010f83: e9 e4 fe ff ff       	jmp	0xffffffff80010e6c <taos::syscalls::syscall_handlers::sys_exit::h32fe19e9a1355d1a+0x19c>
ffffffff80010f88: 48 c7 04 24 c8 23 02 80      	movq	$-0x7ffddc38, (%rsp) # imm = 0x800223C8
ffffffff80010f90: 48 c7 44 24 08 01 00 00 00   	movq	$0x1, 0x8(%rsp)
ffffffff80010f99: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff80010fa2: 48 c7 44 24 10 08 00 00 00   	movq	$0x8, 0x10(%rsp)
ffffffff80010fab: 48 c7 44 24 18 00 00 00 00   	movq	$0x0, 0x18(%rsp)
ffffffff80010fb4: 48 89 e7             	movq	%rsp, %rdi
ffffffff80010fb7: 48 c7 c6 d8 23 02 80 	movq	$-0x7ffddc28, %rsi      # imm = 0x800223D8
ffffffff80010fbe: e8 2d b4 00 00       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff80010fc3: be 36 00 00 00       	movl	$0x36, %esi
ffffffff80010fc8: 48 c7 c7 70 21 02 80 	movq	$-0x7ffdde90, %rdi      # imm = 0x80022170
ffffffff80010fcf: 48 c7 c2 08 22 02 80 	movq	$-0x7ffdddf8, %rdx      # imm = 0x80022208
ffffffff80010fd6: e8 95 b4 00 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80010fdb: be 11 00 00 00       	movl	$0x11, %esi
ffffffff80010fe0: 48 c7 c7 f0 23 02 80 	movq	$-0x7ffddc10, %rdi      # imm = 0x800223F0
ffffffff80010fe7: 48 c7 c2 08 24 02 80 	movq	$-0x7ffddbf8, %rdx      # imm = 0x80022408
ffffffff80010fee: e8 9d b9 00 00       	callq	0xffffffff8001c990 <core::option::expect_failed::h9503e6b4ddc453dd>
ffffffff80010ff3: cc                   	int3
ffffffff80010ff4: cc                   	int3
ffffffff80010ff5: cc                   	int3
ffffffff80010ff6: cc                   	int3
ffffffff80010ff7: cc                   	int3
ffffffff80010ff8: cc                   	int3
ffffffff80010ff9: cc                   	int3
ffffffff80010ffa: cc                   	int3
ffffffff80010ffb: cc                   	int3
ffffffff80010ffc: cc                   	int3
ffffffff80010ffd: cc                   	int3
ffffffff80010ffe: cc                   	int3
ffffffff80010fff: cc                   	int3

ffffffff80011000 <<taos::devices::sd_card::SDCardError as core::fmt::Debug>::fmt::h9e8097b605e6f4cc>:
ffffffff80011000: 48 89 f0             	movq	%rsi, %rax
ffffffff80011003: 0f b6 0f             	movzbl	(%rdi), %ecx
ffffffff80011006: c1 e1 03             	shll	$0x3, %ecx
ffffffff80011009: 48 8b 91 f0 24 02 80 	movq	-0x7ffddb10(%rcx), %rdx
ffffffff80011010: 48 8b b1 20 25 02 80 	movq	-0x7ffddae0(%rcx), %rsi
ffffffff80011017: 48 89 c7             	movq	%rax, %rdi
ffffffff8001101a: e9 c1 8e 00 00       	jmp	0xffffffff80019ee0 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff8001101f: cc                   	int3

ffffffff80011020 <<&T as core::fmt::Debug>::fmt::h7bd5ca59bc6980eb>:
ffffffff80011020: 48 8b 3f             	movq	(%rdi), %rdi
ffffffff80011023: e9 c8 6f 00 00       	jmp	0xffffffff80017ff0 <<x86_64::addr::PhysAddr as core::fmt::Debug>::fmt::h1d2b386870f81baa>
ffffffff80011028: cc                   	int3
ffffffff80011029: cc                   	int3
ffffffff8001102a: cc                   	int3
ffffffff8001102b: cc                   	int3
ffffffff8001102c: cc                   	int3
ffffffff8001102d: cc                   	int3
ffffffff8001102e: cc                   	int3
ffffffff8001102f: cc                   	int3

ffffffff80011030 <goblin::elf::Elf::parse::hfb1810c3f1f87358>:
ffffffff80011030: 55                   	pushq	%rbp
ffffffff80011031: 41 57                	pushq	%r15
ffffffff80011033: 41 56                	pushq	%r14
ffffffff80011035: 41 55                	pushq	%r13
ffffffff80011037: 41 54                	pushq	%r12
ffffffff80011039: 53                   	pushq	%rbx
ffffffff8001103a: 48 81 ec 38 06 00 00 	subq	$0x638, %rsp            # imm = 0x638
ffffffff80011041: 48 89 f5             	movq	%rsi, %rbp
ffffffff80011044: 49 89 fd             	movq	%rdi, %r13
ffffffff80011047: 48 8d bc 24 08 02 00 00      	leaq	0x208(%rsp), %rdi
ffffffff8001104f: 48 89 54 24 08       	movq	%rdx, 0x8(%rsp)
ffffffff80011054: 31 c9                	xorl	%ecx, %ecx
ffffffff80011056: e8 15 5d 00 00       	callq	0xffffffff80016d70 <<goblin::elf::header::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h1766452b94fc5744>
ffffffff8001105b: 48 8b 9c 24 10 02 00 00      	movq	0x210(%rsp), %rbx
ffffffff80011063: 4c 8b 9c 24 18 02 00 00      	movq	0x218(%rsp), %r11
ffffffff8001106b: 4c 8b bc 24 20 02 00 00      	movq	0x220(%rsp), %r15
ffffffff80011073: 4c 8b a4 24 28 02 00 00      	movq	0x228(%rsp), %r12
ffffffff8001107b: f6 84 24 08 02 00 00 01      	testb	$0x1, 0x208(%rsp)
ffffffff80011083: 74 1d                	je	0xffffffff800110a2 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x72>
ffffffff80011085: 49 89 5d 08          	movq	%rbx, 0x8(%r13)
ffffffff80011089: 4d 89 5d 10          	movq	%r11, 0x10(%r13)
ffffffff8001108d: 4d 89 7d 18          	movq	%r15, 0x18(%r13)
ffffffff80011091: 4d 89 65 20          	movq	%r12, 0x20(%r13)
ffffffff80011095: 49 c7 45 00 03 00 00 00      	movq	$0x3, (%r13)
ffffffff8001109d: e9 e1 1e 00 00       	jmp	0xffffffff80012f83 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1f53>
ffffffff800110a2: 4c 89 6c 24 18       	movq	%r13, 0x18(%rsp)
ffffffff800110a7: 4c 8b ac 24 30 02 00 00      	movq	0x230(%rsp), %r13
ffffffff800110af: 48 8b 84 24 38 02 00 00      	movq	0x238(%rsp), %rax
ffffffff800110b7: 48 89 84 24 48 03 00 00      	movq	%rax, 0x348(%rsp)
ffffffff800110bf: 0f b7 8c 24 40 02 00 00      	movzwl	0x240(%rsp), %ecx
ffffffff800110c7: 66 89 8c 24 50 03 00 00      	movw	%cx, 0x350(%rsp)
ffffffff800110cf: 44 0f b7 94 24 42 02 00 00   	movzwl	0x242(%rsp), %r10d
ffffffff800110d8: 8b 94 24 44 02 00 00 	movl	0x244(%rsp), %edx
ffffffff800110df: 0f b7 b4 24 48 02 00 00      	movzwl	0x248(%rsp), %esi
ffffffff800110e7: 0f b7 bc 24 4a 02 00 00      	movzwl	0x24a(%rsp), %edi
ffffffff800110ef: 44 0f b7 84 24 4c 02 00 00   	movzwl	0x24c(%rsp), %r8d
ffffffff800110f8: 44 0f b7 8c 24 4e 02 00 00   	movzwl	0x24e(%rsp), %r9d
ffffffff80011101: 48 89 9c 24 b8 04 00 00      	movq	%rbx, 0x4b8(%rsp)
ffffffff80011109: 4c 89 9c 24 c0 04 00 00      	movq	%r11, 0x4c0(%rsp)
ffffffff80011111: 4c 89 bc 24 c8 04 00 00      	movq	%r15, 0x4c8(%rsp)
ffffffff80011119: 4c 89 a4 24 d0 04 00 00      	movq	%r12, 0x4d0(%rsp)
ffffffff80011121: 4c 89 ac 24 d8 04 00 00      	movq	%r13, 0x4d8(%rsp)
ffffffff80011129: 66 89 8c 24 e8 04 00 00      	movw	%cx, 0x4e8(%rsp)
ffffffff80011131: 48 89 84 24 e0 04 00 00      	movq	%rax, 0x4e0(%rsp)
ffffffff80011139: 66 44 89 94 24 ea 04 00 00   	movw	%r10w, 0x4ea(%rsp)
ffffffff80011142: 89 94 24 ec 04 00 00 	movl	%edx, 0x4ec(%rsp)
ffffffff80011149: 66 89 b4 24 f0 04 00 00      	movw	%si, 0x4f0(%rsp)
ffffffff80011151: 66 89 bc 24 f2 04 00 00      	movw	%di, 0x4f2(%rsp)
ffffffff80011159: 66 44 89 84 24 f4 04 00 00   	movw	%r8w, 0x4f4(%rsp)
ffffffff80011162: 66 44 89 8c 24 f6 04 00 00   	movw	%r9w, 0x4f6(%rsp)
ffffffff8001116b: 0f b7 8c 24 e8 04 00 00      	movzwl	0x4e8(%rsp), %ecx
ffffffff80011173: 49 89 de             	movq	%rbx, %r14
ffffffff80011176: 49 c1 ee 20          	shrq	$0x20, %r14
ffffffff8001117a: 44 88 b4 24 40 04 00 00      	movb	%r14b, 0x440(%rsp)
ffffffff80011182: 41 8d 46 fd          	leal	-0x3(%r14), %eax
ffffffff80011186: 3c fe                	cmpb	$-0x2, %al
ffffffff80011188: 0f 83 e1 00 00 00    	jae	0xffffffff8001126f <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x23f>
ffffffff8001118e: 48 8d 84 24 bd 04 00 00      	leaq	0x4bd(%rsp), %rax
ffffffff80011196: 48 8d 8c 24 40 04 00 00      	leaq	0x440(%rsp), %rcx
ffffffff8001119e: 48 89 8c 24 f8 04 00 00      	movq	%rcx, 0x4f8(%rsp)
ffffffff800111a6: 48 c7 84 24 00 05 00 00 40 b6 01 80  	movq	$-0x7ffe49c0, 0x500(%rsp) # imm = 0x8001B640
ffffffff800111b2: 48 89 84 24 08 05 00 00      	movq	%rax, 0x508(%rsp)
ffffffff800111ba: 48 c7 84 24 10 05 00 00 40 b6 01 80  	movq	$-0x7ffe49c0, 0x510(%rsp) # imm = 0x8001B640
ffffffff800111c6: 48 c7 84 24 08 02 00 00 98 26 02 80  	movq	$-0x7ffdd968, 0x208(%rsp) # imm = 0x80022698
ffffffff800111d2: 48 c7 84 24 10 02 00 00 02 00 00 00  	movq	$0x2, 0x210(%rsp)
ffffffff800111de: 48 c7 84 24 28 02 00 00 00 00 00 00  	movq	$0x0, 0x228(%rsp)
ffffffff800111ea: 48 8d 84 24 f8 04 00 00      	leaq	0x4f8(%rsp), %rax
ffffffff800111f2: 48 89 84 24 18 02 00 00      	movq	%rax, 0x218(%rsp)
ffffffff800111fa: 48 c7 84 24 20 02 00 00 02 00 00 00  	movq	$0x2, 0x220(%rsp)
ffffffff80011206: 48 8d bc 24 f0 00 00 00      	leaq	0xf0(%rsp), %rdi
ffffffff8001120e: 48 8d b4 24 08 02 00 00      	leaq	0x208(%rsp), %rsi
ffffffff80011216: e8 45 79 00 00       	callq	0xffffffff80018b60 <alloc::fmt::format::format_inner::ha57507f8e4bcde35>
ffffffff8001121b: 48 8b 84 24 f0 00 00 00      	movq	0xf0(%rsp), %rax
ffffffff80011223: 8b 8c 24 f8 00 00 00 	movl	0xf8(%rsp), %ecx
ffffffff8001122a: 0f b6 94 24 fc 00 00 00      	movzbl	0xfc(%rsp), %edx
ffffffff80011232: 48 8b b4 24 fd 00 00 00      	movq	0xfd(%rsp), %rsi
ffffffff8001123a: 4c 8b 6c 24 18       	movq	0x18(%rsp), %r13
ffffffff8001123f: 49 89 75 1d          	movq	%rsi, 0x1d(%r13)
ffffffff80011243: 8b b4 24 04 01 00 00 	movl	0x104(%rsp), %esi
ffffffff8001124a: 41 89 75 24          	movl	%esi, 0x24(%r13)
ffffffff8001124e: 49 c7 45 08 03 00 00 00      	movq	$0x3, 0x8(%r13)
ffffffff80011256: 49 89 45 10          	movq	%rax, 0x10(%r13)
ffffffff8001125a: 41 89 4d 18          	movl	%ecx, 0x18(%r13)
ffffffff8001125e: 41 88 55 1c          	movb	%dl, 0x1c(%r13)
ffffffff80011262: 49 c7 45 00 03 00 00 00      	movq	$0x3, (%r13)
ffffffff8001126a: e9 14 1d 00 00       	jmp	0xffffffff80012f83 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1f53>
ffffffff8001126f: 66 89 4c 24 7a       	movw	%cx, 0x7a(%rsp)
ffffffff80011274: 4c 89 9c 24 a0 04 00 00      	movq	%r11, 0x4a0(%rsp)
ffffffff8001127c: 44 89 94 24 e4 00 00 00      	movl	%r10d, 0xe4(%rsp)
ffffffff80011284: 66 44 89 4c 24 64    	movw	%r9w, 0x64(%rsp)
ffffffff8001128a: 66 44 89 44 24 66    	movw	%r8w, 0x66(%rsp)
ffffffff80011290: 66 89 7c 24 7c       	movw	%di, 0x7c(%rsp)
ffffffff80011295: 89 94 24 04 02 00 00 	movl	%edx, 0x204(%rsp)
ffffffff8001129c: 66 89 74 24 7e       	movw	%si, 0x7e(%rsp)
ffffffff800112a1: 44 0f b7 c6          	movzwl	%si, %r8d
ffffffff800112a5: 48 b8 00 00 00 00 00 ff 00 00	movabsq	$0xff0000000000, %rax # imm = 0xFF0000000000
ffffffff800112af: 48 89 9c 24 98 04 00 00      	movq	%rbx, 0x498(%rsp)
ffffffff800112b7: 48 21 d8             	andq	%rbx, %rax
ffffffff800112ba: 48 89 c2             	movq	%rax, %rdx
ffffffff800112bd: 48 b9 00 00 00 00 00 01 00 00	movabsq	$0x10000000000, %rcx # imm = 0x10000000000
ffffffff800112c7: 31 c0                	xorl	%eax, %eax
ffffffff800112c9: 48 89 94 24 60 01 00 00      	movq	%rdx, 0x160(%rsp)
ffffffff800112d1: 48 39 ca             	cmpq	%rcx, %rdx
ffffffff800112d4: 0f 94 44 24 3f       	sete	0x3f(%rsp)
ffffffff800112d9: 0f 95 c0             	setne	%al
ffffffff800112dc: 45 31 c9             	xorl	%r9d, %r9d
ffffffff800112df: 4c 89 74 24 48       	movq	%r14, 0x48(%rsp)
ffffffff800112e4: 41 80 fe 02          	cmpb	$0x2, %r14b
ffffffff800112e8: 41 0f 94 c1          	sete	%r9b
ffffffff800112ec: 89 44 24 24          	movl	%eax, 0x24(%rsp)
ffffffff800112f0: 89 04 24             	movl	%eax, (%rsp)
ffffffff800112f3: 48 8d bc 24 08 02 00 00      	leaq	0x208(%rsp), %rdi
ffffffff800112fb: 48 89 6c 24 30       	movq	%rbp, 0x30(%rsp)
ffffffff80011300: 48 89 ee             	movq	%rbp, %rsi
ffffffff80011303: 48 8b 54 24 08       	movq	0x8(%rsp), %rdx
ffffffff80011308: 4c 89 e1             	movq	%r12, %rcx
ffffffff8001130b: 44 89 4c 24 74       	movl	%r9d, 0x74(%rsp)
ffffffff80011310: e8 2b 49 00 00       	callq	0xffffffff80015c40 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9>
ffffffff80011315: 48 8b 84 24 08 02 00 00      	movq	0x208(%rsp), %rax
ffffffff8001131d: 4c 8b b4 24 10 02 00 00      	movq	0x210(%rsp), %r14
ffffffff80011325: 48 8b ac 24 18 02 00 00      	movq	0x218(%rsp), %rbp
ffffffff8001132d: 48 8b 8c 24 20 02 00 00      	movq	0x220(%rsp), %rcx
ffffffff80011335: 48 83 f8 07          	cmpq	$0x7, %rax
ffffffff80011339: 0f 85 c1 00 00 00    	jne	0xffffffff80011400 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x3d0>
ffffffff8001133f: 4c 89 ac 24 10 04 00 00      	movq	%r13, 0x410(%rsp)
ffffffff80011347: 4c 89 a4 24 88 04 00 00      	movq	%r12, 0x488(%rsp)
ffffffff8001134f: 4c 89 bc 24 90 04 00 00      	movq	%r15, 0x490(%rsp)
ffffffff80011357: 48 85 c9             	testq	%rcx, %rcx
ffffffff8001135a: 48 89 8c 24 08 04 00 00      	movq	%rcx, 0x408(%rsp)
ffffffff80011362: 0f 84 ba 00 00 00    	je	0xffffffff80011422 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x3f2>
ffffffff80011368: 4c 6b f9 38          	imulq	$0x38, %rcx, %r15
ffffffff8001136c: 45 31 e4             	xorl	%r12d, %r12d
ffffffff8001136f: 4c 8d ac 24 08 02 00 00      	leaq	0x208(%rsp), %r13
ffffffff80011377: 31 ff                	xorl	%edi, %edi
ffffffff80011379: 4c 8b 54 24 08       	movq	0x8(%rsp), %r10
ffffffff8001137e: eb 1d                	jmp	0xffffffff8001139d <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x36d>
ffffffff80011380: 31 ff                	xorl	%edi, %edi
ffffffff80011382: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
ffffffff80011390: 49 83 c4 38          	addq	$0x38, %r12
ffffffff80011394: 4d 39 e7             	cmpq	%r12, %r15
ffffffff80011397: 0f 84 8c 00 00 00    	je	0xffffffff80011429 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x3f9>
ffffffff8001139d: 42 83 7c 25 30 03    	cmpl	$0x3, 0x30(%rbp,%r12)
ffffffff800113a3: 75 eb                	jne	0xffffffff80011390 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x360>
ffffffff800113a5: 4a 8b 54 25 18       	movq	0x18(%rbp,%r12), %rdx
ffffffff800113aa: 48 85 d2             	testq	%rdx, %rdx
ffffffff800113ad: 74 e1                	je	0xffffffff80011390 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x360>
ffffffff800113af: 4a 8b 74 25 00       	movq	(%rbp,%r12), %rsi
ffffffff800113b4: 4c 89 d0             	movq	%r10, %rax
ffffffff800113b7: 48 29 f0             	subq	%rsi, %rax
ffffffff800113ba: 72 c4                	jb	0xffffffff80011380 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x350>
ffffffff800113bc: 48 ff ca             	decq	%rdx
ffffffff800113bf: bf 00 00 00 00       	movl	$0x0, %edi
ffffffff800113c4: 48 39 c2             	cmpq	%rax, %rdx
ffffffff800113c7: 77 c7                	ja	0xffffffff80011390 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x360>
ffffffff800113c9: 48 03 74 24 30       	addq	0x30(%rsp), %rsi
ffffffff800113ce: 4c 89 ef             	movq	%r13, %rdi
ffffffff800113d1: e8 ca ab 00 00       	callq	0xffffffff8001bfa0 <core::str::converts::from_utf8::h68e3eef28d6cf63d>
ffffffff800113d6: 83 bc 24 08 02 00 00 01      	cmpl	$0x1, 0x208(%rsp)
ffffffff800113de: 75 09                	jne	0xffffffff800113e9 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x3b9>
ffffffff800113e0: 31 ff                	xorl	%edi, %edi
ffffffff800113e2: 4c 8b 54 24 08       	movq	0x8(%rsp), %r10
ffffffff800113e7: eb a7                	jmp	0xffffffff80011390 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x360>
ffffffff800113e9: 48 8b bc 24 10 02 00 00      	movq	0x210(%rsp), %rdi
ffffffff800113f1: 48 8b 8c 24 18 02 00 00      	movq	0x218(%rsp), %rcx
ffffffff800113f9: 4c 8b 54 24 08       	movq	0x8(%rsp), %r10
ffffffff800113fe: eb 90                	jmp	0xffffffff80011390 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x360>
ffffffff80011400: 4c 8b 6c 24 18       	movq	0x18(%rsp), %r13
ffffffff80011405: 4d 89 75 10          	movq	%r14, 0x10(%r13)
ffffffff80011409: 49 89 6d 18          	movq	%rbp, 0x18(%r13)
ffffffff8001140d: 49 89 4d 20          	movq	%rcx, 0x20(%r13)
ffffffff80011411: 49 89 45 08          	movq	%rax, 0x8(%r13)
ffffffff80011415: 49 c7 45 00 03 00 00 00      	movq	$0x3, (%r13)
ffffffff8001141d: e9 61 1b 00 00       	jmp	0xffffffff80012f83 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1f53>
ffffffff80011422: 31 ff                	xorl	%edi, %edi
ffffffff80011424: 4c 8b 54 24 08       	movq	0x8(%rsp), %r10
ffffffff80011429: 48 89 8c 24 80 04 00 00      	movq	%rcx, 0x480(%rsp)
ffffffff80011431: 48 8b 8c 24 10 04 00 00      	movq	0x410(%rsp), %rcx
ffffffff80011439: 48 85 c9             	testq	%rcx, %rcx
ffffffff8001143c: 0f 84 8b 00 00 00    	je	0xffffffff800114cd <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x49d>
ffffffff80011442: 49 89 ff             	movq	%rdi, %r15
ffffffff80011445: 44 0f b7 44 24 66    	movzwl	0x66(%rsp), %r8d
ffffffff8001144b: 45 31 c9             	xorl	%r9d, %r9d
ffffffff8001144e: 4c 8b 6c 24 48       	movq	0x48(%rsp), %r13
ffffffff80011453: 41 80 fd 02          	cmpb	$0x2, %r13b
ffffffff80011457: 41 0f 94 c1          	sete	%r9b
ffffffff8001145b: 8b 44 24 24          	movl	0x24(%rsp), %eax
ffffffff8001145f: 89 04 24             	movl	%eax, (%rsp)
ffffffff80011462: 48 8d bc 24 08 02 00 00      	leaq	0x208(%rsp), %rdi
ffffffff8001146a: 48 8b 74 24 30       	movq	0x30(%rsp), %rsi
ffffffff8001146f: 4c 89 d2             	movq	%r10, %rdx
ffffffff80011472: e8 69 4d 00 00       	callq	0xffffffff800161e0 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98>
ffffffff80011477: 48 8b 84 24 08 02 00 00      	movq	0x208(%rsp), %rax
ffffffff8001147f: 48 8b 8c 24 10 02 00 00      	movq	0x210(%rsp), %rcx
ffffffff80011487: 4c 8b 8c 24 18 02 00 00      	movq	0x218(%rsp), %r9
ffffffff8001148f: 4c 8b 84 24 20 02 00 00      	movq	0x220(%rsp), %r8
ffffffff80011497: 48 83 f8 07          	cmpq	$0x7, %rax
ffffffff8001149b: 0f 85 62 01 00 00    	jne	0xffffffff80011603 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x5d3>
ffffffff800114a1: 0f b7 44 24 64       	movzwl	0x64(%rsp), %eax
ffffffff800114a6: 66 83 f8 ff          	cmpw	$-0x1, %ax
ffffffff800114aa: 48 89 8c 24 d8 00 00 00      	movq	%rcx, 0xd8(%rsp)
ffffffff800114b2: 0f 84 16 07 00 00    	je	0xffffffff80011bce <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xb9e>
ffffffff800114b8: 0f b7 c0             	movzwl	%ax, %eax
ffffffff800114bb: 4c 89 ff             	movq	%r15, %rdi
ffffffff800114be: 4c 8b 54 24 08       	movq	0x8(%rsp), %r10
ffffffff800114c3: 4c 39 c0             	cmpq	%r8, %rax
ffffffff800114c6: 73 1f                	jae	0xffffffff800114e7 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x4b7>
ffffffff800114c8: e9 1f 07 00 00       	jmp	0xffffffff80011bec <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xbbc>
ffffffff800114cd: 41 b9 08 00 00 00    	movl	$0x8, %r9d
ffffffff800114d3: 48 c7 84 24 d8 00 00 00 00 00 00 00  	movq	$0x0, 0xd8(%rsp)
ffffffff800114df: 45 31 c0             	xorl	%r8d, %r8d
ffffffff800114e2: 4c 8b 6c 24 48       	movq	0x48(%rsp), %r13
ffffffff800114e7: 48 c7 84 24 08 02 00 00 00 00 00 00  	movq	$0x0, 0x208(%rsp)
ffffffff800114f3: 48 c7 84 24 10 02 00 00 08 00 00 00  	movq	$0x8, 0x210(%rsp)
ffffffff800114ff: 48 c7 84 24 18 02 00 00 00 00 00 00  	movq	$0x0, 0x218(%rsp)
ffffffff8001150b: 66 c7 84 24 20 02 00 00 00 00	movw	$0x0, 0x220(%rsp)
ffffffff80011515: 48 c7 84 24 30 02 00 00 01 00 00 00  	movq	$0x1, 0x230(%rsp)
ffffffff80011521: 48 c7 84 24 38 02 00 00 00 00 00 00  	movq	$0x0, 0x238(%rsp)
ffffffff8001152d: 41 bc 08 00 00 00    	movl	$0x8, %r12d
ffffffff80011533: 48 c7 84 24 f8 01 00 00 00 00 00 00  	movq	$0x0, 0x1f8(%rsp)
ffffffff8001153f: 48 8b 84 24 28 02 00 00      	movq	0x228(%rsp), %rax
ffffffff80011547: 48 89 84 24 f8 00 00 00      	movq	%rax, 0xf8(%rsp)
ffffffff8001154f: 48 8b 8c 24 18 02 00 00      	movq	0x218(%rsp), %rcx
ffffffff80011557: 48 8b 94 24 20 02 00 00      	movq	0x220(%rsp), %rdx
ffffffff8001155f: 48 89 94 24 f0 00 00 00      	movq	%rdx, 0xf0(%rsp)
ffffffff80011567: 48 8b b4 24 30 02 00 00      	movq	0x230(%rsp), %rsi
ffffffff8001156f: 48 89 b4 24 58 04 00 00      	movq	%rsi, 0x458(%rsp)
ffffffff80011577: 48 8b b4 24 38 02 00 00      	movq	0x238(%rsp), %rsi
ffffffff8001157f: 48 89 b4 24 60 04 00 00      	movq	%rsi, 0x460(%rsp)
ffffffff80011587: 48 89 8c 24 40 04 00 00      	movq	%rcx, 0x440(%rsp)
ffffffff8001158f: 48 89 94 24 48 04 00 00      	movq	%rdx, 0x448(%rsp)
ffffffff80011597: 48 89 84 24 50 04 00 00      	movq	%rax, 0x450(%rsp)
ffffffff8001159f: 4a 8d 0c c5 00 00 00 00      	leaq	(,%r8,8), %rcx
ffffffff800115a7: 4c 8d 1c c9          	leaq	(%rcx,%rcx,8), %r11
ffffffff800115ab: 4b 8d 04 19          	leaq	(%r9,%r11), %rax
ffffffff800115af: 4c 89 74 24 50       	movq	%r14, 0x50(%rsp)
ffffffff800115b4: 4c 89 4c 24 58       	movq	%r9, 0x58(%rsp)
ffffffff800115b9: 0f 1f 80 00 00 00 00 	nopl	(%rax)
ffffffff800115c0: 4d 85 db             	testq	%r11, %r11
ffffffff800115c3: 74 60                	je	0xffffffff80011625 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x5f5>
ffffffff800115c5: 49 83 c3 b8          	addq	$-0x48, %r11
ffffffff800115c9: 83 78 f0 02          	cmpl	$0x2, -0x10(%rax)
ffffffff800115cd: 48 8d 40 b8          	leaq	-0x48(%rax), %rax
ffffffff800115d1: 75 ed                	jne	0xffffffff800115c0 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x590>
ffffffff800115d3: 4b 8b 74 19 30       	movq	0x30(%r9,%r11), %rsi
ffffffff800115d8: 48 85 f6             	testq	%rsi, %rsi
ffffffff800115db: 0f 84 a2 06 00 00    	je	0xffffffff80011c83 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xc53>
ffffffff800115e1: 4b 8b 44 19 20       	movq	0x20(%r9,%r11), %rax
ffffffff800115e6: 48 89 c2             	movq	%rax, %rdx
ffffffff800115e9: 48 09 f2             	orq	%rsi, %rdx
ffffffff800115ec: 48 c1 ea 20          	shrq	$0x20, %rdx
ffffffff800115f0: 0f 84 71 07 00 00    	je	0xffffffff80011d67 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xd37>
ffffffff800115f6: 31 d2                	xorl	%edx, %edx
ffffffff800115f8: 48 f7 f6             	divq	%rsi
ffffffff800115fb: 48 89 c6             	movq	%rax, %rsi
ffffffff800115fe: e9 6a 07 00 00       	jmp	0xffffffff80011d6d <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xd3d>
ffffffff80011603: 4c 8b 6c 24 18       	movq	0x18(%rsp), %r13
ffffffff80011608: 49 89 4d 10          	movq	%rcx, 0x10(%r13)
ffffffff8001160c: 4d 89 4d 18          	movq	%r9, 0x18(%r13)
ffffffff80011610: 4d 89 45 20          	movq	%r8, 0x20(%r13)
ffffffff80011614: 49 89 45 08          	movq	%rax, 0x8(%r13)
ffffffff80011618: 49 c7 45 00 03 00 00 00      	movq	$0x3, (%r13)
ffffffff80011620: e9 48 19 00 00       	jmp	0xffffffff80012f6d <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1f3d>
ffffffff80011625: 48 89 8c 24 c8 00 00 00      	movq	%rcx, 0xc8(%rsp)
ffffffff8001162d: 4c 89 84 24 d0 00 00 00      	movq	%r8, 0xd0(%rsp)
ffffffff80011635: 48 89 bc 24 00 04 00 00      	movq	%rdi, 0x400(%rsp)
ffffffff8001163d: c6 44 24 17 01       	movb	$0x1, 0x17(%rsp)
ffffffff80011642: b8 08 00 00 00       	movl	$0x8, %eax
ffffffff80011647: 48 89 84 24 e8 01 00 00      	movq	%rax, 0x1e8(%rsp)
ffffffff8001164f: b8 01 00 00 00       	movl	$0x1, %eax
ffffffff80011654: 48 89 84 24 e8 03 00 00      	movq	%rax, 0x3e8(%rsp)
ffffffff8001165c: 48 c7 84 24 e0 03 00 00 00 00 00 00  	movq	$0x0, 0x3e0(%rsp)
ffffffff80011668: 48 c7 84 24 d8 03 00 00 00 00 00 00  	movq	$0x0, 0x3d8(%rsp)
ffffffff80011674: 48 c7 84 24 d0 03 00 00 00 00 00 00  	movq	$0x0, 0x3d0(%rsp)
ffffffff80011680: 48 c7 84 24 c8 03 00 00 00 00 00 00  	movq	$0x0, 0x3c8(%rsp)
ffffffff8001168c: 48 c7 84 24 f0 01 00 00 00 00 00 00  	movq	$0x0, 0x1f0(%rsp)
ffffffff80011698: 48 c7 84 24 c0 03 00 00 00 00 00 00  	movq	$0x0, 0x3c0(%rsp)
ffffffff800116a4: 48 c7 84 24 f8 03 00 00 00 00 00 00  	movq	$0x0, 0x3f8(%rsp)
ffffffff800116b0: 31 db                	xorl	%ebx, %ebx
ffffffff800116b2: 45 31 ff             	xorl	%r15d, %r15d
ffffffff800116b5: 48 c7 84 24 d8 01 00 00 00 00 00 00  	movq	$0x0, 0x1d8(%rsp)
ffffffff800116c1: 48 89 84 24 f0 03 00 00      	movq	%rax, 0x3f0(%rsp)
ffffffff800116c9: 45 31 c9             	xorl	%r9d, %r9d
ffffffff800116cc: 41 80 fd 02          	cmpb	$0x2, %r13b
ffffffff800116d0: 41 0f 94 c1          	sete	%r9b
ffffffff800116d4: 48 c7 84 24 68 01 00 00 00 00 00 00  	movq	$0x0, 0x168(%rsp)
ffffffff800116e0: 48 c7 84 24 70 01 00 00 08 00 00 00  	movq	$0x8, 0x170(%rsp)
ffffffff800116ec: 48 c7 84 24 78 01 00 00 00 00 00 00  	movq	$0x0, 0x178(%rsp)
ffffffff800116f8: 48 c7 84 24 80 01 00 00 00 00 00 00  	movq	$0x0, 0x180(%rsp)
ffffffff80011704: 48 c7 84 24 88 01 00 00 08 00 00 00  	movq	$0x8, 0x188(%rsp)
ffffffff80011710: 48 c7 84 24 90 01 00 00 00 00 00 00  	movq	$0x0, 0x190(%rsp)
ffffffff8001171c: 66 c7 84 24 00 01 00 00 00 00	movw	$0x0, 0x100(%rsp)
ffffffff80011726: 48 c7 84 24 10 01 00 00 01 00 00 00  	movq	$0x1, 0x110(%rsp)
ffffffff80011732: 48 c7 84 24 18 01 00 00 00 00 00 00  	movq	$0x0, 0x118(%rsp)
ffffffff8001173e: 48 c7 84 24 e8 00 00 00 00 00 00 00  	movq	$0x0, 0xe8(%rsp)
ffffffff8001174a: 48 c7 84 24 f0 00 00 00 08 00 00 00  	movq	$0x8, 0xf0(%rsp)
ffffffff80011756: 48 c7 84 24 f8 00 00 00 00 00 00 00  	movq	$0x0, 0xf8(%rsp)
ffffffff80011762: 8b 44 24 24          	movl	0x24(%rsp), %eax
ffffffff80011766: 89 04 24             	movl	%eax, (%rsp)
ffffffff80011769: 48 8d bc 24 08 02 00 00      	leaq	0x208(%rsp), %rdi
ffffffff80011771: 48 8b 74 24 30       	movq	0x30(%rsp), %rsi
ffffffff80011776: 4c 89 d2             	movq	%r10, %rdx
ffffffff80011779: 48 89 e9             	movq	%rbp, %rcx
ffffffff8001177c: 4c 8b 84 24 08 04 00 00      	movq	0x408(%rsp), %r8
ffffffff80011784: e8 87 22 00 00       	callq	0xffffffff80013a10 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7>
ffffffff80011789: 4c 8b b4 24 08 02 00 00      	movq	0x208(%rsp), %r14
ffffffff80011791: 48 8b 84 24 10 02 00 00      	movq	0x210(%rsp), %rax
ffffffff80011799: 48 89 84 24 98 00 00 00      	movq	%rax, 0x98(%rsp)
ffffffff800117a1: 48 8b 84 24 18 02 00 00      	movq	0x218(%rsp), %rax
ffffffff800117a9: 48 89 84 24 a0 00 00 00      	movq	%rax, 0xa0(%rsp)
ffffffff800117b1: 48 8b 84 24 20 02 00 00      	movq	0x220(%rsp), %rax
ffffffff800117b9: 48 89 84 24 a8 00 00 00      	movq	%rax, 0xa8(%rsp)
ffffffff800117c1: 48 8b 84 24 28 02 00 00      	movq	0x228(%rsp), %rax
ffffffff800117c9: 48 89 84 24 b0 00 00 00      	movq	%rax, 0xb0(%rsp)
ffffffff800117d1: 49 83 fe 03          	cmpq	$0x3, %r14
ffffffff800117d5: 75 4f                	jne	0xffffffff80011826 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x7f6>
ffffffff800117d7: 48 8b 84 24 b0 00 00 00      	movq	0xb0(%rsp), %rax
ffffffff800117df: 4c 8b 6c 24 18       	movq	0x18(%rsp), %r13
ffffffff800117e4: 49 89 45 20          	movq	%rax, 0x20(%r13)
ffffffff800117e8: 48 8b 84 24 a8 00 00 00      	movq	0xa8(%rsp), %rax
ffffffff800117f0: 49 89 45 18          	movq	%rax, 0x18(%r13)
ffffffff800117f4: 48 8b 84 24 98 00 00 00      	movq	0x98(%rsp), %rax
ffffffff800117fc: 48 8b 8c 24 a0 00 00 00      	movq	0xa0(%rsp), %rcx
ffffffff80011804: 49 89 4d 10          	movq	%rcx, 0x10(%r13)
ffffffff80011808: 49 89 45 08          	movq	%rax, 0x8(%r13)
ffffffff8001180c: 49 c7 45 00 03 00 00 00      	movq	$0x3, (%r13)
ffffffff80011814: bb 08 00 00 00       	movl	$0x8, %ebx
ffffffff80011819: 45 31 ff             	xorl	%r15d, %r15d
ffffffff8001181c: 4c 8b 74 24 50       	movq	0x50(%rsp), %r14
ffffffff80011821: e9 51 16 00 00       	jmp	0xffffffff80012e77 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1e47>
ffffffff80011826: 48 8d b4 24 30 02 00 00      	leaq	0x230(%rsp), %rsi
ffffffff8001182e: 48 8d bc 24 20 05 00 00      	leaq	0x520(%rsp), %rdi
ffffffff80011836: ba 18 01 00 00       	movl	$0x118, %edx            # imm = 0x118
ffffffff8001183b: ff 15 df 4b 02 00    	callq	*0x24bdf(%rip)          # 0xffffffff80036420
ffffffff80011841: 48 8b 84 24 98 00 00 00      	movq	0x98(%rsp), %rax
ffffffff80011849: 48 8b 8c 24 a0 00 00 00      	movq	0xa0(%rsp), %rcx
ffffffff80011851: 48 89 84 24 00 05 00 00      	movq	%rax, 0x500(%rsp)
ffffffff80011859: 48 89 8c 24 08 05 00 00      	movq	%rcx, 0x508(%rsp)
ffffffff80011861: 48 8b 84 24 a8 00 00 00      	movq	0xa8(%rsp), %rax
ffffffff80011869: 48 89 84 24 10 05 00 00      	movq	%rax, 0x510(%rsp)
ffffffff80011871: 48 8b 84 24 b0 00 00 00      	movq	0xb0(%rsp), %rax
ffffffff80011879: 48 89 84 24 18 05 00 00      	movq	%rax, 0x518(%rsp)
ffffffff80011881: 4c 89 b4 24 f8 04 00 00      	movq	%r14, 0x4f8(%rsp)
ffffffff80011889: 49 83 fe 02          	cmpq	$0x2, %r14
ffffffff8001188d: 0f 85 f7 03 00 00    	jne	0xffffffff80011c8a <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xc5a>
ffffffff80011893: 4c 89 bc 24 50 01 00 00      	movq	%r15, 0x150(%rsp)
ffffffff8001189b: 48 89 9c 24 b8 03 00 00      	movq	%rbx, 0x3b8(%rsp)
ffffffff800118a3: 4c 89 64 24 40       	movq	%r12, 0x40(%rsp)
ffffffff800118a8: c6 44 24 16 01       	movb	$0x1, 0x16(%rsp)
ffffffff800118ad: b8 01 00 00 00       	movl	$0x1, %eax
ffffffff800118b2: 48 89 84 24 48 01 00 00      	movq	%rax, 0x148(%rsp)
ffffffff800118ba: 66 b8 01 00          	movw	$0x1, %ax
ffffffff800118be: 89 84 24 e0 00 00 00 	movl	%eax, 0xe0(%rsp)
ffffffff800118c5: bb 08 00 00 00       	movl	$0x8, %ebx
ffffffff800118ca: 48 c7 84 24 c8 01 00 00 00 00 00 00  	movq	$0x0, 0x1c8(%rsp)
ffffffff800118d6: 48 c7 44 24 28 00 00 00 00   	movq	$0x0, 0x28(%rsp)
ffffffff800118df: 48 c7 84 24 a0 03 00 00 00 00 00 00  	movq	$0x0, 0x3a0(%rsp)
ffffffff800118eb: 48 c7 84 24 b0 03 00 00 00 00 00 00  	movq	$0x0, 0x3b0(%rsp)
ffffffff800118f7: 48 c7 84 24 a8 01 00 00 00 00 00 00  	movq	$0x0, 0x1a8(%rsp)
ffffffff80011903: 48 c7 84 24 30 01 00 00 00 00 00 00  	movq	$0x0, 0x130(%rsp)
ffffffff8001190f: 48 c7 84 24 88 00 00 00 00 00 00 00  	movq	$0x0, 0x88(%rsp)
ffffffff8001191b: 48 c7 84 24 a8 03 00 00 00 00 00 00  	movq	$0x0, 0x3a8(%rsp)
ffffffff80011927: 48 c7 84 24 b8 00 00 00 00 00 00 00  	movq	$0x0, 0xb8(%rsp)
ffffffff80011933: 48 c7 84 24 b8 01 00 00 00 00 00 00  	movq	$0x0, 0x1b8(%rsp)
ffffffff8001193f: 48 c7 84 24 90 00 00 00 00 00 00 00  	movq	$0x0, 0x90(%rsp)
ffffffff8001194b: c6 44 24 15 01       	movb	$0x1, 0x15(%rsp)
ffffffff80011950: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff80011955: 48 c7 84 24 98 03 00 00 00 00 00 00  	movq	$0x0, 0x398(%rsp)
ffffffff80011961: 48 c7 84 24 c0 01 00 00 00 00 00 00  	movq	$0x0, 0x1c0(%rsp)
ffffffff8001196d: 48 c7 84 24 38 01 00 00 00 00 00 00  	movq	$0x0, 0x138(%rsp)
ffffffff80011979: 48 c7 84 24 28 01 00 00 00 00 00 00  	movq	$0x0, 0x128(%rsp)
ffffffff80011985: b8 01 00 00 00       	movl	$0x1, %eax
ffffffff8001198a: 48 89 84 24 40 01 00 00      	movq	%rax, 0x140(%rsp)
ffffffff80011992: 48 c7 84 24 70 03 00 00 00 00 00 00  	movq	$0x0, 0x370(%rsp)
ffffffff8001199e: 48 c7 84 24 68 03 00 00 00 00 00 00  	movq	$0x0, 0x368(%rsp)
ffffffff800119aa: 48 c7 84 24 90 03 00 00 00 00 00 00  	movq	$0x0, 0x390(%rsp)
ffffffff800119b6: 48 c7 84 24 88 03 00 00 00 00 00 00  	movq	$0x0, 0x388(%rsp)
ffffffff800119c2: 48 c7 84 24 80 03 00 00 00 00 00 00  	movq	$0x0, 0x380(%rsp)
ffffffff800119ce: 48 89 84 24 78 03 00 00      	movq	%rax, 0x378(%rsp)
ffffffff800119d6: 48 c7 84 24 d0 01 00 00 00 00 00 00  	movq	$0x0, 0x1d0(%rsp)
ffffffff800119e2: 48 c7 84 24 b0 01 00 00 00 00 00 00  	movq	$0x0, 0x1b0(%rsp)
ffffffff800119ee: 4c 8b 44 24 08       	movq	0x8(%rsp), %r8
ffffffff800119f3: 48 89 8c 24 80 00 00 00      	movq	%rcx, 0x80(%rsp)
ffffffff800119fb: 48 c7 84 24 98 00 00 00 00 00 00 00  	movq	$0x0, 0x98(%rsp)
ffffffff80011a07: 48 c7 84 24 a0 00 00 00 08 00 00 00  	movq	$0x8, 0xa0(%rsp)
ffffffff80011a13: 48 c7 84 24 a8 00 00 00 00 00 00 00  	movq	$0x0, 0xa8(%rsp)
ffffffff80011a1f: 48 83 bc 24 d0 00 00 00 00   	cmpq	$0x0, 0xd0(%rsp)
ffffffff80011a28: 48 89 6c 24 68       	movq	%rbp, 0x68(%rsp)
ffffffff80011a2d: 0f 84 26 05 00 00    	je	0xffffffff80011f59 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xf29>
ffffffff80011a33: 48 8b 84 24 c8 00 00 00      	movq	0xc8(%rsp), %rax
ffffffff80011a3b: 4c 8d 3c c0          	leaq	(%rax,%rax,8), %r15
ffffffff80011a3f: 45 31 e4             	xorl	%r12d, %r12d
ffffffff80011a42: 4c 8b 6c 24 58       	movq	0x58(%rsp), %r13
ffffffff80011a47: 48 89 9c 24 58 01 00 00      	movq	%rbx, 0x158(%rsp)
ffffffff80011a4f: eb 5f                	jmp	0xffffffff80011ab0 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xa80>
ffffffff80011a51: 4c 8b 8c 24 a0 00 00 00      	movq	0xa0(%rsp), %r9
ffffffff80011a59: 49 6b ce 38          	imulq	$0x38, %r14, %rcx
ffffffff80011a5d: 4d 89 24 09          	movq	%r12, (%r9,%rcx)
ffffffff80011a61: 49 89 7c 09 08       	movq	%rdi, 0x8(%r9,%rcx)
ffffffff80011a66: 49 89 6c 09 10       	movq	%rbp, 0x10(%r9,%rcx)
ffffffff80011a6b: 48 01 f5             	addq	%rsi, %rbp
ffffffff80011a6e: 49 89 44 09 18       	movq	%rax, 0x18(%r9,%rcx)
ffffffff80011a73: 49 89 74 09 20       	movq	%rsi, 0x20(%r9,%rcx)
ffffffff80011a78: 49 89 6c 09 28       	movq	%rbp, 0x28(%r9,%rcx)
ffffffff80011a7d: 41 88 54 09 30       	movb	%dl, 0x30(%r9,%rcx)
ffffffff80011a82: 8b 54 24 74          	movl	0x74(%rsp), %edx
ffffffff80011a86: 41 88 54 09 31       	movb	%dl, 0x31(%r9,%rcx)
ffffffff80011a8b: 8b 54 24 24          	movl	0x24(%rsp), %edx
ffffffff80011a8f: 41 88 54 09 32       	movb	%dl, 0x32(%r9,%rcx)
ffffffff80011a94: 49 ff c6             	incq	%r14
ffffffff80011a97: 4c 89 b4 24 a8 00 00 00      	movq	%r14, 0xa8(%rsp)
ffffffff80011a9f: 49 83 c5 48          	addq	$0x48, %r13
ffffffff80011aa3: 49 ff c4             	incq	%r12
ffffffff80011aa6: 49 83 c7 b8          	addq	$-0x48, %r15
ffffffff80011aaa: 0f 84 a9 04 00 00    	je	0xffffffff80011f59 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xf29>
ffffffff80011ab0: 45 8b 75 38          	movl	0x38(%r13), %r14d
ffffffff80011ab4: 41 83 fe 04          	cmpl	$0x4, %r14d
ffffffff80011ab8: 74 06                	je	0xffffffff80011ac0 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xa90>
ffffffff80011aba: 41 83 fe 09          	cmpl	$0x9, %r14d
ffffffff80011abe: 75 df                	jne	0xffffffff80011a9f <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xa6f>
ffffffff80011ac0: 48 8d bc 24 08 02 00 00      	leaq	0x208(%rsp), %rdi
ffffffff80011ac8: 4c 89 ee             	movq	%r13, %rsi
ffffffff80011acb: 4c 89 c2             	movq	%r8, %rdx
ffffffff80011ace: e8 6d 4c 00 00       	callq	0xffffffff80016740 <goblin::elf::section_header::SectionHeader::check_size::hf971422cac388d0f>
ffffffff80011ad3: 48 8b ac 24 08 02 00 00      	movq	0x208(%rsp), %rbp
ffffffff80011adb: 48 83 fd 07          	cmpq	$0x7, %rbp
ffffffff80011adf: 0f 85 5f 0a 00 00    	jne	0xffffffff80012544 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1514>
ffffffff80011ae5: 49 8b 75 18          	movq	0x18(%r13), %rsi
ffffffff80011ae9: 49 8b 6d 20          	movq	0x20(%r13), %rbp
ffffffff80011aed: 48 85 ed             	testq	%rbp, %rbp
ffffffff80011af0: 74 25                	je	0xffffffff80011b17 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xae7>
ffffffff80011af2: 4c 8b 44 24 08       	movq	0x8(%rsp), %r8
ffffffff80011af7: 4c 89 c0             	movq	%r8, %rax
ffffffff80011afa: 48 29 f0             	subq	%rsi, %rax
ffffffff80011afd: 0f 82 71 11 00 00    	jb	0xffffffff80012c74 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1c44>
ffffffff80011b03: 48 39 e8             	cmpq	%rbp, %rax
ffffffff80011b06: 0f 82 6f 11 00 00    	jb	0xffffffff80012c7b <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1c4b>
ffffffff80011b0c: 48 8b 44 24 30       	movq	0x30(%rsp), %rax
ffffffff80011b11: 48 8d 3c 30          	leaq	(%rax,%rsi), %rdi
ffffffff80011b15: eb 0a                	jmp	0xffffffff80011b21 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xaf1>
ffffffff80011b17: bf 01 00 00 00       	movl	$0x1, %edi
ffffffff80011b1c: 4c 8b 44 24 08       	movq	0x8(%rsp), %r8
ffffffff80011b21: 31 c0                	xorl	%eax, %eax
ffffffff80011b23: 41 83 fe 04          	cmpl	$0x4, %r14d
ffffffff80011b27: 0f 94 c0             	sete	%al
ffffffff80011b2a: 80 7c 24 48 02       	cmpb	$0x2, 0x48(%rsp)
ffffffff80011b2f: 48 8d 14 85 08 00 00 00      	leaq	0x8(,%rax,4), %rdx
ffffffff80011b37: 48 8d 0c c5 10 00 00 00      	leaq	0x10(,%rax,8), %rcx
ffffffff80011b3f: 48 0f 45 ca          	cmovneq	%rdx, %rcx
ffffffff80011b43: 48 89 e8             	movq	%rbp, %rax
ffffffff80011b46: 48 c1 e8 20          	shrq	$0x20, %rax
ffffffff80011b4a: 74 0a                	je	0xffffffff80011b56 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xb26>
ffffffff80011b4c: 48 89 e8             	movq	%rbp, %rax
ffffffff80011b4f: 31 d2                	xorl	%edx, %edx
ffffffff80011b51: 48 f7 f1             	divq	%rcx
ffffffff80011b54: eb 06                	jmp	0xffffffff80011b5c <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xb2c>
ffffffff80011b56: 89 e8                	movl	%ebp, %eax
ffffffff80011b58: 31 d2                	xorl	%edx, %edx
ffffffff80011b5a: f7 f1                	divl	%ecx
ffffffff80011b5c: 41 83 fe 04          	cmpl	$0x4, %r14d
ffffffff80011b60: 0f 94 c2             	sete	%dl
ffffffff80011b63: 4c 8b b4 24 a8 00 00 00      	movq	0xa8(%rsp), %r14
ffffffff80011b6b: 4c 3b b4 24 98 00 00 00      	cmpq	0x98(%rsp), %r14
ffffffff80011b73: 0f 85 d8 fe ff ff    	jne	0xffffffff80011a51 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xa21>
ffffffff80011b79: 48 89 bc 24 c0 00 00 00      	movq	%rdi, 0xc0(%rsp)
ffffffff80011b81: 48 8d bc 24 98 00 00 00      	leaq	0x98(%rsp), %rdi
ffffffff80011b89: 48 89 b4 24 e0 01 00 00      	movq	%rsi, 0x1e0(%rsp)
ffffffff80011b91: 48 c7 c6 e0 25 02 80 	movq	$-0x7ffdda20, %rsi      # imm = 0x800225E0
ffffffff80011b98: 48 89 c3             	movq	%rax, %rbx
ffffffff80011b9b: 88 54 24 3e          	movb	%dl, 0x3e(%rsp)
ffffffff80011b9f: e8 dc 3f 00 00       	callq	0xffffffff80015b80 <alloc::raw_vec::RawVec<T,A>::grow_one::hc93cb997e3fb5660>
ffffffff80011ba4: 0f b6 54 24 3e       	movzbl	0x3e(%rsp), %edx
ffffffff80011ba9: 48 89 d8             	movq	%rbx, %rax
ffffffff80011bac: 48 8b bc 24 c0 00 00 00      	movq	0xc0(%rsp), %rdi
ffffffff80011bb4: 48 8b b4 24 e0 01 00 00      	movq	0x1e0(%rsp), %rsi
ffffffff80011bbc: 48 8b 9c 24 58 01 00 00      	movq	0x158(%rsp), %rbx
ffffffff80011bc4: 4c 8b 44 24 08       	movq	0x8(%rsp), %r8
ffffffff80011bc9: e9 83 fe ff ff       	jmp	0xffffffff80011a51 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xa21>
ffffffff80011bce: 4d 85 c0             	testq	%r8, %r8
ffffffff80011bd1: 4c 89 ff             	movq	%r15, %rdi
ffffffff80011bd4: 4c 8b 54 24 08       	movq	0x8(%rsp), %r10
ffffffff80011bd9: 0f 84 d1 03 00 00    	je	0xffffffff80011fb0 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xf80>
ffffffff80011bdf: 41 8b 41 3c          	movl	0x3c(%r9), %eax
ffffffff80011be3: 4c 39 c0             	cmpq	%r8, %rax
ffffffff80011be6: 0f 83 fb f8 ff ff    	jae	0xffffffff800114e7 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x4b7>
ffffffff80011bec: 4c 89 84 24 d0 00 00 00      	movq	%r8, 0xd0(%rsp)
ffffffff80011bf4: 48 8d 04 c0          	leaq	(%rax,%rax,8), %rax
ffffffff80011bf8: 4c 89 cb             	movq	%r9, %rbx
ffffffff80011bfb: 4d 8d 24 c1          	leaq	(%r9,%rax,8), %r12
ffffffff80011bff: 48 8d bc 24 f8 04 00 00      	leaq	0x4f8(%rsp), %rdi
ffffffff80011c07: 4c 89 e6             	movq	%r12, %rsi
ffffffff80011c0a: 4c 89 d2             	movq	%r10, %rdx
ffffffff80011c0d: 4d 89 d5             	movq	%r10, %r13
ffffffff80011c10: e8 2b 4b 00 00       	callq	0xffffffff80016740 <goblin::elf::section_header::SectionHeader::check_size::hf971422cac388d0f>
ffffffff80011c15: 83 bc 24 f8 04 00 00 07      	cmpl	$0x7, 0x4f8(%rsp)
ffffffff80011c1d: 0f 85 84 02 00 00    	jne	0xffffffff80011ea7 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xe77>
ffffffff80011c23: 49 8b 4c 24 18       	movq	0x18(%r12), %rcx
ffffffff80011c28: 4d 8b 44 24 20       	movq	0x20(%r12), %r8
ffffffff80011c2d: 48 8d bc 24 08 02 00 00      	leaq	0x208(%rsp), %rdi
ffffffff80011c35: 48 8b 74 24 30       	movq	0x30(%rsp), %rsi
ffffffff80011c3a: 4c 89 ea             	movq	%r13, %rdx
ffffffff80011c3d: 45 31 c9             	xorl	%r9d, %r9d
ffffffff80011c40: e8 2b 55 00 00       	callq	0xffffffff80017170 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3>
ffffffff80011c45: 48 8b 84 24 08 02 00 00      	movq	0x208(%rsp), %rax
ffffffff80011c4d: 48 89 84 24 f8 01 00 00      	movq	%rax, 0x1f8(%rsp)
ffffffff80011c55: 48 f7 d8             	negq	%rax
ffffffff80011c58: 0f 80 89 02 00 00    	jo	0xffffffff80011ee7 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xeb7>
ffffffff80011c5e: 4c 8b a4 24 10 02 00 00      	movq	0x210(%rsp), %r12
ffffffff80011c66: 4c 89 ff             	movq	%r15, %rdi
ffffffff80011c69: 4c 8b 54 24 08       	movq	0x8(%rsp), %r10
ffffffff80011c6e: 4c 8b 6c 24 48       	movq	0x48(%rsp), %r13
ffffffff80011c73: 4c 8b 84 24 d0 00 00 00      	movq	0xd0(%rsp), %r8
ffffffff80011c7b: 49 89 d9             	movq	%rbx, %r9
ffffffff80011c7e: e9 bc f8 ff ff       	jmp	0xffffffff8001153f <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x50f>
ffffffff80011c83: 31 f6                	xorl	%esi, %esi
ffffffff80011c85: e9 e3 00 00 00       	jmp	0xffffffff80011d6d <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xd3d>
ffffffff80011c8a: 48 8b 84 24 08 06 00 00      	movq	0x608(%rsp), %rax
ffffffff80011c92: 48 89 84 24 c0 00 00 00      	movq	%rax, 0xc0(%rsp)
ffffffff80011c9a: 48 8b 8c 24 68 05 00 00      	movq	0x568(%rsp), %rcx
ffffffff80011ca2: 4c 8b 84 24 70 05 00 00      	movq	0x570(%rsp), %r8
ffffffff80011caa: 48 8d bc 24 08 02 00 00      	leaq	0x208(%rsp), %rdi
ffffffff80011cb2: 48 8b 74 24 30       	movq	0x30(%rsp), %rsi
ffffffff80011cb7: 48 8b 54 24 08       	movq	0x8(%rsp), %rdx
ffffffff80011cbc: 45 31 c9             	xorl	%r9d, %r9d
ffffffff80011cbf: e8 ac 54 00 00       	callq	0xffffffff80017170 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3>
ffffffff80011cc4: 4c 8b b4 24 08 02 00 00      	movq	0x208(%rsp), %r14
ffffffff80011ccc: 48 8b 84 24 10 02 00 00      	movq	0x210(%rsp), %rax
ffffffff80011cd4: 4c 89 f1             	movq	%r14, %rcx
ffffffff80011cd7: 48 f7 d9             	negq	%rcx
ffffffff80011cda: 48 89 84 24 18 04 00 00      	movq	%rax, 0x418(%rsp)
ffffffff80011ce2: 48 8b 84 24 18 02 00 00      	movq	0x218(%rsp), %rax
ffffffff80011cea: 48 89 84 24 20 04 00 00      	movq	%rax, 0x420(%rsp)
ffffffff80011cf2: 48 8b 84 24 20 02 00 00      	movq	0x220(%rsp), %rax
ffffffff80011cfa: 48 89 84 24 28 04 00 00      	movq	%rax, 0x428(%rsp)
ffffffff80011d02: 48 8b 84 24 28 02 00 00      	movq	0x228(%rsp), %rax
ffffffff80011d0a: 48 89 84 24 30 04 00 00      	movq	%rax, 0x430(%rsp)
ffffffff80011d12: 4c 8b 6c 24 18       	movq	0x18(%rsp), %r13
ffffffff80011d17: 0f 81 9b 02 00 00    	jno	0xffffffff80011fb8 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xf88>
ffffffff80011d1d: 48 8b 84 24 30 04 00 00      	movq	0x430(%rsp), %rax
ffffffff80011d25: 49 89 45 20          	movq	%rax, 0x20(%r13)
ffffffff80011d29: 48 8b 84 24 28 04 00 00      	movq	0x428(%rsp), %rax
ffffffff80011d31: 49 89 45 18          	movq	%rax, 0x18(%r13)
ffffffff80011d35: 48 8b 84 24 18 04 00 00      	movq	0x418(%rsp), %rax
ffffffff80011d3d: 48 8b 8c 24 20 04 00 00      	movq	0x420(%rsp), %rcx
ffffffff80011d45: 49 89 4d 10          	movq	%rcx, 0x10(%r13)
ffffffff80011d49: 49 89 45 08          	movq	%rax, 0x8(%r13)
ffffffff80011d4d: 49 c7 45 00 03 00 00 00      	movq	$0x3, (%r13)
ffffffff80011d55: bb 08 00 00 00       	movl	$0x8, %ebx
ffffffff80011d5a: 45 31 ff             	xorl	%r15d, %r15d
ffffffff80011d5d: 4c 8b 74 24 50       	movq	0x50(%rsp), %r14
ffffffff80011d62: e9 e3 10 00 00       	jmp	0xffffffff80012e4a <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1e1a>
ffffffff80011d67: 31 d2                	xorl	%edx, %edx
ffffffff80011d69: f7 f6                	divl	%esi
ffffffff80011d6b: 89 c6                	movl	%eax, %esi
ffffffff80011d6d: 31 c0                	xorl	%eax, %eax
ffffffff80011d6f: 41 80 fd 02          	cmpb	$0x2, %r13b
ffffffff80011d73: 0f 94 c0             	sete	%al
ffffffff80011d76: 4b 8b 5c 19 18       	movq	0x18(%r9,%r11), %rbx
ffffffff80011d7b: 48 89 9c 24 e8 00 00 00      	movq	%rbx, 0xe8(%rsp)
ffffffff80011d83: 48 89 b4 24 f8 04 00 00      	movq	%rsi, 0x4f8(%rsp)
ffffffff80011d8b: 48 8d 14 c5 10 00 00 00      	leaq	0x10(,%rax,8), %rdx
ffffffff80011d93: 48 89 f0             	movq	%rsi, %rax
ffffffff80011d96: 48 f7 e2             	mulq	%rdx
ffffffff80011d99: 0f 80 50 17 00 00    	jo	0xffffffff800134ef <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x24bf>
ffffffff80011d9f: 4c 89 d2             	movq	%r10, %rdx
ffffffff80011da2: 48 29 da             	subq	%rbx, %rdx
ffffffff80011da5: 73 07                	jae	0xffffffff80011dae <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xd7e>
ffffffff80011da7: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff80011dac: eb 0a                	jmp	0xffffffff80011db8 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xd88>
ffffffff80011dae: 48 39 c2             	cmpq	%rax, %rdx
ffffffff80011db1: 73 27                	jae	0xffffffff80011dda <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xdaa>
ffffffff80011db3: 31 c9                	xorl	%ecx, %ecx
ffffffff80011db5: 48 89 c3             	movq	%rax, %rbx
ffffffff80011db8: 4c 8b 6c 24 18       	movq	0x18(%rsp), %r13
ffffffff80011dbd: 49 89 4d 08          	movq	%rcx, 0x8(%r13)
ffffffff80011dc1: 49 89 5d 10          	movq	%rbx, 0x10(%r13)
ffffffff80011dc5: 49 89 55 18          	movq	%rdx, 0x18(%r13)
ffffffff80011dc9: 49 89 45 20          	movq	%rax, 0x20(%r13)
ffffffff80011dcd: 49 c7 45 00 03 00 00 00      	movq	$0x3, (%r13)
ffffffff80011dd5: e9 4a 11 00 00       	jmp	0xffffffff80012f24 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1ef4>
ffffffff80011dda: 48 89 8c 24 c8 00 00 00      	movq	%rcx, 0xc8(%rsp)
ffffffff80011de2: 48 89 84 24 d8 01 00 00      	movq	%rax, 0x1d8(%rsp)
ffffffff80011dea: 48 89 b4 24 50 01 00 00      	movq	%rsi, 0x150(%rsp)
ffffffff80011df2: 48 89 bc 24 00 04 00 00      	movq	%rdi, 0x400(%rsp)
ffffffff80011dfa: 48 8b 4c 24 58       	movq	0x58(%rsp), %rcx
ffffffff80011dff: 46 8b 4c 19 3c       	movl	0x3c(%rcx,%r11), %r9d
ffffffff80011e04: 48 8d bc 24 08 02 00 00      	leaq	0x208(%rsp), %rdi
ffffffff80011e0c: 4c 8b 7c 24 30       	movq	0x30(%rsp), %r15
ffffffff80011e11: 4c 89 fe             	movq	%r15, %rsi
ffffffff80011e14: 4c 89 d2             	movq	%r10, %rdx
ffffffff80011e17: 4c 89 84 24 d0 00 00 00      	movq	%r8, 0xd0(%rsp)
ffffffff80011e1f: e8 1c 17 00 00       	callq	0xffffffff80013540 <goblin::elf::Elf::parse::{{closure}}::hefc09cb1346f26c6>
ffffffff80011e24: 48 8b 8c 24 08 02 00 00      	movq	0x208(%rsp), %rcx
ffffffff80011e2c: 48 89 c8             	movq	%rcx, %rax
ffffffff80011e2f: 48 f7 d8             	negq	%rax
ffffffff80011e32: 0f 81 51 02 00 00    	jno	0xffffffff80012089 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1059>
ffffffff80011e38: 48 8b 84 24 10 02 00 00      	movq	0x210(%rsp), %rax
ffffffff80011e40: 48 8b 8c 24 18 02 00 00      	movq	0x218(%rsp), %rcx
ffffffff80011e48: 0f b7 94 24 20 02 00 00      	movzwl	0x220(%rsp), %edx
ffffffff80011e50: 48 8b b4 24 22 02 00 00      	movq	0x222(%rsp), %rsi
ffffffff80011e58: 48 89 b4 24 98 01 00 00      	movq	%rsi, 0x198(%rsp)
ffffffff80011e60: 48 8b b4 24 28 02 00 00      	movq	0x228(%rsp), %rsi
ffffffff80011e68: 48 89 b4 24 9e 01 00 00      	movq	%rsi, 0x19e(%rsp)
ffffffff80011e70: 4c 8b 6c 24 18       	movq	0x18(%rsp), %r13
ffffffff80011e75: 49 89 45 08          	movq	%rax, 0x8(%r13)
ffffffff80011e79: 49 89 4d 10          	movq	%rcx, 0x10(%r13)
ffffffff80011e7d: 66 41 89 55 18       	movw	%dx, 0x18(%r13)
ffffffff80011e82: 48 8b 84 24 98 01 00 00      	movq	0x198(%rsp), %rax
ffffffff80011e8a: 48 8b 8c 24 9e 01 00 00      	movq	0x19e(%rsp), %rcx
ffffffff80011e92: 49 89 45 1a          	movq	%rax, 0x1a(%r13)
ffffffff80011e96: 49 89 4d 20          	movq	%rcx, 0x20(%r13)
ffffffff80011e9a: 49 c7 45 00 03 00 00 00      	movq	$0x3, (%r13)
ffffffff80011ea2: e9 7d 10 00 00       	jmp	0xffffffff80012f24 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1ef4>
ffffffff80011ea7: 48 8b 84 24 10 05 00 00      	movq	0x510(%rsp), %rax
ffffffff80011eaf: 48 89 84 24 28 02 00 00      	movq	%rax, 0x228(%rsp)
ffffffff80011eb7: 48 8b 84 24 08 05 00 00      	movq	0x508(%rsp), %rax
ffffffff80011ebf: 48 89 84 24 20 02 00 00      	movq	%rax, 0x220(%rsp)
ffffffff80011ec7: 48 8b 84 24 f8 04 00 00      	movq	0x4f8(%rsp), %rax
ffffffff80011ecf: 48 8b 8c 24 00 05 00 00      	movq	0x500(%rsp), %rcx
ffffffff80011ed7: 48 89 8c 24 18 02 00 00      	movq	%rcx, 0x218(%rsp)
ffffffff80011edf: 48 89 84 24 10 02 00 00      	movq	%rax, 0x210(%rsp)
ffffffff80011ee7: 48 8b 84 24 10 02 00 00      	movq	0x210(%rsp), %rax
ffffffff80011eef: 48 8b 8c 24 18 02 00 00      	movq	0x218(%rsp), %rcx
ffffffff80011ef7: 48 89 8c 24 e8 00 00 00      	movq	%rcx, 0xe8(%rsp)
ffffffff80011eff: 48 8b 8c 24 20 02 00 00      	movq	0x220(%rsp), %rcx
ffffffff80011f07: 48 89 8c 24 f0 00 00 00      	movq	%rcx, 0xf0(%rsp)
ffffffff80011f0f: 48 8b 8c 24 28 02 00 00      	movq	0x228(%rsp), %rcx
ffffffff80011f17: 48 89 8c 24 f8 00 00 00      	movq	%rcx, 0xf8(%rsp)
ffffffff80011f1f: 4c 8b 6c 24 18       	movq	0x18(%rsp), %r13
ffffffff80011f24: 49 89 45 08          	movq	%rax, 0x8(%r13)
ffffffff80011f28: 48 8b 84 24 e8 00 00 00      	movq	0xe8(%rsp), %rax
ffffffff80011f30: 48 8b 8c 24 f0 00 00 00      	movq	0xf0(%rsp), %rcx
ffffffff80011f38: 49 89 45 10          	movq	%rax, 0x10(%r13)
ffffffff80011f3c: 49 89 4d 18          	movq	%rcx, 0x18(%r13)
ffffffff80011f40: 48 8b 84 24 f8 00 00 00      	movq	0xf8(%rsp), %rax
ffffffff80011f48: 49 89 45 20          	movq	%rax, 0x20(%r13)
ffffffff80011f4c: 49 c7 45 00 03 00 00 00      	movq	$0x3, (%r13)
ffffffff80011f54: e9 f2 0f 00 00       	jmp	0xffffffff80012f4b <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1f1b>
ffffffff80011f59: 48 8b 84 24 c8 00 00 00      	movq	0xc8(%rsp), %rax
ffffffff80011f61: 48 8d 04 c0          	leaq	(%rax,%rax,8), %rax
ffffffff80011f65: 31 c9                	xorl	%ecx, %ecx
ffffffff80011f67: 48 8b 54 24 58       	movq	0x58(%rsp), %rdx
ffffffff80011f6c: 4c 8b 74 24 50       	movq	0x50(%rsp), %r14
ffffffff80011f71: 48 39 c8             	cmpq	%rcx, %rax
ffffffff80011f74: 0f 84 fc 01 00 00    	je	0xffffffff80012176 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1146>
ffffffff80011f7a: 48 83 c1 48          	addq	$0x48, %rcx
ffffffff80011f7e: 81 7a 38 ff ff ff 6f 	cmpl	$0x6fffffff, 0x38(%rdx) # imm = 0x6FFFFFFF
ffffffff80011f85: 48 8d 52 48          	leaq	0x48(%rdx), %rdx
ffffffff80011f89: 75 e6                	jne	0xffffffff80011f71 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xf41>
ffffffff80011f8b: 48 8b 54 24 58       	movq	0x58(%rsp), %rdx
ffffffff80011f90: 4c 8b 6c 0a d0       	movq	-0x30(%rdx,%rcx), %r13
ffffffff80011f95: 48 8b 54 0a d8       	movq	-0x28(%rdx,%rcx), %rdx
ffffffff80011f9a: 4c 89 c1             	movq	%r8, %rcx
ffffffff80011f9d: 4c 29 e9             	subq	%r13, %rcx
ffffffff80011fa0: 0f 83 d1 05 00 00    	jae	0xffffffff80012577 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1547>
ffffffff80011fa6: bd 01 00 00 00       	movl	$0x1, %ebp
ffffffff80011fab: e9 d5 05 00 00       	jmp	0xffffffff80012585 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1555>
ffffffff80011fb0: 45 31 c0             	xorl	%r8d, %r8d
ffffffff80011fb3: e9 2f f5 ff ff       	jmp	0xffffffff800114e7 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x4b7>
ffffffff80011fb8: 4c 89 bc 24 50 01 00 00      	movq	%r15, 0x150(%rsp)
ffffffff80011fc0: 4c 8d bc 24 10 01 00 00      	leaq	0x110(%rsp), %r15
ffffffff80011fc8: 48 8b 84 24 30 02 00 00      	movq	0x230(%rsp), %rax
ffffffff80011fd0: 48 8b 8c 24 38 02 00 00      	movq	0x238(%rsp), %rcx
ffffffff80011fd8: 48 89 8c 24 b0 04 00 00      	movq	%rcx, 0x4b0(%rsp)
ffffffff80011fe0: 48 89 84 24 a8 04 00 00      	movq	%rax, 0x4a8(%rsp)
ffffffff80011fe8: 48 8b 84 24 e8 00 00 00      	movq	0xe8(%rsp), %rax
ffffffff80011ff0: 48 85 c0             	testq	%rax, %rax
ffffffff80011ff3: 74 1a                	je	0xffffffff8001200f <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xfdf>
ffffffff80011ff5: 48 8b bc 24 f0 00 00 00      	movq	0xf0(%rsp), %rdi
ffffffff80011ffd: 48 c1 e0 03          	shlq	$0x3, %rax
ffffffff80012001: 48 8d 34 40          	leaq	(%rax,%rax,2), %rsi
ffffffff80012005: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff8001200a: e8 31 cd ff ff       	callq	0xffffffff8000ed40 <__rust_dealloc>
ffffffff8001200f: 4c 89 b4 24 e8 00 00 00      	movq	%r14, 0xe8(%rsp)
ffffffff80012017: 48 8b 84 24 30 04 00 00      	movq	0x430(%rsp), %rax
ffffffff8001201f: 49 89 47 f8          	movq	%rax, -0x8(%r15)
ffffffff80012023: 48 8b 84 24 28 04 00 00      	movq	0x428(%rsp), %rax
ffffffff8001202b: 49 89 47 f0          	movq	%rax, -0x10(%r15)
ffffffff8001202f: 48 8b 84 24 18 04 00 00      	movq	0x418(%rsp), %rax
ffffffff80012037: 48 8b 8c 24 20 04 00 00      	movq	0x420(%rsp), %rcx
ffffffff8001203f: 49 89 4f e8          	movq	%rcx, -0x18(%r15)
ffffffff80012043: 49 89 47 e0          	movq	%rax, -0x20(%r15)
ffffffff80012047: 48 8b 84 24 a8 04 00 00      	movq	0x4a8(%rsp), %rax
ffffffff8001204f: 48 8b 8c 24 b0 04 00 00      	movq	0x4b0(%rsp), %rcx
ffffffff80012057: 49 89 4f 08          	movq	%rcx, 0x8(%r15)
ffffffff8001205b: 49 89 07             	movq	%rax, (%r15)
ffffffff8001205e: 48 8b b4 24 10 06 00 00      	movq	0x610(%rsp), %rsi
ffffffff80012066: 48 85 f6             	testq	%rsi, %rsi
ffffffff80012069: 0f 84 9c 01 00 00    	je	0xffffffff8001220b <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x11db>
ffffffff8001206f: 48 8d bc 24 e8 00 00 00      	leaq	0xe8(%rsp), %rdi
ffffffff80012077: e8 04 54 00 00       	callq	0xffffffff80017480 <goblin::strtab::Strtab::get_at::h79549c4c464d6553>
ffffffff8001207c: 48 89 84 24 d0 01 00 00      	movq	%rax, 0x1d0(%rsp)
ffffffff80012084: e9 8e 01 00 00       	jmp	0xffffffff80012217 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x11e7>
ffffffff80012089: 48 89 8c 24 f0 01 00 00      	movq	%rcx, 0x1f0(%rsp)
ffffffff80012091: 48 8b 84 24 d8 01 00 00      	movq	0x1d8(%rsp), %rax
ffffffff80012099: 48 01 d8             	addq	%rbx, %rax
ffffffff8001209c: 48 89 84 24 f8 03 00 00      	movq	%rax, 0x3f8(%rsp)
ffffffff800120a4: 49 8d 04 1f          	leaq	(%r15,%rbx), %rax
ffffffff800120a8: 48 89 84 24 f0 03 00 00      	movq	%rax, 0x3f0(%rsp)
ffffffff800120b0: 48 8b 84 24 10 02 00 00      	movq	0x210(%rsp), %rax
ffffffff800120b8: 48 89 84 24 e8 01 00 00      	movq	%rax, 0x1e8(%rsp)
ffffffff800120c0: 48 8b 84 24 18 02 00 00      	movq	0x218(%rsp), %rax
ffffffff800120c8: 48 89 84 24 c8 03 00 00      	movq	%rax, 0x3c8(%rsp)
ffffffff800120d0: 0f b6 84 24 20 02 00 00      	movzbl	0x220(%rsp), %eax
ffffffff800120d8: 48 89 84 24 d0 03 00 00      	movq	%rax, 0x3d0(%rsp)
ffffffff800120e0: 0f b6 84 24 21 02 00 00      	movzbl	0x221(%rsp), %eax
ffffffff800120e8: 48 89 84 24 d8 03 00 00      	movq	%rax, 0x3d8(%rsp)
ffffffff800120f0: 48 8b 84 24 22 02 00 00      	movq	0x222(%rsp), %rax
ffffffff800120f8: 48 89 84 24 98 01 00 00      	movq	%rax, 0x198(%rsp)
ffffffff80012100: 48 8b 84 24 28 02 00 00      	movq	0x228(%rsp), %rax
ffffffff80012108: 48 89 84 24 9e 01 00 00      	movq	%rax, 0x19e(%rsp)
ffffffff80012110: 48 8b 84 24 30 02 00 00      	movq	0x230(%rsp), %rax
ffffffff80012118: 48 89 84 24 e8 03 00 00      	movq	%rax, 0x3e8(%rsp)
ffffffff80012120: 48 8b 84 24 38 02 00 00      	movq	0x238(%rsp), %rax
ffffffff80012128: 48 89 84 24 e0 03 00 00      	movq	%rax, 0x3e0(%rsp)
ffffffff80012130: 48 8b 84 24 98 01 00 00      	movq	0x198(%rsp), %rax
ffffffff80012138: 48 8b 8c 24 9e 01 00 00      	movq	0x19e(%rsp), %rcx
ffffffff80012140: 48 89 84 24 68 04 00 00      	movq	%rax, 0x468(%rsp)
ffffffff80012148: 48 89 8c 24 6e 04 00 00      	movq	%rcx, 0x46e(%rsp)
ffffffff80012150: 8b 44 24 24          	movl	0x24(%rsp), %eax
ffffffff80012154: 48 89 84 24 c0 03 00 00      	movq	%rax, 0x3c0(%rsp)
ffffffff8001215c: 8b 44 24 74          	movl	0x74(%rsp), %eax
ffffffff80012160: 88 44 24 17          	movb	%al, 0x17(%rsp)
ffffffff80012164: 4c 8b 54 24 08       	movq	0x8(%rsp), %r10
ffffffff80012169: 4c 8b bc 24 50 01 00 00      	movq	0x150(%rsp), %r15
ffffffff80012171: e9 53 f5 ff ff       	jmp	0xffffffff800116c9 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x699>
ffffffff80012176: 41 bc 02 00 00 00    	movl	$0x2, %r12d
ffffffff8001217c: 4c 8b 7c 24 28       	movq	0x28(%rsp), %r15
ffffffff80012181: 31 c9                	xorl	%ecx, %ecx
ffffffff80012183: 48 8b 54 24 58       	movq	0x58(%rsp), %rdx
ffffffff80012188: 48 39 c8             	cmpq	%rcx, %rax
ffffffff8001218b: 74 36                	je	0xffffffff800121c3 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1193>
ffffffff8001218d: 48 83 c1 48          	addq	$0x48, %rcx
ffffffff80012191: 81 7a 38 fd ff ff 6f 	cmpl	$0x6ffffffd, 0x38(%rdx) # imm = 0x6FFFFFFD
ffffffff80012198: 48 8d 52 48          	leaq	0x48(%rdx), %rdx
ffffffff8001219c: 75 ea                	jne	0xffffffff80012188 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1158>
ffffffff8001219e: 48 8b 54 24 58       	movq	0x58(%rsp), %rdx
ffffffff800121a3: 48 8b 74 0a d0       	movq	-0x30(%rdx,%rcx), %rsi
ffffffff800121a8: 48 8b 6c 0a d8       	movq	-0x28(%rdx,%rcx), %rbp
ffffffff800121ad: 4c 89 c2             	movq	%r8, %rdx
ffffffff800121b0: 48 29 f2             	subq	%rsi, %rdx
ffffffff800121b3: 0f 83 f1 0a 00 00    	jae	0xffffffff80012caa <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1c7a>
ffffffff800121b9: b8 01 00 00 00       	movl	$0x1, %eax
ffffffff800121be: e9 f5 0a 00 00       	jmp	0xffffffff80012cb8 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1c88>
ffffffff800121c3: bf 02 00 00 00       	movl	$0x2, %edi
ffffffff800121c8: 31 c9                	xorl	%ecx, %ecx
ffffffff800121ca: 48 8b 54 24 58       	movq	0x58(%rsp), %rdx
ffffffff800121cf: 48 39 c8             	cmpq	%rcx, %rax
ffffffff800121d2: 0f 84 05 04 00 00    	je	0xffffffff800125dd <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x15ad>
ffffffff800121d8: 48 83 c1 48          	addq	$0x48, %rcx
ffffffff800121dc: 81 7a 38 fe ff ff 6f 	cmpl	$0x6ffffffe, 0x38(%rdx) # imm = 0x6FFFFFFE
ffffffff800121e3: 48 8d 52 48          	leaq	0x48(%rdx), %rdx
ffffffff800121e7: 75 e6                	jne	0xffffffff800121cf <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x119f>
ffffffff800121e9: 48 8b 44 24 58       	movq	0x58(%rsp), %rax
ffffffff800121ee: 48 8b 54 08 d0       	movq	-0x30(%rax,%rcx), %rdx
ffffffff800121f3: 48 8b 6c 08 d8       	movq	-0x28(%rax,%rcx), %rbp
ffffffff800121f8: 49 29 d0             	subq	%rdx, %r8
ffffffff800121fb: 0f 83 eb 0b 00 00    	jae	0xffffffff80012dec <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1dbc>
ffffffff80012201: b8 01 00 00 00       	movl	$0x1, %eax
ffffffff80012206: e9 ef 0b 00 00       	jmp	0xffffffff80012dfa <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1dca>
ffffffff8001220b: 48 c7 84 24 d0 01 00 00 00 00 00 00  	movq	$0x0, 0x1d0(%rsp)
ffffffff80012217: 4c 8b 74 24 50       	movq	0x50(%rsp), %r14
ffffffff8001221c: 48 89 9c 24 b8 03 00 00      	movq	%rbx, 0x3b8(%rsp)
ffffffff80012224: 48 83 bc 24 f8 05 00 00 00   	cmpq	$0x0, 0x5f8(%rsp)
ffffffff8001222d: 48 89 6c 24 68       	movq	%rbp, 0x68(%rsp)
ffffffff80012232: 4c 89 64 24 40       	movq	%r12, 0x40(%rsp)
ffffffff80012237: 48 89 94 24 78 04 00 00      	movq	%rdx, 0x478(%rsp)
ffffffff8001223f: 74 44                	je	0xffffffff80012285 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1255>
ffffffff80012241: 48 8d bc 24 08 02 00 00      	leaq	0x208(%rsp), %rdi
ffffffff80012249: 48 8d b4 24 f8 04 00 00      	leaq	0x4f8(%rsp), %rsi
ffffffff80012251: 48 8d 94 24 e8 00 00 00      	leaq	0xe8(%rsp), %rdx
ffffffff80012259: e8 42 1d 00 00       	callq	0xffffffff80013fa0 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca>
ffffffff8001225e: 48 8b 84 24 08 02 00 00      	movq	0x208(%rsp), %rax
ffffffff80012266: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff8001226b: 48 8b 9c 24 10 02 00 00      	movq	0x210(%rsp), %rbx
ffffffff80012273: 48 8b 84 24 18 02 00 00      	movq	0x218(%rsp), %rax
ffffffff8001227b: 48 89 84 24 c8 01 00 00      	movq	%rax, 0x1c8(%rsp)
ffffffff80012283: eb 1a                	jmp	0xffffffff8001229f <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x126f>
ffffffff80012285: bb 08 00 00 00       	movl	$0x8, %ebx
ffffffff8001228a: 48 c7 84 24 c8 01 00 00 00 00 00 00  	movq	$0x0, 0x1c8(%rsp)
ffffffff80012296: 48 c7 44 24 28 00 00 00 00   	movq	$0x0, 0x28(%rsp)
ffffffff8001229f: 4c 8b 54 24 08       	movq	0x8(%rsp), %r10
ffffffff800122a4: 4c 8b ac 24 30 06 00 00      	movq	0x630(%rsp), %r13
ffffffff800122ac: 4d 85 ed             	testq	%r13, %r13
ffffffff800122af: 0f 84 36 02 00 00    	je	0xffffffff800124eb <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x14bb>
ffffffff800122b5: 4c 8b a4 24 28 06 00 00      	movq	0x628(%rsp), %r12
ffffffff800122bd: 49 c1 e5 04          	shlq	$0x4, %r13
ffffffff800122c1: 4d 01 e5             	addq	%r12, %r13
ffffffff800122c4: eb 3b                	jmp	0xffffffff80012301 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x12d1>
ffffffff800122c6: 48 8d 84 24 70 01 00 00      	leaq	0x170(%rsp), %rax
ffffffff800122ce: 48 8d 8c 24 78 01 00 00      	leaq	0x178(%rsp), %rcx
ffffffff800122d6: 48 8b 00             	movq	(%rax), %rax
ffffffff800122d9: 4c 89 f2             	movq	%r14, %rdx
ffffffff800122dc: 48 c1 e2 04          	shlq	$0x4, %rdx
ffffffff800122e0: 4c 89 3c 10          	movq	%r15, (%rax,%rdx)
ffffffff800122e4: 48 89 6c 10 08       	movq	%rbp, 0x8(%rax,%rdx)
ffffffff800122e9: 49 ff c6             	incq	%r14
ffffffff800122ec: 4c 89 31             	movq	%r14, (%rcx)
ffffffff800122ef: 4c 8b 74 24 50       	movq	0x50(%rsp), %r14
ffffffff800122f4: 49 83 c4 10          	addq	$0x10, %r12
ffffffff800122f8: 4d 39 ec             	cmpq	%r13, %r12
ffffffff800122fb: 0f 84 ea 01 00 00    	je	0xffffffff800124eb <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x14bb>
ffffffff80012301: 49 8b 04 24          	movq	(%r12), %rax
ffffffff80012305: 48 83 f8 0f          	cmpq	$0xf, %rax
ffffffff80012309: 74 2a                	je	0xffffffff80012335 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1305>
ffffffff8001230b: 48 83 f8 1d          	cmpq	$0x1d, %rax
ffffffff8001230f: 75 e3                	jne	0xffffffff800122f4 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x12c4>
ffffffff80012311: 48 8b 94 24 f8 00 00 00      	movq	0xf8(%rsp), %rdx
ffffffff80012319: 48 85 d2             	testq	%rdx, %rdx
ffffffff8001231c: 74 d6                	je	0xffffffff800122f4 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x12c4>
ffffffff8001231e: 49 8b 44 24 08       	movq	0x8(%r12), %rax
ffffffff80012323: 48 8b 8c 24 f0 00 00 00      	movq	0xf0(%rsp), %rcx
ffffffff8001232b: 48 83 fa 01          	cmpq	$0x1, %rdx
ffffffff8001232f: 75 2f                	jne	0xffffffff80012360 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1330>
ffffffff80012331: 31 f6                	xorl	%esi, %esi
ffffffff80012333: eb 5d                	jmp	0xffffffff80012392 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1362>
ffffffff80012335: 48 8b 94 24 f8 00 00 00      	movq	0xf8(%rsp), %rdx
ffffffff8001233d: 48 85 d2             	testq	%rdx, %rdx
ffffffff80012340: 74 b2                	je	0xffffffff800122f4 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x12c4>
ffffffff80012342: 49 8b 44 24 08       	movq	0x8(%r12), %rax
ffffffff80012347: 48 8b 8c 24 f0 00 00 00      	movq	0xf0(%rsp), %rcx
ffffffff8001234f: 48 83 fa 01          	cmpq	$0x1, %rdx
ffffffff80012353: 0f 85 b8 00 00 00    	jne	0xffffffff80012411 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x13e1>
ffffffff80012359: 31 f6                	xorl	%esi, %esi
ffffffff8001235b: e9 e2 00 00 00       	jmp	0xffffffff80012442 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1412>
ffffffff80012360: 31 ff                	xorl	%edi, %edi
ffffffff80012362: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
ffffffff80012370: 49 89 d0             	movq	%rdx, %r8
ffffffff80012373: 49 d1 e8             	shrq	%r8
ffffffff80012376: 49 8d 34 38          	leaq	(%r8,%rdi), %rsi
ffffffff8001237a: 4c 8d 0c 76          	leaq	(%rsi,%rsi,2), %r9
ffffffff8001237e: 4a 39 04 c9          	cmpq	%rax, (%rcx,%r9,8)
ffffffff80012382: 48 0f 47 f7          	cmovaq	%rdi, %rsi
ffffffff80012386: 4c 29 c2             	subq	%r8, %rdx
ffffffff80012389: 48 89 f7             	movq	%rsi, %rdi
ffffffff8001238c: 48 83 fa 01          	cmpq	$0x1, %rdx
ffffffff80012390: 77 de                	ja	0xffffffff80012370 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1340>
ffffffff80012392: 48 8d 14 76          	leaq	(%rsi,%rsi,2), %rdx
ffffffff80012396: 48 39 04 d1          	cmpq	%rax, (%rcx,%rdx,8)
ffffffff8001239a: 75 0c                	jne	0xffffffff800123a8 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1378>
ffffffff8001239c: 4c 8b 7c d1 08       	movq	0x8(%rcx,%rdx,8), %r15
ffffffff800123a1: 48 8b 6c d1 10       	movq	0x10(%rcx,%rdx,8), %rbp
ffffffff800123a6: eb 29                	jmp	0xffffffff800123d1 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x13a1>
ffffffff800123a8: 48 83 d6 00          	adcq	$0x0, %rsi
ffffffff800123ac: 0f 84 42 ff ff ff    	je	0xffffffff800122f4 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x12c4>
ffffffff800123b2: 48 8d 14 76          	leaq	(%rsi,%rsi,2), %rdx
ffffffff800123b6: 4c 8b 7c d1 f0       	movq	-0x10(%rcx,%rdx,8), %r15
ffffffff800123bb: 48 8b 6c d1 f8       	movq	-0x8(%rcx,%rdx,8), %rbp
ffffffff800123c0: 48 2b 44 d1 e8       	subq	-0x18(%rcx,%rdx,8), %rax
ffffffff800123c5: 0f 85 e6 00 00 00    	jne	0xffffffff800124b1 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1481>
ffffffff800123cb: 48 29 c5             	subq	%rax, %rbp
ffffffff800123ce: 49 01 c7             	addq	%rax, %r15
ffffffff800123d1: 4c 8b b4 24 90 01 00 00      	movq	0x190(%rsp), %r14
ffffffff800123d9: 4c 3b b4 24 80 01 00 00      	cmpq	0x180(%rsp), %r14
ffffffff800123e1: 75 19                	jne	0xffffffff800123fc <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x13cc>
ffffffff800123e3: 48 8d bc 24 80 01 00 00      	leaq	0x180(%rsp), %rdi
ffffffff800123eb: 48 c7 c6 b0 25 02 80 	movq	$-0x7ffdda50, %rsi      # imm = 0x800225B0
ffffffff800123f2: e8 f9 35 00 00       	callq	0xffffffff800159f0 <alloc::raw_vec::RawVec<T,A>::grow_one::hfaf90d01a1f2efd7>
ffffffff800123f7: 4c 8b 54 24 08       	movq	0x8(%rsp), %r10
ffffffff800123fc: 48 8d 84 24 88 01 00 00      	leaq	0x188(%rsp), %rax
ffffffff80012404: 48 8d 8c 24 90 01 00 00      	leaq	0x190(%rsp), %rcx
ffffffff8001240c: e9 c5 fe ff ff       	jmp	0xffffffff800122d6 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x12a6>
ffffffff80012411: 31 ff                	xorl	%edi, %edi
ffffffff80012413: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
ffffffff80012420: 49 89 d0             	movq	%rdx, %r8
ffffffff80012423: 49 d1 e8             	shrq	%r8
ffffffff80012426: 49 8d 34 38          	leaq	(%r8,%rdi), %rsi
ffffffff8001242a: 4c 8d 0c 76          	leaq	(%rsi,%rsi,2), %r9
ffffffff8001242e: 4a 39 04 c9          	cmpq	%rax, (%rcx,%r9,8)
ffffffff80012432: 48 0f 47 f7          	cmovaq	%rdi, %rsi
ffffffff80012436: 4c 29 c2             	subq	%r8, %rdx
ffffffff80012439: 48 89 f7             	movq	%rsi, %rdi
ffffffff8001243c: 48 83 fa 01          	cmpq	$0x1, %rdx
ffffffff80012440: 77 de                	ja	0xffffffff80012420 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x13f0>
ffffffff80012442: 48 8d 14 76          	leaq	(%rsi,%rsi,2), %rdx
ffffffff80012446: 48 39 04 d1          	cmpq	%rax, (%rcx,%rdx,8)
ffffffff8001244a: 75 0c                	jne	0xffffffff80012458 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1428>
ffffffff8001244c: 4c 8b 7c d1 08       	movq	0x8(%rcx,%rdx,8), %r15
ffffffff80012451: 48 8b 6c d1 10       	movq	0x10(%rcx,%rdx,8), %rbp
ffffffff80012456: eb 25                	jmp	0xffffffff8001247d <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x144d>
ffffffff80012458: 48 83 d6 00          	adcq	$0x0, %rsi
ffffffff8001245c: 0f 84 92 fe ff ff    	je	0xffffffff800122f4 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x12c4>
ffffffff80012462: 48 8d 14 76          	leaq	(%rsi,%rsi,2), %rdx
ffffffff80012466: 4c 8b 7c d1 f0       	movq	-0x10(%rcx,%rdx,8), %r15
ffffffff8001246b: 48 8b 6c d1 f8       	movq	-0x8(%rcx,%rdx,8), %rbp
ffffffff80012470: 48 2b 44 d1 e8       	subq	-0x18(%rcx,%rdx,8), %rax
ffffffff80012475: 75 4f                	jne	0xffffffff800124c6 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1496>
ffffffff80012477: 48 29 c5             	subq	%rax, %rbp
ffffffff8001247a: 49 01 c7             	addq	%rax, %r15
ffffffff8001247d: 4c 8b b4 24 78 01 00 00      	movq	0x178(%rsp), %r14
ffffffff80012485: 4c 3b b4 24 68 01 00 00      	cmpq	0x168(%rsp), %r14
ffffffff8001248d: 0f 85 33 fe ff ff    	jne	0xffffffff800122c6 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1296>
ffffffff80012493: 48 8d bc 24 68 01 00 00      	leaq	0x168(%rsp), %rdi
ffffffff8001249b: 48 c7 c6 c8 25 02 80 	movq	$-0x7ffdda38, %rsi      # imm = 0x800225C8
ffffffff800124a2: e8 49 35 00 00       	callq	0xffffffff800159f0 <alloc::raw_vec::RawVec<T,A>::grow_one::hfaf90d01a1f2efd7>
ffffffff800124a7: 4c 8b 54 24 08       	movq	0x8(%rsp), %r10
ffffffff800124ac: e9 15 fe ff ff       	jmp	0xffffffff800122c6 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1296>
ffffffff800124b1: 48 39 c5             	cmpq	%rax, %rbp
ffffffff800124b4: 76 22                	jbe	0xffffffff800124d8 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x14a8>
ffffffff800124b6: 41 80 3c 07 c0       	cmpb	$-0x40, (%r15,%rax)
ffffffff800124bb: 0f 8c 33 fe ff ff    	jl	0xffffffff800122f4 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x12c4>
ffffffff800124c1: e9 05 ff ff ff       	jmp	0xffffffff800123cb <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x139b>
ffffffff800124c6: 48 39 c5             	cmpq	%rax, %rbp
ffffffff800124c9: 76 18                	jbe	0xffffffff800124e3 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x14b3>
ffffffff800124cb: 41 80 3c 07 c0       	cmpb	$-0x40, (%r15,%rax)
ffffffff800124d0: 0f 8c 1e fe ff ff    	jl	0xffffffff800122f4 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x12c4>
ffffffff800124d6: eb 9f                	jmp	0xffffffff80012477 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1447>
ffffffff800124d8: 0f 85 16 fe ff ff    	jne	0xffffffff800122f4 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x12c4>
ffffffff800124de: e9 e8 fe ff ff       	jmp	0xffffffff800123cb <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x139b>
ffffffff800124e3: 0f 85 0b fe ff ff    	jne	0xffffffff800122f4 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x12c4>
ffffffff800124e9: eb 8c                	jmp	0xffffffff80012477 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1447>
ffffffff800124eb: 48 8b 8c 24 28 05 00 00      	movq	0x528(%rsp), %rcx
ffffffff800124f3: 4c 8b 84 24 30 05 00 00      	movq	0x530(%rsp), %r8
ffffffff800124fb: 4d 85 c0             	testq	%r8, %r8
ffffffff800124fe: 74 2d                	je	0xffffffff8001252d <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x14fd>
ffffffff80012500: 4c 89 d0             	movq	%r10, %rax
ffffffff80012503: 48 29 c8             	subq	%rcx, %rax
ffffffff80012506: 48 8b 6c 24 68       	movq	0x68(%rsp), %rbp
ffffffff8001250b: 4c 8b 64 24 40       	movq	0x40(%rsp), %r12
ffffffff80012510: 48 8b 74 24 48       	movq	0x48(%rsp), %rsi
ffffffff80012515: 4c 8b 6c 24 18       	movq	0x18(%rsp), %r13
ffffffff8001251a: 0f 83 8d 00 00 00    	jae	0xffffffff800125ad <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x157d>
ffffffff80012520: 48 89 ca             	movq	%rcx, %rdx
ffffffff80012523: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff80012528: e9 8e 00 00 00       	jmp	0xffffffff800125bb <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x158b>
ffffffff8001252d: b8 01 00 00 00       	movl	$0x1, %eax
ffffffff80012532: 48 89 84 24 40 01 00 00      	movq	%rax, 0x140(%rsp)
ffffffff8001253a: 48 8b 74 24 48       	movq	0x48(%rsp), %rsi
ffffffff8001253f: e9 d6 07 00 00       	jmp	0xffffffff80012d1a <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1cea>
ffffffff80012544: 48 8b 84 24 20 02 00 00      	movq	0x220(%rsp), %rax
ffffffff8001254c: 4c 8b 6c 24 18       	movq	0x18(%rsp), %r13
ffffffff80012551: 49 89 45 20          	movq	%rax, 0x20(%r13)
ffffffff80012555: 48 8b 84 24 10 02 00 00      	movq	0x210(%rsp), %rax
ffffffff8001255d: 48 8b 8c 24 18 02 00 00      	movq	0x218(%rsp), %rcx
ffffffff80012565: 49 89 4d 18          	movq	%rcx, 0x18(%r13)
ffffffff80012569: 49 89 45 10          	movq	%rax, 0x10(%r13)
ffffffff8001256d: b8 08 00 00 00       	movl	$0x8, %eax
ffffffff80012572: e9 1f 07 00 00       	jmp	0xffffffff80012c96 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1c66>
ffffffff80012577: 48 39 d1             	cmpq	%rdx, %rcx
ffffffff8001257a: 0f 83 4e 07 00 00    	jae	0xffffffff80012cce <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1c9e>
ffffffff80012580: 31 ed                	xorl	%ebp, %ebp
ffffffff80012582: 49 89 d5             	movq	%rdx, %r13
ffffffff80012585: 4c 8b 64 24 40       	movq	0x40(%rsp), %r12
ffffffff8001258a: 4c 8b 7c 24 28       	movq	0x28(%rsp), %r15
ffffffff8001258f: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff80012594: 4c 89 68 10          	movq	%r13, 0x10(%rax)
ffffffff80012598: 49 89 c5             	movq	%rax, %r13
ffffffff8001259b: 48 89 48 18          	movq	%rcx, 0x18(%rax)
ffffffff8001259f: 48 89 50 20          	movq	%rdx, 0x20(%rax)
ffffffff800125a3: b8 08 00 00 00       	movl	$0x8, %eax
ffffffff800125a8: e9 68 08 00 00       	jmp	0xffffffff80012e15 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1de5>
ffffffff800125ad: 4c 39 c0             	cmpq	%r8, %rax
ffffffff800125b0: 0f 83 54 07 00 00    	jae	0xffffffff80012d0a <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1cda>
ffffffff800125b6: 31 c9                	xorl	%ecx, %ecx
ffffffff800125b8: 4c 89 c2             	movq	%r8, %rdx
ffffffff800125bb: 4c 8b 7c 24 28       	movq	0x28(%rsp), %r15
ffffffff800125c0: 49 89 4d 08          	movq	%rcx, 0x8(%r13)
ffffffff800125c4: 49 89 55 10          	movq	%rdx, 0x10(%r13)
ffffffff800125c8: 49 89 45 18          	movq	%rax, 0x18(%r13)
ffffffff800125cc: 4d 89 45 20          	movq	%r8, 0x20(%r13)
ffffffff800125d0: 49 c7 45 00 03 00 00 00      	movq	$0x3, (%r13)
ffffffff800125d8: e9 6d 08 00 00       	jmp	0xffffffff80012e4a <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1e1a>
ffffffff800125dd: 48 89 7c 24 08       	movq	%rdi, 0x8(%rsp)
ffffffff800125e2: 49 89 f7             	movq	%rsi, %r15
ffffffff800125e5: 48 89 9c 24 58 01 00 00      	movq	%rbx, 0x158(%rsp)
ffffffff800125ed: b9 02 00 00 00       	movl	$0x2, %ecx
ffffffff800125f2: 31 d2                	xorl	%edx, %edx
ffffffff800125f4: 66 83 7c 24 7a 03    	cmpw	$0x3, 0x7a(%rsp)
ffffffff800125fa: 48 8b 5c 24 18       	movq	0x18(%rsp), %rbx
ffffffff800125ff: 48 89 bb a0 03 00 00 	movq	%rdi, 0x3a0(%rbx)
ffffffff80012606: 48 89 ab a8 03 00 00 	movq	%rbp, 0x3a8(%rbx)
ffffffff8001260d: 48 89 83 b0 03 00 00 	movq	%rax, 0x3b0(%rbx)
ffffffff80012614: 48 89 8b b8 03 00 00 	movq	%rcx, 0x3b8(%rbx)
ffffffff8001261b: 0f b6 6c 24 15       	movzbl	0x15(%rsp), %ebp
ffffffff80012620: 0f 45 ea             	cmovnel	%edx, %ebp
ffffffff80012623: 48 8b 84 24 40 04 00 00      	movq	0x440(%rsp), %rax
ffffffff8001262b: 48 8b 8c 24 48 04 00 00      	movq	0x448(%rsp), %rcx
ffffffff80012633: 48 89 83 80 01 00 00 	movq	%rax, 0x180(%rbx)
ffffffff8001263a: 48 89 8b 88 01 00 00 	movq	%rcx, 0x188(%rbx)
ffffffff80012641: 48 8b 84 24 50 04 00 00      	movq	0x450(%rsp), %rax
ffffffff80012649: 48 89 83 90 01 00 00 	movq	%rax, 0x190(%rbx)
ffffffff80012650: 48 8b 84 24 58 04 00 00      	movq	0x458(%rsp), %rax
ffffffff80012658: 48 89 83 98 01 00 00 	movq	%rax, 0x198(%rbx)
ffffffff8001265f: 48 8b 84 24 60 04 00 00      	movq	0x460(%rsp), %rax
ffffffff80012667: 48 89 83 a0 01 00 00 	movq	%rax, 0x1a0(%rbx)
ffffffff8001266e: 48 8d b4 24 f8 04 00 00      	leaq	0x4f8(%rsp), %rsi
ffffffff80012676: ba 40 01 00 00       	movl	$0x140, %edx            # imm = 0x140
ffffffff8001267b: 48 89 df             	movq	%rbx, %rdi
ffffffff8001267e: ff 15 9c 3d 02 00    	callq	*0x23d9c(%rip)          # 0xffffffff80036420
ffffffff80012684: 0f b7 84 24 24 01 00 00      	movzwl	0x124(%rsp), %eax
ffffffff8001268c: 66 89 83 a6 02 00 00 	movw	%ax, 0x2a6(%rbx)
ffffffff80012693: 8b 84 24 20 01 00 00 	movl	0x120(%rsp), %eax
ffffffff8001269a: 89 83 a2 02 00 00    	movl	%eax, 0x2a2(%rbx)
ffffffff800126a0: 48 8b 84 24 18 01 00 00      	movq	0x118(%rsp), %rax
ffffffff800126a8: 48 89 83 d8 01 00 00 	movq	%rax, 0x1d8(%rbx)
ffffffff800126af: 48 8b 84 24 10 01 00 00      	movq	0x110(%rsp), %rax
ffffffff800126b7: 48 89 83 d0 01 00 00 	movq	%rax, 0x1d0(%rbx)
ffffffff800126be: 48 8b 84 24 08 01 00 00      	movq	0x108(%rsp), %rax
ffffffff800126c6: 48 89 83 c8 01 00 00 	movq	%rax, 0x1c8(%rbx)
ffffffff800126cd: 48 8b 84 24 00 01 00 00      	movq	0x100(%rsp), %rax
ffffffff800126d5: 48 89 83 c0 01 00 00 	movq	%rax, 0x1c0(%rbx)
ffffffff800126dc: 48 8b 84 24 f8 00 00 00      	movq	0xf8(%rsp), %rax
ffffffff800126e4: 48 89 83 b8 01 00 00 	movq	%rax, 0x1b8(%rbx)
ffffffff800126eb: 48 8b 84 24 f0 00 00 00      	movq	0xf0(%rsp), %rax
ffffffff800126f3: 48 89 83 b0 01 00 00 	movq	%rax, 0x1b0(%rbx)
ffffffff800126fa: 48 8b 84 24 e8 00 00 00      	movq	0xe8(%rsp), %rax
ffffffff80012702: 48 89 83 a8 01 00 00 	movq	%rax, 0x1a8(%rbx)
ffffffff80012709: 0f b7 84 24 3e 04 00 00      	movzwl	0x43e(%rsp), %eax
ffffffff80012711: 66 89 83 d6 02 00 00 	movw	%ax, 0x2d6(%rbx)
ffffffff80012718: 8b 84 24 3a 04 00 00 	movl	0x43a(%rsp), %eax
ffffffff8001271f: 89 83 d2 02 00 00    	movl	%eax, 0x2d2(%rbx)
ffffffff80012725: 48 8b 84 24 6e 04 00 00      	movq	0x46e(%rsp), %rax
ffffffff8001272d: 48 89 83 00 02 00 00 	movq	%rax, 0x200(%rbx)
ffffffff80012734: 48 8b 84 24 68 04 00 00      	movq	0x468(%rsp), %rax
ffffffff8001273c: 48 89 83 fa 01 00 00 	movq	%rax, 0x1fa(%rbx)
ffffffff80012743: 8b 84 24 59 03 00 00 	movl	0x359(%rsp), %eax
ffffffff8001274a: 89 83 03 03 00 00    	movl	%eax, 0x303(%rbx)
ffffffff80012750: 0f b6 84 24 5d 03 00 00      	movzbl	0x35d(%rsp), %eax
ffffffff80012758: 88 83 07 03 00 00    	movb	%al, 0x307(%rbx)
ffffffff8001275e: 8b 84 24 5e 03 00 00 	movl	0x35e(%rsp), %eax
ffffffff80012765: 89 83 33 03 00 00    	movl	%eax, 0x333(%rbx)
ffffffff8001276b: 0f b6 84 24 62 03 00 00      	movzbl	0x362(%rsp), %eax
ffffffff80012773: 88 83 37 03 00 00    	movb	%al, 0x337(%rbx)
ffffffff80012779: 8b 84 24 63 03 00 00 	movl	0x363(%rsp), %eax
ffffffff80012780: 89 83 63 03 00 00    	movl	%eax, 0x363(%rbx)
ffffffff80012786: 0f b6 84 24 67 03 00 00      	movzbl	0x367(%rsp), %eax
ffffffff8001278e: 88 83 67 03 00 00    	movb	%al, 0x367(%rbx)
ffffffff80012794: 48 8b 84 24 98 00 00 00      	movq	0x98(%rsp), %rax
ffffffff8001279c: 48 89 83 18 02 00 00 	movq	%rax, 0x218(%rbx)
ffffffff800127a3: 48 8b 84 24 a0 00 00 00      	movq	0xa0(%rsp), %rax
ffffffff800127ab: 48 89 83 20 02 00 00 	movq	%rax, 0x220(%rbx)
ffffffff800127b2: 48 8b 84 24 a8 00 00 00      	movq	0xa8(%rsp), %rax
ffffffff800127ba: 48 89 83 28 02 00 00 	movq	%rax, 0x228(%rbx)
ffffffff800127c1: 48 8b 84 24 78 01 00 00      	movq	0x178(%rsp), %rax
ffffffff800127c9: 48 89 83 58 02 00 00 	movq	%rax, 0x258(%rbx)
ffffffff800127d0: 48 8b 84 24 70 01 00 00      	movq	0x170(%rsp), %rax
ffffffff800127d8: 48 89 83 50 02 00 00 	movq	%rax, 0x250(%rbx)
ffffffff800127df: 48 8b 84 24 68 01 00 00      	movq	0x168(%rsp), %rax
ffffffff800127e7: 48 89 83 48 02 00 00 	movq	%rax, 0x248(%rbx)
ffffffff800127ee: 48 8b 84 24 80 01 00 00      	movq	0x180(%rsp), %rax
ffffffff800127f6: 48 89 83 60 02 00 00 	movq	%rax, 0x260(%rbx)
ffffffff800127fd: 48 8b 84 24 88 01 00 00      	movq	0x188(%rsp), %rax
ffffffff80012805: 48 89 83 68 02 00 00 	movq	%rax, 0x268(%rbx)
ffffffff8001280c: 48 8b 84 24 90 01 00 00      	movq	0x190(%rsp), %rax
ffffffff80012814: 48 89 83 70 02 00 00 	movq	%rax, 0x270(%rbx)
ffffffff8001281b: 48 8b 84 24 98 04 00 00      	movq	0x498(%rsp), %rax
ffffffff80012823: 48 89 83 c0 03 00 00 	movq	%rax, 0x3c0(%rbx)
ffffffff8001282a: 48 8b 84 24 a0 04 00 00      	movq	0x4a0(%rsp), %rax
ffffffff80012832: 48 89 83 c8 03 00 00 	movq	%rax, 0x3c8(%rbx)
ffffffff80012839: 48 8b 8c 24 90 04 00 00      	movq	0x490(%rsp), %rcx
ffffffff80012841: 48 89 8b d0 03 00 00 	movq	%rcx, 0x3d0(%rbx)
ffffffff80012848: 0f b7 84 24 50 03 00 00      	movzwl	0x350(%rsp), %eax
ffffffff80012850: 66 89 83 f0 03 00 00 	movw	%ax, 0x3f0(%rbx)
ffffffff80012857: 48 8b 84 24 48 03 00 00      	movq	0x348(%rsp), %rax
ffffffff8001285f: 48 89 83 e8 03 00 00 	movq	%rax, 0x3e8(%rbx)
ffffffff80012866: 4c 89 ab 68 03 00 00 	movq	%r13, 0x368(%rbx)
ffffffff8001286d: 49 89 dd             	movq	%rbx, %r13
ffffffff80012870: 48 8b 84 24 c8 00 00 00      	movq	0xc8(%rsp), %rax
ffffffff80012878: 48 89 83 70 03 00 00 	movq	%rax, 0x370(%rbx)
ffffffff8001287f: 4c 89 a3 78 03 00 00 	movq	%r12, 0x378(%rbx)
ffffffff80012886: 4c 89 bb 80 03 00 00 	movq	%r15, 0x380(%rbx)
ffffffff8001288d: 48 8b 84 24 e0 01 00 00      	movq	0x1e0(%rsp), %rax
ffffffff80012895: 48 89 83 88 03 00 00 	movq	%rax, 0x388(%rbx)
ffffffff8001289c: 48 8b 84 24 c0 00 00 00      	movq	0xc0(%rsp), %rax
ffffffff800128a4: 48 89 83 90 03 00 00 	movq	%rax, 0x390(%rbx)
ffffffff800128ab: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff800128b0: 48 89 83 98 03 00 00 	movq	%rax, 0x398(%rbx)
ffffffff800128b7: 4c 89 b3 40 01 00 00 	movq	%r14, 0x140(%rbx)
ffffffff800128be: 48 8b 44 24 68       	movq	0x68(%rsp), %rax
ffffffff800128c3: 48 89 83 48 01 00 00 	movq	%rax, 0x148(%rbx)
ffffffff800128ca: 48 8b 84 24 08 04 00 00      	movq	0x408(%rsp), %rax
ffffffff800128d2: 48 89 83 50 01 00 00 	movq	%rax, 0x150(%rbx)
ffffffff800128d9: 48 8b 84 24 d8 00 00 00      	movq	0xd8(%rsp), %rax
ffffffff800128e1: 48 89 83 58 01 00 00 	movq	%rax, 0x158(%rbx)
ffffffff800128e8: 48 8b 44 24 58       	movq	0x58(%rsp), %rax
ffffffff800128ed: 48 89 83 60 01 00 00 	movq	%rax, 0x160(%rbx)
ffffffff800128f4: 48 8b 84 24 d0 00 00 00      	movq	0xd0(%rsp), %rax
ffffffff800128fc: 48 89 83 68 01 00 00 	movq	%rax, 0x168(%rbx)
ffffffff80012903: 48 8b 84 24 f8 01 00 00      	movq	0x1f8(%rsp), %rax
ffffffff8001290b: 48 89 83 70 01 00 00 	movq	%rax, 0x170(%rbx)
ffffffff80012912: 48 8b 44 24 40       	movq	0x40(%rsp), %rax
ffffffff80012917: 48 89 83 78 01 00 00 	movq	%rax, 0x178(%rbx)
ffffffff8001291e: 48 8b 84 24 f0 01 00 00      	movq	0x1f0(%rsp), %rax
ffffffff80012926: 48 89 83 e0 01 00 00 	movq	%rax, 0x1e0(%rbx)
ffffffff8001292d: 48 8b 84 24 e8 01 00 00      	movq	0x1e8(%rsp), %rax
ffffffff80012935: 48 89 83 e8 01 00 00 	movq	%rax, 0x1e8(%rbx)
ffffffff8001293c: 48 8b 84 24 c8 03 00 00      	movq	0x3c8(%rsp), %rax
ffffffff80012944: 48 89 83 f0 01 00 00 	movq	%rax, 0x1f0(%rbx)
ffffffff8001294b: 48 8b 84 24 d0 03 00 00      	movq	0x3d0(%rsp), %rax
ffffffff80012953: 88 83 f8 01 00 00    	movb	%al, 0x1f8(%rbx)
ffffffff80012959: 48 8b 84 24 d8 03 00 00      	movq	0x3d8(%rsp), %rax
ffffffff80012961: 88 83 f9 01 00 00    	movb	%al, 0x1f9(%rbx)
ffffffff80012967: 48 8b 84 24 e8 03 00 00      	movq	0x3e8(%rsp), %rax
ffffffff8001296f: 48 89 83 08 02 00 00 	movq	%rax, 0x208(%rbx)
ffffffff80012976: 48 8b 84 24 e0 03 00 00      	movq	0x3e0(%rsp), %rax
ffffffff8001297e: 48 89 83 10 02 00 00 	movq	%rax, 0x210(%rbx)
ffffffff80012985: 48 8b 44 24 28       	movq	0x28(%rsp), %rax
ffffffff8001298a: 48 89 83 30 02 00 00 	movq	%rax, 0x230(%rbx)
ffffffff80012991: 48 8b 84 24 58 01 00 00      	movq	0x158(%rsp), %rax
ffffffff80012999: 48 89 83 38 02 00 00 	movq	%rax, 0x238(%rbx)
ffffffff800129a0: 48 8b 84 24 c8 01 00 00      	movq	0x1c8(%rsp), %rax
ffffffff800129a8: 48 89 83 40 02 00 00 	movq	%rax, 0x240(%rbx)
ffffffff800129af: 48 8b 84 24 78 03 00 00      	movq	0x378(%rsp), %rax
ffffffff800129b7: 48 89 83 78 02 00 00 	movq	%rax, 0x278(%rbx)
ffffffff800129be: 48 8b 84 24 80 03 00 00      	movq	0x380(%rsp), %rax
ffffffff800129c6: 48 89 83 80 02 00 00 	movq	%rax, 0x280(%rbx)
ffffffff800129cd: 48 8b 84 24 88 03 00 00      	movq	0x388(%rsp), %rax
ffffffff800129d5: 48 89 83 88 02 00 00 	movq	%rax, 0x288(%rbx)
ffffffff800129dc: 48 8b 84 24 90 03 00 00      	movq	0x390(%rsp), %rax
ffffffff800129e4: 48 89 83 90 02 00 00 	movq	%rax, 0x290(%rbx)
ffffffff800129eb: 48 8b 84 24 68 03 00 00      	movq	0x368(%rsp), %rax
ffffffff800129f3: 48 89 83 98 02 00 00 	movq	%rax, 0x298(%rbx)
ffffffff800129fa: 0f b6 44 24 16       	movzbl	0x16(%rsp), %eax
ffffffff800129ff: 88 83 a0 02 00 00    	movb	%al, 0x2a0(%rbx)
ffffffff80012a05: 48 8b 84 24 70 03 00 00      	movq	0x370(%rsp), %rax
ffffffff80012a0d: 88 83 a1 02 00 00    	movb	%al, 0x2a1(%rbx)
ffffffff80012a13: 48 8b 84 24 f0 03 00 00      	movq	0x3f0(%rsp), %rax
ffffffff80012a1b: 48 89 83 a8 02 00 00 	movq	%rax, 0x2a8(%rbx)
ffffffff80012a22: 48 8b 84 24 d8 01 00 00      	movq	0x1d8(%rsp), %rax
ffffffff80012a2a: 48 89 83 b0 02 00 00 	movq	%rax, 0x2b0(%rbx)
ffffffff80012a31: 48 8b 84 24 50 01 00 00      	movq	0x150(%rsp), %rax
ffffffff80012a39: 48 89 83 b8 02 00 00 	movq	%rax, 0x2b8(%rbx)
ffffffff80012a40: 48 8b 84 24 b8 03 00 00      	movq	0x3b8(%rsp), %rax
ffffffff80012a48: 48 89 83 c0 02 00 00 	movq	%rax, 0x2c0(%rbx)
ffffffff80012a4f: 48 8b 84 24 f8 03 00 00      	movq	0x3f8(%rsp), %rax
ffffffff80012a57: 48 89 83 c8 02 00 00 	movq	%rax, 0x2c8(%rbx)
ffffffff80012a5e: 0f b6 44 24 17       	movzbl	0x17(%rsp), %eax
ffffffff80012a63: 88 83 d0 02 00 00    	movb	%al, 0x2d0(%rbx)
ffffffff80012a69: 48 8b 84 24 c0 03 00 00      	movq	0x3c0(%rsp), %rax
ffffffff80012a71: 88 83 d1 02 00 00    	movb	%al, 0x2d1(%rbx)
ffffffff80012a77: 48 8b 84 24 40 01 00 00      	movq	0x140(%rsp), %rax
ffffffff80012a7f: 48 89 83 d8 02 00 00 	movq	%rax, 0x2d8(%rbx)
ffffffff80012a86: 48 8b 84 24 28 01 00 00      	movq	0x128(%rsp), %rax
ffffffff80012a8e: 48 89 83 e0 02 00 00 	movq	%rax, 0x2e0(%rbx)
ffffffff80012a95: 48 8b 84 24 38 01 00 00      	movq	0x138(%rsp), %rax
ffffffff80012a9d: 48 89 83 e8 02 00 00 	movq	%rax, 0x2e8(%rbx)
ffffffff80012aa4: 48 8b 84 24 c0 01 00 00      	movq	0x1c0(%rsp), %rax
ffffffff80012aac: 48 89 83 f0 02 00 00 	movq	%rax, 0x2f0(%rbx)
ffffffff80012ab3: 48 8b 84 24 98 03 00 00      	movq	0x398(%rsp), %rax
ffffffff80012abb: 48 89 83 f8 02 00 00 	movq	%rax, 0x2f8(%rbx)
ffffffff80012ac2: 48 8b 84 24 a0 03 00 00      	movq	0x3a0(%rsp), %rax
ffffffff80012aca: 88 83 00 03 00 00    	movb	%al, 0x300(%rbx)
ffffffff80012ad0: 8b 84 24 e0 00 00 00 	movl	0xe0(%rsp), %eax
ffffffff80012ad7: 66 89 83 01 03 00 00 	movw	%ax, 0x301(%rbx)
ffffffff80012ade: 48 8b 94 24 80 00 00 00      	movq	0x80(%rsp), %rdx
ffffffff80012ae6: 48 89 93 08 03 00 00 	movq	%rdx, 0x308(%rbx)
ffffffff80012aed: 48 8b 94 24 90 00 00 00      	movq	0x90(%rsp), %rdx
ffffffff80012af5: 48 89 93 10 03 00 00 	movq	%rdx, 0x310(%rbx)
ffffffff80012afc: 48 8b 94 24 b8 01 00 00      	movq	0x1b8(%rsp), %rdx
ffffffff80012b04: 48 89 93 18 03 00 00 	movq	%rdx, 0x318(%rbx)
ffffffff80012b0b: 48 8b 94 24 b8 00 00 00      	movq	0xb8(%rsp), %rdx
ffffffff80012b13: 48 89 93 20 03 00 00 	movq	%rdx, 0x320(%rbx)
ffffffff80012b1a: 48 8b 94 24 a8 03 00 00      	movq	0x3a8(%rsp), %rdx
ffffffff80012b22: 48 89 93 28 03 00 00 	movq	%rdx, 0x328(%rbx)
ffffffff80012b29: c6 83 30 03 00 00 00 	movb	$0x0, 0x330(%rbx)
ffffffff80012b30: 66 89 83 31 03 00 00 	movw	%ax, 0x331(%rbx)
ffffffff80012b37: 48 8b 94 24 48 01 00 00      	movq	0x148(%rsp), %rdx
ffffffff80012b3f: 48 89 93 38 03 00 00 	movq	%rdx, 0x338(%rbx)
ffffffff80012b46: 48 8b 94 24 88 00 00 00      	movq	0x88(%rsp), %rdx
ffffffff80012b4e: 48 89 93 40 03 00 00 	movq	%rdx, 0x340(%rbx)
ffffffff80012b55: 48 8b 94 24 30 01 00 00      	movq	0x130(%rsp), %rdx
ffffffff80012b5d: 48 89 93 48 03 00 00 	movq	%rdx, 0x348(%rbx)
ffffffff80012b64: 48 8b 94 24 a8 01 00 00      	movq	0x1a8(%rsp), %rdx
ffffffff80012b6c: 48 89 93 50 03 00 00 	movq	%rdx, 0x350(%rbx)
ffffffff80012b73: 48 8b 94 24 b0 03 00 00      	movq	0x3b0(%rsp), %rdx
ffffffff80012b7b: 48 89 93 58 03 00 00 	movq	%rdx, 0x358(%rbx)
ffffffff80012b82: 48 8b 94 24 b0 01 00 00      	movq	0x1b0(%rsp), %rdx
ffffffff80012b8a: 88 93 60 03 00 00    	movb	%dl, 0x360(%rbx)
ffffffff80012b90: 66 89 83 61 03 00 00 	movw	%ax, 0x361(%rbx)
ffffffff80012b97: 48 8b 84 24 88 04 00 00      	movq	0x488(%rsp), %rax
ffffffff80012b9f: 48 89 83 d8 03 00 00 	movq	%rax, 0x3d8(%rbx)
ffffffff80012ba6: 48 8b 84 24 10 04 00 00      	movq	0x410(%rsp), %rax
ffffffff80012bae: 48 89 83 e0 03 00 00 	movq	%rax, 0x3e0(%rbx)
ffffffff80012bb5: 8b 84 24 e4 00 00 00 	movl	0xe4(%rsp), %eax
ffffffff80012bbc: 66 89 83 f2 03 00 00 	movw	%ax, 0x3f2(%rbx)
ffffffff80012bc3: 8b 84 24 04 02 00 00 	movl	0x204(%rsp), %eax
ffffffff80012bca: 89 83 f4 03 00 00    	movl	%eax, 0x3f4(%rbx)
ffffffff80012bd0: 0f b7 44 24 7e       	movzwl	0x7e(%rsp), %eax
ffffffff80012bd5: 66 89 83 f8 03 00 00 	movw	%ax, 0x3f8(%rbx)
ffffffff80012bdc: 0f b7 44 24 7c       	movzwl	0x7c(%rsp), %eax
ffffffff80012be1: 66 89 83 fa 03 00 00 	movw	%ax, 0x3fa(%rbx)
ffffffff80012be8: 0f b7 44 24 66       	movzwl	0x66(%rsp), %eax
ffffffff80012bed: 66 89 83 fc 03 00 00 	movw	%ax, 0x3fc(%rbx)
ffffffff80012bf4: 0f b7 44 24 64       	movzwl	0x64(%rsp), %eax
ffffffff80012bf9: 66 89 83 fe 03 00 00 	movw	%ax, 0x3fe(%rbx)
ffffffff80012c00: 48 8b 84 24 d0 01 00 00      	movq	0x1d0(%rsp), %rax
ffffffff80012c08: 48 89 83 00 04 00 00 	movq	%rax, 0x400(%rbx)
ffffffff80012c0f: 48 8b 84 24 78 04 00 00      	movq	0x478(%rsp), %rax
ffffffff80012c17: 48 89 83 08 04 00 00 	movq	%rax, 0x408(%rbx)
ffffffff80012c1e: 48 8b 84 24 00 04 00 00      	movq	0x400(%rsp), %rax
ffffffff80012c26: 48 89 83 10 04 00 00 	movq	%rax, 0x410(%rbx)
ffffffff80012c2d: 48 8b 84 24 80 04 00 00      	movq	0x480(%rsp), %rax
ffffffff80012c35: 48 89 83 18 04 00 00 	movq	%rax, 0x418(%rbx)
ffffffff80012c3c: 48 89 8b 20 04 00 00 	movq	%rcx, 0x420(%rbx)
ffffffff80012c43: 8b 4c 24 74          	movl	0x74(%rsp), %ecx
ffffffff80012c47: 88 8b 28 04 00 00    	movb	%cl, 0x428(%rbx)
ffffffff80012c4d: 8b 44 24 24          	movl	0x24(%rsp), %eax
ffffffff80012c51: 88 83 29 04 00 00    	movb	%al, 0x429(%rbx)
ffffffff80012c57: 88 8b 2a 04 00 00    	movb	%cl, 0x42a(%rbx)
ffffffff80012c5d: 40 88 ab 2b 04 00 00 	movb	%bpl, 0x42b(%rbx)
ffffffff80012c64: 0f b6 44 24 3f       	movzbl	0x3f(%rsp), %eax
ffffffff80012c69: 88 83 2c 04 00 00    	movb	%al, 0x42c(%rbx)
ffffffff80012c6f: e9 0f 03 00 00       	jmp	0xffffffff80012f83 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1f53>
ffffffff80012c74: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff80012c79: eb 05                	jmp	0xffffffff80012c80 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1c50>
ffffffff80012c7b: 48 89 ee             	movq	%rbp, %rsi
ffffffff80012c7e: 31 c9                	xorl	%ecx, %ecx
ffffffff80012c80: 4c 8b 6c 24 18       	movq	0x18(%rsp), %r13
ffffffff80012c85: 49 89 4d 08          	movq	%rcx, 0x8(%r13)
ffffffff80012c89: 49 89 75 10          	movq	%rsi, 0x10(%r13)
ffffffff80012c8d: 49 89 45 18          	movq	%rax, 0x18(%r13)
ffffffff80012c91: b8 20 00 00 00       	movl	$0x20, %eax
ffffffff80012c96: 4c 8b 74 24 50       	movq	0x50(%rsp), %r14
ffffffff80012c9b: 4c 8b 64 24 40       	movq	0x40(%rsp), %r12
ffffffff80012ca0: 4c 8b 7c 24 28       	movq	0x28(%rsp), %r15
ffffffff80012ca5: e9 6b 01 00 00       	jmp	0xffffffff80012e15 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1de5>
ffffffff80012caa: 48 39 ea             	cmpq	%rbp, %rdx
ffffffff80012cad: 0f 83 e5 02 00 00    	jae	0xffffffff80012f98 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1f68>
ffffffff80012cb3: 31 c0                	xorl	%eax, %eax
ffffffff80012cb5: 48 89 ee             	movq	%rbp, %rsi
ffffffff80012cb8: 4c 8b 6c 24 18       	movq	0x18(%rsp), %r13
ffffffff80012cbd: 49 89 45 08          	movq	%rax, 0x8(%r13)
ffffffff80012cc1: 49 89 75 10          	movq	%rsi, 0x10(%r13)
ffffffff80012cc5: 49 89 55 18          	movq	%rdx, 0x18(%r13)
ffffffff80012cc9: e9 3d 01 00 00       	jmp	0xffffffff80012e0b <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1ddb>
ffffffff80012cce: 48 89 94 24 c8 00 00 00      	movq	%rdx, 0xc8(%rsp)
ffffffff80012cd6: 31 c9                	xorl	%ecx, %ecx
ffffffff80012cd8: 80 7c 24 48 02       	cmpb	$0x2, 0x48(%rsp)
ffffffff80012cdd: 0f 94 c1             	sete	%cl
ffffffff80012ce0: 45 31 e4             	xorl	%r12d, %r12d
ffffffff80012ce3: 48 ba 00 00 00 00 00 01 00 00	movabsq	$0x10000000000, %rdx # imm = 0x10000000000
ffffffff80012ced: 48 39 94 24 60 01 00 00      	cmpq	%rdx, 0x160(%rsp)
ffffffff80012cf5: 41 0f 95 c4          	setne	%r12b
ffffffff80012cf9: 4c 03 6c 24 30       	addq	0x30(%rsp), %r13
ffffffff80012cfe: 41 c1 e4 08          	shll	$0x8, %r12d
ffffffff80012d02: 49 09 cc             	orq	%rcx, %r12
ffffffff80012d05: e9 72 f4 ff ff       	jmp	0xffffffff8001217c <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x114c>
ffffffff80012d0a: 48 8b 44 24 30       	movq	0x30(%rsp), %rax
ffffffff80012d0f: 48 01 c8             	addq	%rcx, %rax
ffffffff80012d12: 48 89 84 24 40 01 00 00      	movq	%rax, 0x140(%rsp)
ffffffff80012d1a: 48 89 8c 24 c0 01 00 00      	movq	%rcx, 0x1c0(%rsp)
ffffffff80012d22: 40 80 fe 02          	cmpb	$0x2, %sil
ffffffff80012d26: b8 18 00 00 00       	movl	$0x18, %eax
ffffffff80012d2b: b9 0c 00 00 00       	movl	$0xc, %ecx
ffffffff80012d30: 48 0f 44 c8          	cmoveq	%rax, %rcx
ffffffff80012d34: 4c 89 c0             	movq	%r8, %rax
ffffffff80012d37: 48 c1 e8 20          	shrq	$0x20, %rax
ffffffff80012d3b: 74 0a                	je	0xffffffff80012d47 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1d17>
ffffffff80012d3d: 4c 89 c0             	movq	%r8, %rax
ffffffff80012d40: 31 d2                	xorl	%edx, %edx
ffffffff80012d42: 48 f7 f1             	divq	%rcx
ffffffff80012d45: eb 07                	jmp	0xffffffff80012d4e <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1d1e>
ffffffff80012d47: 44 89 c0             	movl	%r8d, %eax
ffffffff80012d4a: 31 d2                	xorl	%edx, %edx
ffffffff80012d4c: f7 f1                	divl	%ecx
ffffffff80012d4e: 48 89 84 24 38 01 00 00      	movq	%rax, 0x138(%rsp)
ffffffff80012d56: 4c 8b 7c 24 28       	movq	0x28(%rsp), %r15
ffffffff80012d5b: 31 ed                	xorl	%ebp, %ebp
ffffffff80012d5d: 40 80 fe 02          	cmpb	$0x2, %sil
ffffffff80012d61: 41 0f 94 c4          	sete	%r12b
ffffffff80012d65: 48 b8 00 00 00 00 00 01 00 00	movabsq	$0x10000000000, %rax # imm = 0x10000000000
ffffffff80012d6f: 48 39 84 24 60 01 00 00      	cmpq	%rax, 0x160(%rsp)
ffffffff80012d77: 41 0f 95 c5          	setne	%r13b
ffffffff80012d7b: 4c 8b b4 24 48 05 00 00      	movq	0x548(%rsp), %r14
ffffffff80012d83: 48 8b 84 24 50 05 00 00      	movq	0x550(%rsp), %rax
ffffffff80012d8b: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff80012d90: 48 89 8c 24 48 01 00 00      	movq	%rcx, 0x148(%rsp)
ffffffff80012d98: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff80012d9d: 48 85 c0             	testq	%rax, %rax
ffffffff80012da0: 48 89 84 24 90 00 00 00      	movq	%rax, 0x90(%rsp)
ffffffff80012da8: 0f 84 44 02 00 00    	je	0xffffffff80012ff2 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1fc2>
ffffffff80012dae: 4c 89 d0             	movq	%r10, %rax
ffffffff80012db1: 4c 29 f0             	subq	%r14, %rax
ffffffff80012db4: 73 02                	jae	0xffffffff80012db8 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1d88>
ffffffff80012db6: eb 16                	jmp	0xffffffff80012dce <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1d9e>
ffffffff80012db8: 48 8b 94 24 90 00 00 00      	movq	0x90(%rsp), %rdx
ffffffff80012dc0: 48 39 d0             	cmpq	%rdx, %rax
ffffffff80012dc3: 0f 83 1a 02 00 00    	jae	0xffffffff80012fe3 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1fb3>
ffffffff80012dc9: 31 c9                	xorl	%ecx, %ecx
ffffffff80012dcb: 49 89 d6             	movq	%rdx, %r14
ffffffff80012dce: 4c 8b 6c 24 18       	movq	0x18(%rsp), %r13
ffffffff80012dd3: 49 89 4d 08          	movq	%rcx, 0x8(%r13)
ffffffff80012dd7: 4d 89 75 10          	movq	%r14, 0x10(%r13)
ffffffff80012ddb: 49 89 45 18          	movq	%rax, 0x18(%r13)
ffffffff80012ddf: 48 8b 84 24 90 00 00 00      	movq	0x90(%rsp), %rax
ffffffff80012de7: e9 8e 02 00 00       	jmp	0xffffffff8001307a <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x204a>
ffffffff80012dec: 49 39 e8             	cmpq	%rbp, %r8
ffffffff80012def: 0f 83 a5 02 00 00    	jae	0xffffffff8001309a <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x206a>
ffffffff80012df5: 31 c0                	xorl	%eax, %eax
ffffffff80012df7: 48 89 ea             	movq	%rbp, %rdx
ffffffff80012dfa: 4c 8b 6c 24 18       	movq	0x18(%rsp), %r13
ffffffff80012dff: 49 89 45 08          	movq	%rax, 0x8(%r13)
ffffffff80012e03: 49 89 55 10          	movq	%rdx, 0x10(%r13)
ffffffff80012e07: 4d 89 45 18          	movq	%r8, 0x18(%r13)
ffffffff80012e0b: b8 20 00 00 00       	movl	$0x20, %eax
ffffffff80012e10: 4c 8b 64 24 40       	movq	0x40(%rsp), %r12
ffffffff80012e15: 49 89 6c 05 00       	movq	%rbp, (%r13,%rax)
ffffffff80012e1a: 49 c7 45 00 03 00 00 00      	movq	$0x3, (%r13)
ffffffff80012e22: 48 8b 84 24 98 00 00 00      	movq	0x98(%rsp), %rax
ffffffff80012e2a: 48 85 c0             	testq	%rax, %rax
ffffffff80012e2d: 74 16                	je	0xffffffff80012e45 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1e15>
ffffffff80012e2f: 48 8b bc 24 a0 00 00 00      	movq	0xa0(%rsp), %rdi
ffffffff80012e37: 48 6b f0 38          	imulq	$0x38, %rax, %rsi
ffffffff80012e3b: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff80012e40: e8 fb be ff ff       	callq	0xffffffff8000ed40 <__rust_dealloc>
ffffffff80012e45: 48 8b 6c 24 68       	movq	0x68(%rsp), %rbp
ffffffff80012e4a: 83 bc 24 f8 04 00 00 02      	cmpl	$0x2, 0x4f8(%rsp)
ffffffff80012e52: 74 23                	je	0xffffffff80012e77 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1e47>
ffffffff80012e54: 48 8b b4 24 20 06 00 00      	movq	0x620(%rsp), %rsi
ffffffff80012e5c: 48 85 f6             	testq	%rsi, %rsi
ffffffff80012e5f: 74 16                	je	0xffffffff80012e77 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1e47>
ffffffff80012e61: 48 8b bc 24 28 06 00 00      	movq	0x628(%rsp), %rdi
ffffffff80012e69: 48 c1 e6 04          	shlq	$0x4, %rsi
ffffffff80012e6d: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff80012e72: e8 c9 be ff ff       	callq	0xffffffff8000ed40 <__rust_dealloc>
ffffffff80012e77: 48 8b 84 24 e8 00 00 00      	movq	0xe8(%rsp), %rax
ffffffff80012e7f: 48 85 c0             	testq	%rax, %rax
ffffffff80012e82: 74 1a                	je	0xffffffff80012e9e <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1e6e>
ffffffff80012e84: 48 8b bc 24 f0 00 00 00      	movq	0xf0(%rsp), %rdi
ffffffff80012e8c: 48 c1 e0 03          	shlq	$0x3, %rax
ffffffff80012e90: 48 8d 34 40          	leaq	(%rax,%rax,2), %rsi
ffffffff80012e94: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff80012e99: e8 a2 be ff ff       	callq	0xffffffff8000ed40 <__rust_dealloc>
ffffffff80012e9e: 48 8b b4 24 80 01 00 00      	movq	0x180(%rsp), %rsi
ffffffff80012ea6: 48 85 f6             	testq	%rsi, %rsi
ffffffff80012ea9: 74 16                	je	0xffffffff80012ec1 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1e91>
ffffffff80012eab: 48 8b bc 24 88 01 00 00      	movq	0x188(%rsp), %rdi
ffffffff80012eb3: 48 c1 e6 04          	shlq	$0x4, %rsi
ffffffff80012eb7: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff80012ebc: e8 7f be ff ff       	callq	0xffffffff8000ed40 <__rust_dealloc>
ffffffff80012ec1: 48 8b b4 24 68 01 00 00      	movq	0x168(%rsp), %rsi
ffffffff80012ec9: 48 85 f6             	testq	%rsi, %rsi
ffffffff80012ecc: 74 16                	je	0xffffffff80012ee4 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1eb4>
ffffffff80012ece: 48 8b bc 24 70 01 00 00      	movq	0x170(%rsp), %rdi
ffffffff80012ed6: 48 c1 e6 04          	shlq	$0x4, %rsi
ffffffff80012eda: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff80012edf: e8 5c be ff ff       	callq	0xffffffff8000ed40 <__rust_dealloc>
ffffffff80012ee4: 4d 85 ff             	testq	%r15, %r15
ffffffff80012ee7: 74 14                	je	0xffffffff80012efd <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1ecd>
ffffffff80012ee9: 49 c1 e7 04          	shlq	$0x4, %r15
ffffffff80012eed: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff80012ef2: 48 89 df             	movq	%rbx, %rdi
ffffffff80012ef5: 4c 89 fe             	movq	%r15, %rsi
ffffffff80012ef8: e8 43 be ff ff       	callq	0xffffffff8000ed40 <__rust_dealloc>
ffffffff80012efd: 48 8b 84 24 f0 01 00 00      	movq	0x1f0(%rsp), %rax
ffffffff80012f05: 48 85 c0             	testq	%rax, %rax
ffffffff80012f08: 74 1a                	je	0xffffffff80012f24 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1ef4>
ffffffff80012f0a: 48 c1 e0 03          	shlq	$0x3, %rax
ffffffff80012f0e: 48 8d 34 40          	leaq	(%rax,%rax,2), %rsi
ffffffff80012f12: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff80012f17: 48 8b bc 24 e8 01 00 00      	movq	0x1e8(%rsp), %rdi
ffffffff80012f1f: e8 1c be ff ff       	callq	0xffffffff8000ed40 <__rust_dealloc>
ffffffff80012f24: 48 8b 84 24 f8 01 00 00      	movq	0x1f8(%rsp), %rax
ffffffff80012f2c: 48 85 c0             	testq	%rax, %rax
ffffffff80012f2f: 48 8b 5c 24 58       	movq	0x58(%rsp), %rbx
ffffffff80012f34: 74 15                	je	0xffffffff80012f4b <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1f1b>
ffffffff80012f36: 48 c1 e0 03          	shlq	$0x3, %rax
ffffffff80012f3a: 48 8d 34 40          	leaq	(%rax,%rax,2), %rsi
ffffffff80012f3e: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff80012f43: 4c 89 e7             	movq	%r12, %rdi
ffffffff80012f46: e8 f5 bd ff ff       	callq	0xffffffff8000ed40 <__rust_dealloc>
ffffffff80012f4b: 48 8b 84 24 d8 00 00 00      	movq	0xd8(%rsp), %rax
ffffffff80012f53: 48 85 c0             	testq	%rax, %rax
ffffffff80012f56: 74 15                	je	0xffffffff80012f6d <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1f3d>
ffffffff80012f58: 48 c1 e0 03          	shlq	$0x3, %rax
ffffffff80012f5c: 48 8d 34 c0          	leaq	(%rax,%rax,8), %rsi
ffffffff80012f60: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff80012f65: 48 89 df             	movq	%rbx, %rdi
ffffffff80012f68: e8 d3 bd ff ff       	callq	0xffffffff8000ed40 <__rust_dealloc>
ffffffff80012f6d: 4d 85 f6             	testq	%r14, %r14
ffffffff80012f70: 74 11                	je	0xffffffff80012f83 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1f53>
ffffffff80012f72: 49 6b f6 38          	imulq	$0x38, %r14, %rsi
ffffffff80012f76: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff80012f7b: 48 89 ef             	movq	%rbp, %rdi
ffffffff80012f7e: e8 bd bd ff ff       	callq	0xffffffff8000ed40 <__rust_dealloc>
ffffffff80012f83: 4c 89 e8             	movq	%r13, %rax
ffffffff80012f86: 48 81 c4 38 06 00 00 	addq	$0x638, %rsp            # imm = 0x638
ffffffff80012f8d: 5b                   	popq	%rbx
ffffffff80012f8e: 41 5c                	popq	%r12
ffffffff80012f90: 41 5d                	popq	%r13
ffffffff80012f92: 41 5e                	popq	%r14
ffffffff80012f94: 41 5f                	popq	%r15
ffffffff80012f96: 5d                   	popq	%rbp
ffffffff80012f97: c3                   	retq
ffffffff80012f98: 48 8b 54 24 58       	movq	0x58(%rsp), %rdx
ffffffff80012f9d: 8b 4c 0a f8          	movl	-0x8(%rdx,%rcx), %ecx
ffffffff80012fa1: 48 89 8c 24 c0 00 00 00      	movq	%rcx, 0xc0(%rsp)
ffffffff80012fa9: 31 c9                	xorl	%ecx, %ecx
ffffffff80012fab: 80 7c 24 48 02       	cmpb	$0x2, 0x48(%rsp)
ffffffff80012fb0: 0f 94 c1             	sete	%cl
ffffffff80012fb3: 31 ff                	xorl	%edi, %edi
ffffffff80012fb5: 48 ba 00 00 00 00 00 01 00 00	movabsq	$0x10000000000, %rdx # imm = 0x10000000000
ffffffff80012fbf: 48 39 94 24 60 01 00 00      	cmpq	%rdx, 0x160(%rsp)
ffffffff80012fc7: 40 0f 95 c7          	setne	%dil
ffffffff80012fcb: 48 03 74 24 30       	addq	0x30(%rsp), %rsi
ffffffff80012fd0: c1 e7 08             	shll	$0x8, %edi
ffffffff80012fd3: 48 09 cf             	orq	%rcx, %rdi
ffffffff80012fd6: 48 89 ac 24 e0 01 00 00      	movq	%rbp, 0x1e0(%rsp)
ffffffff80012fde: e9 e5 f1 ff ff       	jmp	0xffffffff800121c8 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1198>
ffffffff80012fe3: 48 8b 44 24 30       	movq	0x30(%rsp), %rax
ffffffff80012fe8: 4a 8d 0c 30          	leaq	(%rax,%r14), %rcx
ffffffff80012fec: 48 89 d0             	movq	%rdx, %rax
ffffffff80012fef: 48 89 ca             	movq	%rcx, %rdx
ffffffff80012ff2: 48 89 94 24 80 00 00 00      	movq	%rdx, 0x80(%rsp)
ffffffff80012ffa: 80 7c 24 48 02       	cmpb	$0x2, 0x48(%rsp)
ffffffff80012fff: 0f 94 c1             	sete	%cl
ffffffff80013002: 80 c1 03             	addb	$0x3, %cl
ffffffff80013005: 48 d3 e8             	shrq	%cl, %rax
ffffffff80013008: 48 89 84 24 b8 01 00 00      	movq	%rax, 0x1b8(%rsp)
ffffffff80013010: 48 8b 94 24 88 05 00 00      	movq	0x588(%rsp), %rdx
ffffffff80013018: 48 8b 8c 24 90 05 00 00      	movq	0x590(%rsp), %rcx
ffffffff80013020: 48 8b bc 24 98 05 00 00      	movq	0x598(%rsp), %rdi
ffffffff80013028: 48 89 94 24 88 00 00 00      	movq	%rdx, 0x88(%rsp)
ffffffff80013030: 48 85 d2             	testq	%rdx, %rdx
ffffffff80013033: 0f 84 c2 00 00 00    	je	0xffffffff800130fb <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x20cb>
ffffffff80013039: 4c 89 d0             	movq	%r10, %rax
ffffffff8001303c: 48 89 fe             	movq	%rdi, %rsi
ffffffff8001303f: 48 29 f8             	subq	%rdi, %rax
ffffffff80013042: 73 07                	jae	0xffffffff8001304b <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x201b>
ffffffff80013044: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff80013049: eb 16                	jmp	0xffffffff80013061 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x2031>
ffffffff8001304b: 48 8b 94 24 88 00 00 00      	movq	0x88(%rsp), %rdx
ffffffff80013053: 48 39 d0             	cmpq	%rdx, %rax
ffffffff80013056: 0f 83 8c 00 00 00    	jae	0xffffffff800130e8 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x20b8>
ffffffff8001305c: 31 c9                	xorl	%ecx, %ecx
ffffffff8001305e: 48 89 d6             	movq	%rdx, %rsi
ffffffff80013061: 4c 8b 6c 24 18       	movq	0x18(%rsp), %r13
ffffffff80013066: 49 89 4d 08          	movq	%rcx, 0x8(%r13)
ffffffff8001306a: 49 89 75 10          	movq	%rsi, 0x10(%r13)
ffffffff8001306e: 49 89 45 18          	movq	%rax, 0x18(%r13)
ffffffff80013072: 48 8b 84 24 88 00 00 00      	movq	0x88(%rsp), %rax
ffffffff8001307a: 49 89 45 20          	movq	%rax, 0x20(%r13)
ffffffff8001307e: 49 c7 45 00 03 00 00 00      	movq	$0x3, (%r13)
ffffffff80013086: 48 8b 6c 24 68       	movq	0x68(%rsp), %rbp
ffffffff8001308b: 4c 8b 74 24 50       	movq	0x50(%rsp), %r14
ffffffff80013090: 4c 8b 64 24 40       	movq	0x40(%rsp), %r12
ffffffff80013095: e9 b0 fd ff ff       	jmp	0xffffffff80012e4a <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1e1a>
ffffffff8001309a: 48 89 7c 24 08       	movq	%rdi, 0x8(%rsp)
ffffffff8001309f: 49 89 f7             	movq	%rsi, %r15
ffffffff800130a2: 48 89 9c 24 58 01 00 00      	movq	%rbx, 0x158(%rsp)
ffffffff800130aa: 48 8b 44 24 58       	movq	0x58(%rsp), %rax
ffffffff800130af: 8b 44 08 f8          	movl	-0x8(%rax,%rcx), %eax
ffffffff800130b3: 31 f6                	xorl	%esi, %esi
ffffffff800130b5: 80 7c 24 48 02       	cmpb	$0x2, 0x48(%rsp)
ffffffff800130ba: 40 0f 94 c6          	sete	%sil
ffffffff800130be: 31 c9                	xorl	%ecx, %ecx
ffffffff800130c0: 48 bf 00 00 00 00 00 01 00 00	movabsq	$0x10000000000, %rdi # imm = 0x10000000000
ffffffff800130ca: 48 39 bc 24 60 01 00 00      	cmpq	%rdi, 0x160(%rsp)
ffffffff800130d2: 0f 95 c1             	setne	%cl
ffffffff800130d5: 48 8b 7c 24 30       	movq	0x30(%rsp), %rdi
ffffffff800130da: 48 01 d7             	addq	%rdx, %rdi
ffffffff800130dd: c1 e1 08             	shll	$0x8, %ecx
ffffffff800130e0: 48 09 f1             	orq	%rsi, %rcx
ffffffff800130e3: e9 0a f5 ff ff       	jmp	0xffffffff800125f2 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x15c2>
ffffffff800130e8: 48 8b 44 24 30       	movq	0x30(%rsp), %rax
ffffffff800130ed: 48 89 f7             	movq	%rsi, %rdi
ffffffff800130f0: 48 01 f0             	addq	%rsi, %rax
ffffffff800130f3: 48 89 84 24 48 01 00 00      	movq	%rax, 0x148(%rsp)
ffffffff800130fb: 48 89 bc 24 a8 01 00 00      	movq	%rdi, 0x1a8(%rsp)
ffffffff80013103: 31 c0                	xorl	%eax, %eax
ffffffff80013105: 48 83 f9 07          	cmpq	$0x7, %rcx
ffffffff80013109: 0f 94 c0             	sete	%al
ffffffff8001310c: 80 7c 24 48 02       	cmpb	$0x2, 0x48(%rsp)
ffffffff80013111: 48 8d 14 85 08 00 00 00      	leaq	0x8(,%rax,4), %rdx
ffffffff80013119: 48 8d 34 c5 10 00 00 00      	leaq	0x10(,%rax,8), %rsi
ffffffff80013121: 48 0f 45 f2          	cmovneq	%rdx, %rsi
ffffffff80013125: 48 8b 84 24 88 00 00 00      	movq	0x88(%rsp), %rax
ffffffff8001312d: 48 89 c2             	movq	%rax, %rdx
ffffffff80013130: 48 c1 ea 20          	shrq	$0x20, %rdx
ffffffff80013134: 74 07                	je	0xffffffff8001313d <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x210d>
ffffffff80013136: 31 d2                	xorl	%edx, %edx
ffffffff80013138: 48 f7 f6             	divq	%rsi
ffffffff8001313b: eb 04                	jmp	0xffffffff80013141 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x2111>
ffffffff8001313d: 31 d2                	xorl	%edx, %edx
ffffffff8001313f: f7 f6                	divl	%esi
ffffffff80013141: 48 89 84 24 30 01 00 00      	movq	%rax, 0x130(%rsp)
ffffffff80013149: 48 83 f9 07          	cmpq	$0x7, %rcx
ffffffff8001314d: 0f 94 c0             	sete	%al
ffffffff80013150: 48 89 84 24 b0 01 00 00      	movq	%rax, 0x1b0(%rsp)
ffffffff80013158: f6 84 24 f8 04 00 00 01      	testb	$0x1, 0x4f8(%rsp)
ffffffff80013160: 4c 89 84 24 28 01 00 00      	movq	%r8, 0x128(%rsp)
ffffffff80013168: 74 30                	je	0xffffffff8001319a <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x216a>
ffffffff8001316a: 45 31 c0             	xorl	%r8d, %r8d
ffffffff8001316d: 80 7c 24 48 02       	cmpb	$0x2, 0x48(%rsp)
ffffffff80013172: 41 0f 94 c0          	sete	%r8b
ffffffff80013176: 48 8b 8c 24 00 05 00 00      	movq	0x500(%rsp), %rcx
ffffffff8001317e: 48 8d bc 24 08 02 00 00      	leaq	0x208(%rsp), %rdi
ffffffff80013186: 48 8b 74 24 30       	movq	0x30(%rsp), %rsi
ffffffff8001318b: 4c 89 d2             	movq	%r10, %rdx
ffffffff8001318e: 44 8b 4c 24 24       	movl	0x24(%rsp), %r9d
ffffffff80013193: e8 88 04 00 00       	callq	0xffffffff80013620 <goblin::elf::gnu_hash_len::h50a1755dadcf02de>
ffffffff80013198: eb 46                	jmp	0xffffffff800131e0 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x21b0>
ffffffff8001319a: f6 84 24 08 05 00 00 01      	testb	$0x1, 0x508(%rsp)
ffffffff800131a2: 0f 84 8a 00 00 00    	je	0xffffffff80013232 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x2202>
ffffffff800131a8: 45 31 c9             	xorl	%r9d, %r9d
ffffffff800131ab: 80 7c 24 48 02       	cmpb	$0x2, 0x48(%rsp)
ffffffff800131b0: 41 0f 94 c1          	sete	%r9b
ffffffff800131b4: 48 8b 8c 24 10 05 00 00      	movq	0x510(%rsp), %rcx
ffffffff800131bc: 8b 44 24 24          	movl	0x24(%rsp), %eax
ffffffff800131c0: 89 04 24             	movl	%eax, (%rsp)
ffffffff800131c3: 48 8d bc 24 08 02 00 00      	leaq	0x208(%rsp), %rdi
ffffffff800131cb: 48 8b 74 24 30       	movq	0x30(%rsp), %rsi
ffffffff800131d0: 4c 89 d2             	movq	%r10, %rdx
ffffffff800131d3: 44 8b 84 24 e4 00 00 00      	movl	0xe4(%rsp), %r8d
ffffffff800131db: e8 60 07 00 00       	callq	0xffffffff80013940 <goblin::elf::hash_len::hbf61a7b243282ab8>
ffffffff800131e0: 48 8b 84 24 08 02 00 00      	movq	0x208(%rsp), %rax
ffffffff800131e8: 4c 8b bc 24 10 02 00 00      	movq	0x210(%rsp), %r15
ffffffff800131f0: 48 83 f8 07          	cmpq	$0x7, %rax
ffffffff800131f4: 75 12                	jne	0xffffffff80013208 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x21d8>
ffffffff800131f6: 4c 89 b4 24 b8 00 00 00      	movq	%r14, 0xb8(%rsp)
ffffffff800131fe: 4c 8b 84 24 28 01 00 00      	movq	0x128(%rsp), %r8
ffffffff80013206: eb 35                	jmp	0xffffffff8001323d <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x220d>
ffffffff80013208: 48 8b 8c 24 18 02 00 00      	movq	0x218(%rsp), %rcx
ffffffff80013210: 48 8b 94 24 20 02 00 00      	movq	0x220(%rsp), %rdx
ffffffff80013218: 4c 8b 6c 24 18       	movq	0x18(%rsp), %r13
ffffffff8001321d: 49 89 55 20          	movq	%rdx, 0x20(%r13)
ffffffff80013221: 49 89 4d 18          	movq	%rcx, 0x18(%r13)
ffffffff80013225: 49 89 45 08          	movq	%rax, 0x8(%r13)
ffffffff80013229: 4d 89 7d 10          	movq	%r15, 0x10(%r13)
ffffffff8001322d: e9 c0 01 00 00       	jmp	0xffffffff800133f2 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x23c2>
ffffffff80013232: 4c 89 b4 24 b8 00 00 00      	movq	%r14, 0xb8(%rsp)
ffffffff8001323a: 45 31 ff             	xorl	%r15d, %r15d
ffffffff8001323d: 48 8b 8c 24 80 00 00 00      	movq	0x80(%rsp), %rcx
ffffffff80013245: 31 c0                	xorl	%eax, %eax
ffffffff80013247: 44 88 e8             	movb	%r13b, %al
ffffffff8001324a: 41 89 c5             	movl	%eax, %r13d
ffffffff8001324d: 44 88 e5             	movb	%r12b, %bpl
ffffffff80013250: 41 c1 e5 08          	shll	$0x8, %r13d
ffffffff80013254: 41 09 ed             	orl	%ebp, %r13d
ffffffff80013257: 31 ed                	xorl	%ebp, %ebp
ffffffff80013259: 80 7c 24 48 02       	cmpb	$0x2, 0x48(%rsp)
ffffffff8001325e: 40 0f 94 c5          	sete	%bpl
ffffffff80013262: 48 8b 84 24 40 01 00 00      	movq	0x140(%rsp), %rax
ffffffff8001326a: 48 89 84 24 08 02 00 00      	movq	%rax, 0x208(%rsp)
ffffffff80013272: 4c 89 84 24 10 02 00 00      	movq	%r8, 0x210(%rsp)
ffffffff8001327a: 48 c7 84 24 18 02 00 00 00 00 00 00  	movq	$0x0, 0x218(%rsp)
ffffffff80013286: 48 c7 84 24 20 02 00 00 00 00 00 00  	movq	$0x0, 0x220(%rsp)
ffffffff80013292: 48 8b 84 24 38 01 00 00      	movq	0x138(%rsp), %rax
ffffffff8001329a: 48 89 84 24 28 02 00 00      	movq	%rax, 0x228(%rsp)
ffffffff800132a2: c6 84 24 30 02 00 00 01      	movb	$0x1, 0x230(%rsp)
ffffffff800132aa: 66 44 89 ac 24 31 02 00 00   	movw	%r13w, 0x231(%rsp)
ffffffff800132b3: 48 89 8c 24 38 02 00 00      	movq	%rcx, 0x238(%rsp)
ffffffff800132bb: 4c 8b b4 24 90 00 00 00      	movq	0x90(%rsp), %r14
ffffffff800132c3: 4c 89 b4 24 40 02 00 00      	movq	%r14, 0x240(%rsp)
ffffffff800132cb: 48 c7 84 24 48 02 00 00 00 00 00 00  	movq	$0x0, 0x248(%rsp)
ffffffff800132d7: 48 c7 84 24 50 02 00 00 00 00 00 00  	movq	$0x0, 0x250(%rsp)
ffffffff800132e3: 48 8b 84 24 b8 01 00 00      	movq	0x1b8(%rsp), %rax
ffffffff800132eb: 48 89 84 24 58 02 00 00      	movq	%rax, 0x258(%rsp)
ffffffff800132f3: c6 84 24 60 02 00 00 00      	movb	$0x0, 0x260(%rsp)
ffffffff800132fb: 66 44 89 ac 24 61 02 00 00   	movw	%r13w, 0x261(%rsp)
ffffffff80013304: 48 8b 84 24 48 01 00 00      	movq	0x148(%rsp), %rax
ffffffff8001330c: 48 89 84 24 68 02 00 00      	movq	%rax, 0x268(%rsp)
ffffffff80013314: 4c 8b b4 24 88 00 00 00      	movq	0x88(%rsp), %r14
ffffffff8001331c: 4c 89 b4 24 70 02 00 00      	movq	%r14, 0x270(%rsp)
ffffffff80013324: 48 c7 84 24 78 02 00 00 00 00 00 00  	movq	$0x0, 0x278(%rsp)
ffffffff80013330: 48 c7 84 24 80 02 00 00 00 00 00 00  	movq	$0x0, 0x280(%rsp)
ffffffff8001333c: 48 8b 84 24 30 01 00 00      	movq	0x130(%rsp), %rax
ffffffff80013344: 48 89 84 24 88 02 00 00      	movq	%rax, 0x288(%rsp)
ffffffff8001334c: 48 8b 84 24 b0 01 00 00      	movq	0x1b0(%rsp), %rax
ffffffff80013354: 88 84 24 90 02 00 00 	movb	%al, 0x290(%rsp)
ffffffff8001335b: 66 44 89 ac 24 91 02 00 00   	movw	%r13w, 0x291(%rsp)
ffffffff80013364: 48 8d bc 24 08 02 00 00      	leaq	0x208(%rsp), %rdi
ffffffff8001336c: 31 f6                	xorl	%esi, %esi
ffffffff8001336e: 4d 89 c4             	movq	%r8, %r12
ffffffff80013371: e8 4a 36 00 00       	callq	0xffffffff800169c0 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045>
ffffffff80013376: 4c 8d 40 01          	leaq	0x1(%rax), %r8
ffffffff8001337a: 4d 39 f8             	cmpq	%r15, %r8
ffffffff8001337d: 4d 0f 46 c7          	cmovbeq	%r15, %r8
ffffffff80013381: 48 85 c0             	testq	%rax, %rax
ffffffff80013384: 4d 0f 44 c7          	cmoveq	%r15, %r8
ffffffff80013388: 48 8b 8c 24 78 05 00 00      	movq	0x578(%rsp), %rcx
ffffffff80013390: 8b 44 24 24          	movl	0x24(%rsp), %eax
ffffffff80013394: 89 04 24             	movl	%eax, (%rsp)
ffffffff80013397: 48 8d bc 24 08 02 00 00      	leaq	0x208(%rsp), %rdi
ffffffff8001339f: 48 8b 74 24 30       	movq	0x30(%rsp), %rsi
ffffffff800133a4: 48 8b 54 24 08       	movq	0x8(%rsp), %rdx
ffffffff800133a9: 41 89 e9             	movl	%ebp, %r9d
ffffffff800133ac: e8 6f 2c 00 00       	callq	0xffffffff80016020 <goblin::elf::sym::Symtab::parse::h4eac2ba9bb25dec5>
ffffffff800133b1: 0f b6 84 24 30 02 00 00      	movzbl	0x230(%rsp), %eax
ffffffff800133b9: 48 8b bc 24 08 02 00 00      	movq	0x208(%rsp), %rdi
ffffffff800133c1: 48 8b b4 24 10 02 00 00      	movq	0x210(%rsp), %rsi
ffffffff800133c9: 48 8b 94 24 18 02 00 00      	movq	0x218(%rsp), %rdx
ffffffff800133d1: 48 8b 8c 24 20 02 00 00      	movq	0x220(%rsp), %rcx
ffffffff800133d9: 3c 02                	cmpb	$0x2, %al
ffffffff800133db: 75 36                	jne	0xffffffff80013413 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x23e3>
ffffffff800133dd: 4c 8b 6c 24 18       	movq	0x18(%rsp), %r13
ffffffff800133e2: 49 89 7d 08          	movq	%rdi, 0x8(%r13)
ffffffff800133e6: 49 89 75 10          	movq	%rsi, 0x10(%r13)
ffffffff800133ea: 49 89 55 18          	movq	%rdx, 0x18(%r13)
ffffffff800133ee: 49 89 4d 20          	movq	%rcx, 0x20(%r13)
ffffffff800133f2: 49 c7 45 00 03 00 00 00      	movq	$0x3, (%r13)
ffffffff800133fa: 48 8b 6c 24 68       	movq	0x68(%rsp), %rbp
ffffffff800133ff: 4c 8b 74 24 50       	movq	0x50(%rsp), %r14
ffffffff80013404: 4c 8b 64 24 40       	movq	0x40(%rsp), %r12
ffffffff80013409: 4c 8b 7c 24 28       	movq	0x28(%rsp), %r15
ffffffff8001340e: e9 37 fa ff ff       	jmp	0xffffffff80012e4a <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x1e1a>
ffffffff80013413: 48 89 bc 24 78 03 00 00      	movq	%rdi, 0x378(%rsp)
ffffffff8001341b: 48 89 b4 24 80 03 00 00      	movq	%rsi, 0x380(%rsp)
ffffffff80013423: 48 89 94 24 88 03 00 00      	movq	%rdx, 0x388(%rsp)
ffffffff8001342b: 48 89 8c 24 90 03 00 00      	movq	%rcx, 0x390(%rsp)
ffffffff80013433: 88 44 24 16          	movb	%al, 0x16(%rsp)
ffffffff80013437: 44 89 ac 24 e0 00 00 00      	movl	%r13d, 0xe0(%rsp)
ffffffff8001343f: 48 8b 84 24 c0 01 00 00      	movq	0x1c0(%rsp), %rax
ffffffff80013447: 4c 01 e0             	addq	%r12, %rax
ffffffff8001344a: 48 89 84 24 98 03 00 00      	movq	%rax, 0x398(%rsp)
ffffffff80013452: 48 8b 84 24 b8 00 00 00      	movq	0xb8(%rsp), %rax
ffffffff8001345a: 48 8b 8c 24 90 00 00 00      	movq	0x90(%rsp), %rcx
ffffffff80013462: 48 01 c8             	addq	%rcx, %rax
ffffffff80013465: 48 89 84 24 a8 03 00 00      	movq	%rax, 0x3a8(%rsp)
ffffffff8001346d: 48 8b 84 24 a8 01 00 00      	movq	0x1a8(%rsp), %rax
ffffffff80013475: 4c 01 f0             	addq	%r14, %rax
ffffffff80013478: 48 89 84 24 b0 03 00 00      	movq	%rax, 0x3b0(%rsp)
ffffffff80013480: f7 84 24 c0 00 00 00 00 00 00 08     	testl	$0x8000000, 0xc0(%rsp) # imm = 0x8000000
ffffffff8001348b: 0f 94 44 24 15       	sete	0x15(%rsp)
ffffffff80013490: 48 8b 84 24 28 02 00 00      	movq	0x228(%rsp), %rax
ffffffff80013498: 48 89 84 24 68 03 00 00      	movq	%rax, 0x368(%rsp)
ffffffff800134a0: 0f b6 84 24 31 02 00 00      	movzbl	0x231(%rsp), %eax
ffffffff800134a8: 48 89 84 24 70 03 00 00      	movq	%rax, 0x370(%rsp)
ffffffff800134b0: 8b 84 24 32 02 00 00 	movl	0x232(%rsp), %eax
ffffffff800134b7: 89 84 24 20 01 00 00 	movl	%eax, 0x120(%rsp)
ffffffff800134be: 0f b7 84 24 36 02 00 00      	movzwl	0x236(%rsp), %eax
ffffffff800134c6: 66 89 84 24 24 01 00 00      	movw	%ax, 0x124(%rsp)
ffffffff800134ce: b0 01                	movb	$0x1, %al
ffffffff800134d0: 48 89 84 24 a0 03 00 00      	movq	%rax, 0x3a0(%rsp)
ffffffff800134d8: 48 8b 6c 24 68       	movq	0x68(%rsp), %rbp
ffffffff800134dd: 4c 8b 44 24 08       	movq	0x8(%rsp), %r8
ffffffff800134e2: 48 8b 8c 24 80 00 00 00      	movq	0x80(%rsp), %rcx
ffffffff800134ea: e9 04 e5 ff ff       	jmp	0xffffffff800119f3 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0x9c3>
ffffffff800134ef: 48 8d bc 24 08 02 00 00      	leaq	0x208(%rsp), %rdi
ffffffff800134f7: 48 8d b4 24 e8 00 00 00      	leaq	0xe8(%rsp), %rsi
ffffffff800134ff: 48 8d 94 24 f8 04 00 00      	leaq	0x4f8(%rsp), %rdx
ffffffff80013507: e8 e4 2b 00 00       	callq	0xffffffff800160f0 <goblin::elf::sym::Symtab::parse::{{closure}}::hd40e473544717bc7.llvm.3953138781796771524>
ffffffff8001350c: 48 8b 8c 24 08 02 00 00      	movq	0x208(%rsp), %rcx
ffffffff80013514: 48 8b 9c 24 10 02 00 00      	movq	0x210(%rsp), %rbx
ffffffff8001351c: 48 8b 94 24 18 02 00 00      	movq	0x218(%rsp), %rdx
ffffffff80013524: 48 8b 84 24 20 02 00 00      	movq	0x220(%rsp), %rax
ffffffff8001352c: e9 87 e8 ff ff       	jmp	0xffffffff80011db8 <goblin::elf::Elf::parse::hfb1810c3f1f87358+0xd88>
ffffffff80013531: cc                   	int3
ffffffff80013532: cc                   	int3
ffffffff80013533: cc                   	int3
ffffffff80013534: cc                   	int3
ffffffff80013535: cc                   	int3
ffffffff80013536: cc                   	int3
ffffffff80013537: cc                   	int3
ffffffff80013538: cc                   	int3
ffffffff80013539: cc                   	int3
ffffffff8001353a: cc                   	int3
ffffffff8001353b: cc                   	int3
ffffffff8001353c: cc                   	int3
ffffffff8001353d: cc                   	int3
ffffffff8001353e: cc                   	int3
ffffffff8001353f: cc                   	int3

ffffffff80013540 <goblin::elf::Elf::parse::{{closure}}::hefc09cb1346f26c6>:
ffffffff80013540: 41 57                	pushq	%r15
ffffffff80013542: 41 56                	pushq	%r14
ffffffff80013544: 41 54                	pushq	%r12
ffffffff80013546: 53                   	pushq	%rbx
ffffffff80013547: 48 83 ec 28          	subq	$0x28, %rsp
ffffffff8001354b: 49 81 f9 ff ff 00 00 	cmpq	$0xffff, %r9            # imm = 0xFFFF
ffffffff80013552: 75 09                	jne	0xffffffff8001355d <goblin::elf::Elf::parse::{{closure}}::hefc09cb1346f26c6+0x1d>
ffffffff80013554: 4d 85 c0             	testq	%r8, %r8
ffffffff80013557: 74 52                	je	0xffffffff800135ab <goblin::elf::Elf::parse::{{closure}}::hefc09cb1346f26c6+0x6b>
ffffffff80013559: 44 8b 49 3c          	movl	0x3c(%rcx), %r9d
ffffffff8001355d: 4d 39 c1             	cmpq	%r8, %r9
ffffffff80013560: 73 49                	jae	0xffffffff800135ab <goblin::elf::Elf::parse::{{closure}}::hefc09cb1346f26c6+0x6b>
ffffffff80013562: 49 89 f6             	movq	%rsi, %r14
ffffffff80013565: 48 89 fb             	movq	%rdi, %rbx
ffffffff80013568: 4b 8d 04 c9          	leaq	(%r9,%r9,8), %rax
ffffffff8001356c: 4c 8d 3c c1          	leaq	(%rcx,%rax,8), %r15
ffffffff80013570: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff80013575: 4c 89 fe             	movq	%r15, %rsi
ffffffff80013578: 49 89 d4             	movq	%rdx, %r12
ffffffff8001357b: e8 c0 31 00 00       	callq	0xffffffff80016740 <goblin::elf::section_header::SectionHeader::check_size::hf971422cac388d0f>
ffffffff80013580: 83 7c 24 08 07       	cmpl	$0x7, 0x8(%rsp)
ffffffff80013585: 75 53                	jne	0xffffffff800135da <goblin::elf::Elf::parse::{{closure}}::hefc09cb1346f26c6+0x9a>
ffffffff80013587: 49 8b 4f 18          	movq	0x18(%r15), %rcx
ffffffff8001358b: 4d 8b 47 20          	movq	0x20(%r15), %r8
ffffffff8001358f: 48 89 df             	movq	%rbx, %rdi
ffffffff80013592: 4c 89 f6             	movq	%r14, %rsi
ffffffff80013595: 4c 89 e2             	movq	%r12, %rdx
ffffffff80013598: 45 31 c9             	xorl	%r9d, %r9d
ffffffff8001359b: 48 83 c4 28          	addq	$0x28, %rsp
ffffffff8001359f: 5b                   	popq	%rbx
ffffffff800135a0: 41 5c                	popq	%r12
ffffffff800135a2: 41 5e                	popq	%r14
ffffffff800135a4: 41 5f                	popq	%r15
ffffffff800135a6: e9 c5 3b 00 00       	jmp	0xffffffff80017170 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3>
ffffffff800135ab: 48 c7 07 00 00 00 00 	movq	$0x0, (%rdi)
ffffffff800135b2: 48 c7 47 08 08 00 00 00      	movq	$0x8, 0x8(%rdi)
ffffffff800135ba: 48 c7 47 10 00 00 00 00      	movq	$0x0, 0x10(%rdi)
ffffffff800135c2: 66 c7 47 18 00 00    	movw	$0x0, 0x18(%rdi)
ffffffff800135c8: 48 c7 47 28 01 00 00 00      	movq	$0x1, 0x28(%rdi)
ffffffff800135d0: 48 c7 47 30 00 00 00 00      	movq	$0x0, 0x30(%rdi)
ffffffff800135d8: eb 31                	jmp	0xffffffff8001360b <goblin::elf::Elf::parse::{{closure}}::hefc09cb1346f26c6+0xcb>
ffffffff800135da: 48 8b 44 24 20       	movq	0x20(%rsp), %rax
ffffffff800135df: 48 89 43 20          	movq	%rax, 0x20(%rbx)
ffffffff800135e3: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff800135e8: 48 89 43 18          	movq	%rax, 0x18(%rbx)
ffffffff800135ec: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff800135f1: 48 8b 4c 24 10       	movq	0x10(%rsp), %rcx
ffffffff800135f6: 48 89 4b 10          	movq	%rcx, 0x10(%rbx)
ffffffff800135fa: 48 89 43 08          	movq	%rax, 0x8(%rbx)
ffffffff800135fe: 48 b8 00 00 00 00 00 00 00 80	movabsq	$-0x8000000000000000, %rax # imm = 0x8000000000000000
ffffffff80013608: 48 89 03             	movq	%rax, (%rbx)
ffffffff8001360b: 48 83 c4 28          	addq	$0x28, %rsp
ffffffff8001360f: 5b                   	popq	%rbx
ffffffff80013610: 41 5c                	popq	%r12
ffffffff80013612: 41 5e                	popq	%r14
ffffffff80013614: 41 5f                	popq	%r15
ffffffff80013616: c3                   	retq
ffffffff80013617: cc                   	int3
ffffffff80013618: cc                   	int3
ffffffff80013619: cc                   	int3
ffffffff8001361a: cc                   	int3
ffffffff8001361b: cc                   	int3
ffffffff8001361c: cc                   	int3
ffffffff8001361d: cc                   	int3
ffffffff8001361e: cc                   	int3
ffffffff8001361f: cc                   	int3

ffffffff80013620 <goblin::elf::gnu_hash_len::h50a1755dadcf02de>:
ffffffff80013620: 48 89 d0             	movq	%rdx, %rax
ffffffff80013623: 48 29 c8             	subq	%rcx, %rax
ffffffff80013626: 73 0e                	jae	0xffffffff80013636 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x16>
ffffffff80013628: 48 89 ca             	movq	%rcx, %rdx
ffffffff8001362b: 48 c1 ea 20          	shrq	$0x20, %rdx
ffffffff8001362f: be 01 00 00 00       	movl	$0x1, %esi
ffffffff80013634: eb 0f                	jmp	0xffffffff80013645 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x25>
ffffffff80013636: 48 83 f8 04          	cmpq	$0x4, %rax
ffffffff8001363a: 73 17                	jae	0xffffffff80013653 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x33>
ffffffff8001363c: b9 04 00 00 00       	movl	$0x4, %ecx
ffffffff80013641: 31 d2                	xorl	%edx, %edx
ffffffff80013643: 31 f6                	xorl	%esi, %esi
ffffffff80013645: 89 57 0c             	movl	%edx, 0xc(%rdi)
ffffffff80013648: 48 89 47 10          	movq	%rax, 0x10(%rdi)
ffffffff8001364c: 48 89 37             	movq	%rsi, (%rdi)
ffffffff8001364f: 89 4f 08             	movl	%ecx, 0x8(%rdi)
ffffffff80013652: c3                   	retq
ffffffff80013653: 55                   	pushq	%rbp
ffffffff80013654: 41 57                	pushq	%r15
ffffffff80013656: 41 56                	pushq	%r14
ffffffff80013658: 41 55                	pushq	%r13
ffffffff8001365a: 41 54                	pushq	%r12
ffffffff8001365c: 53                   	pushq	%rbx
ffffffff8001365d: 48 83 ec 78          	subq	$0x78, %rsp
ffffffff80013661: 44 8b 14 0e          	movl	(%rsi,%rcx), %r10d
ffffffff80013665: 44 89 d0             	movl	%r10d, %eax
ffffffff80013668: 0f c8                	bswapl	%eax
ffffffff8001366a: 45 84 c9             	testb	%r9b, %r9b
ffffffff8001366d: 41 0f 44 c2          	cmovel	%r10d, %eax
ffffffff80013671: 48 89 04 24          	movq	%rax, (%rsp)
ffffffff80013675: 4c 8d 51 04          	leaq	0x4(%rcx), %r10
ffffffff80013679: 49 89 d3             	movq	%rdx, %r11
ffffffff8001367c: 4d 29 d3             	subq	%r10, %r11
ffffffff8001367f: 73 0e                	jae	0xffffffff8001368f <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x6f>
ffffffff80013681: 4c 89 d0             	movq	%r10, %rax
ffffffff80013684: 48 c1 e8 20          	shrq	$0x20, %rax
ffffffff80013688: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff8001368d: eb 10                	jmp	0xffffffff8001369f <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x7f>
ffffffff8001368f: 49 83 fb 04          	cmpq	$0x4, %r11
ffffffff80013693: 73 27                	jae	0xffffffff800136bc <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x9c>
ffffffff80013695: 41 ba 04 00 00 00    	movl	$0x4, %r10d
ffffffff8001369b: 31 c0                	xorl	%eax, %eax
ffffffff8001369d: 31 c9                	xorl	%ecx, %ecx
ffffffff8001369f: 89 47 0c             	movl	%eax, 0xc(%rdi)
ffffffff800136a2: 4c 89 5f 10          	movq	%r11, 0x10(%rdi)
ffffffff800136a6: 48 89 0f             	movq	%rcx, (%rdi)
ffffffff800136a9: 44 89 57 08          	movl	%r10d, 0x8(%rdi)
ffffffff800136ad: 48 83 c4 78          	addq	$0x78, %rsp
ffffffff800136b1: 5b                   	popq	%rbx
ffffffff800136b2: 41 5c                	popq	%r12
ffffffff800136b4: 41 5d                	popq	%r13
ffffffff800136b6: 41 5e                	popq	%r14
ffffffff800136b8: 41 5f                	popq	%r15
ffffffff800136ba: 5d                   	popq	%rbp
ffffffff800136bb: c3                   	retq
ffffffff800136bc: 44 8b 5c 0e 04       	movl	0x4(%rsi,%rcx), %r11d
ffffffff800136c1: 45 89 da             	movl	%r11d, %r10d
ffffffff800136c4: 41 0f ca             	bswapl	%r10d
ffffffff800136c7: 45 84 c9             	testb	%r9b, %r9b
ffffffff800136ca: 45 0f 44 d3          	cmovel	%r11d, %r10d
ffffffff800136ce: 4c 89 54 24 08       	movq	%r10, 0x8(%rsp)
ffffffff800136d3: 4c 8d 59 08          	leaq	0x8(%rcx), %r11
ffffffff800136d7: 48 89 d3             	movq	%rdx, %rbx
ffffffff800136da: 4c 29 db             	subq	%r11, %rbx
ffffffff800136dd: 73 0e                	jae	0xffffffff800136ed <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0xcd>
ffffffff800136df: 4c 89 d8             	movq	%r11, %rax
ffffffff800136e2: 48 c1 e8 20          	shrq	$0x20, %rax
ffffffff800136e6: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff800136eb: eb 10                	jmp	0xffffffff800136fd <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0xdd>
ffffffff800136ed: 48 83 fb 04          	cmpq	$0x4, %rbx
ffffffff800136f1: 73 1a                	jae	0xffffffff8001370d <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0xed>
ffffffff800136f3: 41 bb 04 00 00 00    	movl	$0x4, %r11d
ffffffff800136f9: 31 c0                	xorl	%eax, %eax
ffffffff800136fb: 31 c9                	xorl	%ecx, %ecx
ffffffff800136fd: 89 47 0c             	movl	%eax, 0xc(%rdi)
ffffffff80013700: 48 89 5f 10          	movq	%rbx, 0x10(%rdi)
ffffffff80013704: 48 89 0f             	movq	%rcx, (%rdi)
ffffffff80013707: 44 89 5f 08          	movl	%r11d, 0x8(%rdi)
ffffffff8001370b: eb a0                	jmp	0xffffffff800136ad <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x8d>
ffffffff8001370d: 42 8b 1c 1e          	movl	(%rsi,%r11), %ebx
ffffffff80013711: 41 89 db             	movl	%ebx, %r11d
ffffffff80013714: 41 0f cb             	bswapl	%r11d
ffffffff80013717: 45 84 c9             	testb	%r9b, %r9b
ffffffff8001371a: 44 0f 44 db          	cmovel	%ebx, %r11d
ffffffff8001371e: 4c 89 5c 24 10       	movq	%r11, 0x10(%rsp)
ffffffff80013723: 48 85 c0             	testq	%rax, %rax
ffffffff80013726: 74 75                	je	0xffffffff8001379d <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x17d>
ffffffff80013728: 45 85 d2             	testl	%r10d, %r10d
ffffffff8001372b: 74 70                	je	0xffffffff8001379d <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x17d>
ffffffff8001372d: 45 85 db             	testl	%r11d, %r11d
ffffffff80013730: 74 6b                	je	0xffffffff8001379d <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x17d>
ffffffff80013732: 41 80 c8 02          	orb	$0x2, %r8b
ffffffff80013736: 48 89 cb             	movq	%rcx, %rbx
ffffffff80013739: 44 89 c1             	movl	%r8d, %ecx
ffffffff8001373c: 49 d3 e3             	shlq	%cl, %r11
ffffffff8001373f: 49 89 d8             	movq	%rbx, %r8
ffffffff80013742: 4e 8d 34 1b          	leaq	(%rbx,%r11), %r14
ffffffff80013746: 49 83 c6 10          	addq	$0x10, %r14
ffffffff8001374a: 49 89 d7             	movq	%rdx, %r15
ffffffff8001374d: 4d 29 df             	subq	%r11, %r15
ffffffff80013750: 49 29 df             	subq	%rbx, %r15
ffffffff80013753: 49 83 c7 f0          	addq	$-0x10, %r15
ffffffff80013757: 45 84 c9             	testb	%r9b, %r9b
ffffffff8001375a: 0f 84 c2 00 00 00    	je	0xffffffff80013822 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x202>
ffffffff80013760: 31 c9                	xorl	%ecx, %ecx
ffffffff80013762: 4c 89 f3             	movq	%r14, %rbx
ffffffff80013765: 49 89 c4             	movq	%rax, %r12
ffffffff80013768: 48 39 d3             	cmpq	%rdx, %rbx
ffffffff8001376b: 0f 87 fa 00 00 00    	ja	0xffffffff8001386b <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x24b>
ffffffff80013771: 4d 89 fd             	movq	%r15, %r13
ffffffff80013774: 49 83 ed 04          	subq	$0x4, %r13
ffffffff80013778: 0f 82 fb 00 00 00    	jb	0xffffffff80013879 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x259>
ffffffff8001377e: 44 8b 3c 1e          	movl	(%rsi,%rbx), %r15d
ffffffff80013782: 41 0f cf             	bswapl	%r15d
ffffffff80013785: 4c 39 f9             	cmpq	%r15, %rcx
ffffffff80013788: 49 0f 46 cf          	cmovbeq	%r15, %rcx
ffffffff8001378c: 48 83 c3 04          	addq	$0x4, %rbx
ffffffff80013790: 4d 89 ef             	movq	%r13, %r15
ffffffff80013793: 49 ff cc             	decq	%r12
ffffffff80013796: 75 d0                	jne	0xffffffff80013768 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x148>
ffffffff80013798: e9 b5 00 00 00       	jmp	0xffffffff80013852 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x232>
ffffffff8001379d: 48 89 e0             	movq	%rsp, %rax
ffffffff800137a0: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff800137a5: 48 c7 44 24 20 c0 b8 01 80   	movq	$-0x7ffe4740, 0x20(%rsp) # imm = 0x8001B8C0
ffffffff800137ae: 48 8d 44 24 08       	leaq	0x8(%rsp), %rax
ffffffff800137b3: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff800137b8: 48 c7 44 24 30 c0 b8 01 80   	movq	$-0x7ffe4740, 0x30(%rsp) # imm = 0x8001B8C0
ffffffff800137c1: 48 8d 44 24 10       	leaq	0x10(%rsp), %rax
ffffffff800137c6: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff800137cb: 48 c7 44 24 40 c0 b8 01 80   	movq	$-0x7ffe4740, 0x40(%rsp) # imm = 0x8001B8C0
ffffffff800137d4: 48 c7 44 24 48 30 26 02 80   	movq	$-0x7ffdd9d0, 0x48(%rsp) # imm = 0x80022630
ffffffff800137dd: 48 c7 44 24 50 03 00 00 00   	movq	$0x3, 0x50(%rsp)
ffffffff800137e6: 48 c7 44 24 68 00 00 00 00   	movq	$0x0, 0x68(%rsp)
ffffffff800137ef: 48 8d 44 24 18       	leaq	0x18(%rsp), %rax
ffffffff800137f4: 48 89 44 24 58       	movq	%rax, 0x58(%rsp)
ffffffff800137f9: 48 c7 44 24 60 03 00 00 00   	movq	$0x3, 0x60(%rsp)
ffffffff80013802: 48 8d 47 08          	leaq	0x8(%rdi), %rax
ffffffff80013806: 48 8d 74 24 48       	leaq	0x48(%rsp), %rsi
ffffffff8001380b: 48 89 fb             	movq	%rdi, %rbx
ffffffff8001380e: 48 89 c7             	movq	%rax, %rdi
ffffffff80013811: e8 4a 53 00 00       	callq	0xffffffff80018b60 <alloc::fmt::format::format_inner::ha57507f8e4bcde35>
ffffffff80013816: 48 c7 03 03 00 00 00 	movq	$0x3, (%rbx)
ffffffff8001381d: e9 8b fe ff ff       	jmp	0xffffffff800136ad <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x8d>
ffffffff80013822: 45 31 ed             	xorl	%r13d, %r13d
ffffffff80013825: 4c 89 f3             	movq	%r14, %rbx
ffffffff80013828: 49 89 c4             	movq	%rax, %r12
ffffffff8001382b: 48 39 d3             	cmpq	%rdx, %rbx
ffffffff8001382e: 77 3b                	ja	0xffffffff8001386b <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x24b>
ffffffff80013830: 4c 89 fd             	movq	%r15, %rbp
ffffffff80013833: 48 83 ed 04          	subq	$0x4, %rbp
ffffffff80013837: 72 40                	jb	0xffffffff80013879 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x259>
ffffffff80013839: 8b 0c 1e             	movl	(%rsi,%rbx), %ecx
ffffffff8001383c: 49 39 cd             	cmpq	%rcx, %r13
ffffffff8001383f: 49 0f 47 cd          	cmovaq	%r13, %rcx
ffffffff80013843: 48 83 c3 04          	addq	$0x4, %rbx
ffffffff80013847: 49 89 ef             	movq	%rbp, %r15
ffffffff8001384a: 49 89 cd             	movq	%rcx, %r13
ffffffff8001384d: 49 ff cc             	decq	%r12
ffffffff80013850: 75 d9                	jne	0xffffffff8001382b <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x20b>
ffffffff80013852: 4c 39 d1             	cmpq	%r10, %rcx
ffffffff80013855: 73 3d                	jae	0xffffffff80013894 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x274>
ffffffff80013857: 48 c7 47 08 00 00 00 00      	movq	$0x0, 0x8(%rdi)
ffffffff8001385f: 48 c7 07 07 00 00 00 	movq	$0x7, (%rdi)
ffffffff80013866: e9 42 fe ff ff       	jmp	0xffffffff800136ad <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x8d>
ffffffff8001386b: 48 89 d8             	movq	%rbx, %rax
ffffffff8001386e: 48 c1 e8 20          	shrq	$0x20, %rax
ffffffff80013872: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff80013877: eb 09                	jmp	0xffffffff80013882 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x262>
ffffffff80013879: 31 c0                	xorl	%eax, %eax
ffffffff8001387b: bb 04 00 00 00       	movl	$0x4, %ebx
ffffffff80013880: 31 c9                	xorl	%ecx, %ecx
ffffffff80013882: 89 47 0c             	movl	%eax, 0xc(%rdi)
ffffffff80013885: 4c 89 7f 10          	movq	%r15, 0x10(%rdi)
ffffffff80013889: 48 89 0f             	movq	%rcx, (%rdi)
ffffffff8001388c: 89 5f 08             	movl	%ebx, 0x8(%rdi)
ffffffff8001388f: e9 19 fe ff ff       	jmp	0xffffffff800136ad <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x8d>
ffffffff80013894: 4c 29 d0             	subq	%r10, %rax
ffffffff80013897: 48 01 c8             	addq	%rcx, %rax
ffffffff8001389a: 4d 8d 14 86          	leaq	(%r14,%rax,4), %r10
ffffffff8001389e: 48 c1 e0 02          	shlq	$0x2, %rax
ffffffff800138a2: 45 84 c9             	testb	%r9b, %r9b
ffffffff800138a5: 74 32                	je	0xffffffff800138d9 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x2b9>
ffffffff800138a7: 49 89 d1             	movq	%rdx, %r9
ffffffff800138aa: 4d 29 d9             	subq	%r11, %r9
ffffffff800138ad: 4d 29 c1             	subq	%r8, %r9
ffffffff800138b0: 49 29 c1             	subq	%rax, %r9
ffffffff800138b3: 49 83 c1 f0          	addq	$-0x10, %r9
ffffffff800138b7: 49 39 d2             	cmpq	%rdx, %r10
ffffffff800138ba: 77 5c                	ja	0xffffffff80013918 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x2f8>
ffffffff800138bc: 4c 89 c8             	movq	%r9, %rax
ffffffff800138bf: 48 83 e8 04          	subq	$0x4, %rax
ffffffff800138c3: 72 61                	jb	0xffffffff80013926 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x306>
ffffffff800138c5: 48 ff c1             	incq	%rcx
ffffffff800138c8: 42 f6 44 16 03 01    	testb	$0x1, 0x3(%rsi,%r10)
ffffffff800138ce: 4d 8d 52 04          	leaq	0x4(%r10), %r10
ffffffff800138d2: 49 89 c1             	movq	%rax, %r9
ffffffff800138d5: 74 e0                	je	0xffffffff800138b7 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x297>
ffffffff800138d7: eb 2f                	jmp	0xffffffff80013908 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x2e8>
ffffffff800138d9: 49 89 d1             	movq	%rdx, %r9
ffffffff800138dc: 4d 29 d9             	subq	%r11, %r9
ffffffff800138df: 4d 29 c1             	subq	%r8, %r9
ffffffff800138e2: 49 29 c1             	subq	%rax, %r9
ffffffff800138e5: 49 83 c1 f0          	addq	$-0x10, %r9
ffffffff800138e9: 49 39 d2             	cmpq	%rdx, %r10
ffffffff800138ec: 77 2a                	ja	0xffffffff80013918 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x2f8>
ffffffff800138ee: 4c 89 c8             	movq	%r9, %rax
ffffffff800138f1: 48 83 e8 04          	subq	$0x4, %rax
ffffffff800138f5: 72 2f                	jb	0xffffffff80013926 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x306>
ffffffff800138f7: 48 ff c1             	incq	%rcx
ffffffff800138fa: 42 f6 04 16 01       	testb	$0x1, (%rsi,%r10)
ffffffff800138ff: 4d 8d 52 04          	leaq	0x4(%r10), %r10
ffffffff80013903: 49 89 c1             	movq	%rax, %r9
ffffffff80013906: 74 e1                	je	0xffffffff800138e9 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x2c9>
ffffffff80013908: 48 89 4f 08          	movq	%rcx, 0x8(%rdi)
ffffffff8001390c: 48 c7 07 07 00 00 00 	movq	$0x7, (%rdi)
ffffffff80013913: e9 95 fd ff ff       	jmp	0xffffffff800136ad <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x8d>
ffffffff80013918: 4c 89 d0             	movq	%r10, %rax
ffffffff8001391b: 48 c1 e8 20          	shrq	$0x20, %rax
ffffffff8001391f: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff80013924: eb 0a                	jmp	0xffffffff80013930 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x310>
ffffffff80013926: 31 c0                	xorl	%eax, %eax
ffffffff80013928: 41 ba 04 00 00 00    	movl	$0x4, %r10d
ffffffff8001392e: 31 c9                	xorl	%ecx, %ecx
ffffffff80013930: 89 47 0c             	movl	%eax, 0xc(%rdi)
ffffffff80013933: 4c 89 4f 10          	movq	%r9, 0x10(%rdi)
ffffffff80013937: e9 6a fd ff ff       	jmp	0xffffffff800136a6 <goblin::elf::gnu_hash_len::h50a1755dadcf02de+0x86>
ffffffff8001393c: cc                   	int3
ffffffff8001393d: cc                   	int3
ffffffff8001393e: cc                   	int3
ffffffff8001393f: cc                   	int3

ffffffff80013940 <goblin::elf::hash_len::hbf61a7b243282ab8>:
ffffffff80013940: 0f b6 44 24 08       	movzbl	0x8(%rsp), %eax
ffffffff80013945: 66 41 83 f8 29       	cmpw	$0x29, %r8w
ffffffff8001394a: 74 0a                	je	0xffffffff80013956 <goblin::elf::hash_len::hbf61a7b243282ab8+0x16>
ffffffff8001394c: 45 0f b7 c0          	movzwl	%r8w, %r8d
ffffffff80013950: 41 83 f8 16          	cmpl	$0x16, %r8d
ffffffff80013954: 75 2a                	jne	0xffffffff80013980 <goblin::elf::hash_len::hbf61a7b243282ab8+0x40>
ffffffff80013956: 45 84 c9             	testb	%r9b, %r9b
ffffffff80013959: 74 25                	je	0xffffffff80013980 <goblin::elf::hash_len::hbf61a7b243282ab8+0x40>
ffffffff8001395b: 48 83 c1 04          	addq	$0x4, %rcx
ffffffff8001395f: 49 c7 c0 ff ff ff ff 	movq	$-0x1, %r8
ffffffff80013966: 4c 0f 43 c1          	cmovaeq	%rcx, %r8
ffffffff8001396a: 4c 29 c2             	subq	%r8, %rdx
ffffffff8001396d: 73 52                	jae	0xffffffff800139c1 <goblin::elf::hash_len::hbf61a7b243282ab8+0x81>
ffffffff8001396f: b8 01 00 00 00       	movl	$0x1, %eax
ffffffff80013974: 48 89 57 10          	movq	%rdx, 0x10(%rdi)
ffffffff80013978: 48 89 07             	movq	%rax, (%rdi)
ffffffff8001397b: 4c 89 47 08          	movq	%r8, 0x8(%rdi)
ffffffff8001397f: c3                   	retq
ffffffff80013980: 48 83 c1 04          	addq	$0x4, %rcx
ffffffff80013984: 49 c7 c0 ff ff ff ff 	movq	$-0x1, %r8
ffffffff8001398b: 4c 0f 43 c1          	cmovaeq	%rcx, %r8
ffffffff8001398f: 4c 29 c2             	subq	%r8, %rdx
ffffffff80013992: 73 0e                	jae	0xffffffff800139a2 <goblin::elf::hash_len::hbf61a7b243282ab8+0x62>
ffffffff80013994: 4c 89 c0             	movq	%r8, %rax
ffffffff80013997: 48 c1 e8 20          	shrq	$0x20, %rax
ffffffff8001399b: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff800139a0: eb 10                	jmp	0xffffffff800139b2 <goblin::elf::hash_len::hbf61a7b243282ab8+0x72>
ffffffff800139a2: 48 83 fa 04          	cmpq	$0x4, %rdx
ffffffff800139a6: 73 33                	jae	0xffffffff800139db <goblin::elf::hash_len::hbf61a7b243282ab8+0x9b>
ffffffff800139a8: 41 b8 04 00 00 00    	movl	$0x4, %r8d
ffffffff800139ae: 31 c0                	xorl	%eax, %eax
ffffffff800139b0: 31 c9                	xorl	%ecx, %ecx
ffffffff800139b2: 89 47 0c             	movl	%eax, 0xc(%rdi)
ffffffff800139b5: 48 89 57 10          	movq	%rdx, 0x10(%rdi)
ffffffff800139b9: 48 89 0f             	movq	%rcx, (%rdi)
ffffffff800139bc: 44 89 47 08          	movl	%r8d, 0x8(%rdi)
ffffffff800139c0: c3                   	retq
ffffffff800139c1: 48 83 fa 08          	cmpq	$0x8, %rdx
ffffffff800139c5: 73 2d                	jae	0xffffffff800139f4 <goblin::elf::hash_len::hbf61a7b243282ab8+0xb4>
ffffffff800139c7: 41 b8 08 00 00 00    	movl	$0x8, %r8d
ffffffff800139cd: 31 c0                	xorl	%eax, %eax
ffffffff800139cf: 48 89 57 10          	movq	%rdx, 0x10(%rdi)
ffffffff800139d3: 48 89 07             	movq	%rax, (%rdi)
ffffffff800139d6: 4c 89 47 08          	movq	%r8, 0x8(%rdi)
ffffffff800139da: c3                   	retq
ffffffff800139db: 42 8b 14 06          	movl	(%rsi,%r8), %edx
ffffffff800139df: 89 d1                	movl	%edx, %ecx
ffffffff800139e1: 0f c9                	bswapl	%ecx
ffffffff800139e3: 84 c0                	testb	%al, %al
ffffffff800139e5: 0f 44 ca             	cmovel	%edx, %ecx
ffffffff800139e8: 48 89 4f 08          	movq	%rcx, 0x8(%rdi)
ffffffff800139ec: 48 c7 07 07 00 00 00 	movq	$0x7, (%rdi)
ffffffff800139f3: c3                   	retq
ffffffff800139f4: 4a 8b 14 06          	movq	(%rsi,%r8), %rdx
ffffffff800139f8: 48 89 d1             	movq	%rdx, %rcx
ffffffff800139fb: 48 0f c9             	bswapq	%rcx
ffffffff800139fe: 84 c0                	testb	%al, %al
ffffffff80013a00: 48 0f 44 ca          	cmoveq	%rdx, %rcx
ffffffff80013a04: 48 89 4f 08          	movq	%rcx, 0x8(%rdi)
ffffffff80013a08: 48 c7 07 07 00 00 00 	movq	$0x7, (%rdi)
ffffffff80013a0f: c3                   	retq

ffffffff80013a10 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7>:
ffffffff80013a10: 55                   	pushq	%rbp
ffffffff80013a11: 41 57                	pushq	%r15
ffffffff80013a13: 41 56                	pushq	%r14
ffffffff80013a15: 41 55                	pushq	%r13
ffffffff80013a17: 41 54                	pushq	%r12
ffffffff80013a19: 53                   	pushq	%rbx
ffffffff80013a1a: 48 81 ec 88 03 00 00 	subq	$0x388, %rsp            # imm = 0x388
ffffffff80013a21: 44 89 cb             	movl	%r9d, %ebx
ffffffff80013a24: 4d 89 c5             	movq	%r8, %r13
ffffffff80013a27: 49 89 cf             	movq	%rcx, %r15
ffffffff80013a2a: 49 89 fc             	movq	%rdi, %r12
ffffffff80013a2d: 44 0f b6 84 24 c0 03 00 00   	movzbl	0x3c0(%rsp), %r8d
ffffffff80013a36: 49 6b c5 38          	imulq	$0x38, %r13, %rax
ffffffff80013a3a: 31 c9                	xorl	%ecx, %ecx
ffffffff80013a3c: 0f 1f 40 00          	nopl	(%rax)
ffffffff80013a40: 48 39 c8             	cmpq	%rcx, %rax
ffffffff80013a43: 0f 84 71 01 00 00    	je	0xffffffff80013bba <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x1aa>
ffffffff80013a49: 48 8d 79 38          	leaq	0x38(%rcx), %rdi
ffffffff80013a4d: 41 83 7c 0f 30 02    	cmpl	$0x2, 0x30(%r15,%rcx)
ffffffff80013a53: 48 89 f9             	movq	%rdi, %rcx
ffffffff80013a56: 75 e8                	jne	0xffffffff80013a40 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x30>
ffffffff80013a58: 49 8b 44 3f c8       	movq	-0x38(%r15,%rdi), %rax
ffffffff80013a5d: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff80013a62: 49 8b 7c 3f e0       	movq	-0x20(%r15,%rdi), %rdi
ffffffff80013a67: 48 89 7c 24 38       	movq	%rdi, 0x38(%rsp)
ffffffff80013a6c: 48 85 ff             	testq	%rdi, %rdi
ffffffff80013a6f: 0f 84 52 01 00 00    	je	0xffffffff80013bc7 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x1b7>
ffffffff80013a75: 48 29 c2             	subq	%rax, %rdx
ffffffff80013a78: 0f 92 c1             	setb	%cl
ffffffff80013a7b: 48 39 fa             	cmpq	%rdi, %rdx
ffffffff80013a7e: 0f 92 c2             	setb	%dl
ffffffff80013a81: 08 ca                	orb	%cl, %dl
ffffffff80013a83: 0f 84 45 01 00 00    	je	0xffffffff80013bce <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x1be>
ffffffff80013a89: 48 8d 44 24 30       	leaq	0x30(%rsp), %rax
ffffffff80013a8e: 48 89 84 24 b0 00 00 00      	movq	%rax, 0xb0(%rsp)
ffffffff80013a96: 48 c7 84 24 b8 00 00 00 20 93 01 80  	movq	$-0x7ffe6ce0, 0xb8(%rsp) # imm = 0x80019320
ffffffff80013aa2: 48 8d 44 24 38       	leaq	0x38(%rsp), %rax
ffffffff80013aa7: 48 89 84 24 c0 00 00 00      	movq	%rax, 0xc0(%rsp)
ffffffff80013aaf: 48 c7 84 24 c8 00 00 00 20 93 01 80  	movq	$-0x7ffe6ce0, 0xc8(%rsp) # imm = 0x80019320
ffffffff80013abb: 48 c7 44 24 40 02 00 00 00   	movq	$0x2, 0x40(%rsp)
ffffffff80013ac4: 48 c7 44 24 50 02 00 00 00   	movq	$0x2, 0x50(%rsp)
ffffffff80013acd: 48 c7 44 24 60 00 00 00 00   	movq	$0x0, 0x60(%rsp)
ffffffff80013ad6: 48 b8 20 00 00 00 04 00 00 00	movabsq	$0x400000020, %rax # imm = 0x400000020
ffffffff80013ae0: 48 89 44 24 68       	movq	%rax, 0x68(%rsp)
ffffffff80013ae5: c6 44 24 70 03       	movb	$0x3, 0x70(%rsp)
ffffffff80013aea: 48 c7 44 24 78 02 00 00 00   	movq	$0x2, 0x78(%rsp)
ffffffff80013af3: 48 c7 84 24 88 00 00 00 02 00 00 00  	movq	$0x2, 0x88(%rsp)
ffffffff80013aff: 48 c7 84 24 98 00 00 00 01 00 00 00  	movq	$0x1, 0x98(%rsp)
ffffffff80013b0b: 48 89 84 24 a0 00 00 00      	movq	%rax, 0xa0(%rsp)
ffffffff80013b13: c6 84 24 a8 00 00 00 03      	movb	$0x3, 0xa8(%rsp)
ffffffff80013b1b: 48 c7 84 24 d0 00 00 00 d0 28 02 80  	movq	$-0x7ffdd730, 0xd0(%rsp) # imm = 0x800228D0
ffffffff80013b27: 48 c7 84 24 d8 00 00 00 03 00 00 00  	movq	$0x3, 0xd8(%rsp)
ffffffff80013b33: 48 8d 44 24 40       	leaq	0x40(%rsp), %rax
ffffffff80013b38: 48 89 84 24 f0 00 00 00      	movq	%rax, 0xf0(%rsp)
ffffffff80013b40: 48 c7 84 24 f8 00 00 00 02 00 00 00  	movq	$0x2, 0xf8(%rsp)
ffffffff80013b4c: 48 8d 84 24 b0 00 00 00      	leaq	0xb0(%rsp), %rax
ffffffff80013b54: 48 89 84 24 e0 00 00 00      	movq	%rax, 0xe0(%rsp)
ffffffff80013b5c: 48 c7 84 24 e8 00 00 00 02 00 00 00  	movq	$0x2, 0xe8(%rsp)
ffffffff80013b68: 48 8d bc 24 08 01 00 00      	leaq	0x108(%rsp), %rdi
ffffffff80013b70: 48 8d b4 24 d0 00 00 00      	leaq	0xd0(%rsp), %rsi
ffffffff80013b78: e8 e3 4f 00 00       	callq	0xffffffff80018b60 <alloc::fmt::format::format_inner::ha57507f8e4bcde35>
ffffffff80013b7d: 48 8b 84 24 08 01 00 00      	movq	0x108(%rsp), %rax
ffffffff80013b85: 48 8b 8c 24 10 01 00 00      	movq	0x110(%rsp), %rcx
ffffffff80013b8d: 48 8b 94 24 18 01 00 00      	movq	0x118(%rsp), %rdx
ffffffff80013b95: 49 c7 44 24 08 03 00 00 00   	movq	$0x3, 0x8(%r12)
ffffffff80013b9e: 49 89 44 24 10       	movq	%rax, 0x10(%r12)
ffffffff80013ba3: 49 89 4c 24 18       	movq	%rcx, 0x18(%r12)
ffffffff80013ba8: 49 89 54 24 20       	movq	%rdx, 0x20(%r12)
ffffffff80013bad: 49 c7 04 24 03 00 00 00      	movq	$0x3, (%r12)
ffffffff80013bb5: e9 9d 03 00 00       	jmp	0xffffffff80013f57 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x547>
ffffffff80013bba: 49 c7 04 24 02 00 00 00      	movq	$0x2, (%r12)
ffffffff80013bc2: e9 90 03 00 00       	jmp	0xffffffff80013f57 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x547>
ffffffff80013bc7: be 01 00 00 00       	movl	$0x1, %esi
ffffffff80013bcc: eb 03                	jmp	0xffffffff80013bd1 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x1c1>
ffffffff80013bce: 48 01 c6             	addq	%rax, %rsi
ffffffff80013bd1: 8d 4b 03             	leal	0x3(%rbx), %ecx
ffffffff80013bd4: 48 89 fa             	movq	%rdi, %rdx
ffffffff80013bd7: 48 d3 ea             	shrq	%cl, %rdx
ffffffff80013bda: 48 89 d5             	movq	%rdx, %rbp
ffffffff80013bdd: 48 c1 e5 04          	shlq	$0x4, %rbp
ffffffff80013be1: 45 31 f6             	xorl	%r14d, %r14d
ffffffff80013be4: 48 89 d0             	movq	%rdx, %rax
ffffffff80013be7: 48 c1 e8 3c          	shrq	$0x3c, %rax
ffffffff80013beb: 0f 85 94 03 00 00    	jne	0xffffffff80013f85 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x575>
ffffffff80013bf1: 48 b8 f8 ff ff ff ff ff ff 7f	movabsq	$0x7ffffffffffffff8, %rax # imm = 0x7FFFFFFFFFFFFFF8
ffffffff80013bfb: 48 39 c5             	cmpq	%rax, %rbp
ffffffff80013bfe: 0f 87 81 03 00 00    	ja	0xffffffff80013f85 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x575>
ffffffff80013c04: 48 85 ed             	testq	%rbp, %rbp
ffffffff80013c07: 48 89 74 24 28       	movq	%rsi, 0x28(%rsp)
ffffffff80013c0c: 48 89 7c 24 20       	movq	%rdi, 0x20(%rsp)
ffffffff80013c11: 48 89 54 24 18       	movq	%rdx, 0x18(%rsp)
ffffffff80013c16: 74 40                	je	0xffffffff80013c58 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x248>
ffffffff80013c18: 0f b6 05 c2 15 01 00 	movzbl	0x115c2(%rip), %eax     # 0xffffffff800251e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80013c1f: 41 be 08 00 00 00    	movl	$0x8, %r14d
ffffffff80013c25: be 08 00 00 00       	movl	$0x8, %esi
ffffffff80013c2a: 48 89 ef             	movq	%rbp, %rdi
ffffffff80013c2d: e8 be b0 ff ff       	callq	0xffffffff8000ecf0 <__rust_alloc>
ffffffff80013c32: 48 8b 54 24 18       	movq	0x18(%rsp), %rdx
ffffffff80013c37: 48 8b 7c 24 20       	movq	0x20(%rsp), %rdi
ffffffff80013c3c: 44 0f b6 84 24 c0 03 00 00   	movzbl	0x3c0(%rsp), %r8d
ffffffff80013c45: 48 8b 74 24 28       	movq	0x28(%rsp), %rsi
ffffffff80013c4a: 48 85 c0             	testq	%rax, %rax
ffffffff80013c4d: 0f 84 32 03 00 00    	je	0xffffffff80013f85 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x575>
ffffffff80013c53: 48 89 d1             	movq	%rdx, %rcx
ffffffff80013c56: eb 07                	jmp	0xffffffff80013c5f <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x24f>
ffffffff80013c58: b8 08 00 00 00       	movl	$0x8, %eax
ffffffff80013c5d: 31 c9                	xorl	%ecx, %ecx
ffffffff80013c5f: 48 89 4c 24 40       	movq	%rcx, 0x40(%rsp)
ffffffff80013c64: 48 89 44 24 48       	movq	%rax, 0x48(%rsp)
ffffffff80013c69: 48 c7 44 24 50 00 00 00 00   	movq	$0x0, 0x50(%rsp)
ffffffff80013c72: 48 85 d2             	testq	%rdx, %rdx
ffffffff80013c75: 0f 84 d5 00 00 00    	je	0xffffffff80013d50 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x340>
ffffffff80013c7b: 4c 89 64 24 08       	movq	%r12, 0x8(%rsp)
ffffffff80013c80: 84 db                	testb	%bl, %bl
ffffffff80013c82: 4c 89 6c 24 10       	movq	%r13, 0x10(%rsp)
ffffffff80013c87: 0f 84 a0 01 00 00    	je	0xffffffff80013e2d <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x41d>
ffffffff80013c8d: bd 01 00 00 00       	movl	$0x1, %ebp
ffffffff80013c92: 49 89 fc             	movq	%rdi, %r12
ffffffff80013c95: 45 31 f6             	xorl	%r14d, %r14d
ffffffff80013c98: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
ffffffff80013ca0: 49 83 fc 08          	cmpq	$0x8, %r12
ffffffff80013ca4: 0f 82 56 02 00 00    	jb	0xffffffff80013f00 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x4f0>
ffffffff80013caa: 49 8d 5c 24 f8       	leaq	-0x8(%r12), %rbx
ffffffff80013caf: 48 83 fb 08          	cmpq	$0x8, %rbx
ffffffff80013cb3: 0f 82 54 02 00 00    	jb	0xffffffff80013f0d <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x4fd>
ffffffff80013cb9: 4a 8b 04 36          	movq	(%rsi,%r14), %rax
ffffffff80013cbd: 49 89 c5             	movq	%rax, %r13
ffffffff80013cc0: 49 0f cd             	bswapq	%r13
ffffffff80013cc3: 48 8d 4d ff          	leaq	-0x1(%rbp), %rcx
ffffffff80013cc7: 45 84 c0             	testb	%r8b, %r8b
ffffffff80013cca: 4c 0f 44 e8          	cmoveq	%rax, %r13
ffffffff80013cce: 4a 8b 44 36 08       	movq	0x8(%rsi,%r14), %rax
ffffffff80013cd3: 48 89 c3             	movq	%rax, %rbx
ffffffff80013cd6: 48 0f cb             	bswapq	%rbx
ffffffff80013cd9: 48 0f 44 d8          	cmoveq	%rax, %rbx
ffffffff80013cdd: 48 3b 4c 24 40       	cmpq	0x40(%rsp), %rcx
ffffffff80013ce2: 75 29                	jne	0xffffffff80013d0d <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x2fd>
ffffffff80013ce4: 48 8d 7c 24 40       	leaq	0x40(%rsp), %rdi
ffffffff80013ce9: 48 c7 c6 a8 28 02 80 	movq	$-0x7ffdd758, %rsi      # imm = 0x800228A8
ffffffff80013cf0: e8 fb 1c 00 00       	callq	0xffffffff800159f0 <alloc::raw_vec::RawVec<T,A>::grow_one::hfaf90d01a1f2efd7>
ffffffff80013cf5: 48 8b 54 24 18       	movq	0x18(%rsp), %rdx
ffffffff80013cfa: 48 8b 7c 24 20       	movq	0x20(%rsp), %rdi
ffffffff80013cff: 44 0f b6 84 24 c0 03 00 00   	movzbl	0x3c0(%rsp), %r8d
ffffffff80013d08: 48 8b 74 24 28       	movq	0x28(%rsp), %rsi
ffffffff80013d0d: 48 8b 44 24 48       	movq	0x48(%rsp), %rax
ffffffff80013d12: 4e 89 2c 30          	movq	%r13, (%rax,%r14)
ffffffff80013d16: 4a 89 5c 30 08       	movq	%rbx, 0x8(%rax,%r14)
ffffffff80013d1b: 48 89 6c 24 50       	movq	%rbp, 0x50(%rsp)
ffffffff80013d20: 4d 85 ed             	testq	%r13, %r13
ffffffff80013d23: 0f 84 43 02 00 00    	je	0xffffffff80013f6c <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x55c>
ffffffff80013d29: 48 39 ea             	cmpq	%rbp, %rdx
ffffffff80013d2c: 4c 8b 6c 24 10       	movq	0x10(%rsp), %r13
ffffffff80013d31: 0f 84 44 02 00 00    	je	0xffffffff80013f7b <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x56b>
ffffffff80013d37: 49 83 c6 10          	addq	$0x10, %r14
ffffffff80013d3b: 48 ff c5             	incq	%rbp
ffffffff80013d3e: 49 83 c4 f0          	addq	$-0x10, %r12
ffffffff80013d42: 49 39 fe             	cmpq	%rdi, %r14
ffffffff80013d45: 0f 86 55 ff ff ff    	jbe	0xffffffff80013ca0 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x290>
ffffffff80013d4b: e9 9f 01 00 00       	jmp	0xffffffff80013eef <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x4df>
ffffffff80013d50: 31 ed                	xorl	%ebp, %ebp
ffffffff80013d52: 48 8d bc 24 50 01 00 00      	leaq	0x150(%rsp), %rdi
ffffffff80013d5a: 48 c7 84 24 20 01 00 00 00 00 00 00  	movq	$0x0, 0x120(%rsp)
ffffffff80013d66: 48 c7 84 24 30 01 00 00 00 00 00 00  	movq	$0x0, 0x130(%rsp)
ffffffff80013d72: 48 c7 84 24 40 01 00 00 00 00 00 00  	movq	$0x0, 0x140(%rsp)
ffffffff80013d7e: ba f1 00 00 00       	movl	$0xf1, %edx
ffffffff80013d83: 31 f6                	xorl	%esi, %esi
ffffffff80013d85: ff 15 a5 26 02 00    	callq	*0x226a5(%rip)          # 0xffffffff80036430
ffffffff80013d8b: 48 85 ed             	testq	%rbp, %rbp
ffffffff80013d8e: 74 41                	je	0xffffffff80013dd1 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x3c1>
ffffffff80013d90: 48 8b 44 24 48       	movq	0x48(%rsp), %rax
ffffffff80013d95: 48 c1 e5 04          	shlq	$0x4, %rbp
ffffffff80013d99: 48 01 c5             	addq	%rax, %rbp
ffffffff80013d9c: 48 8d 9c 24 20 01 00 00      	leaq	0x120(%rsp), %rbx
ffffffff80013da4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
ffffffff80013db0: 4c 8d 70 10          	leaq	0x10(%rax), %r14
ffffffff80013db4: 48 8b 08             	movq	(%rax), %rcx
ffffffff80013db7: 4c 8b 40 08          	movq	0x8(%rax), %r8
ffffffff80013dbb: 48 89 df             	movq	%rbx, %rdi
ffffffff80013dbe: 4c 89 fe             	movq	%r15, %rsi
ffffffff80013dc1: 4c 89 ea             	movq	%r13, %rdx
ffffffff80013dc4: e8 67 04 00 00       	callq	0xffffffff80014230 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977>
ffffffff80013dc9: 4c 89 f0             	movq	%r14, %rax
ffffffff80013dcc: 49 39 ee             	cmpq	%rbp, %r14
ffffffff80013dcf: 75 df                	jne	0xffffffff80013db0 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x3a0>
ffffffff80013dd1: 48 8b 44 24 50       	movq	0x50(%rsp), %rax
ffffffff80013dd6: 48 89 84 24 80 03 00 00      	movq	%rax, 0x380(%rsp)
ffffffff80013dde: 48 8b 44 24 40       	movq	0x40(%rsp), %rax
ffffffff80013de3: 48 8b 4c 24 48       	movq	0x48(%rsp), %rcx
ffffffff80013de8: 48 89 8c 24 78 03 00 00      	movq	%rcx, 0x378(%rsp)
ffffffff80013df0: 48 89 84 24 70 03 00 00      	movq	%rax, 0x370(%rsp)
ffffffff80013df8: 48 8d 9c 24 48 02 00 00      	leaq	0x248(%rsp), %rbx
ffffffff80013e00: 48 8d b4 24 20 01 00 00      	leaq	0x120(%rsp), %rsi
ffffffff80013e08: 4c 8b 35 11 26 02 00 	movq	0x22611(%rip), %r14     # 0xffffffff80036420
ffffffff80013e0f: ba 28 01 00 00       	movl	$0x128, %edx            # imm = 0x128
ffffffff80013e14: 48 89 df             	movq	%rbx, %rdi
ffffffff80013e17: 41 ff d6             	callq	*%r14
ffffffff80013e1a: ba 40 01 00 00       	movl	$0x140, %edx            # imm = 0x140
ffffffff80013e1f: 4c 89 e7             	movq	%r12, %rdi
ffffffff80013e22: 48 89 de             	movq	%rbx, %rsi
ffffffff80013e25: 41 ff d6             	callq	*%r14
ffffffff80013e28: e9 2a 01 00 00       	jmp	0xffffffff80013f57 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x547>
ffffffff80013e2d: 41 bc 01 00 00 00    	movl	$0x1, %r12d
ffffffff80013e33: 31 ed                	xorl	%ebp, %ebp
ffffffff80013e35: 45 31 f6             	xorl	%r14d, %r14d
ffffffff80013e38: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
ffffffff80013e40: 48 89 fb             	movq	%rdi, %rbx
ffffffff80013e43: 4c 29 f3             	subq	%r14, %rbx
ffffffff80013e46: 48 83 fb 04          	cmpq	$0x4, %rbx
ffffffff80013e4a: 0f 82 a6 00 00 00    	jb	0xffffffff80013ef6 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x4e6>
ffffffff80013e50: 48 83 c3 fc          	addq	$-0x4, %rbx
ffffffff80013e54: 48 83 fb 04          	cmpq	$0x4, %rbx
ffffffff80013e58: 0f 82 98 00 00 00    	jb	0xffffffff80013ef6 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x4e6>
ffffffff80013e5e: 42 8b 04 36          	movl	(%rsi,%r14), %eax
ffffffff80013e62: 42 8b 4c 36 04       	movl	0x4(%rsi,%r14), %ecx
ffffffff80013e67: 41 89 c5             	movl	%eax, %r13d
ffffffff80013e6a: 41 0f cd             	bswapl	%r13d
ffffffff80013e6d: 45 84 c0             	testb	%r8b, %r8b
ffffffff80013e70: 44 0f 44 e8          	cmovel	%eax, %r13d
ffffffff80013e74: 89 cb                	movl	%ecx, %ebx
ffffffff80013e76: 0f cb                	bswapl	%ebx
ffffffff80013e78: 0f 44 d9             	cmovel	%ecx, %ebx
ffffffff80013e7b: 48 3b 6c 24 40       	cmpq	0x40(%rsp), %rbp
ffffffff80013e80: 75 29                	jne	0xffffffff80013eab <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x49b>
ffffffff80013e82: 48 8d 7c 24 40       	leaq	0x40(%rsp), %rdi
ffffffff80013e87: 48 c7 c6 a8 28 02 80 	movq	$-0x7ffdd758, %rsi      # imm = 0x800228A8
ffffffff80013e8e: e8 5d 1b 00 00       	callq	0xffffffff800159f0 <alloc::raw_vec::RawVec<T,A>::grow_one::hfaf90d01a1f2efd7>
ffffffff80013e93: 48 8b 54 24 18       	movq	0x18(%rsp), %rdx
ffffffff80013e98: 48 8b 7c 24 20       	movq	0x20(%rsp), %rdi
ffffffff80013e9d: 44 0f b6 84 24 c0 03 00 00   	movzbl	0x3c0(%rsp), %r8d
ffffffff80013ea6: 48 8b 74 24 28       	movq	0x28(%rsp), %rsi
ffffffff80013eab: 48 8b 44 24 48       	movq	0x48(%rsp), %rax
ffffffff80013eb0: 48 89 e9             	movq	%rbp, %rcx
ffffffff80013eb3: 48 c1 e1 04          	shlq	$0x4, %rcx
ffffffff80013eb7: 4c 89 2c 08          	movq	%r13, (%rax,%rcx)
ffffffff80013ebb: 48 89 5c 08 08       	movq	%rbx, 0x8(%rax,%rcx)
ffffffff80013ec0: 48 ff c5             	incq	%rbp
ffffffff80013ec3: 48 89 6c 24 50       	movq	%rbp, 0x50(%rsp)
ffffffff80013ec8: 4d 85 ed             	testq	%r13, %r13
ffffffff80013ecb: 0f 84 9b 00 00 00    	je	0xffffffff80013f6c <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x55c>
ffffffff80013ed1: 49 39 d4             	cmpq	%rdx, %r12
ffffffff80013ed4: 4c 8b 6c 24 10       	movq	0x10(%rsp), %r13
ffffffff80013ed9: 0f 84 9c 00 00 00    	je	0xffffffff80013f7b <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x56b>
ffffffff80013edf: 49 83 c6 08          	addq	$0x8, %r14
ffffffff80013ee3: 49 ff c4             	incq	%r12
ffffffff80013ee6: 49 39 fe             	cmpq	%rdi, %r14
ffffffff80013ee9: 0f 86 51 ff ff ff    	jbe	0xffffffff80013e40 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x430>
ffffffff80013eef: b8 01 00 00 00       	movl	$0x1, %eax
ffffffff80013ef4: eb 1f                	jmp	0xffffffff80013f15 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x505>
ffffffff80013ef6: 41 be 04 00 00 00    	movl	$0x4, %r14d
ffffffff80013efc: 31 c0                	xorl	%eax, %eax
ffffffff80013efe: eb 15                	jmp	0xffffffff80013f15 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x505>
ffffffff80013f00: 4c 89 e3             	movq	%r12, %rbx
ffffffff80013f03: 41 be 08 00 00 00    	movl	$0x8, %r14d
ffffffff80013f09: 31 c0                	xorl	%eax, %eax
ffffffff80013f0b: eb 08                	jmp	0xffffffff80013f15 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x505>
ffffffff80013f0d: 31 c0                	xorl	%eax, %eax
ffffffff80013f0f: 41 be 08 00 00 00    	movl	$0x8, %r14d
ffffffff80013f15: 4c 8b 64 24 08       	movq	0x8(%rsp), %r12
ffffffff80013f1a: 49 89 44 24 08       	movq	%rax, 0x8(%r12)
ffffffff80013f1f: 4d 89 74 24 10       	movq	%r14, 0x10(%r12)
ffffffff80013f24: 49 89 5c 24 18       	movq	%rbx, 0x18(%r12)
ffffffff80013f29: 49 c7 44 24 20 10 00 00 00   	movq	$0x10, 0x20(%r12)
ffffffff80013f32: 49 c7 04 24 03 00 00 00      	movq	$0x3, (%r12)
ffffffff80013f3a: 48 8b 74 24 40       	movq	0x40(%rsp), %rsi
ffffffff80013f3f: 48 85 f6             	testq	%rsi, %rsi
ffffffff80013f42: 74 13                	je	0xffffffff80013f57 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x547>
ffffffff80013f44: 48 8b 7c 24 48       	movq	0x48(%rsp), %rdi
ffffffff80013f49: 48 c1 e6 04          	shlq	$0x4, %rsi
ffffffff80013f4d: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff80013f52: e8 e9 ad ff ff       	callq	0xffffffff8000ed40 <__rust_dealloc>
ffffffff80013f57: 4c 89 e0             	movq	%r12, %rax
ffffffff80013f5a: 48 81 c4 88 03 00 00 	addq	$0x388, %rsp            # imm = 0x388
ffffffff80013f61: 5b                   	popq	%rbx
ffffffff80013f62: 41 5c                	popq	%r12
ffffffff80013f64: 41 5d                	popq	%r13
ffffffff80013f66: 41 5e                	popq	%r14
ffffffff80013f68: 41 5f                	popq	%r15
ffffffff80013f6a: 5d                   	popq	%rbp
ffffffff80013f6b: c3                   	retq
ffffffff80013f6c: 4c 8b 64 24 08       	movq	0x8(%rsp), %r12
ffffffff80013f71: 4c 8b 6c 24 10       	movq	0x10(%rsp), %r13
ffffffff80013f76: e9 d7 fd ff ff       	jmp	0xffffffff80013d52 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x342>
ffffffff80013f7b: 4c 8b 64 24 08       	movq	0x8(%rsp), %r12
ffffffff80013f80: e9 cd fd ff ff       	jmp	0xffffffff80013d52 <goblin::elf::dynamic::Dynamic::parse::h24d76046fd98bfd7+0x342>
ffffffff80013f85: 4c 89 f7             	movq	%r14, %rdi
ffffffff80013f88: 48 89 ee             	movq	%rbp, %rsi
ffffffff80013f8b: 48 c7 c2 90 28 02 80 	movq	$-0x7ffdd770, %rdx      # imm = 0x80022890
ffffffff80013f92: e8 b0 4b 00 00       	callq	0xffffffff80018b47 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff80013f97: cc                   	int3
ffffffff80013f98: cc                   	int3
ffffffff80013f99: cc                   	int3
ffffffff80013f9a: cc                   	int3
ffffffff80013f9b: cc                   	int3
ffffffff80013f9c: cc                   	int3
ffffffff80013f9d: cc                   	int3
ffffffff80013f9e: cc                   	int3
ffffffff80013f9f: cc                   	int3

ffffffff80013fa0 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca>:
ffffffff80013fa0: 55                   	pushq	%rbp
ffffffff80013fa1: 41 57                	pushq	%r15
ffffffff80013fa3: 41 56                	pushq	%r14
ffffffff80013fa5: 41 55                	pushq	%r13
ffffffff80013fa7: 41 54                	pushq	%r12
ffffffff80013fa9: 53                   	pushq	%rbx
ffffffff80013faa: 48 81 ec 98 00 00 00 	subq	$0x98, %rsp
ffffffff80013fb1: 49 89 d6             	movq	%rdx, %r14
ffffffff80013fb4: 49 89 f7             	movq	%rsi, %r15
ffffffff80013fb7: 48 8b 9e 00 01 00 00 	movq	0x100(%rsi), %rbx
ffffffff80013fbe: 4c 8b ae 38 01 00 00 	movq	0x138(%rsi), %r13
ffffffff80013fc5: 49 39 dd             	cmpq	%rbx, %r13
ffffffff80013fc8: 49 0f 42 dd          	cmovbq	%r13, %rbx
ffffffff80013fcc: 48 85 db             	testq	%rbx, %rbx
ffffffff80013fcf: 48 89 7c 24 20       	movq	%rdi, 0x20(%rsp)
ffffffff80013fd4: 74 34                	je	0xffffffff8001400a <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0x6a>
ffffffff80013fd6: 49 89 dc             	movq	%rbx, %r12
ffffffff80013fd9: 49 c1 e4 04          	shlq	$0x4, %r12
ffffffff80013fdd: 0f b6 05 fd 11 01 00 	movzbl	0x111fd(%rip), %eax     # 0xffffffff800251e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80013fe4: be 08 00 00 00       	movl	$0x8, %esi
ffffffff80013fe9: 4c 89 e7             	movq	%r12, %rdi
ffffffff80013fec: e8 ff ac ff ff       	callq	0xffffffff8000ecf0 <__rust_alloc>
ffffffff80013ff1: 48 85 c0             	testq	%rax, %rax
ffffffff80013ff4: 75 19                	jne	0xffffffff8001400f <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0x6f>
ffffffff80013ff6: bf 08 00 00 00       	movl	$0x8, %edi
ffffffff80013ffb: 4c 89 e6             	movq	%r12, %rsi
ffffffff80013ffe: 48 c7 c2 00 29 02 80 	movq	$-0x7ffdd700, %rdx      # imm = 0x80022900
ffffffff80014005: e8 3d 4b 00 00       	callq	0xffffffff80018b47 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff8001400a: b8 08 00 00 00       	movl	$0x8, %eax
ffffffff8001400f: 48 89 5c 24 08       	movq	%rbx, 0x8(%rsp)
ffffffff80014014: 48 89 44 24 10       	movq	%rax, 0x10(%rsp)
ffffffff80014019: 48 c7 44 24 18 00 00 00 00   	movq	$0x0, 0x18(%rsp)
ffffffff80014022: 4d 85 ed             	testq	%r13, %r13
ffffffff80014025: 0f 84 cc 01 00 00    	je	0xffffffff800141f7 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0x257>
ffffffff8001402b: 49 8b af 30 01 00 00 	movq	0x130(%r15), %rbp
ffffffff80014032: 49 c1 e5 04          	shlq	$0x4, %r13
ffffffff80014036: 49 01 ed             	addq	%rbp, %r13
ffffffff80014039: 4d 8b 66 08          	movq	0x8(%r14), %r12
ffffffff8001403d: 4d 8b 76 10          	movq	0x10(%r14), %r14
ffffffff80014041: 4c 89 74 24 28       	movq	%r14, 0x28(%rsp)
ffffffff80014046: eb 37                	jmp	0xffffffff8001407f <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0xdf>
ffffffff80014048: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
ffffffff80014050: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff80014055: 4c 89 f1             	movq	%r14, %rcx
ffffffff80014058: 48 c1 e1 04          	shlq	$0x4, %rcx
ffffffff8001405c: 4c 89 3c 08          	movq	%r15, (%rax,%rcx)
ffffffff80014060: 48 89 5c 08 08       	movq	%rbx, 0x8(%rax,%rcx)
ffffffff80014065: 49 ff c6             	incq	%r14
ffffffff80014068: 4c 89 74 24 18       	movq	%r14, 0x18(%rsp)
ffffffff8001406d: 4c 8b 74 24 28       	movq	0x28(%rsp), %r14
ffffffff80014072: 48 83 c5 10          	addq	$0x10, %rbp
ffffffff80014076: 4c 39 ed             	cmpq	%r13, %rbp
ffffffff80014079: 0f 84 78 01 00 00    	je	0xffffffff800141f7 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0x257>
ffffffff8001407f: 48 83 7d 00 01       	cmpq	$0x1, (%rbp)
ffffffff80014084: 75 ec                	jne	0xffffffff80014072 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0xd2>
ffffffff80014086: 4d 85 f6             	testq	%r14, %r14
ffffffff80014089: 0f 84 c1 00 00 00    	je	0xffffffff80014150 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0x1b0>
ffffffff8001408f: 48 8b 45 08          	movq	0x8(%rbp), %rax
ffffffff80014093: 49 83 fe 01          	cmpq	$0x1, %r14
ffffffff80014097: 75 04                	jne	0xffffffff8001409d <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0xfd>
ffffffff80014099: 31 c9                	xorl	%ecx, %ecx
ffffffff8001409b: eb 35                	jmp	0xffffffff800140d2 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0x132>
ffffffff8001409d: 4c 89 f2             	movq	%r14, %rdx
ffffffff800140a0: 31 f6                	xorl	%esi, %esi
ffffffff800140a2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
ffffffff800140b0: 48 89 d7             	movq	%rdx, %rdi
ffffffff800140b3: 48 d1 ef             	shrq	%rdi
ffffffff800140b6: 48 8d 0c 37          	leaq	(%rdi,%rsi), %rcx
ffffffff800140ba: 4c 8d 04 49          	leaq	(%rcx,%rcx,2), %r8
ffffffff800140be: 4b 39 04 c4          	cmpq	%rax, (%r12,%r8,8)
ffffffff800140c2: 48 0f 47 ce          	cmovaq	%rsi, %rcx
ffffffff800140c6: 48 29 fa             	subq	%rdi, %rdx
ffffffff800140c9: 48 89 ce             	movq	%rcx, %rsi
ffffffff800140cc: 48 83 fa 01          	cmpq	$0x1, %rdx
ffffffff800140d0: 77 de                	ja	0xffffffff800140b0 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0x110>
ffffffff800140d2: 48 8d 14 49          	leaq	(%rcx,%rcx,2), %rdx
ffffffff800140d6: 49 39 04 d4          	cmpq	%rax, (%r12,%rdx,8)
ffffffff800140da: 75 1c                	jne	0xffffffff800140f8 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0x158>
ffffffff800140dc: 4d 8b 7c d4 08       	movq	0x8(%r12,%rdx,8), %r15
ffffffff800140e1: 49 8b 5c d4 10       	movq	0x10(%r12,%rdx,8), %rbx
ffffffff800140e6: 4c 8b 74 24 18       	movq	0x18(%rsp), %r14
ffffffff800140eb: 4c 3b 74 24 08       	cmpq	0x8(%rsp), %r14
ffffffff800140f0: 0f 85 5a ff ff ff    	jne	0xffffffff80014050 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0xb0>
ffffffff800140f6: eb 31                	jmp	0xffffffff80014129 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0x189>
ffffffff800140f8: 48 83 d1 00          	adcq	$0x0, %rcx
ffffffff800140fc: 74 52                	je	0xffffffff80014150 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0x1b0>
ffffffff800140fe: 48 8d 0c 49          	leaq	(%rcx,%rcx,2), %rcx
ffffffff80014102: 4d 8b 7c cc f0       	movq	-0x10(%r12,%rcx,8), %r15
ffffffff80014107: 49 8b 5c cc f8       	movq	-0x8(%r12,%rcx,8), %rbx
ffffffff8001410c: 49 2b 44 cc e8       	subq	-0x18(%r12,%rcx,8), %rax
ffffffff80014111: 75 2c                	jne	0xffffffff8001413f <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0x19f>
ffffffff80014113: 48 29 c3             	subq	%rax, %rbx
ffffffff80014116: 49 01 c7             	addq	%rax, %r15
ffffffff80014119: 4c 8b 74 24 18       	movq	0x18(%rsp), %r14
ffffffff8001411e: 4c 3b 74 24 08       	cmpq	0x8(%rsp), %r14
ffffffff80014123: 0f 85 27 ff ff ff    	jne	0xffffffff80014050 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0xb0>
ffffffff80014129: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff8001412e: 48 c7 c6 18 29 02 80 	movq	$-0x7ffdd6e8, %rsi      # imm = 0x80022918
ffffffff80014135: e8 b6 18 00 00       	callq	0xffffffff800159f0 <alloc::raw_vec::RawVec<T,A>::grow_one::hfaf90d01a1f2efd7>
ffffffff8001413a: e9 11 ff ff ff       	jmp	0xffffffff80014050 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0xb0>
ffffffff8001413f: 48 39 c3             	cmpq	%rax, %rbx
ffffffff80014142: 76 09                	jbe	0xffffffff8001414d <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0x1ad>
ffffffff80014144: 41 80 3c 07 c0       	cmpb	$-0x40, (%r15,%rax)
ffffffff80014149: 7d c8                	jge	0xffffffff80014113 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0x173>
ffffffff8001414b: eb 03                	jmp	0xffffffff80014150 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0x1b0>
ffffffff8001414d: 74 c4                	je	0xffffffff80014113 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0x173>
ffffffff8001414f: 90                   	nop
ffffffff80014150: 48 8b 05 c1 22 02 00 	movq	0x222c1(%rip), %rax     # 0xffffffff80036418 <log::MAX_LOG_LEVEL_FILTER::hebff44fa7f6797f5>
ffffffff80014157: 48 83 f8 02          	cmpq	$0x2, %rax
ffffffff8001415b: 0f 82 11 ff ff ff    	jb	0xffffffff80014072 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0xd2>
ffffffff80014161: 48 8d 45 08          	leaq	0x8(%rbp), %rax
ffffffff80014165: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff8001416a: 48 c7 44 24 38 c0 b8 01 80   	movq	$-0x7ffe4740, 0x38(%rsp) # imm = 0x8001B8C0
ffffffff80014173: 48 c7 44 24 68 48 29 02 80   	movq	$-0x7ffdd6b8, 0x68(%rsp) # imm = 0x80022948
ffffffff8001417c: 48 c7 44 24 70 01 00 00 00   	movq	$0x1, 0x70(%rsp)
ffffffff80014185: 48 c7 84 24 88 00 00 00 00 00 00 00  	movq	$0x0, 0x88(%rsp)
ffffffff80014191: 48 8d 44 24 30       	leaq	0x30(%rsp), %rax
ffffffff80014196: 48 89 44 24 78       	movq	%rax, 0x78(%rsp)
ffffffff8001419b: 48 c7 84 24 80 00 00 00 01 00 00 00  	movq	$0x1, 0x80(%rsp)
ffffffff800141a7: 48 c7 c7 58 29 02 80 	movq	$-0x7ffdd6a8, %rdi      # imm = 0x80022958
ffffffff800141ae: e8 9d 3a 00 00       	callq	0xffffffff80017c50 <log::__private_api::loc::h7d13c00ac743e0a8>
ffffffff800141b3: 48 c7 44 24 40 70 29 02 80   	movq	$-0x7ffdd690, 0x40(%rsp) # imm = 0x80022970
ffffffff800141bc: 48 c7 44 24 48 14 00 00 00   	movq	$0x14, 0x48(%rsp)
ffffffff800141c5: 48 c7 44 24 50 70 29 02 80   	movq	$-0x7ffdd690, 0x50(%rsp) # imm = 0x80022970
ffffffff800141ce: 48 c7 44 24 58 14 00 00 00   	movq	$0x14, 0x58(%rsp)
ffffffff800141d7: 48 89 44 24 60       	movq	%rax, 0x60(%rsp)
ffffffff800141dc: be 02 00 00 00       	movl	$0x2, %esi
ffffffff800141e1: 48 8d 7c 24 68       	leaq	0x68(%rsp), %rdi
ffffffff800141e6: 48 8d 54 24 40       	leaq	0x40(%rsp), %rdx
ffffffff800141eb: 31 c9                	xorl	%ecx, %ecx
ffffffff800141ed: e8 1e 39 00 00       	callq	0xffffffff80017b10 <log::__private_api::log_impl::hbf977b1a5812fb97>
ffffffff800141f2: e9 7b fe ff ff       	jmp	0xffffffff80014072 <goblin::elf::dynamic::Dynamic::get_libraries::h19ae9e25eb04d7ca+0xd2>
ffffffff800141f7: 48 8b 4c 24 18       	movq	0x18(%rsp), %rcx
ffffffff800141fc: 48 8b 44 24 20       	movq	0x20(%rsp), %rax
ffffffff80014201: 48 89 48 10          	movq	%rcx, 0x10(%rax)
ffffffff80014205: 48 8b 54 24 08       	movq	0x8(%rsp), %rdx
ffffffff8001420a: 48 8b 4c 24 10       	movq	0x10(%rsp), %rcx
ffffffff8001420f: 48 89 48 08          	movq	%rcx, 0x8(%rax)
ffffffff80014213: 48 89 10             	movq	%rdx, (%rax)
ffffffff80014216: 48 81 c4 98 00 00 00 	addq	$0x98, %rsp
ffffffff8001421d: 5b                   	popq	%rbx
ffffffff8001421e: 41 5c                	popq	%r12
ffffffff80014220: 41 5d                	popq	%r13
ffffffff80014222: 41 5e                	popq	%r14
ffffffff80014224: 41 5f                	popq	%r15
ffffffff80014226: 5d                   	popq	%rbp
ffffffff80014227: c3                   	retq
ffffffff80014228: cc                   	int3
ffffffff80014229: cc                   	int3
ffffffff8001422a: cc                   	int3
ffffffff8001422b: cc                   	int3
ffffffff8001422c: cc                   	int3
ffffffff8001422d: cc                   	int3
ffffffff8001422e: cc                   	int3
ffffffff8001422f: cc                   	int3

ffffffff80014230 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977>:
ffffffff80014230: 48 8d 41 ff          	leaq	-0x1(%rcx), %rax
ffffffff80014234: 48 83 f8 1d          	cmpq	$0x1d, %rax
ffffffff80014238: 77 0f                	ja	0xffffffff80014249 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x19>
ffffffff8001423a: ff 24 c5 b8 26 02 80 	jmpq	*-0x7ffdd948(,%rax,8)
ffffffff80014241: 48 ff 87 00 01 00 00 	incq	0x100(%rdi)
ffffffff80014248: c3                   	retq
ffffffff80014249: 48 8d 81 10 00 00 90 	leaq	-0x6ffffff0(%rcx), %rax
ffffffff80014250: 48 83 f8 0f          	cmpq	$0xf, %rax
ffffffff80014254: 77 4b                	ja	0xffffffff800142a1 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x71>
ffffffff80014256: ff 24 c5 a8 27 02 80 	jmpq	*-0x7ffdd858(,%rax,8)
ffffffff8001425d: 48 85 d2             	testq	%rdx, %rdx
ffffffff80014260: 74 35                	je	0xffffffff80014297 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x67>
ffffffff80014262: 48 6b ca 38          	imulq	$0x38, %rdx, %rcx
ffffffff80014266: 31 c0                	xorl	%eax, %eax
ffffffff80014268: eb 0f                	jmp	0xffffffff80014279 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x49>
ffffffff8001426a: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff80014270: 48 83 c0 38          	addq	$0x38, %rax
ffffffff80014274: 48 39 c1             	cmpq	%rax, %rcx
ffffffff80014277: 74 1e                	je	0xffffffff80014297 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x67>
ffffffff80014279: 83 7c 06 30 01       	cmpl	$0x1, 0x30(%rsi,%rax)
ffffffff8001427e: 75 f0                	jne	0xffffffff80014270 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x40>
ffffffff80014280: 4c 89 c2             	movq	%r8, %rdx
ffffffff80014283: 48 2b 54 06 08       	subq	0x8(%rsi,%rax), %rdx
ffffffff80014288: 72 e6                	jb	0xffffffff80014270 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x40>
ffffffff8001428a: 48 3b 54 06 20       	cmpq	0x20(%rsi,%rax), %rdx
ffffffff8001428f: 73 df                	jae	0xffffffff80014270 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x40>
ffffffff80014291: 48 03 14 06          	addq	(%rsi,%rax), %rdx
ffffffff80014295: 73 02                	jae	0xffffffff80014299 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x69>
ffffffff80014297: 31 d2                	xorl	%edx, %edx
ffffffff80014299: 48 89 97 c8 00 00 00 	movq	%rdx, 0xc8(%rdi)
ffffffff800142a0: c3                   	retq
ffffffff800142a1: 48 81 f9 f5 fe ff 6f 	cmpq	$0x6ffffef5, %rcx       # imm = 0x6FFFFEF5
ffffffff800142a8: 75 55                	jne	0xffffffff800142ff <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0xcf>
ffffffff800142aa: 48 85 d2             	testq	%rdx, %rdx
ffffffff800142ad: 0f 84 b6 04 00 00    	je	0xffffffff80014769 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x539>
ffffffff800142b3: 48 6b d2 38          	imulq	$0x38, %rdx, %rdx
ffffffff800142b7: 31 c0                	xorl	%eax, %eax
ffffffff800142b9: 45 31 c9             	xorl	%r9d, %r9d
ffffffff800142bc: eb 0f                	jmp	0xffffffff800142cd <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x9d>
ffffffff800142be: 66 90                	nop
ffffffff800142c0: 49 83 c1 38          	addq	$0x38, %r9
ffffffff800142c4: 4c 39 ca             	cmpq	%r9, %rdx
ffffffff800142c7: 0f 84 94 04 00 00    	je	0xffffffff80014761 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x531>
ffffffff800142cd: 42 83 7c 0e 30 01    	cmpl	$0x1, 0x30(%rsi,%r9)
ffffffff800142d3: 75 eb                	jne	0xffffffff800142c0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x90>
ffffffff800142d5: 4c 89 c1             	movq	%r8, %rcx
ffffffff800142d8: 4a 2b 4c 0e 08       	subq	0x8(%rsi,%r9), %rcx
ffffffff800142dd: 72 e1                	jb	0xffffffff800142c0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x90>
ffffffff800142df: 4a 3b 4c 0e 20       	cmpq	0x20(%rsi,%r9), %rcx
ffffffff800142e4: 73 da                	jae	0xffffffff800142c0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x90>
ffffffff800142e6: 4a 03 0c 0e          	addq	(%rsi,%r9), %rcx
ffffffff800142ea: 0f 92 c0             	setb	%al
ffffffff800142ed: 0f 82 8a 04 00 00    	jb	0xffffffff8001477d <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x54d>
ffffffff800142f3: 34 01                	xorb	$0x1, %al
ffffffff800142f5: 0f b6 c0             	movzbl	%al, %eax
ffffffff800142f8: 48 89 07             	movq	%rax, (%rdi)
ffffffff800142fb: 48 89 4f 08          	movq	%rcx, 0x8(%rdi)
ffffffff800142ff: c3                   	retq
ffffffff80014300: 48 85 d2             	testq	%rdx, %rdx
ffffffff80014303: 74 32                	je	0xffffffff80014337 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x107>
ffffffff80014305: 48 6b ca 38          	imulq	$0x38, %rdx, %rcx
ffffffff80014309: 31 c0                	xorl	%eax, %eax
ffffffff8001430b: eb 0c                	jmp	0xffffffff80014319 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0xe9>
ffffffff8001430d: 0f 1f 00             	nopl	(%rax)
ffffffff80014310: 48 83 c0 38          	addq	$0x38, %rax
ffffffff80014314: 48 39 c1             	cmpq	%rax, %rcx
ffffffff80014317: 74 1e                	je	0xffffffff80014337 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x107>
ffffffff80014319: 83 7c 06 30 01       	cmpl	$0x1, 0x30(%rsi,%rax)
ffffffff8001431e: 75 f0                	jne	0xffffffff80014310 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0xe0>
ffffffff80014320: 4c 89 c2             	movq	%r8, %rdx
ffffffff80014323: 48 2b 54 06 08       	subq	0x8(%rsi,%rax), %rdx
ffffffff80014328: 72 e6                	jb	0xffffffff80014310 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0xe0>
ffffffff8001432a: 48 3b 54 06 20       	cmpq	0x20(%rsi,%rax), %rdx
ffffffff8001432f: 73 df                	jae	0xffffffff80014310 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0xe0>
ffffffff80014331: 48 03 14 06          	addq	(%rsi,%rax), %rdx
ffffffff80014335: 73 02                	jae	0xffffffff80014339 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x109>
ffffffff80014337: 31 d2                	xorl	%edx, %edx
ffffffff80014339: 48 89 97 e0 00 00 00 	movq	%rdx, 0xe0(%rdi)
ffffffff80014340: c3                   	retq
ffffffff80014341: 4c 89 47 60          	movq	%r8, 0x60(%rdi)
ffffffff80014345: c3                   	retq
ffffffff80014346: 4c 89 47 58          	movq	%r8, 0x58(%rdi)
ffffffff8001434a: c3                   	retq
ffffffff8001434b: 4c 89 87 18 01 00 00 	movq	%r8, 0x118(%rdi)
ffffffff80014352: c3                   	retq
ffffffff80014353: 48 85 d2             	testq	%rdx, %rdx
ffffffff80014356: 74 2f                	je	0xffffffff80014387 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x157>
ffffffff80014358: 48 6b ca 38          	imulq	$0x38, %rdx, %rcx
ffffffff8001435c: 31 c0                	xorl	%eax, %eax
ffffffff8001435e: eb 09                	jmp	0xffffffff80014369 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x139>
ffffffff80014360: 48 83 c0 38          	addq	$0x38, %rax
ffffffff80014364: 48 39 c1             	cmpq	%rax, %rcx
ffffffff80014367: 74 1e                	je	0xffffffff80014387 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x157>
ffffffff80014369: 83 7c 06 30 01       	cmpl	$0x1, 0x30(%rsi,%rax)
ffffffff8001436e: 75 f0                	jne	0xffffffff80014360 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x130>
ffffffff80014370: 4c 89 c2             	movq	%r8, %rdx
ffffffff80014373: 48 2b 54 06 08       	subq	0x8(%rsi,%rax), %rdx
ffffffff80014378: 72 e6                	jb	0xffffffff80014360 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x130>
ffffffff8001437a: 48 3b 54 06 20       	cmpq	0x20(%rsi,%rax), %rdx
ffffffff8001437f: 73 df                	jae	0xffffffff80014360 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x130>
ffffffff80014381: 48 03 14 06          	addq	(%rsi,%rax), %rdx
ffffffff80014385: 73 02                	jae	0xffffffff80014389 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x159>
ffffffff80014387: 31 d2                	xorl	%edx, %edx
ffffffff80014389: 48 89 97 d8 00 00 00 	movq	%rdx, 0xd8(%rdi)
ffffffff80014390: c3                   	retq
ffffffff80014391: 48 85 d2             	testq	%rdx, %rdx
ffffffff80014394: 74 31                	je	0xffffffff800143c7 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x197>
ffffffff80014396: 48 6b ca 38          	imulq	$0x38, %rdx, %rcx
ffffffff8001439a: 31 c0                	xorl	%eax, %eax
ffffffff8001439c: eb 0b                	jmp	0xffffffff800143a9 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x179>
ffffffff8001439e: 66 90                	nop
ffffffff800143a0: 48 83 c0 38          	addq	$0x38, %rax
ffffffff800143a4: 48 39 c1             	cmpq	%rax, %rcx
ffffffff800143a7: 74 1e                	je	0xffffffff800143c7 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x197>
ffffffff800143a9: 83 7c 06 30 01       	cmpl	$0x1, 0x30(%rsi,%rax)
ffffffff800143ae: 75 f0                	jne	0xffffffff800143a0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x170>
ffffffff800143b0: 4c 89 c2             	movq	%r8, %rdx
ffffffff800143b3: 48 2b 54 06 08       	subq	0x8(%rsi,%rax), %rdx
ffffffff800143b8: 72 e6                	jb	0xffffffff800143a0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x170>
ffffffff800143ba: 48 3b 54 06 20       	cmpq	0x20(%rsi,%rax), %rdx
ffffffff800143bf: 73 df                	jae	0xffffffff800143a0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x170>
ffffffff800143c1: 48 03 14 06          	addq	(%rsi,%rax), %rdx
ffffffff800143c5: 73 02                	jae	0xffffffff800143c9 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x199>
ffffffff800143c7: 31 d2                	xorl	%edx, %edx
ffffffff800143c9: 48 89 97 f0 00 00 00 	movq	%rdx, 0xf0(%rdi)
ffffffff800143d0: c3                   	retq
ffffffff800143d1: 48 85 d2             	testq	%rdx, %rdx
ffffffff800143d4: 74 31                	je	0xffffffff80014407 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x1d7>
ffffffff800143d6: 48 6b ca 38          	imulq	$0x38, %rdx, %rcx
ffffffff800143da: 31 c0                	xorl	%eax, %eax
ffffffff800143dc: eb 0b                	jmp	0xffffffff800143e9 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x1b9>
ffffffff800143de: 66 90                	nop
ffffffff800143e0: 48 83 c0 38          	addq	$0x38, %rax
ffffffff800143e4: 48 39 c1             	cmpq	%rax, %rcx
ffffffff800143e7: 74 1e                	je	0xffffffff80014407 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x1d7>
ffffffff800143e9: 83 7c 06 30 01       	cmpl	$0x1, 0x30(%rsi,%rax)
ffffffff800143ee: 75 f0                	jne	0xffffffff800143e0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x1b0>
ffffffff800143f0: 4c 89 c2             	movq	%r8, %rdx
ffffffff800143f3: 48 2b 54 06 08       	subq	0x8(%rsi,%rax), %rdx
ffffffff800143f8: 72 e6                	jb	0xffffffff800143e0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x1b0>
ffffffff800143fa: 48 3b 54 06 20       	cmpq	0x20(%rsi,%rax), %rdx
ffffffff800143ff: 73 df                	jae	0xffffffff800143e0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x1b0>
ffffffff80014401: 48 03 14 06          	addq	(%rsi,%rax), %rdx
ffffffff80014405: 73 02                	jae	0xffffffff80014409 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x1d9>
ffffffff80014407: 31 d2                	xorl	%edx, %edx
ffffffff80014409: 48 89 97 d0 00 00 00 	movq	%rdx, 0xd0(%rdi)
ffffffff80014410: c3                   	retq
ffffffff80014411: 4c 89 87 f8 00 00 00 	movq	%r8, 0xf8(%rdi)
ffffffff80014418: c3                   	retq
ffffffff80014419: 48 85 d2             	testq	%rdx, %rdx
ffffffff8001441c: 74 39                	je	0xffffffff80014457 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x227>
ffffffff8001441e: 48 6b ca 38          	imulq	$0x38, %rdx, %rcx
ffffffff80014422: 31 c0                	xorl	%eax, %eax
ffffffff80014424: eb 13                	jmp	0xffffffff80014439 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x209>
ffffffff80014426: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
ffffffff80014430: 48 83 c0 38          	addq	$0x38, %rax
ffffffff80014434: 48 39 c1             	cmpq	%rax, %rcx
ffffffff80014437: 74 1e                	je	0xffffffff80014457 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x227>
ffffffff80014439: 83 7c 06 30 01       	cmpl	$0x1, 0x30(%rsi,%rax)
ffffffff8001443e: 75 f0                	jne	0xffffffff80014430 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x200>
ffffffff80014440: 4c 89 c2             	movq	%r8, %rdx
ffffffff80014443: 48 2b 54 06 08       	subq	0x8(%rsi,%rax), %rdx
ffffffff80014448: 72 e6                	jb	0xffffffff80014430 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x200>
ffffffff8001444a: 48 3b 54 06 20       	cmpq	0x20(%rsi,%rax), %rdx
ffffffff8001444f: 73 df                	jae	0xffffffff80014430 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x200>
ffffffff80014451: 48 03 14 06          	addq	(%rsi,%rax), %rdx
ffffffff80014455: 73 02                	jae	0xffffffff80014459 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x229>
ffffffff80014457: 31 d2                	xorl	%edx, %edx
ffffffff80014459: 48 89 97 80 00 00 00 	movq	%rdx, 0x80(%rdi)
ffffffff80014460: c3                   	retq
ffffffff80014461: 48 85 d2             	testq	%rdx, %rdx
ffffffff80014464: 0f 84 e1 02 00 00    	je	0xffffffff8001474b <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x51b>
ffffffff8001446a: 48 6b d2 38          	imulq	$0x38, %rdx, %rdx
ffffffff8001446e: 31 c0                	xorl	%eax, %eax
ffffffff80014470: 45 31 c9             	xorl	%r9d, %r9d
ffffffff80014473: eb 18                	jmp	0xffffffff8001448d <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x25d>
ffffffff80014475: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff80014480: 49 83 c1 38          	addq	$0x38, %r9
ffffffff80014484: 4c 39 ca             	cmpq	%r9, %rdx
ffffffff80014487: 0f 84 ac 02 00 00    	je	0xffffffff80014739 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x509>
ffffffff8001448d: 42 83 7c 0e 30 01    	cmpl	$0x1, 0x30(%rsi,%r9)
ffffffff80014493: 75 eb                	jne	0xffffffff80014480 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x250>
ffffffff80014495: 4c 89 c1             	movq	%r8, %rcx
ffffffff80014498: 4a 2b 4c 0e 08       	subq	0x8(%rsi,%r9), %rcx
ffffffff8001449d: 72 e1                	jb	0xffffffff80014480 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x250>
ffffffff8001449f: 4a 3b 4c 0e 20       	cmpq	0x20(%rsi,%r9), %rcx
ffffffff800144a4: 73 da                	jae	0xffffffff80014480 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x250>
ffffffff800144a6: 4a 03 0c 0e          	addq	(%rsi,%r9), %rcx
ffffffff800144aa: 0f 92 c0             	setb	%al
ffffffff800144ad: 0f 82 c0 02 00 00    	jb	0xffffffff80014773 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x543>
ffffffff800144b3: 34 01                	xorb	$0x1, %al
ffffffff800144b5: 0f b6 c0             	movzbl	%al, %eax
ffffffff800144b8: 48 89 47 10          	movq	%rax, 0x10(%rdi)
ffffffff800144bc: 48 89 4f 18          	movq	%rcx, 0x18(%rdi)
ffffffff800144c0: c3                   	retq
ffffffff800144c1: 48 85 d2             	testq	%rdx, %rdx
ffffffff800144c4: 74 31                	je	0xffffffff800144f7 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x2c7>
ffffffff800144c6: 48 6b ca 38          	imulq	$0x38, %rdx, %rcx
ffffffff800144ca: 31 c0                	xorl	%eax, %eax
ffffffff800144cc: eb 0b                	jmp	0xffffffff800144d9 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x2a9>
ffffffff800144ce: 66 90                	nop
ffffffff800144d0: 48 83 c0 38          	addq	$0x38, %rax
ffffffff800144d4: 48 39 c1             	cmpq	%rax, %rcx
ffffffff800144d7: 74 1e                	je	0xffffffff800144f7 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x2c7>
ffffffff800144d9: 83 7c 06 30 01       	cmpl	$0x1, 0x30(%rsi,%rax)
ffffffff800144de: 75 f0                	jne	0xffffffff800144d0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x2a0>
ffffffff800144e0: 4c 89 c2             	movq	%r8, %rdx
ffffffff800144e3: 48 2b 54 06 08       	subq	0x8(%rsi,%rax), %rdx
ffffffff800144e8: 72 e6                	jb	0xffffffff800144d0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x2a0>
ffffffff800144ea: 48 3b 54 06 20       	cmpq	0x20(%rsi,%rax), %rdx
ffffffff800144ef: 73 df                	jae	0xffffffff800144d0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x2a0>
ffffffff800144f1: 48 03 14 06          	addq	(%rsi,%rax), %rdx
ffffffff800144f5: 73 02                	jae	0xffffffff800144f9 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x2c9>
ffffffff800144f7: 31 d2                	xorl	%edx, %edx
ffffffff800144f9: 48 89 57 30          	movq	%rdx, 0x30(%rdi)
ffffffff800144fd: c3                   	retq
ffffffff800144fe: 4c 89 87 98 00 00 00 	movq	%r8, 0x98(%rdi)
ffffffff80014505: c3                   	retq
ffffffff80014506: 4c 89 47 78          	movq	%r8, 0x78(%rdi)
ffffffff8001450a: c3                   	retq
ffffffff8001450b: 48 85 d2             	testq	%rdx, %rdx
ffffffff8001450e: 0f 84 42 02 00 00    	je	0xffffffff80014756 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x526>
ffffffff80014514: 48 6b d2 38          	imulq	$0x38, %rdx, %rdx
ffffffff80014518: 31 c0                	xorl	%eax, %eax
ffffffff8001451a: 45 31 c9             	xorl	%r9d, %r9d
ffffffff8001451d: eb 0e                	jmp	0xffffffff8001452d <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x2fd>
ffffffff8001451f: 90                   	nop
ffffffff80014520: 49 83 c1 38          	addq	$0x38, %r9
ffffffff80014524: 4c 39 ca             	cmpq	%r9, %rdx
ffffffff80014527: 0f 84 15 02 00 00    	je	0xffffffff80014742 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x512>
ffffffff8001452d: 42 83 7c 0e 30 01    	cmpl	$0x1, 0x30(%rsi,%r9)
ffffffff80014533: 75 eb                	jne	0xffffffff80014520 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x2f0>
ffffffff80014535: 4c 89 c1             	movq	%r8, %rcx
ffffffff80014538: 4a 2b 4c 0e 08       	subq	0x8(%rsi,%r9), %rcx
ffffffff8001453d: 72 e1                	jb	0xffffffff80014520 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x2f0>
ffffffff8001453f: 4a 3b 4c 0e 20       	cmpq	0x20(%rsi,%r9), %rcx
ffffffff80014544: 73 da                	jae	0xffffffff80014520 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x2f0>
ffffffff80014546: 4a 03 0c 0e          	addq	(%rsi,%r9), %rcx
ffffffff8001454a: 0f 92 c0             	setb	%al
ffffffff8001454d: 0f 82 25 02 00 00    	jb	0xffffffff80014778 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x548>
ffffffff80014553: 34 01                	xorb	$0x1, %al
ffffffff80014555: 0f b6 c0             	movzbl	%al, %eax
ffffffff80014558: 48 89 47 20          	movq	%rax, 0x20(%rdi)
ffffffff8001455c: 48 89 4f 28          	movq	%rcx, 0x28(%rdi)
ffffffff80014560: c3                   	retq
ffffffff80014561: 4c 89 87 90 00 00 00 	movq	%r8, 0x90(%rdi)
ffffffff80014568: c3                   	retq
ffffffff80014569: 48 85 d2             	testq	%rdx, %rdx
ffffffff8001456c: 74 39                	je	0xffffffff800145a7 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x377>
ffffffff8001456e: 48 6b ca 38          	imulq	$0x38, %rdx, %rcx
ffffffff80014572: 31 c0                	xorl	%eax, %eax
ffffffff80014574: eb 13                	jmp	0xffffffff80014589 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x359>
ffffffff80014576: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
ffffffff80014580: 48 83 c0 38          	addq	$0x38, %rax
ffffffff80014584: 48 39 c1             	cmpq	%rax, %rcx
ffffffff80014587: 74 1e                	je	0xffffffff800145a7 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x377>
ffffffff80014589: 83 7c 06 30 01       	cmpl	$0x1, 0x30(%rsi,%rax)
ffffffff8001458e: 75 f0                	jne	0xffffffff80014580 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x350>
ffffffff80014590: 4c 89 c2             	movq	%r8, %rdx
ffffffff80014593: 48 2b 54 06 08       	subq	0x8(%rsi,%rax), %rdx
ffffffff80014598: 72 e6                	jb	0xffffffff80014580 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x350>
ffffffff8001459a: 48 3b 54 06 20       	cmpq	0x20(%rsi,%rax), %rdx
ffffffff8001459f: 73 df                	jae	0xffffffff80014580 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x350>
ffffffff800145a1: 48 03 14 06          	addq	(%rsi,%rax), %rdx
ffffffff800145a5: 73 02                	jae	0xffffffff800145a9 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x379>
ffffffff800145a7: 31 d2                	xorl	%edx, %edx
ffffffff800145a9: 48 89 57 70          	movq	%rdx, 0x70(%rdi)
ffffffff800145ad: c3                   	retq
ffffffff800145ae: 4c 89 87 e8 00 00 00 	movq	%r8, 0xe8(%rdi)
ffffffff800145b5: c3                   	retq
ffffffff800145b6: 4c 89 47 38          	movq	%r8, 0x38(%rdi)
ffffffff800145ba: c3                   	retq
ffffffff800145bb: 48 85 d2             	testq	%rdx, %rdx
ffffffff800145be: 74 37                	je	0xffffffff800145f7 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x3c7>
ffffffff800145c0: 48 6b ca 38          	imulq	$0x38, %rdx, %rcx
ffffffff800145c4: 31 c0                	xorl	%eax, %eax
ffffffff800145c6: eb 11                	jmp	0xffffffff800145d9 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x3a9>
ffffffff800145c8: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
ffffffff800145d0: 48 83 c0 38          	addq	$0x38, %rax
ffffffff800145d4: 48 39 c1             	cmpq	%rax, %rcx
ffffffff800145d7: 74 1e                	je	0xffffffff800145f7 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x3c7>
ffffffff800145d9: 83 7c 06 30 01       	cmpl	$0x1, 0x30(%rsi,%rax)
ffffffff800145de: 75 f0                	jne	0xffffffff800145d0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x3a0>
ffffffff800145e0: 4c 89 c2             	movq	%r8, %rdx
ffffffff800145e3: 48 2b 54 06 08       	subq	0x8(%rsi,%rax), %rdx
ffffffff800145e8: 72 e6                	jb	0xffffffff800145d0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x3a0>
ffffffff800145ea: 48 3b 54 06 20       	cmpq	0x20(%rsi,%rax), %rdx
ffffffff800145ef: 73 df                	jae	0xffffffff800145d0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x3a0>
ffffffff800145f1: 48 03 14 06          	addq	(%rsi,%rax), %rdx
ffffffff800145f5: 73 02                	jae	0xffffffff800145f9 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x3c9>
ffffffff800145f7: 31 d2                	xorl	%edx, %edx
ffffffff800145f9: 48 89 57 50          	movq	%rdx, 0x50(%rdi)
ffffffff800145fd: c3                   	retq
ffffffff800145fe: 4c 89 47 40          	movq	%r8, 0x40(%rdi)
ffffffff80014602: c3                   	retq
ffffffff80014603: 4c 89 87 88 00 00 00 	movq	%r8, 0x88(%rdi)
ffffffff8001460a: c3                   	retq
ffffffff8001460b: 48 85 d2             	testq	%rdx, %rdx
ffffffff8001460e: 74 37                	je	0xffffffff80014647 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x417>
ffffffff80014610: 48 6b ca 38          	imulq	$0x38, %rdx, %rcx
ffffffff80014614: 31 c0                	xorl	%eax, %eax
ffffffff80014616: eb 11                	jmp	0xffffffff80014629 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x3f9>
ffffffff80014618: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
ffffffff80014620: 48 83 c0 38          	addq	$0x38, %rax
ffffffff80014624: 48 39 c1             	cmpq	%rax, %rcx
ffffffff80014627: 74 1e                	je	0xffffffff80014647 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x417>
ffffffff80014629: 83 7c 06 30 01       	cmpl	$0x1, 0x30(%rsi,%rax)
ffffffff8001462e: 75 f0                	jne	0xffffffff80014620 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x3f0>
ffffffff80014630: 4c 89 c2             	movq	%r8, %rdx
ffffffff80014633: 48 2b 54 06 08       	subq	0x8(%rsi,%rax), %rdx
ffffffff80014638: 72 e6                	jb	0xffffffff80014620 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x3f0>
ffffffff8001463a: 48 3b 54 06 20       	cmpq	0x20(%rsi,%rax), %rdx
ffffffff8001463f: 73 df                	jae	0xffffffff80014620 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x3f0>
ffffffff80014641: 48 03 14 06          	addq	(%rsi,%rax), %rdx
ffffffff80014645: 73 02                	jae	0xffffffff80014649 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x419>
ffffffff80014647: 31 d2                	xorl	%edx, %edx
ffffffff80014649: 48 89 97 a0 00 00 00 	movq	%rdx, 0xa0(%rdi)
ffffffff80014650: c3                   	retq
ffffffff80014651: c6 87 20 01 00 00 01 	movb	$0x1, 0x120(%rdi)
ffffffff80014658: c3                   	retq
ffffffff80014659: 4c 89 87 08 01 00 00 	movq	%r8, 0x108(%rdi)
ffffffff80014660: c3                   	retq
ffffffff80014661: 4c 89 87 10 01 00 00 	movq	%r8, 0x110(%rdi)
ffffffff80014668: c3                   	retq
ffffffff80014669: 4c 89 47 68          	movq	%r8, 0x68(%rdi)
ffffffff8001466d: c3                   	retq
ffffffff8001466e: 4c 89 47 48          	movq	%r8, 0x48(%rdi)
ffffffff80014672: c3                   	retq
ffffffff80014673: 48 85 d2             	testq	%rdx, %rdx
ffffffff80014676: 74 2f                	je	0xffffffff800146a7 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x477>
ffffffff80014678: 48 6b ca 38          	imulq	$0x38, %rdx, %rcx
ffffffff8001467c: 31 c0                	xorl	%eax, %eax
ffffffff8001467e: eb 09                	jmp	0xffffffff80014689 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x459>
ffffffff80014680: 48 83 c0 38          	addq	$0x38, %rax
ffffffff80014684: 48 39 c1             	cmpq	%rax, %rcx
ffffffff80014687: 74 1e                	je	0xffffffff800146a7 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x477>
ffffffff80014689: 83 7c 06 30 01       	cmpl	$0x1, 0x30(%rsi,%rax)
ffffffff8001468e: 75 f0                	jne	0xffffffff80014680 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x450>
ffffffff80014690: 4c 89 c2             	movq	%r8, %rdx
ffffffff80014693: 48 2b 54 06 08       	subq	0x8(%rsi,%rax), %rdx
ffffffff80014698: 72 e6                	jb	0xffffffff80014680 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x450>
ffffffff8001469a: 48 3b 54 06 20       	cmpq	0x20(%rsi,%rax), %rdx
ffffffff8001469f: 73 df                	jae	0xffffffff80014680 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x450>
ffffffff800146a1: 48 03 14 06          	addq	(%rsi,%rax), %rdx
ffffffff800146a5: 73 02                	jae	0xffffffff800146a9 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x479>
ffffffff800146a7: 31 d2                	xorl	%edx, %edx
ffffffff800146a9: 48 89 97 a8 00 00 00 	movq	%rdx, 0xa8(%rdi)
ffffffff800146b0: c3                   	retq
ffffffff800146b1: 48 85 d2             	testq	%rdx, %rdx
ffffffff800146b4: 74 31                	je	0xffffffff800146e7 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x4b7>
ffffffff800146b6: 48 6b ca 38          	imulq	$0x38, %rdx, %rcx
ffffffff800146ba: 31 c0                	xorl	%eax, %eax
ffffffff800146bc: eb 0b                	jmp	0xffffffff800146c9 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x499>
ffffffff800146be: 66 90                	nop
ffffffff800146c0: 48 83 c0 38          	addq	$0x38, %rax
ffffffff800146c4: 48 39 c1             	cmpq	%rax, %rcx
ffffffff800146c7: 74 1e                	je	0xffffffff800146e7 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x4b7>
ffffffff800146c9: 83 7c 06 30 01       	cmpl	$0x1, 0x30(%rsi,%rax)
ffffffff800146ce: 75 f0                	jne	0xffffffff800146c0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x490>
ffffffff800146d0: 4c 89 c2             	movq	%r8, %rdx
ffffffff800146d3: 48 2b 54 06 08       	subq	0x8(%rsi,%rax), %rdx
ffffffff800146d8: 72 e6                	jb	0xffffffff800146c0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x490>
ffffffff800146da: 48 3b 54 06 20       	cmpq	0x20(%rsi,%rax), %rdx
ffffffff800146df: 73 df                	jae	0xffffffff800146c0 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x490>
ffffffff800146e1: 48 03 14 06          	addq	(%rsi,%rax), %rdx
ffffffff800146e5: 73 02                	jae	0xffffffff800146e9 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x4b9>
ffffffff800146e7: 31 d2                	xorl	%edx, %edx
ffffffff800146e9: 48 89 97 b8 00 00 00 	movq	%rdx, 0xb8(%rdi)
ffffffff800146f0: c3                   	retq
ffffffff800146f1: 48 85 d2             	testq	%rdx, %rdx
ffffffff800146f4: 74 31                	je	0xffffffff80014727 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x4f7>
ffffffff800146f6: 48 6b ca 38          	imulq	$0x38, %rdx, %rcx
ffffffff800146fa: 31 c0                	xorl	%eax, %eax
ffffffff800146fc: eb 0b                	jmp	0xffffffff80014709 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x4d9>
ffffffff800146fe: 66 90                	nop
ffffffff80014700: 48 83 c0 38          	addq	$0x38, %rax
ffffffff80014704: 48 39 c1             	cmpq	%rax, %rcx
ffffffff80014707: 74 1e                	je	0xffffffff80014727 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x4f7>
ffffffff80014709: 83 7c 06 30 01       	cmpl	$0x1, 0x30(%rsi,%rax)
ffffffff8001470e: 75 f0                	jne	0xffffffff80014700 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x4d0>
ffffffff80014710: 4c 89 c2             	movq	%r8, %rdx
ffffffff80014713: 48 2b 54 06 08       	subq	0x8(%rsi,%rax), %rdx
ffffffff80014718: 72 e6                	jb	0xffffffff80014700 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x4d0>
ffffffff8001471a: 48 3b 54 06 20       	cmpq	0x20(%rsi,%rax), %rdx
ffffffff8001471f: 73 df                	jae	0xffffffff80014700 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x4d0>
ffffffff80014721: 48 03 14 06          	addq	(%rsi,%rax), %rdx
ffffffff80014725: 73 02                	jae	0xffffffff80014729 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x4f9>
ffffffff80014727: 31 d2                	xorl	%edx, %edx
ffffffff80014729: 48 89 97 b0 00 00 00 	movq	%rdx, 0xb0(%rdi)
ffffffff80014730: c3                   	retq
ffffffff80014731: 4c 89 87 c0 00 00 00 	movq	%r8, 0xc0(%rdi)
ffffffff80014738: c3                   	retq
ffffffff80014739: 48 89 47 10          	movq	%rax, 0x10(%rdi)
ffffffff8001473d: 48 89 4f 18          	movq	%rcx, 0x18(%rdi)
ffffffff80014741: c3                   	retq
ffffffff80014742: 48 89 47 20          	movq	%rax, 0x20(%rdi)
ffffffff80014746: 48 89 4f 28          	movq	%rcx, 0x28(%rdi)
ffffffff8001474a: c3                   	retq
ffffffff8001474b: 31 c0                	xorl	%eax, %eax
ffffffff8001474d: 48 89 47 10          	movq	%rax, 0x10(%rdi)
ffffffff80014751: 48 89 4f 18          	movq	%rcx, 0x18(%rdi)
ffffffff80014755: c3                   	retq
ffffffff80014756: 31 c0                	xorl	%eax, %eax
ffffffff80014758: 48 89 47 20          	movq	%rax, 0x20(%rdi)
ffffffff8001475c: 48 89 4f 28          	movq	%rcx, 0x28(%rdi)
ffffffff80014760: c3                   	retq
ffffffff80014761: 48 89 07             	movq	%rax, (%rdi)
ffffffff80014764: 48 89 4f 08          	movq	%rcx, 0x8(%rdi)
ffffffff80014768: c3                   	retq
ffffffff80014769: 31 c0                	xorl	%eax, %eax
ffffffff8001476b: 48 89 07             	movq	%rax, (%rdi)
ffffffff8001476e: 48 89 4f 08          	movq	%rcx, 0x8(%rdi)
ffffffff80014772: c3                   	retq
ffffffff80014773: e9 3b fd ff ff       	jmp	0xffffffff800144b3 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x283>
ffffffff80014778: e9 d6 fd ff ff       	jmp	0xffffffff80014553 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0x323>
ffffffff8001477d: e9 71 fb ff ff       	jmp	0xffffffff800142f3 <goblin::elf::dynamic::DynamicInfo::update::h771ab33e51b10977+0xc3>
ffffffff80014782: cc                   	int3
ffffffff80014783: cc                   	int3
ffffffff80014784: cc                   	int3
ffffffff80014785: cc                   	int3
ffffffff80014786: cc                   	int3
ffffffff80014787: cc                   	int3
ffffffff80014788: cc                   	int3
ffffffff80014789: cc                   	int3
ffffffff8001478a: cc                   	int3
ffffffff8001478b: cc                   	int3
ffffffff8001478c: cc                   	int3
ffffffff8001478d: cc                   	int3
ffffffff8001478e: cc                   	int3
ffffffff8001478f: cc                   	int3

ffffffff80014790 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E>:
ffffffff80014790: 55                   	pushq	%rbp
ffffffff80014791: 41 57                	pushq	%r15
ffffffff80014793: 41 56                	pushq	%r14
ffffffff80014795: 41 55                	pushq	%r13
ffffffff80014797: 41 54                	pushq	%r12
ffffffff80014799: 53                   	pushq	%rbx
ffffffff8001479a: 48 83 ec 18          	subq	$0x18, %rsp
ffffffff8001479e: 48 89 f8             	movq	%rdi, %rax
ffffffff800147a1: 4c 8b 39             	movq	(%rcx), %r15
ffffffff800147a4: 4c 29 fa             	subq	%r15, %rdx
ffffffff800147a7: 73 1c                	jae	0xffffffff800147c5 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E+0x35>
ffffffff800147a9: bf 10 00 00 00       	movl	$0x10, %edi
ffffffff800147ae: 41 be 01 00 00 00    	movl	$0x1, %r14d
ffffffff800147b4: 41 b9 08 00 00 00    	movl	$0x8, %r9d
ffffffff800147ba: 41 ba 01 00 00 00    	movl	$0x1, %r10d
ffffffff800147c0: e9 fe 00 00 00       	jmp	0xffffffff800148c3 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E+0x133>
ffffffff800147c5: 41 ba 01 00 00 00    	movl	$0x1, %r10d
ffffffff800147cb: bf 18 00 00 00       	movl	$0x18, %edi
ffffffff800147d0: 41 be 04 00 00 00    	movl	$0x4, %r14d
ffffffff800147d6: 41 b9 10 00 00 00    	movl	$0x10, %r9d
ffffffff800147dc: 41 bb 08 00 00 00    	movl	$0x8, %r11d
ffffffff800147e2: 48 83 fa 04          	cmpq	$0x4, %rdx
ffffffff800147e6: 73 07                	jae	0xffffffff800147ef <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E+0x5f>
ffffffff800147e8: 31 db                	xorl	%ebx, %ebx
ffffffff800147ea: e9 cd 00 00 00       	jmp	0xffffffff800148bc <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E+0x12c>
ffffffff800147ef: 42 8b 1c 3e          	movl	(%rsi,%r15), %ebx
ffffffff800147f3: 89 dd                	movl	%ebx, %ebp
ffffffff800147f5: 0f cd                	bswapl	%ebp
ffffffff800147f7: 45 84 c0             	testb	%r8b, %r8b
ffffffff800147fa: 0f 44 eb             	cmovel	%ebx, %ebp
ffffffff800147fd: 4c 8d 62 fc          	leaq	-0x4(%rdx), %r12
ffffffff80014801: 49 83 fc 04          	cmpq	$0x4, %r12
ffffffff80014805: 73 0a                	jae	0xffffffff80014811 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E+0x81>
ffffffff80014807: 31 db                	xorl	%ebx, %ebx
ffffffff80014809: 4c 89 e2             	movq	%r12, %rdx
ffffffff8001480c: e9 ab 00 00 00       	jmp	0xffffffff800148bc <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E+0x12c>
ffffffff80014811: 46 8b 5c 3e 04       	movl	0x4(%rsi,%r15), %r11d
ffffffff80014816: 45 89 dc             	movl	%r11d, %r12d
ffffffff80014819: 41 0f cc             	bswapl	%r12d
ffffffff8001481c: 45 84 c0             	testb	%r8b, %r8b
ffffffff8001481f: 45 0f 44 e3          	cmovel	%r11d, %r12d
ffffffff80014823: 4c 8d 6a f8          	leaq	-0x8(%rdx), %r13
ffffffff80014827: 41 bb 08 00 00 00    	movl	$0x8, %r11d
ffffffff8001482d: 49 83 fd 08          	cmpq	$0x8, %r13
ffffffff80014831: 72 7e                	jb	0xffffffff800148b1 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E+0x121>
ffffffff80014833: 4a 8b 5c 3e 08       	movq	0x8(%rsi,%r15), %rbx
ffffffff80014838: 49 89 de             	movq	%rbx, %r14
ffffffff8001483b: 49 0f ce             	bswapq	%r14
ffffffff8001483e: 45 84 c0             	testb	%r8b, %r8b
ffffffff80014841: 4c 0f 44 f3          	cmoveq	%rbx, %r14
ffffffff80014845: 4c 8d 6a f0          	leaq	-0x10(%rdx), %r13
ffffffff80014849: 49 83 fd 08          	cmpq	$0x8, %r13
ffffffff8001484d: 72 62                	jb	0xffffffff800148b1 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E+0x121>
ffffffff8001484f: 4a 8b 5c 3e 10       	movq	0x10(%rsi,%r15), %rbx
ffffffff80014854: 49 89 dd             	movq	%rbx, %r13
ffffffff80014857: 49 0f cd             	bswapq	%r13
ffffffff8001485a: 45 84 c0             	testb	%r8b, %r8b
ffffffff8001485d: 4c 0f 44 eb          	cmoveq	%rbx, %r13
ffffffff80014861: 4c 89 6c 24 10       	movq	%r13, 0x10(%rsp)
ffffffff80014866: 4c 8d 6a e8          	leaq	-0x18(%rdx), %r13
ffffffff8001486a: 49 83 fd 08          	cmpq	$0x8, %r13
ffffffff8001486e: 72 41                	jb	0xffffffff800148b1 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E+0x121>
ffffffff80014870: 4a 8b 5c 3e 18       	movq	0x18(%rsi,%r15), %rbx
ffffffff80014875: 49 89 dd             	movq	%rbx, %r13
ffffffff80014878: 49 0f cd             	bswapq	%r13
ffffffff8001487b: 45 84 c0             	testb	%r8b, %r8b
ffffffff8001487e: 4c 0f 44 eb          	cmoveq	%rbx, %r13
ffffffff80014882: 4c 89 6c 24 08       	movq	%r13, 0x8(%rsp)
ffffffff80014887: 4c 8d 6a e0          	leaq	-0x20(%rdx), %r13
ffffffff8001488b: 49 83 fd 08          	cmpq	$0x8, %r13
ffffffff8001488f: 72 20                	jb	0xffffffff800148b1 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E+0x121>
ffffffff80014891: 4c 89 34 24          	movq	%r14, (%rsp)
ffffffff80014895: 4e 8b 74 3e 20       	movq	0x20(%rsi,%r15), %r14
ffffffff8001489a: 4c 89 f3             	movq	%r14, %rbx
ffffffff8001489d: 48 0f cb             	bswapq	%rbx
ffffffff800148a0: 45 84 c0             	testb	%r8b, %r8b
ffffffff800148a3: 49 0f 44 de          	cmoveq	%r14, %rbx
ffffffff800148a7: 4c 8d 6a d8          	leaq	-0x28(%rdx), %r13
ffffffff800148ab: 49 83 fd 08          	cmpq	$0x8, %r13
ffffffff800148af: 73 2c                	jae	0xffffffff800148dd <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E+0x14d>
ffffffff800148b1: 31 db                	xorl	%ebx, %ebx
ffffffff800148b3: 41 be 08 00 00 00    	movl	$0x8, %r14d
ffffffff800148b9: 4c 89 ea             	movq	%r13, %rdx
ffffffff800148bc: 4a 89 1c 18          	movq	%rbx, (%rax,%r11)
ffffffff800148c0: 49 89 d7             	movq	%rdx, %r15
ffffffff800148c3: 4e 89 34 08          	movq	%r14, (%rax,%r9)
ffffffff800148c7: 4c 89 3c 38          	movq	%r15, (%rax,%rdi)
ffffffff800148cb: 4c 89 10             	movq	%r10, (%rax)
ffffffff800148ce: 48 83 c4 18          	addq	$0x18, %rsp
ffffffff800148d2: 5b                   	popq	%rbx
ffffffff800148d3: 41 5c                	popq	%r12
ffffffff800148d5: 41 5d                	popq	%r13
ffffffff800148d7: 41 5e                	popq	%r14
ffffffff800148d9: 41 5f                	popq	%r15
ffffffff800148db: 5d                   	popq	%rbp
ffffffff800148dc: c3                   	retq
ffffffff800148dd: 48 83 c2 d0          	addq	$-0x30, %rdx
ffffffff800148e1: 48 83 fa 08          	cmpq	$0x8, %rdx
ffffffff800148e5: 73 0a                	jae	0xffffffff800148f1 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E+0x161>
ffffffff800148e7: 31 db                	xorl	%ebx, %ebx
ffffffff800148e9: 41 be 08 00 00 00    	movl	$0x8, %r14d
ffffffff800148ef: eb cb                	jmp	0xffffffff800148bc <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E+0x12c>
ffffffff800148f1: 4a 8b 54 3e 28       	movq	0x28(%rsi,%r15), %rdx
ffffffff800148f6: 49 89 d6             	movq	%rdx, %r14
ffffffff800148f9: 49 0f ce             	bswapq	%r14
ffffffff800148fc: 45 84 c0             	testb	%r8b, %r8b
ffffffff800148ff: 4c 0f 44 f2          	cmoveq	%rdx, %r14
ffffffff80014903: 4a 8b 74 3e 30       	movq	0x30(%rsi,%r15), %rsi
ffffffff80014908: 48 89 f2             	movq	%rsi, %rdx
ffffffff8001490b: 48 0f ca             	bswapq	%rdx
ffffffff8001490e: 48 0f 44 d6          	cmoveq	%rsi, %rdx
ffffffff80014912: 49 c1 e4 20          	shlq	$0x20, %r12
ffffffff80014916: 89 ee                	movl	%ebp, %esi
ffffffff80014918: 4c 09 e6             	orq	%r12, %rsi
ffffffff8001491b: 49 83 c7 38          	addq	$0x38, %r15
ffffffff8001491f: 4c 89 39             	movq	%r15, (%rcx)
ffffffff80014922: 48 89 70 08          	movq	%rsi, 0x8(%rax)
ffffffff80014926: 48 8b 0c 24          	movq	(%rsp), %rcx
ffffffff8001492a: 48 89 48 10          	movq	%rcx, 0x10(%rax)
ffffffff8001492e: 48 8b 4c 24 10       	movq	0x10(%rsp), %rcx
ffffffff80014933: 48 89 48 18          	movq	%rcx, 0x18(%rax)
ffffffff80014937: 48 8b 4c 24 08       	movq	0x8(%rsp), %rcx
ffffffff8001493c: 48 89 48 20          	movq	%rcx, 0x20(%rax)
ffffffff80014940: bf 38 00 00 00       	movl	$0x38, %edi
ffffffff80014945: 41 b9 30 00 00 00    	movl	$0x30, %r9d
ffffffff8001494b: 41 bb 28 00 00 00    	movl	$0x28, %r11d
ffffffff80014951: 45 31 d2             	xorl	%r10d, %r10d
ffffffff80014954: e9 63 ff ff ff       	jmp	0xffffffff800148bc <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E+0x12c>
ffffffff80014959: cc                   	int3
ffffffff8001495a: cc                   	int3
ffffffff8001495b: cc                   	int3
ffffffff8001495c: cc                   	int3
ffffffff8001495d: cc                   	int3
ffffffff8001495e: cc                   	int3
ffffffff8001495f: cc                   	int3

ffffffff80014960 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb239308fb965e23fE>:
ffffffff80014960: 48 89 f8             	movq	%rdi, %rax
ffffffff80014963: 48 8b 39             	movq	(%rcx), %rdi
ffffffff80014966: 48 29 fa             	subq	%rdi, %rdx
ffffffff80014969: 73 14                	jae	0xffffffff8001497f <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb239308fb965e23fE+0x1f>
ffffffff8001496b: 48 c7 40 08 01 00 00 00      	movq	$0x1, 0x8(%rax)
ffffffff80014973: 48 89 78 10          	movq	%rdi, 0x10(%rax)
ffffffff80014977: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff8001497c: 89 08                	movl	%ecx, (%rax)
ffffffff8001497e: c3                   	retq
ffffffff8001497f: 55                   	pushq	%rbp
ffffffff80014980: 41 57                	pushq	%r15
ffffffff80014982: 41 56                	pushq	%r14
ffffffff80014984: 41 55                	pushq	%r13
ffffffff80014986: 41 54                	pushq	%r12
ffffffff80014988: 53                   	pushq	%rbx
ffffffff80014989: 48 83 fa 04          	cmpq	$0x4, %rdx
ffffffff8001498d: 73 08                	jae	0xffffffff80014997 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb239308fb965e23fE+0x37>
ffffffff8001498f: 49 89 d5             	movq	%rdx, %r13
ffffffff80014992: e9 f2 00 00 00       	jmp	0xffffffff80014a89 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb239308fb965e23fE+0x129>
ffffffff80014997: 44 8b 14 3e          	movl	(%rsi,%rdi), %r10d
ffffffff8001499b: 45 89 d1             	movl	%r10d, %r9d
ffffffff8001499e: 41 0f c9             	bswapl	%r9d
ffffffff800149a1: 45 84 c0             	testb	%r8b, %r8b
ffffffff800149a4: 45 0f 44 ca          	cmovel	%r10d, %r9d
ffffffff800149a8: 4c 8d 6a fc          	leaq	-0x4(%rdx), %r13
ffffffff800149ac: 49 83 fd 04          	cmpq	$0x4, %r13
ffffffff800149b0: 0f 82 d3 00 00 00    	jb	0xffffffff80014a89 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb239308fb965e23fE+0x129>
ffffffff800149b6: 44 8b 54 3e 04       	movl	0x4(%rsi,%rdi), %r10d
ffffffff800149bb: 45 89 d3             	movl	%r10d, %r11d
ffffffff800149be: 41 0f cb             	bswapl	%r11d
ffffffff800149c1: 45 84 c0             	testb	%r8b, %r8b
ffffffff800149c4: 45 0f 44 da          	cmovel	%r10d, %r11d
ffffffff800149c8: 4c 8d 6a f8          	leaq	-0x8(%rdx), %r13
ffffffff800149cc: 49 83 fd 04          	cmpq	$0x4, %r13
ffffffff800149d0: 0f 82 b3 00 00 00    	jb	0xffffffff80014a89 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb239308fb965e23fE+0x129>
ffffffff800149d6: 8b 5c 3e 08          	movl	0x8(%rsi,%rdi), %ebx
ffffffff800149da: 41 89 da             	movl	%ebx, %r10d
ffffffff800149dd: 41 0f ca             	bswapl	%r10d
ffffffff800149e0: 45 84 c0             	testb	%r8b, %r8b
ffffffff800149e3: 44 0f 44 d3          	cmovel	%ebx, %r10d
ffffffff800149e7: 4c 8d 6a f4          	leaq	-0xc(%rdx), %r13
ffffffff800149eb: 49 83 fd 04          	cmpq	$0x4, %r13
ffffffff800149ef: 0f 82 94 00 00 00    	jb	0xffffffff80014a89 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb239308fb965e23fE+0x129>
ffffffff800149f5: 8b 6c 3e 0c          	movl	0xc(%rsi,%rdi), %ebp
ffffffff800149f9: 89 eb                	movl	%ebp, %ebx
ffffffff800149fb: 0f cb                	bswapl	%ebx
ffffffff800149fd: 45 84 c0             	testb	%r8b, %r8b
ffffffff80014a00: 0f 44 dd             	cmovel	%ebp, %ebx
ffffffff80014a03: 4c 8d 6a f0          	leaq	-0x10(%rdx), %r13
ffffffff80014a07: 49 83 fd 04          	cmpq	$0x4, %r13
ffffffff80014a0b: 72 7c                	jb	0xffffffff80014a89 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb239308fb965e23fE+0x129>
ffffffff80014a0d: 44 8b 74 3e 10       	movl	0x10(%rsi,%rdi), %r14d
ffffffff80014a12: 44 89 f5             	movl	%r14d, %ebp
ffffffff80014a15: 0f cd                	bswapl	%ebp
ffffffff80014a17: 45 84 c0             	testb	%r8b, %r8b
ffffffff80014a1a: 41 0f 44 ee          	cmovel	%r14d, %ebp
ffffffff80014a1e: 4c 8d 6a ec          	leaq	-0x14(%rdx), %r13
ffffffff80014a22: 49 83 fd 04          	cmpq	$0x4, %r13
ffffffff80014a26: 72 61                	jb	0xffffffff80014a89 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb239308fb965e23fE+0x129>
ffffffff80014a28: 44 8b 7c 3e 14       	movl	0x14(%rsi,%rdi), %r15d
ffffffff80014a2d: 45 89 fe             	movl	%r15d, %r14d
ffffffff80014a30: 41 0f ce             	bswapl	%r14d
ffffffff80014a33: 45 84 c0             	testb	%r8b, %r8b
ffffffff80014a36: 45 0f 44 f7          	cmovel	%r15d, %r14d
ffffffff80014a3a: 4c 8d 6a e8          	leaq	-0x18(%rdx), %r13
ffffffff80014a3e: 49 83 fd 04          	cmpq	$0x4, %r13
ffffffff80014a42: 72 45                	jb	0xffffffff80014a89 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb239308fb965e23fE+0x129>
ffffffff80014a44: 44 8b 64 3e 18       	movl	0x18(%rsi,%rdi), %r12d
ffffffff80014a49: 45 89 e7             	movl	%r12d, %r15d
ffffffff80014a4c: 41 0f cf             	bswapl	%r15d
ffffffff80014a4f: 45 84 c0             	testb	%r8b, %r8b
ffffffff80014a52: 45 0f 44 fc          	cmovel	%r12d, %r15d
ffffffff80014a56: 4c 8d 6a e4          	leaq	-0x1c(%rdx), %r13
ffffffff80014a5a: 49 83 fd 04          	cmpq	$0x4, %r13
ffffffff80014a5e: 72 29                	jb	0xffffffff80014a89 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb239308fb965e23fE+0x129>
ffffffff80014a60: 44 8b 6c 3e 1c       	movl	0x1c(%rsi,%rdi), %r13d
ffffffff80014a65: 45 89 ec             	movl	%r13d, %r12d
ffffffff80014a68: 41 0f cc             	bswapl	%r12d
ffffffff80014a6b: 45 84 c0             	testb	%r8b, %r8b
ffffffff80014a6e: 45 0f 44 e5          	cmovel	%r13d, %r12d
ffffffff80014a72: 4c 8d 6a e0          	leaq	-0x20(%rdx), %r13
ffffffff80014a76: 49 83 fd 04          	cmpq	$0x4, %r13
ffffffff80014a7a: 72 0d                	jb	0xffffffff80014a89 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb239308fb965e23fE+0x129>
ffffffff80014a7c: 48 83 c2 dc          	addq	$-0x24, %rdx
ffffffff80014a80: 49 89 d5             	movq	%rdx, %r13
ffffffff80014a83: 48 83 fa 04          	cmpq	$0x4, %rdx
ffffffff80014a87: 73 26                	jae	0xffffffff80014aaf <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb239308fb965e23fE+0x14f>
ffffffff80014a89: 48 c7 40 08 00 00 00 00      	movq	$0x0, 0x8(%rax)
ffffffff80014a91: 48 c7 40 10 04 00 00 00      	movq	$0x4, 0x10(%rax)
ffffffff80014a99: 4c 89 68 18          	movq	%r13, 0x18(%rax)
ffffffff80014a9d: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff80014aa2: 5b                   	popq	%rbx
ffffffff80014aa3: 41 5c                	popq	%r12
ffffffff80014aa5: 41 5d                	popq	%r13
ffffffff80014aa7: 41 5e                	popq	%r14
ffffffff80014aa9: 41 5f                	popq	%r15
ffffffff80014aab: 5d                   	popq	%rbp
ffffffff80014aac: 89 08                	movl	%ecx, (%rax)
ffffffff80014aae: c3                   	retq
ffffffff80014aaf: 44 8b 6c 3e 20       	movl	0x20(%rsi,%rdi), %r13d
ffffffff80014ab4: 8b 74 3e 24          	movl	0x24(%rsi,%rdi), %esi
ffffffff80014ab8: 44 89 ea             	movl	%r13d, %edx
ffffffff80014abb: 0f ca                	bswapl	%edx
ffffffff80014abd: 45 84 c0             	testb	%r8b, %r8b
ffffffff80014ac0: 41 0f 44 d5          	cmovel	%r13d, %edx
ffffffff80014ac4: 41 89 f0             	movl	%esi, %r8d
ffffffff80014ac7: 41 0f c8             	bswapl	%r8d
ffffffff80014aca: 44 0f 44 c6          	cmovel	%esi, %r8d
ffffffff80014ace: 49 c1 e3 20          	shlq	$0x20, %r11
ffffffff80014ad2: 44 89 ce             	movl	%r9d, %esi
ffffffff80014ad5: 4c 09 de             	orq	%r11, %rsi
ffffffff80014ad8: 49 c1 e6 20          	shlq	$0x20, %r14
ffffffff80014adc: 41 89 e9             	movl	%ebp, %r9d
ffffffff80014adf: 4d 09 f1             	orq	%r14, %r9
ffffffff80014ae2: 48 83 c7 28          	addq	$0x28, %rdi
ffffffff80014ae6: 48 89 39             	movq	%rdi, (%rcx)
ffffffff80014ae9: 48 89 70 04          	movq	%rsi, 0x4(%rax)
ffffffff80014aed: 44 89 50 0c          	movl	%r10d, 0xc(%rax)
ffffffff80014af1: 89 58 10             	movl	%ebx, 0x10(%rax)
ffffffff80014af4: 4c 89 48 14          	movq	%r9, 0x14(%rax)
ffffffff80014af8: 44 89 78 1c          	movl	%r15d, 0x1c(%rax)
ffffffff80014afc: 44 89 60 20          	movl	%r12d, 0x20(%rax)
ffffffff80014b00: 89 50 24             	movl	%edx, 0x24(%rax)
ffffffff80014b03: 44 89 40 28          	movl	%r8d, 0x28(%rax)
ffffffff80014b07: 31 c9                	xorl	%ecx, %ecx
ffffffff80014b09: eb 97                	jmp	0xffffffff80014aa2 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb239308fb965e23fE+0x142>
ffffffff80014b0b: cc                   	int3
ffffffff80014b0c: cc                   	int3
ffffffff80014b0d: cc                   	int3
ffffffff80014b0e: cc                   	int3
ffffffff80014b0f: cc                   	int3

ffffffff80014b10 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb2be167197ddec56E>:
ffffffff80014b10: 41 57                	pushq	%r15
ffffffff80014b12: 41 56                	pushq	%r14
ffffffff80014b14: 41 54                	pushq	%r12
ffffffff80014b16: 53                   	pushq	%rbx
ffffffff80014b17: 48 83 ec 48          	subq	$0x48, %rsp
ffffffff80014b1b: 48 89 fb             	movq	%rdi, %rbx
ffffffff80014b1e: 4c 8b 21             	movq	(%rcx), %r12
ffffffff80014b21: 4c 29 e2             	subq	%r12, %rdx
ffffffff80014b24: 73 18                	jae	0xffffffff80014b3e <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb2be167197ddec56E+0x2e>
ffffffff80014b26: 48 c7 43 08 01 00 00 00      	movq	$0x1, 0x8(%rbx)
ffffffff80014b2e: 4c 89 63 10          	movq	%r12, 0x10(%rbx)
ffffffff80014b32: 48 c7 03 01 00 00 00 	movq	$0x1, (%rbx)
ffffffff80014b39: e9 8d 00 00 00       	jmp	0xffffffff80014bcb <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb2be167197ddec56E+0xbb>
ffffffff80014b3e: 49 89 ce             	movq	%rcx, %r14
ffffffff80014b41: 4c 01 e6             	addq	%r12, %rsi
ffffffff80014b44: 41 0f b6 c8          	movzbl	%r8b, %ecx
ffffffff80014b48: 45 0f b6 c1          	movzbl	%r9b, %r8d
ffffffff80014b4c: 49 89 e7             	movq	%rsp, %r15
ffffffff80014b4f: 4c 89 ff             	movq	%r15, %rdi
ffffffff80014b52: e8 b9 13 00 00       	callq	0xffffffff80015f10 <<goblin::elf::program_header::ProgramHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::hd014d8a784628be3>
ffffffff80014b57: 48 8d 43 08          	leaq	0x8(%rbx), %rax
ffffffff80014b5b: f6 04 24 01          	testb	$0x1, (%rsp)
ffffffff80014b5f: 74 26                	je	0xffffffff80014b87 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb2be167197ddec56E+0x77>
ffffffff80014b61: 49 8b 4f 20          	movq	0x20(%r15), %rcx
ffffffff80014b65: 48 89 48 18          	movq	%rcx, 0x18(%rax)
ffffffff80014b69: 49 8b 4f 18          	movq	0x18(%r15), %rcx
ffffffff80014b6d: 48 89 48 10          	movq	%rcx, 0x10(%rax)
ffffffff80014b71: 49 8b 4f 08          	movq	0x8(%r15), %rcx
ffffffff80014b75: 49 8b 57 10          	movq	0x10(%r15), %rdx
ffffffff80014b79: 48 89 50 08          	movq	%rdx, 0x8(%rax)
ffffffff80014b7d: 48 89 08             	movq	%rcx, (%rax)
ffffffff80014b80: b8 01 00 00 00       	movl	$0x1, %eax
ffffffff80014b85: eb 41                	jmp	0xffffffff80014bc8 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb2be167197ddec56E+0xb8>
ffffffff80014b87: 49 8b 4f 38          	movq	0x38(%r15), %rcx
ffffffff80014b8b: 48 89 48 30          	movq	%rcx, 0x30(%rax)
ffffffff80014b8f: 49 8b 4f 30          	movq	0x30(%r15), %rcx
ffffffff80014b93: 48 89 48 28          	movq	%rcx, 0x28(%rax)
ffffffff80014b97: 49 8b 4f 28          	movq	0x28(%r15), %rcx
ffffffff80014b9b: 48 89 48 20          	movq	%rcx, 0x20(%rax)
ffffffff80014b9f: 49 8b 4f 20          	movq	0x20(%r15), %rcx
ffffffff80014ba3: 48 89 48 18          	movq	%rcx, 0x18(%rax)
ffffffff80014ba7: 49 8b 4f 18          	movq	0x18(%r15), %rcx
ffffffff80014bab: 48 89 48 10          	movq	%rcx, 0x10(%rax)
ffffffff80014baf: 49 8b 4f 08          	movq	0x8(%r15), %rcx
ffffffff80014bb3: 49 8b 57 10          	movq	0x10(%r15), %rdx
ffffffff80014bb7: 48 89 50 08          	movq	%rdx, 0x8(%rax)
ffffffff80014bbb: 48 89 08             	movq	%rcx, (%rax)
ffffffff80014bbe: 4c 03 64 24 40       	addq	0x40(%rsp), %r12
ffffffff80014bc3: 4d 89 26             	movq	%r12, (%r14)
ffffffff80014bc6: 31 c0                	xorl	%eax, %eax
ffffffff80014bc8: 48 89 03             	movq	%rax, (%rbx)
ffffffff80014bcb: 48 89 d8             	movq	%rbx, %rax
ffffffff80014bce: 48 83 c4 48          	addq	$0x48, %rsp
ffffffff80014bd2: 5b                   	popq	%rbx
ffffffff80014bd3: 41 5c                	popq	%r12
ffffffff80014bd5: 41 5e                	popq	%r14
ffffffff80014bd7: 41 5f                	popq	%r15
ffffffff80014bd9: c3                   	retq
ffffffff80014bda: cc                   	int3
ffffffff80014bdb: cc                   	int3
ffffffff80014bdc: cc                   	int3
ffffffff80014bdd: cc                   	int3
ffffffff80014bde: cc                   	int3
ffffffff80014bdf: cc                   	int3

ffffffff80014be0 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb809a0df395ab15eE>:
ffffffff80014be0: 48 89 f8             	movq	%rdi, %rax
ffffffff80014be3: 4c 8b 11             	movq	(%rcx), %r10
ffffffff80014be6: bf 01 00 00 00       	movl	$0x1, %edi
ffffffff80014beb: 4c 29 d2             	subq	%r10, %rdx
ffffffff80014bee: 73 1c                	jae	0xffffffff80014c0c <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb809a0df395ab15eE+0x2c>
ffffffff80014bf0: b9 10 00 00 00       	movl	$0x10, %ecx
ffffffff80014bf5: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff80014bfa: 41 b9 01 00 00 00    	movl	$0x1, %r9d
ffffffff80014c00: 4c 89 0c 10          	movq	%r9, (%rax,%rdx)
ffffffff80014c04: 4c 89 14 08          	movq	%r10, (%rax,%rcx)
ffffffff80014c08: 48 89 38             	movq	%rdi, (%rax)
ffffffff80014c0b: c3                   	retq
ffffffff80014c0c: 55                   	pushq	%rbp
ffffffff80014c0d: 41 57                	pushq	%r15
ffffffff80014c0f: 41 56                	pushq	%r14
ffffffff80014c11: 41 55                	pushq	%r13
ffffffff80014c13: 41 54                	pushq	%r12
ffffffff80014c15: 53                   	pushq	%rbx
ffffffff80014c16: 48 83 ec 10          	subq	$0x10, %rsp
ffffffff80014c1a: 41 b9 04 00 00 00    	movl	$0x4, %r9d
ffffffff80014c20: 48 83 fa 04          	cmpq	$0x4, %rdx
ffffffff80014c24: 73 08                	jae	0xffffffff80014c2e <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb809a0df395ab15eE+0x4e>
ffffffff80014c26: 49 89 d5             	movq	%rdx, %r13
ffffffff80014c29: e9 8e 00 00 00       	jmp	0xffffffff80014cbc <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb809a0df395ab15eE+0xdc>
ffffffff80014c2e: 42 8b 1c 16          	movl	(%rsi,%r10), %ebx
ffffffff80014c32: 41 89 db             	movl	%ebx, %r11d
ffffffff80014c35: 41 0f cb             	bswapl	%r11d
ffffffff80014c38: 45 84 c0             	testb	%r8b, %r8b
ffffffff80014c3b: 44 0f 44 db          	cmovel	%ebx, %r11d
ffffffff80014c3f: 4c 8d 6a fc          	leaq	-0x4(%rdx), %r13
ffffffff80014c43: 49 83 fd 04          	cmpq	$0x4, %r13
ffffffff80014c47: 72 73                	jb	0xffffffff80014cbc <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb809a0df395ab15eE+0xdc>
ffffffff80014c49: 42 8b 6c 16 04       	movl	0x4(%rsi,%r10), %ebp
ffffffff80014c4e: 89 eb                	movl	%ebp, %ebx
ffffffff80014c50: 0f cb                	bswapl	%ebx
ffffffff80014c52: 45 84 c0             	testb	%r8b, %r8b
ffffffff80014c55: 0f 44 dd             	cmovel	%ebp, %ebx
ffffffff80014c58: 4c 8d 6a f8          	leaq	-0x8(%rdx), %r13
ffffffff80014c5c: 49 83 fd 08          	cmpq	$0x8, %r13
ffffffff80014c60: 72 54                	jb	0xffffffff80014cb6 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb809a0df395ab15eE+0xd6>
ffffffff80014c62: 4e 8b 7c 16 08       	movq	0x8(%rsi,%r10), %r15
ffffffff80014c67: 4d 89 fe             	movq	%r15, %r14
ffffffff80014c6a: 49 0f ce             	bswapq	%r14
ffffffff80014c6d: 45 84 c0             	testb	%r8b, %r8b
ffffffff80014c70: 4d 0f 44 f7          	cmoveq	%r15, %r14
ffffffff80014c74: 4c 8d 6a f0          	leaq	-0x10(%rdx), %r13
ffffffff80014c78: 49 83 fd 08          	cmpq	$0x8, %r13
ffffffff80014c7c: 72 38                	jb	0xffffffff80014cb6 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb809a0df395ab15eE+0xd6>
ffffffff80014c7e: 4e 8b 64 16 10       	movq	0x10(%rsi,%r10), %r12
ffffffff80014c83: 4d 89 e7             	movq	%r12, %r15
ffffffff80014c86: 49 0f cf             	bswapq	%r15
ffffffff80014c89: 45 84 c0             	testb	%r8b, %r8b
ffffffff80014c8c: 4d 0f 44 fc          	cmoveq	%r12, %r15
ffffffff80014c90: 4c 8d 6a e8          	leaq	-0x18(%rdx), %r13
ffffffff80014c94: 49 83 fd 08          	cmpq	$0x8, %r13
ffffffff80014c98: 72 1c                	jb	0xffffffff80014cb6 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb809a0df395ab15eE+0xd6>
ffffffff80014c9a: 4e 8b 6c 16 18       	movq	0x18(%rsi,%r10), %r13
ffffffff80014c9f: 4d 89 ec             	movq	%r13, %r12
ffffffff80014ca2: 49 0f cc             	bswapq	%r12
ffffffff80014ca5: 45 84 c0             	testb	%r8b, %r8b
ffffffff80014ca8: 4d 0f 44 e5          	cmoveq	%r13, %r12
ffffffff80014cac: 4c 8d 6a e0          	leaq	-0x20(%rdx), %r13
ffffffff80014cb0: 49 83 fd 08          	cmpq	$0x8, %r13
ffffffff80014cb4: 73 35                	jae	0xffffffff80014ceb <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb809a0df395ab15eE+0x10b>
ffffffff80014cb6: 41 b9 08 00 00 00    	movl	$0x8, %r9d
ffffffff80014cbc: 48 c7 40 08 00 00 00 00      	movq	$0x0, 0x8(%rax)
ffffffff80014cc4: b9 18 00 00 00       	movl	$0x18, %ecx
ffffffff80014cc9: ba 10 00 00 00       	movl	$0x10, %edx
ffffffff80014cce: 4d 89 ea             	movq	%r13, %r10
ffffffff80014cd1: 48 83 c4 10          	addq	$0x10, %rsp
ffffffff80014cd5: 5b                   	popq	%rbx
ffffffff80014cd6: 41 5c                	popq	%r12
ffffffff80014cd8: 41 5d                	popq	%r13
ffffffff80014cda: 41 5e                	popq	%r14
ffffffff80014cdc: 41 5f                	popq	%r15
ffffffff80014cde: 5d                   	popq	%rbp
ffffffff80014cdf: 4c 89 0c 10          	movq	%r9, (%rax,%rdx)
ffffffff80014ce3: 4c 89 14 08          	movq	%r10, (%rax,%rcx)
ffffffff80014ce7: 48 89 38             	movq	%rdi, (%rax)
ffffffff80014cea: c3                   	retq
ffffffff80014ceb: 4e 8b 6c 16 20       	movq	0x20(%rsi,%r10), %r13
ffffffff80014cf0: 4c 89 ed             	movq	%r13, %rbp
ffffffff80014cf3: 48 0f cd             	bswapq	%rbp
ffffffff80014cf6: 45 84 c0             	testb	%r8b, %r8b
ffffffff80014cf9: 49 0f 44 ed          	cmoveq	%r13, %rbp
ffffffff80014cfd: 4c 8d 6a d8          	leaq	-0x28(%rdx), %r13
ffffffff80014d01: 49 83 fd 04          	cmpq	$0x4, %r13
ffffffff80014d05: 72 b5                	jb	0xffffffff80014cbc <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb809a0df395ab15eE+0xdc>
ffffffff80014d07: 48 89 6c 24 08       	movq	%rbp, 0x8(%rsp)
ffffffff80014d0c: 46 8b 6c 16 28       	movl	0x28(%rsi,%r10), %r13d
ffffffff80014d11: 44 89 ed             	movl	%r13d, %ebp
ffffffff80014d14: 0f cd                	bswapl	%ebp
ffffffff80014d16: 45 84 c0             	testb	%r8b, %r8b
ffffffff80014d19: 41 0f 44 ed          	cmovel	%r13d, %ebp
ffffffff80014d1d: 89 6c 24 04          	movl	%ebp, 0x4(%rsp)
ffffffff80014d21: 4c 8d 6a d4          	leaq	-0x2c(%rdx), %r13
ffffffff80014d25: 49 83 fd 04          	cmpq	$0x4, %r13
ffffffff80014d29: 72 91                	jb	0xffffffff80014cbc <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb809a0df395ab15eE+0xdc>
ffffffff80014d2b: 46 8b 4c 16 2c       	movl	0x2c(%rsi,%r10), %r9d
ffffffff80014d30: 44 89 cd             	movl	%r9d, %ebp
ffffffff80014d33: 0f cd                	bswapl	%ebp
ffffffff80014d35: 45 84 c0             	testb	%r8b, %r8b
ffffffff80014d38: 41 0f 44 e9          	cmovel	%r9d, %ebp
ffffffff80014d3c: 4c 8d 6a d0          	leaq	-0x30(%rdx), %r13
ffffffff80014d40: 49 83 fd 08          	cmpq	$0x8, %r13
ffffffff80014d44: 0f 82 6c ff ff ff    	jb	0xffffffff80014cb6 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb809a0df395ab15eE+0xd6>
ffffffff80014d4a: 48 83 c2 c8          	addq	$-0x38, %rdx
ffffffff80014d4e: 49 89 d5             	movq	%rdx, %r13
ffffffff80014d51: 41 b9 08 00 00 00    	movl	$0x8, %r9d
ffffffff80014d57: 48 83 fa 08          	cmpq	$0x8, %rdx
ffffffff80014d5b: 0f 82 5b ff ff ff    	jb	0xffffffff80014cbc <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb809a0df395ab15eE+0xdc>
ffffffff80014d61: 4a 8b 54 16 30       	movq	0x30(%rsi,%r10), %rdx
ffffffff80014d66: 4a 8b 74 16 38       	movq	0x38(%rsi,%r10), %rsi
ffffffff80014d6b: 49 89 d1             	movq	%rdx, %r9
ffffffff80014d6e: 49 0f c9             	bswapq	%r9
ffffffff80014d71: 45 84 c0             	testb	%r8b, %r8b
ffffffff80014d74: 4c 0f 44 ca          	cmoveq	%rdx, %r9
ffffffff80014d78: 49 89 f0             	movq	%rsi, %r8
ffffffff80014d7b: 49 0f c8             	bswapq	%r8
ffffffff80014d7e: 4c 0f 44 c6          	cmoveq	%rsi, %r8
ffffffff80014d82: 48 c1 e3 20          	shlq	$0x20, %rbx
ffffffff80014d86: 44 89 da             	movl	%r11d, %edx
ffffffff80014d89: 48 09 da             	orq	%rbx, %rdx
ffffffff80014d8c: 49 83 c2 40          	addq	$0x40, %r10
ffffffff80014d90: 4c 89 11             	movq	%r10, (%rcx)
ffffffff80014d93: 48 89 50 08          	movq	%rdx, 0x8(%rax)
ffffffff80014d97: 4c 89 70 10          	movq	%r14, 0x10(%rax)
ffffffff80014d9b: 4c 89 78 18          	movq	%r15, 0x18(%rax)
ffffffff80014d9f: 4c 89 60 20          	movq	%r12, 0x20(%rax)
ffffffff80014da3: 48 8b 4c 24 08       	movq	0x8(%rsp), %rcx
ffffffff80014da8: 48 89 48 28          	movq	%rcx, 0x28(%rax)
ffffffff80014dac: 8b 4c 24 04          	movl	0x4(%rsp), %ecx
ffffffff80014db0: 89 48 30             	movl	%ecx, 0x30(%rax)
ffffffff80014db3: 89 68 34             	movl	%ebp, 0x34(%rax)
ffffffff80014db6: b9 40 00 00 00       	movl	$0x40, %ecx
ffffffff80014dbb: ba 38 00 00 00       	movl	$0x38, %edx
ffffffff80014dc0: 31 ff                	xorl	%edi, %edi
ffffffff80014dc2: 4d 89 c2             	movq	%r8, %r10
ffffffff80014dc5: e9 07 ff ff ff       	jmp	0xffffffff80014cd1 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb809a0df395ab15eE+0xf1>
ffffffff80014dca: cc                   	int3
ffffffff80014dcb: cc                   	int3
ffffffff80014dcc: cc                   	int3
ffffffff80014dcd: cc                   	int3
ffffffff80014dce: cc                   	int3
ffffffff80014dcf: cc                   	int3

ffffffff80014dd0 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hce7104440ecdb80eE>:
ffffffff80014dd0: 48 89 f8             	movq	%rdi, %rax
ffffffff80014dd3: 48 8b 39             	movq	(%rcx), %rdi
ffffffff80014dd6: 48 29 fa             	subq	%rdi, %rdx
ffffffff80014dd9: 73 14                	jae	0xffffffff80014def <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hce7104440ecdb80eE+0x1f>
ffffffff80014ddb: 48 c7 40 08 01 00 00 00      	movq	$0x1, 0x8(%rax)
ffffffff80014de3: 48 89 78 10          	movq	%rdi, 0x10(%rax)
ffffffff80014de7: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff80014dec: 89 08                	movl	%ecx, (%rax)
ffffffff80014dee: c3                   	retq
ffffffff80014def: 55                   	pushq	%rbp
ffffffff80014df0: 41 57                	pushq	%r15
ffffffff80014df2: 41 56                	pushq	%r14
ffffffff80014df4: 53                   	pushq	%rbx
ffffffff80014df5: 48 83 fa 04          	cmpq	$0x4, %rdx
ffffffff80014df9: 73 08                	jae	0xffffffff80014e03 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hce7104440ecdb80eE+0x33>
ffffffff80014dfb: 49 89 d7             	movq	%rdx, %r15
ffffffff80014dfe: e9 b2 00 00 00       	jmp	0xffffffff80014eb5 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hce7104440ecdb80eE+0xe5>
ffffffff80014e03: 44 8b 14 3e          	movl	(%rsi,%rdi), %r10d
ffffffff80014e07: 45 89 d1             	movl	%r10d, %r9d
ffffffff80014e0a: 41 0f c9             	bswapl	%r9d
ffffffff80014e0d: 45 84 c0             	testb	%r8b, %r8b
ffffffff80014e10: 45 0f 44 ca          	cmovel	%r10d, %r9d
ffffffff80014e14: 4c 8d 7a fc          	leaq	-0x4(%rdx), %r15
ffffffff80014e18: 49 83 ff 04          	cmpq	$0x4, %r15
ffffffff80014e1c: 0f 82 93 00 00 00    	jb	0xffffffff80014eb5 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hce7104440ecdb80eE+0xe5>
ffffffff80014e22: 44 8b 54 3e 04       	movl	0x4(%rsi,%rdi), %r10d
ffffffff80014e27: 45 89 d3             	movl	%r10d, %r11d
ffffffff80014e2a: 41 0f cb             	bswapl	%r11d
ffffffff80014e2d: 45 84 c0             	testb	%r8b, %r8b
ffffffff80014e30: 45 0f 44 da          	cmovel	%r10d, %r11d
ffffffff80014e34: 4c 8d 7a f8          	leaq	-0x8(%rdx), %r15
ffffffff80014e38: 49 83 ff 04          	cmpq	$0x4, %r15
ffffffff80014e3c: 72 77                	jb	0xffffffff80014eb5 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hce7104440ecdb80eE+0xe5>
ffffffff80014e3e: 8b 5c 3e 08          	movl	0x8(%rsi,%rdi), %ebx
ffffffff80014e42: 41 89 da             	movl	%ebx, %r10d
ffffffff80014e45: 41 0f ca             	bswapl	%r10d
ffffffff80014e48: 45 84 c0             	testb	%r8b, %r8b
ffffffff80014e4b: 44 0f 44 d3          	cmovel	%ebx, %r10d
ffffffff80014e4f: 4c 8d 7a f4          	leaq	-0xc(%rdx), %r15
ffffffff80014e53: 49 83 ff 04          	cmpq	$0x4, %r15
ffffffff80014e57: 72 5c                	jb	0xffffffff80014eb5 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hce7104440ecdb80eE+0xe5>
ffffffff80014e59: 8b 6c 3e 0c          	movl	0xc(%rsi,%rdi), %ebp
ffffffff80014e5d: 89 eb                	movl	%ebp, %ebx
ffffffff80014e5f: 0f cb                	bswapl	%ebx
ffffffff80014e61: 45 84 c0             	testb	%r8b, %r8b
ffffffff80014e64: 0f 44 dd             	cmovel	%ebp, %ebx
ffffffff80014e67: 4c 8d 7a f0          	leaq	-0x10(%rdx), %r15
ffffffff80014e6b: 49 83 ff 04          	cmpq	$0x4, %r15
ffffffff80014e6f: 72 44                	jb	0xffffffff80014eb5 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hce7104440ecdb80eE+0xe5>
ffffffff80014e71: 44 8b 74 3e 10       	movl	0x10(%rsi,%rdi), %r14d
ffffffff80014e76: 44 89 f5             	movl	%r14d, %ebp
ffffffff80014e79: 0f cd                	bswapl	%ebp
ffffffff80014e7b: 45 84 c0             	testb	%r8b, %r8b
ffffffff80014e7e: 41 0f 44 ee          	cmovel	%r14d, %ebp
ffffffff80014e82: 4c 8d 7a ec          	leaq	-0x14(%rdx), %r15
ffffffff80014e86: 49 83 ff 04          	cmpq	$0x4, %r15
ffffffff80014e8a: 72 29                	jb	0xffffffff80014eb5 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hce7104440ecdb80eE+0xe5>
ffffffff80014e8c: 44 8b 7c 3e 14       	movl	0x14(%rsi,%rdi), %r15d
ffffffff80014e91: 45 89 fe             	movl	%r15d, %r14d
ffffffff80014e94: 41 0f ce             	bswapl	%r14d
ffffffff80014e97: 45 84 c0             	testb	%r8b, %r8b
ffffffff80014e9a: 45 0f 44 f7          	cmovel	%r15d, %r14d
ffffffff80014e9e: 4c 8d 7a e8          	leaq	-0x18(%rdx), %r15
ffffffff80014ea2: 49 83 ff 04          	cmpq	$0x4, %r15
ffffffff80014ea6: 72 0d                	jb	0xffffffff80014eb5 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hce7104440ecdb80eE+0xe5>
ffffffff80014ea8: 48 83 c2 e4          	addq	$-0x1c, %rdx
ffffffff80014eac: 49 89 d7             	movq	%rdx, %r15
ffffffff80014eaf: 48 83 fa 04          	cmpq	$0x4, %rdx
ffffffff80014eb3: 73 22                	jae	0xffffffff80014ed7 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hce7104440ecdb80eE+0x107>
ffffffff80014eb5: 48 c7 40 08 00 00 00 00      	movq	$0x0, 0x8(%rax)
ffffffff80014ebd: 48 c7 40 10 04 00 00 00      	movq	$0x4, 0x10(%rax)
ffffffff80014ec5: 4c 89 78 18          	movq	%r15, 0x18(%rax)
ffffffff80014ec9: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff80014ece: 5b                   	popq	%rbx
ffffffff80014ecf: 41 5e                	popq	%r14
ffffffff80014ed1: 41 5f                	popq	%r15
ffffffff80014ed3: 5d                   	popq	%rbp
ffffffff80014ed4: 89 08                	movl	%ecx, (%rax)
ffffffff80014ed6: c3                   	retq
ffffffff80014ed7: 8b 54 3e 18          	movl	0x18(%rsi,%rdi), %edx
ffffffff80014edb: 8b 74 3e 1c          	movl	0x1c(%rsi,%rdi), %esi
ffffffff80014edf: 41 89 d7             	movl	%edx, %r15d
ffffffff80014ee2: 41 0f cf             	bswapl	%r15d
ffffffff80014ee5: 45 84 c0             	testb	%r8b, %r8b
ffffffff80014ee8: 44 0f 44 fa          	cmovel	%edx, %r15d
ffffffff80014eec: 89 f2                	movl	%esi, %edx
ffffffff80014eee: 0f ca                	bswapl	%edx
ffffffff80014ef0: 0f 44 d6             	cmovel	%esi, %edx
ffffffff80014ef3: 49 c1 e3 20          	shlq	$0x20, %r11
ffffffff80014ef7: 44 89 ce             	movl	%r9d, %esi
ffffffff80014efa: 4c 09 de             	orq	%r11, %rsi
ffffffff80014efd: 49 c1 e6 20          	shlq	$0x20, %r14
ffffffff80014f01: 41 89 e8             	movl	%ebp, %r8d
ffffffff80014f04: 4d 09 f0             	orq	%r14, %r8
ffffffff80014f07: 48 83 c7 20          	addq	$0x20, %rdi
ffffffff80014f0b: 48 89 39             	movq	%rdi, (%rcx)
ffffffff80014f0e: 48 89 70 04          	movq	%rsi, 0x4(%rax)
ffffffff80014f12: 44 89 50 0c          	movl	%r10d, 0xc(%rax)
ffffffff80014f16: 89 58 10             	movl	%ebx, 0x10(%rax)
ffffffff80014f19: 4c 89 40 14          	movq	%r8, 0x14(%rax)
ffffffff80014f1d: 44 89 78 1c          	movl	%r15d, 0x1c(%rax)
ffffffff80014f21: 89 50 20             	movl	%edx, 0x20(%rax)
ffffffff80014f24: 31 c9                	xorl	%ecx, %ecx
ffffffff80014f26: eb a6                	jmp	0xffffffff80014ece <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hce7104440ecdb80eE+0xfe>
ffffffff80014f28: cc                   	int3
ffffffff80014f29: cc                   	int3
ffffffff80014f2a: cc                   	int3
ffffffff80014f2b: cc                   	int3
ffffffff80014f2c: cc                   	int3
ffffffff80014f2d: cc                   	int3
ffffffff80014f2e: cc                   	int3
ffffffff80014f2f: cc                   	int3

ffffffff80014f30 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d>:
ffffffff80014f30: 48 89 f8             	movq	%rdi, %rax
ffffffff80014f33: 48 85 d2             	testq	%rdx, %rdx
ffffffff80014f36: 74 5a                	je	0xffffffff80014f92 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x62>
ffffffff80014f38: 48 83 fa 01          	cmpq	$0x1, %rdx
ffffffff80014f3c: 74 54                	je	0xffffffff80014f92 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x62>
ffffffff80014f3e: 48 83 fa 02          	cmpq	$0x2, %rdx
ffffffff80014f42: 74 4e                	je	0xffffffff80014f92 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x62>
ffffffff80014f44: 48 83 fa 03          	cmpq	$0x3, %rdx
ffffffff80014f48: 74 48                	je	0xffffffff80014f92 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x62>
ffffffff80014f4a: 48 83 fa 04          	cmpq	$0x4, %rdx
ffffffff80014f4e: 74 42                	je	0xffffffff80014f92 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x62>
ffffffff80014f50: 48 83 fa 05          	cmpq	$0x5, %rdx
ffffffff80014f54: 74 3c                	je	0xffffffff80014f92 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x62>
ffffffff80014f56: 48 83 fa 06          	cmpq	$0x6, %rdx
ffffffff80014f5a: 74 36                	je	0xffffffff80014f92 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x62>
ffffffff80014f5c: 48 83 fa 07          	cmpq	$0x7, %rdx
ffffffff80014f60: 74 30                	je	0xffffffff80014f92 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x62>
ffffffff80014f62: 48 83 fa 08          	cmpq	$0x8, %rdx
ffffffff80014f66: 74 2a                	je	0xffffffff80014f92 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x62>
ffffffff80014f68: 48 83 fa 09          	cmpq	$0x9, %rdx
ffffffff80014f6c: 74 24                	je	0xffffffff80014f92 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x62>
ffffffff80014f6e: 48 83 fa 0a          	cmpq	$0xa, %rdx
ffffffff80014f72: 74 1e                	je	0xffffffff80014f92 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x62>
ffffffff80014f74: 48 83 fa 0b          	cmpq	$0xb, %rdx
ffffffff80014f78: 74 18                	je	0xffffffff80014f92 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x62>
ffffffff80014f7a: 48 83 fa 0c          	cmpq	$0xc, %rdx
ffffffff80014f7e: 74 12                	je	0xffffffff80014f92 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x62>
ffffffff80014f80: 48 83 fa 0d          	cmpq	$0xd, %rdx
ffffffff80014f84: 74 0c                	je	0xffffffff80014f92 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x62>
ffffffff80014f86: 48 83 fa 0e          	cmpq	$0xe, %rdx
ffffffff80014f8a: 74 06                	je	0xffffffff80014f92 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x62>
ffffffff80014f8c: 48 83 fa 0f          	cmpq	$0xf, %rdx
ffffffff80014f90: 75 2d                	jne	0xffffffff80014fbf <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x8f>
ffffffff80014f92: c6 40 17 00          	movb	$0x0, 0x17(%rax)
ffffffff80014f96: 66 c7 40 15 00 00    	movw	$0x0, 0x15(%rax)
ffffffff80014f9c: c7 40 11 00 00 00 00 	movl	$0x0, 0x11(%rax)
ffffffff80014fa3: 48 c7 40 18 00 00 00 00      	movq	$0x0, 0x18(%rax)
ffffffff80014fab: 48 c7 40 08 00 00 00 00      	movq	$0x0, 0x8(%rax)
ffffffff80014fb3: c6 40 10 01          	movb	$0x1, 0x10(%rax)
ffffffff80014fb7: 48 c7 00 01 00 00 00 	movq	$0x1, (%rax)
ffffffff80014fbe: c3                   	retq
ffffffff80014fbf: 55                   	pushq	%rbp
ffffffff80014fc0: 41 57                	pushq	%r15
ffffffff80014fc2: 41 56                	pushq	%r14
ffffffff80014fc4: 41 55                	pushq	%r13
ffffffff80014fc6: 41 54                	pushq	%r12
ffffffff80014fc8: 53                   	pushq	%rbx
ffffffff80014fc9: 48 81 ec 98 00 00 00 	subq	$0x98, %rsp
ffffffff80014fd0: 48 89 c3             	movq	%rax, %rbx
ffffffff80014fd3: 0f b6 06             	movzbl	(%rsi), %eax
ffffffff80014fd6: 88 44 24 0a          	movb	%al, 0xa(%rsp)
ffffffff80014fda: 0f b6 46 01          	movzbl	0x1(%rsi), %eax
ffffffff80014fde: 88 44 24 09          	movb	%al, 0x9(%rsp)
ffffffff80014fe2: 0f b6 46 02          	movzbl	0x2(%rsi), %eax
ffffffff80014fe6: 88 44 24 08          	movb	%al, 0x8(%rsp)
ffffffff80014fea: 0f b6 46 03          	movzbl	0x3(%rsi), %eax
ffffffff80014fee: 88 44 24 07          	movb	%al, 0x7(%rsp)
ffffffff80014ff2: 0f b6 46 04          	movzbl	0x4(%rsi), %eax
ffffffff80014ff6: 88 44 24 06          	movb	%al, 0x6(%rsp)
ffffffff80014ffa: 0f b6 4e 05          	movzbl	0x5(%rsi), %ecx
ffffffff80014ffe: 0f b6 c1             	movzbl	%cl, %eax
ffffffff80015001: 0f b6 6e 06          	movzbl	0x6(%rsi), %ebp
ffffffff80015005: 44 0f b6 76 07       	movzbl	0x7(%rsi), %r14d
ffffffff8001500a: 44 0f b6 7e 08       	movzbl	0x8(%rsi), %r15d
ffffffff8001500f: 44 0f b6 66 09       	movzbl	0x9(%rsi), %r12d
ffffffff80015014: 44 0f b6 6e 0a       	movzbl	0xa(%rsi), %r13d
ffffffff80015019: 0f b6 7e 0b          	movzbl	0xb(%rsi), %edi
ffffffff8001501d: 40 88 7c 24 05       	movb	%dil, 0x5(%rsp)
ffffffff80015022: 0f b6 7e 0c          	movzbl	0xc(%rsi), %edi
ffffffff80015026: 40 88 7c 24 04       	movb	%dil, 0x4(%rsp)
ffffffff8001502b: 0f b6 7e 0d          	movzbl	0xd(%rsi), %edi
ffffffff8001502f: 40 88 7c 24 03       	movb	%dil, 0x3(%rsp)
ffffffff80015034: 44 0f b6 56 0e       	movzbl	0xe(%rsi), %r10d
ffffffff80015039: 44 0f b6 5e 0f       	movzbl	0xf(%rsi), %r11d
ffffffff8001503e: 83 f8 01             	cmpl	$0x1, %eax
ffffffff80015041: 74 09                	je	0xffffffff8001504c <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x11c>
ffffffff80015043: 83 f8 02             	cmpl	$0x2, %eax
ffffffff80015046: 75 6d                	jne	0xffffffff800150b5 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x185>
ffffffff80015048: b0 01                	movb	$0x1, %al
ffffffff8001504a: eb 02                	jmp	0xffffffff8001504e <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x11e>
ffffffff8001504c: 31 c0                	xorl	%eax, %eax
ffffffff8001504e: 48 8d 7a f0          	leaq	-0x10(%rdx), %rdi
ffffffff80015052: 48 83 ff 02          	cmpq	$0x2, %rdi
ffffffff80015056: 73 16                	jae	0xffffffff8001506e <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x13e>
ffffffff80015058: 48 89 d8             	movq	%rbx, %rax
ffffffff8001505b: 66 c7 43 16 00 00    	movw	$0x0, 0x16(%rbx)
ffffffff80015061: c7 43 12 00 00 00 00 	movl	$0x0, 0x12(%rbx)
ffffffff80015068: 48 89 7b 18          	movq	%rdi, 0x18(%rbx)
ffffffff8001506c: eb 34                	jmp	0xffffffff800150a2 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x172>
ffffffff8001506e: 44 0f b7 46 10       	movzwl	0x10(%rsi), %r8d
ffffffff80015073: 44 89 c7             	movl	%r8d, %edi
ffffffff80015076: 66 c1 c7 08          	rolw	$0x8, %di
ffffffff8001507a: 84 c0                	testb	%al, %al
ffffffff8001507c: 41 0f 44 f8          	cmovel	%r8d, %edi
ffffffff80015080: 4c 8d 42 ee          	leaq	-0x12(%rdx), %r8
ffffffff80015084: 49 83 f8 02          	cmpq	$0x2, %r8
ffffffff80015088: 0f 83 ac 00 00 00    	jae	0xffffffff8001513a <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x20a>
ffffffff8001508e: 48 89 d8             	movq	%rbx, %rax
ffffffff80015091: 66 c7 43 16 00 00    	movw	$0x0, 0x16(%rbx)
ffffffff80015097: c7 43 12 00 00 00 00 	movl	$0x0, 0x12(%rbx)
ffffffff8001509e: 4c 89 43 18          	movq	%r8, 0x18(%rbx)
ffffffff800150a2: 48 c7 43 08 00 00 00 00      	movq	$0x0, 0x8(%rbx)
ffffffff800150aa: 66 c7 43 10 02 00    	movw	$0x2, 0x10(%rbx)
ffffffff800150b0: e9 34 01 00 00       	jmp	0xffffffff800151e9 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x2b9>
ffffffff800150b5: 88 4c 24 0b          	movb	%cl, 0xb(%rsp)
ffffffff800150b9: 48 8d 44 24 0b       	leaq	0xb(%rsp), %rax
ffffffff800150be: 48 89 44 24 40       	movq	%rax, 0x40(%rsp)
ffffffff800150c3: 48 c7 44 24 48 40 91 01 80   	movq	$-0x7ffe6ec0, 0x48(%rsp) # imm = 0x80019140
ffffffff800150cc: 48 c7 44 24 68 b8 29 02 80   	movq	$-0x7ffdd648, 0x68(%rsp) # imm = 0x800229B8
ffffffff800150d5: 48 c7 44 24 70 01 00 00 00   	movq	$0x1, 0x70(%rsp)
ffffffff800150de: 48 c7 84 24 88 00 00 00 00 00 00 00  	movq	$0x0, 0x88(%rsp)
ffffffff800150ea: 48 8d 44 24 40       	leaq	0x40(%rsp), %rax
ffffffff800150ef: 48 89 44 24 78       	movq	%rax, 0x78(%rsp)
ffffffff800150f4: 48 c7 84 24 80 00 00 00 01 00 00 00  	movq	$0x1, 0x80(%rsp)
ffffffff80015100: 48 8d 7c 24 50       	leaq	0x50(%rsp), %rdi
ffffffff80015105: 48 8d 74 24 68       	leaq	0x68(%rsp), %rsi
ffffffff8001510a: e8 51 3a 00 00       	callq	0xffffffff80018b60 <alloc::fmt::format::format_inner::ha57507f8e4bcde35>
ffffffff8001510f: 48 89 d8             	movq	%rbx, %rax
ffffffff80015112: 48 c7 43 08 03 00 00 00      	movq	$0x3, 0x8(%rbx)
ffffffff8001511a: 48 8b 4c 24 50       	movq	0x50(%rsp), %rcx
ffffffff8001511f: 48 8b 54 24 58       	movq	0x58(%rsp), %rdx
ffffffff80015124: 48 89 4b 10          	movq	%rcx, 0x10(%rbx)
ffffffff80015128: 48 89 53 18          	movq	%rdx, 0x18(%rbx)
ffffffff8001512c: 48 8b 4c 24 60       	movq	0x60(%rsp), %rcx
ffffffff80015131: 48 89 4b 20          	movq	%rcx, 0x20(%rbx)
ffffffff80015135: e9 af 00 00 00       	jmp	0xffffffff800151e9 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x2b9>
ffffffff8001513a: 44 0f b7 46 12       	movzwl	0x12(%rsi), %r8d
ffffffff8001513f: 45 89 c1             	movl	%r8d, %r9d
ffffffff80015142: 66 41 c1 c1 08       	rolw	$0x8, %r9w
ffffffff80015147: 84 c0                	testb	%al, %al
ffffffff80015149: 45 0f 44 c8          	cmovel	%r8d, %r9d
ffffffff8001514d: 44 89 4c 24 24       	movl	%r9d, 0x24(%rsp)
ffffffff80015152: 4c 8d 42 ec          	leaq	-0x14(%rdx), %r8
ffffffff80015156: 49 83 f8 04          	cmpq	$0x4, %r8
ffffffff8001515a: 73 19                	jae	0xffffffff80015175 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x245>
ffffffff8001515c: 48 89 d8             	movq	%rbx, %rax
ffffffff8001515f: 4c 89 43 18          	movq	%r8, 0x18(%rbx)
ffffffff80015163: 48 c7 43 08 00 00 00 00      	movq	$0x0, 0x8(%rbx)
ffffffff8001516b: 48 c7 43 10 04 00 00 00      	movq	$0x4, 0x10(%rbx)
ffffffff80015173: eb 74                	jmp	0xffffffff800151e9 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x2b9>
ffffffff80015175: 44 8b 46 14          	movl	0x14(%rsi), %r8d
ffffffff80015179: 45 89 c1             	movl	%r8d, %r9d
ffffffff8001517c: 41 0f c9             	bswapl	%r9d
ffffffff8001517f: 84 c0                	testb	%al, %al
ffffffff80015181: 45 0f 44 c8          	cmovel	%r8d, %r9d
ffffffff80015185: 44 89 4c 24 20       	movl	%r9d, 0x20(%rsp)
ffffffff8001518a: 4c 8d 42 e8          	leaq	-0x18(%rdx), %r8
ffffffff8001518e: 49 83 f8 08          	cmpq	$0x8, %r8
ffffffff80015192: 72 3e                	jb	0xffffffff800151d2 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x2a2>
ffffffff80015194: 4c 8b 46 18          	movq	0x18(%rsi), %r8
ffffffff80015198: 4d 89 c1             	movq	%r8, %r9
ffffffff8001519b: 49 0f c9             	bswapq	%r9
ffffffff8001519e: 84 c0                	testb	%al, %al
ffffffff800151a0: 4d 0f 44 c8          	cmoveq	%r8, %r9
ffffffff800151a4: 4c 89 4c 24 38       	movq	%r9, 0x38(%rsp)
ffffffff800151a9: 4c 8d 42 e0          	leaq	-0x20(%rdx), %r8
ffffffff800151ad: 49 83 f8 08          	cmpq	$0x8, %r8
ffffffff800151b1: 72 1f                	jb	0xffffffff800151d2 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x2a2>
ffffffff800151b3: 4c 8b 46 20          	movq	0x20(%rsi), %r8
ffffffff800151b7: 4d 89 c1             	movq	%r8, %r9
ffffffff800151ba: 49 0f c9             	bswapq	%r9
ffffffff800151bd: 84 c0                	testb	%al, %al
ffffffff800151bf: 4d 0f 44 c8          	cmoveq	%r8, %r9
ffffffff800151c3: 4c 89 4c 24 30       	movq	%r9, 0x30(%rsp)
ffffffff800151c8: 4c 8d 42 d8          	leaq	-0x28(%rdx), %r8
ffffffff800151cc: 49 83 f8 08          	cmpq	$0x8, %r8
ffffffff800151d0: 73 30                	jae	0xffffffff80015202 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x2d2>
ffffffff800151d2: 48 89 d8             	movq	%rbx, %rax
ffffffff800151d5: 4c 89 43 18          	movq	%r8, 0x18(%rbx)
ffffffff800151d9: 48 c7 43 08 00 00 00 00      	movq	$0x0, 0x8(%rbx)
ffffffff800151e1: 48 c7 43 10 08 00 00 00      	movq	$0x8, 0x10(%rbx)
ffffffff800151e9: 48 c7 03 01 00 00 00 	movq	$0x1, (%rbx)
ffffffff800151f0: 48 81 c4 98 00 00 00 	addq	$0x98, %rsp
ffffffff800151f7: 5b                   	popq	%rbx
ffffffff800151f8: 41 5c                	popq	%r12
ffffffff800151fa: 41 5d                	popq	%r13
ffffffff800151fc: 41 5e                	popq	%r14
ffffffff800151fe: 41 5f                	popq	%r15
ffffffff80015200: 5d                   	popq	%rbp
ffffffff80015201: c3                   	retq
ffffffff80015202: 4c 8b 46 28          	movq	0x28(%rsi), %r8
ffffffff80015206: 4d 89 c1             	movq	%r8, %r9
ffffffff80015209: 49 0f c9             	bswapq	%r9
ffffffff8001520c: 84 c0                	testb	%al, %al
ffffffff8001520e: 4d 0f 44 c8          	cmoveq	%r8, %r9
ffffffff80015212: 4c 89 4c 24 28       	movq	%r9, 0x28(%rsp)
ffffffff80015217: 4c 8d 42 d0          	leaq	-0x30(%rdx), %r8
ffffffff8001521b: 49 83 f8 04          	cmpq	$0x4, %r8
ffffffff8001521f: 0f 82 37 ff ff ff    	jb	0xffffffff8001515c <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x22c>
ffffffff80015225: 44 8b 46 30          	movl	0x30(%rsi), %r8d
ffffffff80015229: 45 89 c1             	movl	%r8d, %r9d
ffffffff8001522c: 41 0f c9             	bswapl	%r9d
ffffffff8001522f: 84 c0                	testb	%al, %al
ffffffff80015231: 45 0f 44 c8          	cmovel	%r8d, %r9d
ffffffff80015235: 44 89 4c 24 1c       	movl	%r9d, 0x1c(%rsp)
ffffffff8001523a: 4c 8d 42 cc          	leaq	-0x34(%rdx), %r8
ffffffff8001523e: 49 83 f8 02          	cmpq	$0x2, %r8
ffffffff80015242: 0f 82 46 fe ff ff    	jb	0xffffffff8001508e <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x15e>
ffffffff80015248: 44 0f b7 46 34       	movzwl	0x34(%rsi), %r8d
ffffffff8001524d: 45 89 c1             	movl	%r8d, %r9d
ffffffff80015250: 66 41 c1 c1 08       	rolw	$0x8, %r9w
ffffffff80015255: 84 c0                	testb	%al, %al
ffffffff80015257: 45 0f 44 c8          	cmovel	%r8d, %r9d
ffffffff8001525b: 44 89 4c 24 18       	movl	%r9d, 0x18(%rsp)
ffffffff80015260: 4c 8d 42 ca          	leaq	-0x36(%rdx), %r8
ffffffff80015264: 49 83 f8 02          	cmpq	$0x2, %r8
ffffffff80015268: 0f 82 20 fe ff ff    	jb	0xffffffff8001508e <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x15e>
ffffffff8001526e: 44 0f b7 46 36       	movzwl	0x36(%rsi), %r8d
ffffffff80015273: 45 89 c1             	movl	%r8d, %r9d
ffffffff80015276: 66 41 c1 c1 08       	rolw	$0x8, %r9w
ffffffff8001527b: 84 c0                	testb	%al, %al
ffffffff8001527d: 45 0f 44 c8          	cmovel	%r8d, %r9d
ffffffff80015281: 44 89 4c 24 14       	movl	%r9d, 0x14(%rsp)
ffffffff80015286: 4c 8d 42 c8          	leaq	-0x38(%rdx), %r8
ffffffff8001528a: 49 83 f8 02          	cmpq	$0x2, %r8
ffffffff8001528e: 0f 82 fa fd ff ff    	jb	0xffffffff8001508e <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x15e>
ffffffff80015294: 44 0f b7 46 38       	movzwl	0x38(%rsi), %r8d
ffffffff80015299: 45 89 c1             	movl	%r8d, %r9d
ffffffff8001529c: 66 41 c1 c1 08       	rolw	$0x8, %r9w
ffffffff800152a1: 84 c0                	testb	%al, %al
ffffffff800152a3: 45 0f 44 c8          	cmovel	%r8d, %r9d
ffffffff800152a7: 44 89 4c 24 10       	movl	%r9d, 0x10(%rsp)
ffffffff800152ac: 4c 8d 42 c6          	leaq	-0x3a(%rdx), %r8
ffffffff800152b0: 49 83 f8 02          	cmpq	$0x2, %r8
ffffffff800152b4: 0f 82 d4 fd ff ff    	jb	0xffffffff8001508e <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x15e>
ffffffff800152ba: 44 0f b7 46 3a       	movzwl	0x3a(%rsi), %r8d
ffffffff800152bf: 45 89 c1             	movl	%r8d, %r9d
ffffffff800152c2: 66 41 c1 c1 08       	rolw	$0x8, %r9w
ffffffff800152c7: 84 c0                	testb	%al, %al
ffffffff800152c9: 45 0f 44 c8          	cmovel	%r8d, %r9d
ffffffff800152cd: 4c 8d 42 c4          	leaq	-0x3c(%rdx), %r8
ffffffff800152d1: 49 83 f8 02          	cmpq	$0x2, %r8
ffffffff800152d5: 0f 82 b3 fd ff ff    	jb	0xffffffff8001508e <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x15e>
ffffffff800152db: 48 83 c2 c2          	addq	$-0x3e, %rdx
ffffffff800152df: 48 83 fa 02          	cmpq	$0x2, %rdx
ffffffff800152e3: 73 19                	jae	0xffffffff800152fe <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x3ce>
ffffffff800152e5: 48 89 d8             	movq	%rbx, %rax
ffffffff800152e8: 66 c7 43 16 00 00    	movw	$0x0, 0x16(%rbx)
ffffffff800152ee: c7 43 12 00 00 00 00 	movl	$0x0, 0x12(%rbx)
ffffffff800152f5: 48 89 53 18          	movq	%rdx, 0x18(%rbx)
ffffffff800152f9: e9 a4 fd ff ff       	jmp	0xffffffff800150a2 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x172>
ffffffff800152fe: 0f b7 56 3c          	movzwl	0x3c(%rsi), %edx
ffffffff80015302: 89 54 24 0c          	movl	%edx, 0xc(%rsp)
ffffffff80015306: 66 c1 c2 08          	rolw	$0x8, %dx
ffffffff8001530a: 44 0f b7 46 3e       	movzwl	0x3e(%rsi), %r8d
ffffffff8001530f: 44 89 c6             	movl	%r8d, %esi
ffffffff80015312: 66 c1 c6 08          	rolw	$0x8, %si
ffffffff80015316: 84 c0                	testb	%al, %al
ffffffff80015318: 0f 44 54 24 0c       	cmovel	0xc(%rsp), %edx
ffffffff8001531d: 41 0f 44 f0          	cmovel	%r8d, %esi
ffffffff80015321: 48 89 d8             	movq	%rbx, %rax
ffffffff80015324: 44 0f b6 44 24 0a    	movzbl	0xa(%rsp), %r8d
ffffffff8001532a: 44 88 43 08          	movb	%r8b, 0x8(%rbx)
ffffffff8001532e: 44 0f b6 44 24 09    	movzbl	0x9(%rsp), %r8d
ffffffff80015334: 44 88 43 09          	movb	%r8b, 0x9(%rbx)
ffffffff80015338: 44 0f b6 44 24 08    	movzbl	0x8(%rsp), %r8d
ffffffff8001533e: 44 88 43 0a          	movb	%r8b, 0xa(%rbx)
ffffffff80015342: 44 0f b6 44 24 07    	movzbl	0x7(%rsp), %r8d
ffffffff80015348: 44 88 43 0b          	movb	%r8b, 0xb(%rbx)
ffffffff8001534c: 44 0f b6 44 24 06    	movzbl	0x6(%rsp), %r8d
ffffffff80015352: 44 88 43 0c          	movb	%r8b, 0xc(%rbx)
ffffffff80015356: 88 4b 0d             	movb	%cl, 0xd(%rbx)
ffffffff80015359: 40 88 6b 0e          	movb	%bpl, 0xe(%rbx)
ffffffff8001535d: 44 88 73 0f          	movb	%r14b, 0xf(%rbx)
ffffffff80015361: 44 88 7b 10          	movb	%r15b, 0x10(%rbx)
ffffffff80015365: 44 88 63 11          	movb	%r12b, 0x11(%rbx)
ffffffff80015369: 44 88 6b 12          	movb	%r13b, 0x12(%rbx)
ffffffff8001536d: 0f b6 4c 24 05       	movzbl	0x5(%rsp), %ecx
ffffffff80015372: 88 4b 13             	movb	%cl, 0x13(%rbx)
ffffffff80015375: 0f b6 4c 24 04       	movzbl	0x4(%rsp), %ecx
ffffffff8001537a: 88 4b 14             	movb	%cl, 0x14(%rbx)
ffffffff8001537d: 0f b6 4c 24 03       	movzbl	0x3(%rsp), %ecx
ffffffff80015382: 88 4b 15             	movb	%cl, 0x15(%rbx)
ffffffff80015385: 44 88 53 16          	movb	%r10b, 0x16(%rbx)
ffffffff80015389: 44 88 5b 17          	movb	%r11b, 0x17(%rbx)
ffffffff8001538d: 66 89 7b 18          	movw	%di, 0x18(%rbx)
ffffffff80015391: 8b 4c 24 24          	movl	0x24(%rsp), %ecx
ffffffff80015395: 66 89 4b 1a          	movw	%cx, 0x1a(%rbx)
ffffffff80015399: 8b 4c 24 20          	movl	0x20(%rsp), %ecx
ffffffff8001539d: 89 4b 1c             	movl	%ecx, 0x1c(%rbx)
ffffffff800153a0: 48 8b 4c 24 38       	movq	0x38(%rsp), %rcx
ffffffff800153a5: 48 89 4b 20          	movq	%rcx, 0x20(%rbx)
ffffffff800153a9: 48 8b 4c 24 30       	movq	0x30(%rsp), %rcx
ffffffff800153ae: 48 89 4b 28          	movq	%rcx, 0x28(%rbx)
ffffffff800153b2: 48 8b 4c 24 28       	movq	0x28(%rsp), %rcx
ffffffff800153b7: 48 89 4b 30          	movq	%rcx, 0x30(%rbx)
ffffffff800153bb: 8b 4c 24 1c          	movl	0x1c(%rsp), %ecx
ffffffff800153bf: 89 4b 38             	movl	%ecx, 0x38(%rbx)
ffffffff800153c2: 8b 4c 24 18          	movl	0x18(%rsp), %ecx
ffffffff800153c6: 66 89 4b 3c          	movw	%cx, 0x3c(%rbx)
ffffffff800153ca: 8b 4c 24 14          	movl	0x14(%rsp), %ecx
ffffffff800153ce: 66 89 4b 3e          	movw	%cx, 0x3e(%rbx)
ffffffff800153d2: 8b 4c 24 10          	movl	0x10(%rsp), %ecx
ffffffff800153d6: 66 89 4b 40          	movw	%cx, 0x40(%rbx)
ffffffff800153da: 66 44 89 4b 42       	movw	%r9w, 0x42(%rbx)
ffffffff800153df: 66 89 53 44          	movw	%dx, 0x44(%rbx)
ffffffff800153e3: 66 89 73 46          	movw	%si, 0x46(%rbx)
ffffffff800153e7: 48 c7 43 48 40 00 00 00      	movq	$0x40, 0x48(%rbx)
ffffffff800153ef: 48 c7 03 00 00 00 00 	movq	$0x0, (%rbx)
ffffffff800153f6: e9 f5 fd ff ff       	jmp	0xffffffff800151f0 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d+0x2c0>
ffffffff800153fb: cc                   	int3
ffffffff800153fc: cc                   	int3
ffffffff800153fd: cc                   	int3
ffffffff800153fe: cc                   	int3
ffffffff800153ff: cc                   	int3

ffffffff80015400 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b>:
ffffffff80015400: 48 89 f8             	movq	%rdi, %rax
ffffffff80015403: 48 85 d2             	testq	%rdx, %rdx
ffffffff80015406: 74 5a                	je	0xffffffff80015462 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x62>
ffffffff80015408: 48 83 fa 01          	cmpq	$0x1, %rdx
ffffffff8001540c: 74 54                	je	0xffffffff80015462 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x62>
ffffffff8001540e: 48 83 fa 02          	cmpq	$0x2, %rdx
ffffffff80015412: 74 4e                	je	0xffffffff80015462 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x62>
ffffffff80015414: 48 83 fa 03          	cmpq	$0x3, %rdx
ffffffff80015418: 74 48                	je	0xffffffff80015462 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x62>
ffffffff8001541a: 48 83 fa 04          	cmpq	$0x4, %rdx
ffffffff8001541e: 74 42                	je	0xffffffff80015462 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x62>
ffffffff80015420: 48 83 fa 05          	cmpq	$0x5, %rdx
ffffffff80015424: 74 3c                	je	0xffffffff80015462 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x62>
ffffffff80015426: 48 83 fa 06          	cmpq	$0x6, %rdx
ffffffff8001542a: 74 36                	je	0xffffffff80015462 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x62>
ffffffff8001542c: 48 83 fa 07          	cmpq	$0x7, %rdx
ffffffff80015430: 74 30                	je	0xffffffff80015462 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x62>
ffffffff80015432: 48 83 fa 08          	cmpq	$0x8, %rdx
ffffffff80015436: 74 2a                	je	0xffffffff80015462 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x62>
ffffffff80015438: 48 83 fa 09          	cmpq	$0x9, %rdx
ffffffff8001543c: 74 24                	je	0xffffffff80015462 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x62>
ffffffff8001543e: 48 83 fa 0a          	cmpq	$0xa, %rdx
ffffffff80015442: 74 1e                	je	0xffffffff80015462 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x62>
ffffffff80015444: 48 83 fa 0b          	cmpq	$0xb, %rdx
ffffffff80015448: 74 18                	je	0xffffffff80015462 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x62>
ffffffff8001544a: 48 83 fa 0c          	cmpq	$0xc, %rdx
ffffffff8001544e: 74 12                	je	0xffffffff80015462 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x62>
ffffffff80015450: 48 83 fa 0d          	cmpq	$0xd, %rdx
ffffffff80015454: 74 0c                	je	0xffffffff80015462 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x62>
ffffffff80015456: 48 83 fa 0e          	cmpq	$0xe, %rdx
ffffffff8001545a: 74 06                	je	0xffffffff80015462 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x62>
ffffffff8001545c: 48 83 fa 0f          	cmpq	$0xf, %rdx
ffffffff80015460: 75 2d                	jne	0xffffffff8001548f <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x8f>
ffffffff80015462: c6 40 17 00          	movb	$0x0, 0x17(%rax)
ffffffff80015466: 66 c7 40 15 00 00    	movw	$0x0, 0x15(%rax)
ffffffff8001546c: c7 40 11 00 00 00 00 	movl	$0x0, 0x11(%rax)
ffffffff80015473: 48 c7 40 18 00 00 00 00      	movq	$0x0, 0x18(%rax)
ffffffff8001547b: 48 c7 40 08 00 00 00 00      	movq	$0x0, 0x8(%rax)
ffffffff80015483: c6 40 10 01          	movb	$0x1, 0x10(%rax)
ffffffff80015487: 48 c7 00 01 00 00 00 	movq	$0x1, (%rax)
ffffffff8001548e: c3                   	retq
ffffffff8001548f: 55                   	pushq	%rbp
ffffffff80015490: 41 57                	pushq	%r15
ffffffff80015492: 41 56                	pushq	%r14
ffffffff80015494: 41 55                	pushq	%r13
ffffffff80015496: 41 54                	pushq	%r12
ffffffff80015498: 53                   	pushq	%rbx
ffffffff80015499: 48 81 ec 98 00 00 00 	subq	$0x98, %rsp
ffffffff800154a0: 48 89 c3             	movq	%rax, %rbx
ffffffff800154a3: 0f b6 06             	movzbl	(%rsi), %eax
ffffffff800154a6: 88 44 24 16          	movb	%al, 0x16(%rsp)
ffffffff800154aa: 0f b6 46 01          	movzbl	0x1(%rsi), %eax
ffffffff800154ae: 88 44 24 15          	movb	%al, 0x15(%rsp)
ffffffff800154b2: 0f b6 46 02          	movzbl	0x2(%rsi), %eax
ffffffff800154b6: 88 44 24 14          	movb	%al, 0x14(%rsp)
ffffffff800154ba: 0f b6 46 03          	movzbl	0x3(%rsi), %eax
ffffffff800154be: 88 44 24 13          	movb	%al, 0x13(%rsp)
ffffffff800154c2: 0f b6 46 04          	movzbl	0x4(%rsi), %eax
ffffffff800154c6: 88 44 24 12          	movb	%al, 0x12(%rsp)
ffffffff800154ca: 0f b6 4e 05          	movzbl	0x5(%rsi), %ecx
ffffffff800154ce: 0f b6 c1             	movzbl	%cl, %eax
ffffffff800154d1: 0f b6 6e 06          	movzbl	0x6(%rsi), %ebp
ffffffff800154d5: 44 0f b6 76 07       	movzbl	0x7(%rsi), %r14d
ffffffff800154da: 44 0f b6 7e 08       	movzbl	0x8(%rsi), %r15d
ffffffff800154df: 44 0f b6 66 09       	movzbl	0x9(%rsi), %r12d
ffffffff800154e4: 44 0f b6 6e 0a       	movzbl	0xa(%rsi), %r13d
ffffffff800154e9: 0f b6 7e 0b          	movzbl	0xb(%rsi), %edi
ffffffff800154ed: 40 88 7c 24 11       	movb	%dil, 0x11(%rsp)
ffffffff800154f2: 0f b6 7e 0c          	movzbl	0xc(%rsi), %edi
ffffffff800154f6: 40 88 7c 24 10       	movb	%dil, 0x10(%rsp)
ffffffff800154fb: 0f b6 7e 0d          	movzbl	0xd(%rsi), %edi
ffffffff800154ff: 40 88 7c 24 0f       	movb	%dil, 0xf(%rsp)
ffffffff80015504: 44 0f b6 56 0e       	movzbl	0xe(%rsi), %r10d
ffffffff80015509: 44 0f b6 5e 0f       	movzbl	0xf(%rsi), %r11d
ffffffff8001550e: 83 f8 01             	cmpl	$0x1, %eax
ffffffff80015511: 74 09                	je	0xffffffff8001551c <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x11c>
ffffffff80015513: 83 f8 02             	cmpl	$0x2, %eax
ffffffff80015516: 75 6d                	jne	0xffffffff80015585 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x185>
ffffffff80015518: b0 01                	movb	$0x1, %al
ffffffff8001551a: eb 02                	jmp	0xffffffff8001551e <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x11e>
ffffffff8001551c: 31 c0                	xorl	%eax, %eax
ffffffff8001551e: 48 8d 7a f0          	leaq	-0x10(%rdx), %rdi
ffffffff80015522: 48 83 ff 02          	cmpq	$0x2, %rdi
ffffffff80015526: 73 16                	jae	0xffffffff8001553e <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x13e>
ffffffff80015528: 48 89 d8             	movq	%rbx, %rax
ffffffff8001552b: 66 c7 43 16 00 00    	movw	$0x0, 0x16(%rbx)
ffffffff80015531: c7 43 12 00 00 00 00 	movl	$0x0, 0x12(%rbx)
ffffffff80015538: 48 89 7b 18          	movq	%rdi, 0x18(%rbx)
ffffffff8001553c: eb 34                	jmp	0xffffffff80015572 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x172>
ffffffff8001553e: 44 0f b7 46 10       	movzwl	0x10(%rsi), %r8d
ffffffff80015543: 44 89 c7             	movl	%r8d, %edi
ffffffff80015546: 66 c1 c7 08          	rolw	$0x8, %di
ffffffff8001554a: 84 c0                	testb	%al, %al
ffffffff8001554c: 41 0f 44 f8          	cmovel	%r8d, %edi
ffffffff80015550: 4c 8d 42 ee          	leaq	-0x12(%rdx), %r8
ffffffff80015554: 49 83 f8 02          	cmpq	$0x2, %r8
ffffffff80015558: 0f 83 ac 00 00 00    	jae	0xffffffff8001560a <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x20a>
ffffffff8001555e: 48 89 d8             	movq	%rbx, %rax
ffffffff80015561: 66 c7 43 16 00 00    	movw	$0x0, 0x16(%rbx)
ffffffff80015567: c7 43 12 00 00 00 00 	movl	$0x0, 0x12(%rbx)
ffffffff8001556e: 4c 89 43 18          	movq	%r8, 0x18(%rbx)
ffffffff80015572: 48 c7 43 08 00 00 00 00      	movq	$0x0, 0x8(%rbx)
ffffffff8001557a: 66 c7 43 10 02 00    	movw	$0x2, 0x10(%rbx)
ffffffff80015580: e9 3a 01 00 00       	jmp	0xffffffff800156bf <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x2bf>
ffffffff80015585: 88 4c 24 17          	movb	%cl, 0x17(%rsp)
ffffffff80015589: 48 8d 44 24 17       	leaq	0x17(%rsp), %rax
ffffffff8001558e: 48 89 44 24 40       	movq	%rax, 0x40(%rsp)
ffffffff80015593: 48 c7 44 24 48 40 91 01 80   	movq	$-0x7ffe6ec0, 0x48(%rsp) # imm = 0x80019140
ffffffff8001559c: 48 c7 44 24 68 f0 29 02 80   	movq	$-0x7ffdd610, 0x68(%rsp) # imm = 0x800229F0
ffffffff800155a5: 48 c7 44 24 70 01 00 00 00   	movq	$0x1, 0x70(%rsp)
ffffffff800155ae: 48 c7 84 24 88 00 00 00 00 00 00 00  	movq	$0x0, 0x88(%rsp)
ffffffff800155ba: 48 8d 44 24 40       	leaq	0x40(%rsp), %rax
ffffffff800155bf: 48 89 44 24 78       	movq	%rax, 0x78(%rsp)
ffffffff800155c4: 48 c7 84 24 80 00 00 00 01 00 00 00  	movq	$0x1, 0x80(%rsp)
ffffffff800155d0: 48 8d 7c 24 50       	leaq	0x50(%rsp), %rdi
ffffffff800155d5: 48 8d 74 24 68       	leaq	0x68(%rsp), %rsi
ffffffff800155da: e8 81 35 00 00       	callq	0xffffffff80018b60 <alloc::fmt::format::format_inner::ha57507f8e4bcde35>
ffffffff800155df: 48 89 d8             	movq	%rbx, %rax
ffffffff800155e2: 48 c7 43 08 03 00 00 00      	movq	$0x3, 0x8(%rbx)
ffffffff800155ea: 48 8b 4c 24 50       	movq	0x50(%rsp), %rcx
ffffffff800155ef: 48 8b 54 24 58       	movq	0x58(%rsp), %rdx
ffffffff800155f4: 48 89 4b 10          	movq	%rcx, 0x10(%rbx)
ffffffff800155f8: 48 89 53 18          	movq	%rdx, 0x18(%rbx)
ffffffff800155fc: 48 8b 4c 24 60       	movq	0x60(%rsp), %rcx
ffffffff80015601: 48 89 4b 20          	movq	%rcx, 0x20(%rbx)
ffffffff80015605: e9 b5 00 00 00       	jmp	0xffffffff800156bf <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x2bf>
ffffffff8001560a: 44 0f b7 46 12       	movzwl	0x12(%rsi), %r8d
ffffffff8001560f: 45 89 c1             	movl	%r8d, %r9d
ffffffff80015612: 66 41 c1 c1 08       	rolw	$0x8, %r9w
ffffffff80015617: 84 c0                	testb	%al, %al
ffffffff80015619: 45 0f 44 c8          	cmovel	%r8d, %r9d
ffffffff8001561d: 44 89 4c 24 3c       	movl	%r9d, 0x3c(%rsp)
ffffffff80015622: 4c 8d 42 ec          	leaq	-0x14(%rdx), %r8
ffffffff80015626: 49 83 f8 04          	cmpq	$0x4, %r8
ffffffff8001562a: 72 7c                	jb	0xffffffff800156a8 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x2a8>
ffffffff8001562c: 44 8b 46 14          	movl	0x14(%rsi), %r8d
ffffffff80015630: 45 89 c1             	movl	%r8d, %r9d
ffffffff80015633: 41 0f c9             	bswapl	%r9d
ffffffff80015636: 84 c0                	testb	%al, %al
ffffffff80015638: 45 0f 44 c8          	cmovel	%r8d, %r9d
ffffffff8001563c: 44 89 4c 24 38       	movl	%r9d, 0x38(%rsp)
ffffffff80015641: 4c 8d 42 e8          	leaq	-0x18(%rdx), %r8
ffffffff80015645: 49 83 f8 04          	cmpq	$0x4, %r8
ffffffff80015649: 72 5d                	jb	0xffffffff800156a8 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x2a8>
ffffffff8001564b: 44 8b 46 18          	movl	0x18(%rsi), %r8d
ffffffff8001564f: 45 89 c1             	movl	%r8d, %r9d
ffffffff80015652: 41 0f c9             	bswapl	%r9d
ffffffff80015655: 84 c0                	testb	%al, %al
ffffffff80015657: 45 0f 44 c8          	cmovel	%r8d, %r9d
ffffffff8001565b: 44 89 4c 24 34       	movl	%r9d, 0x34(%rsp)
ffffffff80015660: 4c 8d 42 e4          	leaq	-0x1c(%rdx), %r8
ffffffff80015664: 49 83 f8 04          	cmpq	$0x4, %r8
ffffffff80015668: 72 3e                	jb	0xffffffff800156a8 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x2a8>
ffffffff8001566a: 44 8b 46 1c          	movl	0x1c(%rsi), %r8d
ffffffff8001566e: 45 89 c1             	movl	%r8d, %r9d
ffffffff80015671: 41 0f c9             	bswapl	%r9d
ffffffff80015674: 84 c0                	testb	%al, %al
ffffffff80015676: 45 0f 44 c8          	cmovel	%r8d, %r9d
ffffffff8001567a: 44 89 4c 24 30       	movl	%r9d, 0x30(%rsp)
ffffffff8001567f: 4c 8d 42 e0          	leaq	-0x20(%rdx), %r8
ffffffff80015683: 49 83 f8 04          	cmpq	$0x4, %r8
ffffffff80015687: 72 1f                	jb	0xffffffff800156a8 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x2a8>
ffffffff80015689: 44 8b 46 20          	movl	0x20(%rsi), %r8d
ffffffff8001568d: 45 89 c1             	movl	%r8d, %r9d
ffffffff80015690: 41 0f c9             	bswapl	%r9d
ffffffff80015693: 84 c0                	testb	%al, %al
ffffffff80015695: 45 0f 44 c8          	cmovel	%r8d, %r9d
ffffffff80015699: 44 89 4c 24 2c       	movl	%r9d, 0x2c(%rsp)
ffffffff8001569e: 4c 8d 42 dc          	leaq	-0x24(%rdx), %r8
ffffffff800156a2: 49 83 f8 04          	cmpq	$0x4, %r8
ffffffff800156a6: 73 30                	jae	0xffffffff800156d8 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x2d8>
ffffffff800156a8: 48 89 d8             	movq	%rbx, %rax
ffffffff800156ab: 4c 89 43 18          	movq	%r8, 0x18(%rbx)
ffffffff800156af: 48 c7 43 08 00 00 00 00      	movq	$0x0, 0x8(%rbx)
ffffffff800156b7: 48 c7 43 10 04 00 00 00      	movq	$0x4, 0x10(%rbx)
ffffffff800156bf: 48 c7 03 01 00 00 00 	movq	$0x1, (%rbx)
ffffffff800156c6: 48 81 c4 98 00 00 00 	addq	$0x98, %rsp
ffffffff800156cd: 5b                   	popq	%rbx
ffffffff800156ce: 41 5c                	popq	%r12
ffffffff800156d0: 41 5d                	popq	%r13
ffffffff800156d2: 41 5e                	popq	%r14
ffffffff800156d4: 41 5f                	popq	%r15
ffffffff800156d6: 5d                   	popq	%rbp
ffffffff800156d7: c3                   	retq
ffffffff800156d8: 44 8b 46 24          	movl	0x24(%rsi), %r8d
ffffffff800156dc: 45 89 c1             	movl	%r8d, %r9d
ffffffff800156df: 41 0f c9             	bswapl	%r9d
ffffffff800156e2: 84 c0                	testb	%al, %al
ffffffff800156e4: 45 0f 44 c8          	cmovel	%r8d, %r9d
ffffffff800156e8: 44 89 4c 24 28       	movl	%r9d, 0x28(%rsp)
ffffffff800156ed: 4c 8d 42 d8          	leaq	-0x28(%rdx), %r8
ffffffff800156f1: 49 83 f8 02          	cmpq	$0x2, %r8
ffffffff800156f5: 0f 82 63 fe ff ff    	jb	0xffffffff8001555e <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x15e>
ffffffff800156fb: 44 0f b7 46 28       	movzwl	0x28(%rsi), %r8d
ffffffff80015700: 45 89 c1             	movl	%r8d, %r9d
ffffffff80015703: 66 41 c1 c1 08       	rolw	$0x8, %r9w
ffffffff80015708: 84 c0                	testb	%al, %al
ffffffff8001570a: 45 0f 44 c8          	cmovel	%r8d, %r9d
ffffffff8001570e: 44 89 4c 24 24       	movl	%r9d, 0x24(%rsp)
ffffffff80015713: 4c 8d 42 d6          	leaq	-0x2a(%rdx), %r8
ffffffff80015717: 49 83 f8 02          	cmpq	$0x2, %r8
ffffffff8001571b: 0f 82 3d fe ff ff    	jb	0xffffffff8001555e <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x15e>
ffffffff80015721: 44 0f b7 46 2a       	movzwl	0x2a(%rsi), %r8d
ffffffff80015726: 45 89 c1             	movl	%r8d, %r9d
ffffffff80015729: 66 41 c1 c1 08       	rolw	$0x8, %r9w
ffffffff8001572e: 84 c0                	testb	%al, %al
ffffffff80015730: 45 0f 44 c8          	cmovel	%r8d, %r9d
ffffffff80015734: 44 89 4c 24 20       	movl	%r9d, 0x20(%rsp)
ffffffff80015739: 4c 8d 42 d4          	leaq	-0x2c(%rdx), %r8
ffffffff8001573d: 49 83 f8 02          	cmpq	$0x2, %r8
ffffffff80015741: 0f 82 17 fe ff ff    	jb	0xffffffff8001555e <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x15e>
ffffffff80015747: 44 0f b7 46 2c       	movzwl	0x2c(%rsi), %r8d
ffffffff8001574c: 45 89 c1             	movl	%r8d, %r9d
ffffffff8001574f: 66 41 c1 c1 08       	rolw	$0x8, %r9w
ffffffff80015754: 84 c0                	testb	%al, %al
ffffffff80015756: 45 0f 44 c8          	cmovel	%r8d, %r9d
ffffffff8001575a: 44 89 4c 24 1c       	movl	%r9d, 0x1c(%rsp)
ffffffff8001575f: 4c 8d 42 d2          	leaq	-0x2e(%rdx), %r8
ffffffff80015763: 49 83 f8 02          	cmpq	$0x2, %r8
ffffffff80015767: 0f 82 f1 fd ff ff    	jb	0xffffffff8001555e <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x15e>
ffffffff8001576d: 44 0f b7 46 2e       	movzwl	0x2e(%rsi), %r8d
ffffffff80015772: 45 89 c1             	movl	%r8d, %r9d
ffffffff80015775: 66 41 c1 c1 08       	rolw	$0x8, %r9w
ffffffff8001577a: 84 c0                	testb	%al, %al
ffffffff8001577c: 45 0f 44 c8          	cmovel	%r8d, %r9d
ffffffff80015780: 4c 8d 42 d0          	leaq	-0x30(%rdx), %r8
ffffffff80015784: 49 83 f8 02          	cmpq	$0x2, %r8
ffffffff80015788: 0f 82 d0 fd ff ff    	jb	0xffffffff8001555e <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x15e>
ffffffff8001578e: 48 83 c2 ce          	addq	$-0x32, %rdx
ffffffff80015792: 48 83 fa 02          	cmpq	$0x2, %rdx
ffffffff80015796: 73 19                	jae	0xffffffff800157b1 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x3b1>
ffffffff80015798: 48 89 d8             	movq	%rbx, %rax
ffffffff8001579b: 66 c7 43 16 00 00    	movw	$0x0, 0x16(%rbx)
ffffffff800157a1: c7 43 12 00 00 00 00 	movl	$0x0, 0x12(%rbx)
ffffffff800157a8: 48 89 53 18          	movq	%rdx, 0x18(%rbx)
ffffffff800157ac: e9 c1 fd ff ff       	jmp	0xffffffff80015572 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x172>
ffffffff800157b1: 0f b7 56 30          	movzwl	0x30(%rsi), %edx
ffffffff800157b5: 89 54 24 18          	movl	%edx, 0x18(%rsp)
ffffffff800157b9: 66 c1 c2 08          	rolw	$0x8, %dx
ffffffff800157bd: 44 0f b7 46 32       	movzwl	0x32(%rsi), %r8d
ffffffff800157c2: 44 89 c6             	movl	%r8d, %esi
ffffffff800157c5: 66 c1 c6 08          	rolw	$0x8, %si
ffffffff800157c9: 84 c0                	testb	%al, %al
ffffffff800157cb: 0f 44 54 24 18       	cmovel	0x18(%rsp), %edx
ffffffff800157d0: 41 0f 44 f0          	cmovel	%r8d, %esi
ffffffff800157d4: 48 89 d8             	movq	%rbx, %rax
ffffffff800157d7: 44 0f b6 44 24 16    	movzbl	0x16(%rsp), %r8d
ffffffff800157dd: 44 88 43 08          	movb	%r8b, 0x8(%rbx)
ffffffff800157e1: 44 0f b6 44 24 15    	movzbl	0x15(%rsp), %r8d
ffffffff800157e7: 44 88 43 09          	movb	%r8b, 0x9(%rbx)
ffffffff800157eb: 44 0f b6 44 24 14    	movzbl	0x14(%rsp), %r8d
ffffffff800157f1: 44 88 43 0a          	movb	%r8b, 0xa(%rbx)
ffffffff800157f5: 44 0f b6 44 24 13    	movzbl	0x13(%rsp), %r8d
ffffffff800157fb: 44 88 43 0b          	movb	%r8b, 0xb(%rbx)
ffffffff800157ff: 44 0f b6 44 24 12    	movzbl	0x12(%rsp), %r8d
ffffffff80015805: 44 88 43 0c          	movb	%r8b, 0xc(%rbx)
ffffffff80015809: 88 4b 0d             	movb	%cl, 0xd(%rbx)
ffffffff8001580c: 40 88 6b 0e          	movb	%bpl, 0xe(%rbx)
ffffffff80015810: 44 88 73 0f          	movb	%r14b, 0xf(%rbx)
ffffffff80015814: 44 88 7b 10          	movb	%r15b, 0x10(%rbx)
ffffffff80015818: 44 88 63 11          	movb	%r12b, 0x11(%rbx)
ffffffff8001581c: 44 88 6b 12          	movb	%r13b, 0x12(%rbx)
ffffffff80015820: 0f b6 4c 24 11       	movzbl	0x11(%rsp), %ecx
ffffffff80015825: 88 4b 13             	movb	%cl, 0x13(%rbx)
ffffffff80015828: 0f b6 4c 24 10       	movzbl	0x10(%rsp), %ecx
ffffffff8001582d: 88 4b 14             	movb	%cl, 0x14(%rbx)
ffffffff80015830: 0f b6 4c 24 0f       	movzbl	0xf(%rsp), %ecx
ffffffff80015835: 88 4b 15             	movb	%cl, 0x15(%rbx)
ffffffff80015838: 44 88 53 16          	movb	%r10b, 0x16(%rbx)
ffffffff8001583c: 44 88 5b 17          	movb	%r11b, 0x17(%rbx)
ffffffff80015840: 66 89 7b 18          	movw	%di, 0x18(%rbx)
ffffffff80015844: 8b 4c 24 3c          	movl	0x3c(%rsp), %ecx
ffffffff80015848: 66 89 4b 1a          	movw	%cx, 0x1a(%rbx)
ffffffff8001584c: 8b 4c 24 38          	movl	0x38(%rsp), %ecx
ffffffff80015850: 89 4b 1c             	movl	%ecx, 0x1c(%rbx)
ffffffff80015853: 8b 4c 24 34          	movl	0x34(%rsp), %ecx
ffffffff80015857: 89 4b 20             	movl	%ecx, 0x20(%rbx)
ffffffff8001585a: 8b 4c 24 30          	movl	0x30(%rsp), %ecx
ffffffff8001585e: 89 4b 24             	movl	%ecx, 0x24(%rbx)
ffffffff80015861: 8b 4c 24 2c          	movl	0x2c(%rsp), %ecx
ffffffff80015865: 89 4b 28             	movl	%ecx, 0x28(%rbx)
ffffffff80015868: 8b 4c 24 28          	movl	0x28(%rsp), %ecx
ffffffff8001586c: 89 4b 2c             	movl	%ecx, 0x2c(%rbx)
ffffffff8001586f: 8b 4c 24 24          	movl	0x24(%rsp), %ecx
ffffffff80015873: 66 89 4b 30          	movw	%cx, 0x30(%rbx)
ffffffff80015877: 8b 4c 24 20          	movl	0x20(%rsp), %ecx
ffffffff8001587b: 66 89 4b 32          	movw	%cx, 0x32(%rbx)
ffffffff8001587f: 8b 4c 24 1c          	movl	0x1c(%rsp), %ecx
ffffffff80015883: 66 89 4b 34          	movw	%cx, 0x34(%rbx)
ffffffff80015887: 66 44 89 4b 36       	movw	%r9w, 0x36(%rbx)
ffffffff8001588c: 66 89 53 38          	movw	%dx, 0x38(%rbx)
ffffffff80015890: 66 89 73 3a          	movw	%si, 0x3a(%rbx)
ffffffff80015894: 48 c7 43 40 34 00 00 00      	movq	$0x34, 0x40(%rbx)
ffffffff8001589c: 48 c7 03 00 00 00 00 	movq	$0x0, (%rbx)
ffffffff800158a3: e9 1e fe ff ff       	jmp	0xffffffff800156c6 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b+0x2c6>
ffffffff800158a8: cc                   	int3
ffffffff800158a9: cc                   	int3
ffffffff800158aa: cc                   	int3
ffffffff800158ab: cc                   	int3
ffffffff800158ac: cc                   	int3
ffffffff800158ad: cc                   	int3
ffffffff800158ae: cc                   	int3
ffffffff800158af: cc                   	int3

ffffffff800158b0 <alloc::raw_vec::finish_grow::h231082e05a63bd8d.llvm.973663494490108792>:
ffffffff800158b0: 41 57                	pushq	%r15
ffffffff800158b2: 41 56                	pushq	%r14
ffffffff800158b4: 53                   	pushq	%rbx
ffffffff800158b5: 48 89 d3             	movq	%rdx, %rbx
ffffffff800158b8: 49 89 f7             	movq	%rsi, %r15
ffffffff800158bb: 49 89 fe             	movq	%rdi, %r14
ffffffff800158be: 48 83 79 08 00       	cmpq	$0x0, 0x8(%rcx)
ffffffff800158c3: 74 19                	je	0xffffffff800158de <alloc::raw_vec::finish_grow::h231082e05a63bd8d.llvm.973663494490108792+0x2e>
ffffffff800158c5: 48 8b 71 10          	movq	0x10(%rcx), %rsi
ffffffff800158c9: 48 85 f6             	testq	%rsi, %rsi
ffffffff800158cc: 74 10                	je	0xffffffff800158de <alloc::raw_vec::finish_grow::h231082e05a63bd8d.llvm.973663494490108792+0x2e>
ffffffff800158ce: 48 8b 39             	movq	(%rcx), %rdi
ffffffff800158d1: 4c 89 fa             	movq	%r15, %rdx
ffffffff800158d4: 48 89 d9             	movq	%rbx, %rcx
ffffffff800158d7: e8 b4 94 ff ff       	callq	0xffffffff8000ed90 <__rust_realloc>
ffffffff800158dc: eb 1c                	jmp	0xffffffff800158fa <alloc::raw_vec::finish_grow::h231082e05a63bd8d.llvm.973663494490108792+0x4a>
ffffffff800158de: 48 85 db             	testq	%rbx, %rbx
ffffffff800158e1: 74 14                	je	0xffffffff800158f7 <alloc::raw_vec::finish_grow::h231082e05a63bd8d.llvm.973663494490108792+0x47>
ffffffff800158e3: 0f b6 05 f7 f8 00 00 	movzbl	0xf8f7(%rip), %eax      # 0xffffffff800251e1 <__rust_no_alloc_shim_is_unstable>
ffffffff800158ea: 48 89 df             	movq	%rbx, %rdi
ffffffff800158ed: 4c 89 fe             	movq	%r15, %rsi
ffffffff800158f0: e8 fb 93 ff ff       	callq	0xffffffff8000ecf0 <__rust_alloc>
ffffffff800158f5: eb 03                	jmp	0xffffffff800158fa <alloc::raw_vec::finish_grow::h231082e05a63bd8d.llvm.973663494490108792+0x4a>
ffffffff800158f7: 4c 89 f8             	movq	%r15, %rax
ffffffff800158fa: 31 c9                	xorl	%ecx, %ecx
ffffffff800158fc: 48 85 c0             	testq	%rax, %rax
ffffffff800158ff: 4c 0f 45 f8          	cmovneq	%rax, %r15
ffffffff80015903: 0f 94 c1             	sete	%cl
ffffffff80015906: 4d 89 7e 08          	movq	%r15, 0x8(%r14)
ffffffff8001590a: 49 89 5e 10          	movq	%rbx, 0x10(%r14)
ffffffff8001590e: 49 89 0e             	movq	%rcx, (%r14)
ffffffff80015911: 5b                   	popq	%rbx
ffffffff80015912: 41 5e                	popq	%r14
ffffffff80015914: 41 5f                	popq	%r15
ffffffff80015916: c3                   	retq
ffffffff80015917: cc                   	int3
ffffffff80015918: cc                   	int3
ffffffff80015919: cc                   	int3
ffffffff8001591a: cc                   	int3
ffffffff8001591b: cc                   	int3
ffffffff8001591c: cc                   	int3
ffffffff8001591d: cc                   	int3
ffffffff8001591e: cc                   	int3
ffffffff8001591f: cc                   	int3

ffffffff80015920 <alloc::raw_vec::RawVec<T,A>::grow_one::h297af90850e82a42>:
ffffffff80015920: 41 57                	pushq	%r15
ffffffff80015922: 41 56                	pushq	%r14
ffffffff80015924: 53                   	pushq	%rbx
ffffffff80015925: 48 83 ec 30          	subq	$0x30, %rsp
ffffffff80015929: 49 89 fe             	movq	%rdi, %r14
ffffffff8001592c: 48 8b 0f             	movq	(%rdi), %rcx
ffffffff8001592f: 48 8d 41 01          	leaq	0x1(%rcx), %rax
ffffffff80015933: 48 8d 14 09          	leaq	(%rcx,%rcx), %rdx
ffffffff80015937: 48 39 d0             	cmpq	%rdx, %rax
ffffffff8001593a: 48 0f 47 d0          	cmovaq	%rax, %rdx
ffffffff8001593e: 48 89 f3             	movq	%rsi, %rbx
ffffffff80015941: 48 83 fa 05          	cmpq	$0x5, %rdx
ffffffff80015945: 41 bf 04 00 00 00    	movl	$0x4, %r15d
ffffffff8001594b: 4c 0f 43 fa          	cmovaeq	%rdx, %r15
ffffffff8001594f: 31 ff                	xorl	%edi, %edi
ffffffff80015951: ba 18 00 00 00       	movl	$0x18, %edx
ffffffff80015956: 4c 89 f8             	movq	%r15, %rax
ffffffff80015959: 48 f7 e2             	mulq	%rdx
ffffffff8001595c: 70 69                	jo	0xffffffff800159c7 <alloc::raw_vec::RawVec<T,A>::grow_one::h297af90850e82a42+0xa7>
ffffffff8001595e: 48 ba f8 ff ff ff ff ff ff 7f	movabsq	$0x7ffffffffffffff8, %rdx # imm = 0x7FFFFFFFFFFFFFF8
ffffffff80015968: 48 39 d0             	cmpq	%rdx, %rax
ffffffff8001596b: 77 6c                	ja	0xffffffff800159d9 <alloc::raw_vec::RawVec<T,A>::grow_one::h297af90850e82a42+0xb9>
ffffffff8001596d: 48 85 c9             	testq	%rcx, %rcx
ffffffff80015970: 75 04                	jne	0xffffffff80015976 <alloc::raw_vec::RawVec<T,A>::grow_one::h297af90850e82a42+0x56>
ffffffff80015972: 31 c9                	xorl	%ecx, %ecx
ffffffff80015974: eb 1b                	jmp	0xffffffff80015991 <alloc::raw_vec::RawVec<T,A>::grow_one::h297af90850e82a42+0x71>
ffffffff80015976: 49 8b 56 08          	movq	0x8(%r14), %rdx
ffffffff8001597a: 48 c1 e1 03          	shlq	$0x3, %rcx
ffffffff8001597e: 48 8d 0c 49          	leaq	(%rcx,%rcx,2), %rcx
ffffffff80015982: 48 89 54 24 18       	movq	%rdx, 0x18(%rsp)
ffffffff80015987: 48 89 4c 24 28       	movq	%rcx, 0x28(%rsp)
ffffffff8001598c: b9 08 00 00 00       	movl	$0x8, %ecx
ffffffff80015991: 48 89 4c 24 20       	movq	%rcx, 0x20(%rsp)
ffffffff80015996: 48 89 e7             	movq	%rsp, %rdi
ffffffff80015999: 48 8d 4c 24 18       	leaq	0x18(%rsp), %rcx
ffffffff8001599e: be 08 00 00 00       	movl	$0x8, %esi
ffffffff800159a3: 48 89 c2             	movq	%rax, %rdx
ffffffff800159a6: e8 05 ff ff ff       	callq	0xffffffff800158b0 <alloc::raw_vec::finish_grow::h231082e05a63bd8d.llvm.973663494490108792>
ffffffff800159ab: 83 3c 24 01          	cmpl	$0x1, (%rsp)
ffffffff800159af: 74 1e                	je	0xffffffff800159cf <alloc::raw_vec::RawVec<T,A>::grow_one::h297af90850e82a42+0xaf>
ffffffff800159b1: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff800159b6: 49 89 46 08          	movq	%rax, 0x8(%r14)
ffffffff800159ba: 4d 89 3e             	movq	%r15, (%r14)
ffffffff800159bd: 48 83 c4 30          	addq	$0x30, %rsp
ffffffff800159c1: 5b                   	popq	%rbx
ffffffff800159c2: 41 5e                	popq	%r14
ffffffff800159c4: 41 5f                	popq	%r15
ffffffff800159c6: c3                   	retq
ffffffff800159c7: 48 89 da             	movq	%rbx, %rdx
ffffffff800159ca: e8 78 31 00 00       	callq	0xffffffff80018b47 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff800159cf: 48 8b 7c 24 08       	movq	0x8(%rsp), %rdi
ffffffff800159d4: 48 8b 74 24 10       	movq	0x10(%rsp), %rsi
ffffffff800159d9: 48 89 da             	movq	%rbx, %rdx
ffffffff800159dc: e8 66 31 00 00       	callq	0xffffffff80018b47 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff800159e1: cc                   	int3
ffffffff800159e2: cc                   	int3
ffffffff800159e3: cc                   	int3
ffffffff800159e4: cc                   	int3
ffffffff800159e5: cc                   	int3
ffffffff800159e6: cc                   	int3
ffffffff800159e7: cc                   	int3
ffffffff800159e8: cc                   	int3
ffffffff800159e9: cc                   	int3
ffffffff800159ea: cc                   	int3
ffffffff800159eb: cc                   	int3
ffffffff800159ec: cc                   	int3
ffffffff800159ed: cc                   	int3
ffffffff800159ee: cc                   	int3
ffffffff800159ef: cc                   	int3

ffffffff800159f0 <alloc::raw_vec::RawVec<T,A>::grow_one::hfaf90d01a1f2efd7>:
ffffffff800159f0: 41 57                	pushq	%r15
ffffffff800159f2: 41 56                	pushq	%r14
ffffffff800159f4: 53                   	pushq	%rbx
ffffffff800159f5: 48 83 ec 30          	subq	$0x30, %rsp
ffffffff800159f9: 49 89 fe             	movq	%rdi, %r14
ffffffff800159fc: 48 8b 07             	movq	(%rdi), %rax
ffffffff800159ff: 48 8d 48 01          	leaq	0x1(%rax), %rcx
ffffffff80015a03: 48 8d 14 00          	leaq	(%rax,%rax), %rdx
ffffffff80015a07: 48 39 d1             	cmpq	%rdx, %rcx
ffffffff80015a0a: 48 0f 47 d1          	cmovaq	%rcx, %rdx
ffffffff80015a0e: 48 89 f3             	movq	%rsi, %rbx
ffffffff80015a11: 48 83 fa 05          	cmpq	$0x5, %rdx
ffffffff80015a15: 41 bf 04 00 00 00    	movl	$0x4, %r15d
ffffffff80015a1b: 4c 0f 43 fa          	cmovaeq	%rdx, %r15
ffffffff80015a1f: 31 ff                	xorl	%edi, %edi
ffffffff80015a21: 48 c1 ea 3c          	shrq	$0x3c, %rdx
ffffffff80015a25: 75 69                	jne	0xffffffff80015a90 <alloc::raw_vec::RawVec<T,A>::grow_one::hfaf90d01a1f2efd7+0xa0>
ffffffff80015a27: 4c 89 fa             	movq	%r15, %rdx
ffffffff80015a2a: 48 c1 e2 04          	shlq	$0x4, %rdx
ffffffff80015a2e: 48 b9 f8 ff ff ff ff ff ff 7f	movabsq	$0x7ffffffffffffff8, %rcx # imm = 0x7FFFFFFFFFFFFFF8
ffffffff80015a38: 48 39 ca             	cmpq	%rcx, %rdx
ffffffff80015a3b: 77 65                	ja	0xffffffff80015aa2 <alloc::raw_vec::RawVec<T,A>::grow_one::hfaf90d01a1f2efd7+0xb2>
ffffffff80015a3d: 48 85 c0             	testq	%rax, %rax
ffffffff80015a40: 75 04                	jne	0xffffffff80015a46 <alloc::raw_vec::RawVec<T,A>::grow_one::hfaf90d01a1f2efd7+0x56>
ffffffff80015a42: 31 c0                	xorl	%eax, %eax
ffffffff80015a44: eb 17                	jmp	0xffffffff80015a5d <alloc::raw_vec::RawVec<T,A>::grow_one::hfaf90d01a1f2efd7+0x6d>
ffffffff80015a46: 49 8b 4e 08          	movq	0x8(%r14), %rcx
ffffffff80015a4a: 48 c1 e0 04          	shlq	$0x4, %rax
ffffffff80015a4e: 48 89 4c 24 18       	movq	%rcx, 0x18(%rsp)
ffffffff80015a53: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff80015a58: b8 08 00 00 00       	movl	$0x8, %eax
ffffffff80015a5d: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff80015a62: 48 89 e7             	movq	%rsp, %rdi
ffffffff80015a65: 48 8d 4c 24 18       	leaq	0x18(%rsp), %rcx
ffffffff80015a6a: be 08 00 00 00       	movl	$0x8, %esi
ffffffff80015a6f: e8 3c fe ff ff       	callq	0xffffffff800158b0 <alloc::raw_vec::finish_grow::h231082e05a63bd8d.llvm.973663494490108792>
ffffffff80015a74: 83 3c 24 01          	cmpl	$0x1, (%rsp)
ffffffff80015a78: 74 1e                	je	0xffffffff80015a98 <alloc::raw_vec::RawVec<T,A>::grow_one::hfaf90d01a1f2efd7+0xa8>
ffffffff80015a7a: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff80015a7f: 49 89 46 08          	movq	%rax, 0x8(%r14)
ffffffff80015a83: 4d 89 3e             	movq	%r15, (%r14)
ffffffff80015a86: 48 83 c4 30          	addq	$0x30, %rsp
ffffffff80015a8a: 5b                   	popq	%rbx
ffffffff80015a8b: 41 5e                	popq	%r14
ffffffff80015a8d: 41 5f                	popq	%r15
ffffffff80015a8f: c3                   	retq
ffffffff80015a90: 48 89 da             	movq	%rbx, %rdx
ffffffff80015a93: e8 af 30 00 00       	callq	0xffffffff80018b47 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff80015a98: 48 8b 7c 24 08       	movq	0x8(%rsp), %rdi
ffffffff80015a9d: 48 8b 74 24 10       	movq	0x10(%rsp), %rsi
ffffffff80015aa2: 48 89 da             	movq	%rbx, %rdx
ffffffff80015aa5: e8 9d 30 00 00       	callq	0xffffffff80018b47 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff80015aaa: cc                   	int3
ffffffff80015aab: cc                   	int3
ffffffff80015aac: cc                   	int3
ffffffff80015aad: cc                   	int3
ffffffff80015aae: cc                   	int3
ffffffff80015aaf: cc                   	int3

ffffffff80015ab0 <alloc::raw_vec::RawVec<T,A>::grow_one::h64ad729a5300afbf>:
ffffffff80015ab0: 41 57                	pushq	%r15
ffffffff80015ab2: 41 56                	pushq	%r14
ffffffff80015ab4: 53                   	pushq	%rbx
ffffffff80015ab5: 48 83 ec 30          	subq	$0x30, %rsp
ffffffff80015ab9: 49 89 fe             	movq	%rdi, %r14
ffffffff80015abc: 48 8b 0f             	movq	(%rdi), %rcx
ffffffff80015abf: 48 8d 41 01          	leaq	0x1(%rcx), %rax
ffffffff80015ac3: 48 8d 14 09          	leaq	(%rcx,%rcx), %rdx
ffffffff80015ac7: 48 39 d0             	cmpq	%rdx, %rax
ffffffff80015aca: 48 0f 47 d0          	cmovaq	%rax, %rdx
ffffffff80015ace: 48 89 f3             	movq	%rsi, %rbx
ffffffff80015ad1: 48 83 fa 05          	cmpq	$0x5, %rdx
ffffffff80015ad5: 41 bf 04 00 00 00    	movl	$0x4, %r15d
ffffffff80015adb: 4c 0f 43 fa          	cmovaeq	%rdx, %r15
ffffffff80015adf: 31 ff                	xorl	%edi, %edi
ffffffff80015ae1: ba 48 00 00 00       	movl	$0x48, %edx
ffffffff80015ae6: 4c 89 f8             	movq	%r15, %rax
ffffffff80015ae9: 48 f7 e2             	mulq	%rdx
ffffffff80015aec: 70 69                	jo	0xffffffff80015b57 <alloc::raw_vec::RawVec<T,A>::grow_one::h64ad729a5300afbf+0xa7>
ffffffff80015aee: 48 ba f8 ff ff ff ff ff ff 7f	movabsq	$0x7ffffffffffffff8, %rdx # imm = 0x7FFFFFFFFFFFFFF8
ffffffff80015af8: 48 39 d0             	cmpq	%rdx, %rax
ffffffff80015afb: 77 6c                	ja	0xffffffff80015b69 <alloc::raw_vec::RawVec<T,A>::grow_one::h64ad729a5300afbf+0xb9>
ffffffff80015afd: 48 85 c9             	testq	%rcx, %rcx
ffffffff80015b00: 75 04                	jne	0xffffffff80015b06 <alloc::raw_vec::RawVec<T,A>::grow_one::h64ad729a5300afbf+0x56>
ffffffff80015b02: 31 c9                	xorl	%ecx, %ecx
ffffffff80015b04: eb 1b                	jmp	0xffffffff80015b21 <alloc::raw_vec::RawVec<T,A>::grow_one::h64ad729a5300afbf+0x71>
ffffffff80015b06: 49 8b 56 08          	movq	0x8(%r14), %rdx
ffffffff80015b0a: 48 c1 e1 03          	shlq	$0x3, %rcx
ffffffff80015b0e: 48 8d 0c c9          	leaq	(%rcx,%rcx,8), %rcx
ffffffff80015b12: 48 89 54 24 18       	movq	%rdx, 0x18(%rsp)
ffffffff80015b17: 48 89 4c 24 28       	movq	%rcx, 0x28(%rsp)
ffffffff80015b1c: b9 08 00 00 00       	movl	$0x8, %ecx
ffffffff80015b21: 48 89 4c 24 20       	movq	%rcx, 0x20(%rsp)
ffffffff80015b26: 48 89 e7             	movq	%rsp, %rdi
ffffffff80015b29: 48 8d 4c 24 18       	leaq	0x18(%rsp), %rcx
ffffffff80015b2e: be 08 00 00 00       	movl	$0x8, %esi
ffffffff80015b33: 48 89 c2             	movq	%rax, %rdx
ffffffff80015b36: e8 75 fd ff ff       	callq	0xffffffff800158b0 <alloc::raw_vec::finish_grow::h231082e05a63bd8d.llvm.973663494490108792>
ffffffff80015b3b: 83 3c 24 01          	cmpl	$0x1, (%rsp)
ffffffff80015b3f: 74 1e                	je	0xffffffff80015b5f <alloc::raw_vec::RawVec<T,A>::grow_one::h64ad729a5300afbf+0xaf>
ffffffff80015b41: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff80015b46: 49 89 46 08          	movq	%rax, 0x8(%r14)
ffffffff80015b4a: 4d 89 3e             	movq	%r15, (%r14)
ffffffff80015b4d: 48 83 c4 30          	addq	$0x30, %rsp
ffffffff80015b51: 5b                   	popq	%rbx
ffffffff80015b52: 41 5e                	popq	%r14
ffffffff80015b54: 41 5f                	popq	%r15
ffffffff80015b56: c3                   	retq
ffffffff80015b57: 48 89 da             	movq	%rbx, %rdx
ffffffff80015b5a: e8 e8 2f 00 00       	callq	0xffffffff80018b47 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff80015b5f: 48 8b 7c 24 08       	movq	0x8(%rsp), %rdi
ffffffff80015b64: 48 8b 74 24 10       	movq	0x10(%rsp), %rsi
ffffffff80015b69: 48 89 da             	movq	%rbx, %rdx
ffffffff80015b6c: e8 d6 2f 00 00       	callq	0xffffffff80018b47 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff80015b71: cc                   	int3
ffffffff80015b72: cc                   	int3
ffffffff80015b73: cc                   	int3
ffffffff80015b74: cc                   	int3
ffffffff80015b75: cc                   	int3
ffffffff80015b76: cc                   	int3
ffffffff80015b77: cc                   	int3
ffffffff80015b78: cc                   	int3
ffffffff80015b79: cc                   	int3
ffffffff80015b7a: cc                   	int3
ffffffff80015b7b: cc                   	int3
ffffffff80015b7c: cc                   	int3
ffffffff80015b7d: cc                   	int3
ffffffff80015b7e: cc                   	int3
ffffffff80015b7f: cc                   	int3

ffffffff80015b80 <alloc::raw_vec::RawVec<T,A>::grow_one::hc93cb997e3fb5660>:
ffffffff80015b80: 41 57                	pushq	%r15
ffffffff80015b82: 41 56                	pushq	%r14
ffffffff80015b84: 53                   	pushq	%rbx
ffffffff80015b85: 48 83 ec 30          	subq	$0x30, %rsp
ffffffff80015b89: 49 89 fe             	movq	%rdi, %r14
ffffffff80015b8c: 48 8b 0f             	movq	(%rdi), %rcx
ffffffff80015b8f: 48 8d 41 01          	leaq	0x1(%rcx), %rax
ffffffff80015b93: 48 8d 14 09          	leaq	(%rcx,%rcx), %rdx
ffffffff80015b97: 48 39 d0             	cmpq	%rdx, %rax
ffffffff80015b9a: 48 0f 47 d0          	cmovaq	%rax, %rdx
ffffffff80015b9e: 48 89 f3             	movq	%rsi, %rbx
ffffffff80015ba1: 48 83 fa 05          	cmpq	$0x5, %rdx
ffffffff80015ba5: 41 bf 04 00 00 00    	movl	$0x4, %r15d
ffffffff80015bab: 4c 0f 43 fa          	cmovaeq	%rdx, %r15
ffffffff80015baf: 31 ff                	xorl	%edi, %edi
ffffffff80015bb1: ba 38 00 00 00       	movl	$0x38, %edx
ffffffff80015bb6: 4c 89 f8             	movq	%r15, %rax
ffffffff80015bb9: 48 f7 e2             	mulq	%rdx
ffffffff80015bbc: 70 65                	jo	0xffffffff80015c23 <alloc::raw_vec::RawVec<T,A>::grow_one::hc93cb997e3fb5660+0xa3>
ffffffff80015bbe: 48 ba f8 ff ff ff ff ff ff 7f	movabsq	$0x7ffffffffffffff8, %rdx # imm = 0x7FFFFFFFFFFFFFF8
ffffffff80015bc8: 48 39 d0             	cmpq	%rdx, %rax
ffffffff80015bcb: 77 68                	ja	0xffffffff80015c35 <alloc::raw_vec::RawVec<T,A>::grow_one::hc93cb997e3fb5660+0xb5>
ffffffff80015bcd: 48 85 c9             	testq	%rcx, %rcx
ffffffff80015bd0: 75 04                	jne	0xffffffff80015bd6 <alloc::raw_vec::RawVec<T,A>::grow_one::hc93cb997e3fb5660+0x56>
ffffffff80015bd2: 31 c9                	xorl	%ecx, %ecx
ffffffff80015bd4: eb 17                	jmp	0xffffffff80015bed <alloc::raw_vec::RawVec<T,A>::grow_one::hc93cb997e3fb5660+0x6d>
ffffffff80015bd6: 49 8b 56 08          	movq	0x8(%r14), %rdx
ffffffff80015bda: 48 6b c9 38          	imulq	$0x38, %rcx, %rcx
ffffffff80015bde: 48 89 54 24 18       	movq	%rdx, 0x18(%rsp)
ffffffff80015be3: 48 89 4c 24 28       	movq	%rcx, 0x28(%rsp)
ffffffff80015be8: b9 08 00 00 00       	movl	$0x8, %ecx
ffffffff80015bed: 48 89 4c 24 20       	movq	%rcx, 0x20(%rsp)
ffffffff80015bf2: 48 89 e7             	movq	%rsp, %rdi
ffffffff80015bf5: 48 8d 4c 24 18       	leaq	0x18(%rsp), %rcx
ffffffff80015bfa: be 08 00 00 00       	movl	$0x8, %esi
ffffffff80015bff: 48 89 c2             	movq	%rax, %rdx
ffffffff80015c02: e8 a9 fc ff ff       	callq	0xffffffff800158b0 <alloc::raw_vec::finish_grow::h231082e05a63bd8d.llvm.973663494490108792>
ffffffff80015c07: 83 3c 24 01          	cmpl	$0x1, (%rsp)
ffffffff80015c0b: 74 1e                	je	0xffffffff80015c2b <alloc::raw_vec::RawVec<T,A>::grow_one::hc93cb997e3fb5660+0xab>
ffffffff80015c0d: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff80015c12: 49 89 46 08          	movq	%rax, 0x8(%r14)
ffffffff80015c16: 4d 89 3e             	movq	%r15, (%r14)
ffffffff80015c19: 48 83 c4 30          	addq	$0x30, %rsp
ffffffff80015c1d: 5b                   	popq	%rbx
ffffffff80015c1e: 41 5e                	popq	%r14
ffffffff80015c20: 41 5f                	popq	%r15
ffffffff80015c22: c3                   	retq
ffffffff80015c23: 48 89 da             	movq	%rbx, %rdx
ffffffff80015c26: e8 1c 2f 00 00       	callq	0xffffffff80018b47 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff80015c2b: 48 8b 7c 24 08       	movq	0x8(%rsp), %rdi
ffffffff80015c30: 48 8b 74 24 10       	movq	0x10(%rsp), %rsi
ffffffff80015c35: 48 89 da             	movq	%rbx, %rdx
ffffffff80015c38: e8 0a 2f 00 00       	callq	0xffffffff80018b47 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff80015c3d: cc                   	int3
ffffffff80015c3e: cc                   	int3
ffffffff80015c3f: cc                   	int3

ffffffff80015c40 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9>:
ffffffff80015c40: 55                   	pushq	%rbp
ffffffff80015c41: 41 57                	pushq	%r15
ffffffff80015c43: 41 56                	pushq	%r14
ffffffff80015c45: 41 55                	pushq	%r13
ffffffff80015c47: 41 54                	pushq	%r12
ffffffff80015c49: 53                   	pushq	%rbx
ffffffff80015c4a: 48 81 ec e8 00 00 00 	subq	$0xe8, %rsp
ffffffff80015c51: 4d 89 c6             	movq	%r8, %r14
ffffffff80015c54: 49 89 d7             	movq	%rdx, %r15
ffffffff80015c57: 48 89 74 24 28       	movq	%rsi, 0x28(%rsp)
ffffffff80015c5c: 48 89 4c 24 30       	movq	%rcx, 0x30(%rsp)
ffffffff80015c61: 45 85 c9             	testl	%r9d, %r9d
ffffffff80015c64: b8 38 00 00 00       	movl	$0x38, %eax
ffffffff80015c69: b9 20 00 00 00       	movl	$0x20, %ecx
ffffffff80015c6e: 48 0f 45 c8          	cmovneq	%rax, %rcx
ffffffff80015c72: 48 89 d0             	movq	%rdx, %rax
ffffffff80015c75: 48 c1 e8 20          	shrq	$0x20, %rax
ffffffff80015c79: 74 2d                	je	0xffffffff80015ca8 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0x68>
ffffffff80015c7b: 4c 89 f8             	movq	%r15, %rax
ffffffff80015c7e: 31 d2                	xorl	%edx, %edx
ffffffff80015c80: 48 f7 f1             	divq	%rcx
ffffffff80015c83: 4c 39 f0             	cmpq	%r14, %rax
ffffffff80015c86: 73 2c                	jae	0xffffffff80015cb4 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0x74>
ffffffff80015c88: 48 c7 07 06 00 00 00 	movq	$0x6, (%rdi)
ffffffff80015c8f: 48 c7 47 08 a0 2a 02 80      	movq	$-0x7ffdd560, 0x8(%rdi) # imm = 0x80022AA0
ffffffff80015c97: 48 c7 47 10 0f 00 00 00      	movq	$0xf, 0x10(%rdi)
ffffffff80015c9f: 4c 89 77 18          	movq	%r14, 0x18(%rdi)
ffffffff80015ca3: e9 3a 02 00 00       	jmp	0xffffffff80015ee2 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0x2a2>
ffffffff80015ca8: 44 89 f8             	movl	%r15d, %eax
ffffffff80015cab: 31 d2                	xorl	%edx, %edx
ffffffff80015cad: f7 f1                	divl	%ecx
ffffffff80015caf: 4c 39 f0             	cmpq	%r14, %rax
ffffffff80015cb2: 72 d4                	jb	0xffffffff80015c88 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0x48>
ffffffff80015cb4: 48 89 7c 24 20       	movq	%rdi, 0x20(%rsp)
ffffffff80015cb9: 45 31 ed             	xorl	%r13d, %r13d
ffffffff80015cbc: b9 38 00 00 00       	movl	$0x38, %ecx
ffffffff80015cc1: 4c 89 f0             	movq	%r14, %rax
ffffffff80015cc4: 48 f7 e1             	mulq	%rcx
ffffffff80015cc7: 48 89 c3             	movq	%rax, %rbx
ffffffff80015cca: 0f 80 27 02 00 00    	jo	0xffffffff80015ef7 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0x2b7>
ffffffff80015cd0: 48 b8 f8 ff ff ff ff ff ff 7f	movabsq	$0x7ffffffffffffff8, %rax # imm = 0x7FFFFFFFFFFFFFF8
ffffffff80015cda: 48 39 c3             	cmpq	%rax, %rbx
ffffffff80015cdd: 0f 87 14 02 00 00    	ja	0xffffffff80015ef7 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0x2b7>
ffffffff80015ce3: 48 85 db             	testq	%rbx, %rbx
ffffffff80015ce6: 74 2e                	je	0xffffffff80015d16 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0xd6>
ffffffff80015ce8: 0f b6 05 f2 f4 00 00 	movzbl	0xf4f2(%rip), %eax      # 0xffffffff800251e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80015cef: 41 bd 08 00 00 00    	movl	$0x8, %r13d
ffffffff80015cf5: be 08 00 00 00       	movl	$0x8, %esi
ffffffff80015cfa: 48 89 df             	movq	%rbx, %rdi
ffffffff80015cfd: 44 89 cd             	movl	%r9d, %ebp
ffffffff80015d00: e8 eb 8f ff ff       	callq	0xffffffff8000ecf0 <__rust_alloc>
ffffffff80015d05: 48 85 c0             	testq	%rax, %rax
ffffffff80015d08: 0f 84 e9 01 00 00    	je	0xffffffff80015ef7 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0x2b7>
ffffffff80015d0e: 41 89 e9             	movl	%ebp, %r9d
ffffffff80015d11: 4c 89 f1             	movq	%r14, %rcx
ffffffff80015d14: eb 07                	jmp	0xffffffff80015d1d <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0xdd>
ffffffff80015d16: b8 08 00 00 00       	movl	$0x8, %eax
ffffffff80015d1b: 31 c9                	xorl	%ecx, %ecx
ffffffff80015d1d: 48 89 4c 24 08       	movq	%rcx, 0x8(%rsp)
ffffffff80015d22: 48 89 44 24 10       	movq	%rax, 0x10(%rsp)
ffffffff80015d27: 48 c7 44 24 18 00 00 00 00   	movq	$0x0, 0x18(%rsp)
ffffffff80015d30: 4d 85 f6             	testq	%r14, %r14
ffffffff80015d33: 0f 84 20 01 00 00    	je	0xffffffff80015e59 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0x219>
ffffffff80015d39: 48 8d 9c 24 b0 00 00 00      	leaq	0xb0(%rsp), %rbx
ffffffff80015d41: 41 0f b6 e9          	movzbl	%r9b, %ebp
ffffffff80015d45: 44 0f b6 ac 24 20 01 00 00   	movzbl	0x120(%rsp), %r13d
ffffffff80015d4e: eb 5f                	jmp	0xffffffff80015daf <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0x16f>
ffffffff80015d50: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff80015d55: 49 6b cc 38          	imulq	$0x38, %r12, %rcx
ffffffff80015d59: 48 8b 54 24 68       	movq	0x68(%rsp), %rdx
ffffffff80015d5e: 48 89 54 08 30       	movq	%rdx, 0x30(%rax,%rcx)
ffffffff80015d63: 48 8b 54 24 60       	movq	0x60(%rsp), %rdx
ffffffff80015d68: 48 89 54 08 28       	movq	%rdx, 0x28(%rax,%rcx)
ffffffff80015d6d: 48 8b 54 24 58       	movq	0x58(%rsp), %rdx
ffffffff80015d72: 48 89 54 08 20       	movq	%rdx, 0x20(%rax,%rcx)
ffffffff80015d77: 48 8b 54 24 50       	movq	0x50(%rsp), %rdx
ffffffff80015d7c: 48 89 54 08 18       	movq	%rdx, 0x18(%rax,%rcx)
ffffffff80015d81: 48 8b 54 24 48       	movq	0x48(%rsp), %rdx
ffffffff80015d86: 48 89 54 08 10       	movq	%rdx, 0x10(%rax,%rcx)
ffffffff80015d8b: 48 8b 54 24 38       	movq	0x38(%rsp), %rdx
ffffffff80015d90: 48 8b 74 24 40       	movq	0x40(%rsp), %rsi
ffffffff80015d95: 48 89 74 08 08       	movq	%rsi, 0x8(%rax,%rcx)
ffffffff80015d9a: 48 89 14 08          	movq	%rdx, (%rax,%rcx)
ffffffff80015d9e: 49 ff c4             	incq	%r12
ffffffff80015da1: 4c 89 64 24 18       	movq	%r12, 0x18(%rsp)
ffffffff80015da6: 49 ff ce             	decq	%r14
ffffffff80015da9: 0f 84 aa 00 00 00    	je	0xffffffff80015e59 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0x219>
ffffffff80015daf: 48 8d bc 24 a8 00 00 00      	leaq	0xa8(%rsp), %rdi
ffffffff80015db7: 48 8b 74 24 28       	movq	0x28(%rsp), %rsi
ffffffff80015dbc: 4c 89 fa             	movq	%r15, %rdx
ffffffff80015dbf: 48 8d 4c 24 30       	leaq	0x30(%rsp), %rcx
ffffffff80015dc4: 41 89 e8             	movl	%ebp, %r8d
ffffffff80015dc7: 45 89 e9             	movl	%r13d, %r9d
ffffffff80015dca: e8 41 ed ff ff       	callq	0xffffffff80014b10 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb2be167197ddec56E>
ffffffff80015dcf: f6 84 24 a8 00 00 00 01      	testb	$0x1, 0xa8(%rsp)
ffffffff80015dd7: 0f 85 a5 00 00 00    	jne	0xffffffff80015e82 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0x242>
ffffffff80015ddd: 48 8b 43 30          	movq	0x30(%rbx), %rax
ffffffff80015de1: 48 89 84 24 a0 00 00 00      	movq	%rax, 0xa0(%rsp)
ffffffff80015de9: 48 8b 4b 28          	movq	0x28(%rbx), %rcx
ffffffff80015ded: 48 89 8c 24 98 00 00 00      	movq	%rcx, 0x98(%rsp)
ffffffff80015df5: 48 8b 53 20          	movq	0x20(%rbx), %rdx
ffffffff80015df9: 48 89 94 24 90 00 00 00      	movq	%rdx, 0x90(%rsp)
ffffffff80015e01: 48 8b 73 18          	movq	0x18(%rbx), %rsi
ffffffff80015e05: 48 8b 7b 10          	movq	0x10(%rbx), %rdi
ffffffff80015e09: 4c 8b 03             	movq	(%rbx), %r8
ffffffff80015e0c: 4c 8b 4b 08          	movq	0x8(%rbx), %r9
ffffffff80015e10: 4c 89 44 24 38       	movq	%r8, 0x38(%rsp)
ffffffff80015e15: 4c 89 4c 24 40       	movq	%r9, 0x40(%rsp)
ffffffff80015e1a: 48 89 7c 24 48       	movq	%rdi, 0x48(%rsp)
ffffffff80015e1f: 48 89 74 24 50       	movq	%rsi, 0x50(%rsp)
ffffffff80015e24: 48 89 54 24 58       	movq	%rdx, 0x58(%rsp)
ffffffff80015e29: 48 89 4c 24 60       	movq	%rcx, 0x60(%rsp)
ffffffff80015e2e: 48 89 44 24 68       	movq	%rax, 0x68(%rsp)
ffffffff80015e33: 4c 8b 64 24 18       	movq	0x18(%rsp), %r12
ffffffff80015e38: 4c 3b 64 24 08       	cmpq	0x8(%rsp), %r12
ffffffff80015e3d: 0f 85 0d ff ff ff    	jne	0xffffffff80015d50 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0x110>
ffffffff80015e43: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff80015e48: 48 c7 c6 88 2a 02 80 	movq	$-0x7ffdd578, %rsi      # imm = 0x80022A88
ffffffff80015e4f: e8 2c fd ff ff       	callq	0xffffffff80015b80 <alloc::raw_vec::RawVec<T,A>::grow_one::hc93cb997e3fb5660>
ffffffff80015e54: e9 f7 fe ff ff       	jmp	0xffffffff80015d50 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0x110>
ffffffff80015e59: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff80015e5e: 48 8b 7c 24 20       	movq	0x20(%rsp), %rdi
ffffffff80015e63: 48 89 47 18          	movq	%rax, 0x18(%rdi)
ffffffff80015e67: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff80015e6c: 48 8b 4c 24 10       	movq	0x10(%rsp), %rcx
ffffffff80015e71: 48 89 4f 10          	movq	%rcx, 0x10(%rdi)
ffffffff80015e75: 48 89 47 08          	movq	%rax, 0x8(%rdi)
ffffffff80015e79: 48 c7 07 07 00 00 00 	movq	$0x7, (%rdi)
ffffffff80015e80: eb 60                	jmp	0xffffffff80015ee2 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0x2a2>
ffffffff80015e82: 48 8b 43 18          	movq	0x18(%rbx), %rax
ffffffff80015e86: 48 89 84 24 88 00 00 00      	movq	%rax, 0x88(%rsp)
ffffffff80015e8e: 48 8b 4b 10          	movq	0x10(%rbx), %rcx
ffffffff80015e92: 48 89 8c 24 80 00 00 00      	movq	%rcx, 0x80(%rsp)
ffffffff80015e9a: 48 8b 13             	movq	(%rbx), %rdx
ffffffff80015e9d: 48 8b 73 08          	movq	0x8(%rbx), %rsi
ffffffff80015ea1: 48 89 74 24 78       	movq	%rsi, 0x78(%rsp)
ffffffff80015ea6: 48 89 54 24 70       	movq	%rdx, 0x70(%rsp)
ffffffff80015eab: 48 8b 7c 24 20       	movq	0x20(%rsp), %rdi
ffffffff80015eb0: 48 89 47 18          	movq	%rax, 0x18(%rdi)
ffffffff80015eb4: 48 89 4f 10          	movq	%rcx, 0x10(%rdi)
ffffffff80015eb8: 48 89 77 08          	movq	%rsi, 0x8(%rdi)
ffffffff80015ebc: 48 89 17             	movq	%rdx, (%rdi)
ffffffff80015ebf: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff80015ec4: 48 85 c0             	testq	%rax, %rax
ffffffff80015ec7: 74 19                	je	0xffffffff80015ee2 <goblin::elf::program_header::ProgramHeader::parse::h2c80b510779e39a9+0x2a2>
ffffffff80015ec9: 48 89 fb             	movq	%rdi, %rbx
ffffffff80015ecc: 48 8b 7c 24 10       	movq	0x10(%rsp), %rdi
ffffffff80015ed1: 48 6b f0 38          	imulq	$0x38, %rax, %rsi
ffffffff80015ed5: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff80015eda: e8 61 8e ff ff       	callq	0xffffffff8000ed40 <__rust_dealloc>
ffffffff80015edf: 48 89 df             	movq	%rbx, %rdi
ffffffff80015ee2: 48 89 f8             	movq	%rdi, %rax
ffffffff80015ee5: 48 81 c4 e8 00 00 00 	addq	$0xe8, %rsp
ffffffff80015eec: 5b                   	popq	%rbx
ffffffff80015eed: 41 5c                	popq	%r12
ffffffff80015eef: 41 5d                	popq	%r13
ffffffff80015ef1: 41 5e                	popq	%r14
ffffffff80015ef3: 41 5f                	popq	%r15
ffffffff80015ef5: 5d                   	popq	%rbp
ffffffff80015ef6: c3                   	retq
ffffffff80015ef7: 4c 89 ef             	movq	%r13, %rdi
ffffffff80015efa: 48 89 de             	movq	%rbx, %rsi
ffffffff80015efd: 48 c7 c2 70 2a 02 80 	movq	$-0x7ffdd590, %rdx      # imm = 0x80022A70
ffffffff80015f04: e8 3e 2c 00 00       	callq	0xffffffff80018b47 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff80015f09: cc                   	int3
ffffffff80015f0a: cc                   	int3
ffffffff80015f0b: cc                   	int3
ffffffff80015f0c: cc                   	int3
ffffffff80015f0d: cc                   	int3
ffffffff80015f0e: cc                   	int3
ffffffff80015f0f: cc                   	int3

ffffffff80015f10 <<goblin::elf::program_header::ProgramHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::hd014d8a784628be3>:
ffffffff80015f10: 53                   	pushq	%rbx
ffffffff80015f11: 48 83 ec 50          	subq	$0x50, %rsp
ffffffff80015f15: 48 89 fb             	movq	%rdi, %rbx
ffffffff80015f18: 85 c9                	testl	%ecx, %ecx
ffffffff80015f1a: 74 42                	je	0xffffffff80015f5e <<goblin::elf::program_header::ProgramHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::hd014d8a784628be3+0x4e>
ffffffff80015f1c: 48 c7 44 24 08 00 00 00 00   	movq	$0x0, 0x8(%rsp)
ffffffff80015f25: 45 0f b6 c0          	movzbl	%r8b, %r8d
ffffffff80015f29: 48 8d 7c 24 10       	leaq	0x10(%rsp), %rdi
ffffffff80015f2e: 48 8d 4c 24 08       	leaq	0x8(%rsp), %rcx
ffffffff80015f33: e8 58 e8 ff ff       	callq	0xffffffff80014790 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17h4a1fc74b548acd26E>
ffffffff80015f38: 8b 44 24 18          	movl	0x18(%rsp), %eax
ffffffff80015f3c: 8b 7c 24 1c          	movl	0x1c(%rsp), %edi
ffffffff80015f40: 48 8b 4c 24 20       	movq	0x20(%rsp), %rcx
ffffffff80015f45: 48 8b 54 24 28       	movq	0x28(%rsp), %rdx
ffffffff80015f4a: 48 8b 74 24 30       	movq	0x30(%rsp), %rsi
ffffffff80015f4f: f6 44 24 10 01       	testb	$0x1, 0x10(%rsp)
ffffffff80015f54: 74 56                	je	0xffffffff80015fac <<goblin::elf::program_header::ProgramHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::hd014d8a784628be3+0x9c>
ffffffff80015f56: 89 43 08             	movl	%eax, 0x8(%rbx)
ffffffff80015f59: 89 7b 0c             	movl	%edi, 0xc(%rbx)
ffffffff80015f5c: eb 3b                	jmp	0xffffffff80015f99 <<goblin::elf::program_header::ProgramHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::hd014d8a784628be3+0x89>
ffffffff80015f5e: 48 c7 44 24 08 00 00 00 00   	movq	$0x0, 0x8(%rsp)
ffffffff80015f67: 45 0f b6 c0          	movzbl	%r8b, %r8d
ffffffff80015f6b: 48 8d 7c 24 10       	leaq	0x10(%rsp), %rdi
ffffffff80015f70: 48 8d 4c 24 08       	leaq	0x8(%rsp), %rcx
ffffffff80015f75: e8 56 ee ff ff       	callq	0xffffffff80014dd0 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hce7104440ecdb80eE>
ffffffff80015f7a: f6 44 24 10 01       	testb	$0x1, 0x10(%rsp)
ffffffff80015f7f: 74 42                	je	0xffffffff80015fc3 <<goblin::elf::program_header::ProgramHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::hd014d8a784628be3+0xb3>
ffffffff80015f81: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff80015f86: 48 8b 4c 24 20       	movq	0x20(%rsp), %rcx
ffffffff80015f8b: 48 8b 54 24 28       	movq	0x28(%rsp), %rdx
ffffffff80015f90: 48 8b 74 24 30       	movq	0x30(%rsp), %rsi
ffffffff80015f95: 48 89 43 08          	movq	%rax, 0x8(%rbx)
ffffffff80015f99: 48 89 4b 10          	movq	%rcx, 0x10(%rbx)
ffffffff80015f9d: 48 89 53 18          	movq	%rdx, 0x18(%rbx)
ffffffff80015fa1: 48 89 73 20          	movq	%rsi, 0x20(%rbx)
ffffffff80015fa5: b8 01 00 00 00       	movl	$0x1, %eax
ffffffff80015faa: eb 64                	jmp	0xffffffff80016010 <<goblin::elf::program_header::ProgramHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::hd014d8a784628be3+0x100>
ffffffff80015fac: 4c 8b 44 24 38       	movq	0x38(%rsp), %r8
ffffffff80015fb1: 4c 8b 4c 24 40       	movq	0x40(%rsp), %r9
ffffffff80015fb6: 4c 8b 54 24 48       	movq	0x48(%rsp), %r10
ffffffff80015fbb: 41 bb 38 00 00 00    	movl	$0x38, %r11d
ffffffff80015fc1: eb 29                	jmp	0xffffffff80015fec <<goblin::elf::program_header::ProgramHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::hd014d8a784628be3+0xdc>
ffffffff80015fc3: 8b 44 24 14          	movl	0x14(%rsp), %eax
ffffffff80015fc7: 8b 4c 24 18          	movl	0x18(%rsp), %ecx
ffffffff80015fcb: 8b 54 24 1c          	movl	0x1c(%rsp), %edx
ffffffff80015fcf: 8b 74 24 20          	movl	0x20(%rsp), %esi
ffffffff80015fd3: 44 8b 44 24 24       	movl	0x24(%rsp), %r8d
ffffffff80015fd8: 44 8b 4c 24 28       	movl	0x28(%rsp), %r9d
ffffffff80015fdd: 8b 7c 24 2c          	movl	0x2c(%rsp), %edi
ffffffff80015fe1: 44 8b 54 24 30       	movl	0x30(%rsp), %r10d
ffffffff80015fe6: 41 bb 20 00 00 00    	movl	$0x20, %r11d
ffffffff80015fec: 48 89 4b 08          	movq	%rcx, 0x8(%rbx)
ffffffff80015ff0: 48 89 53 10          	movq	%rdx, 0x10(%rbx)
ffffffff80015ff4: 48 89 73 18          	movq	%rsi, 0x18(%rbx)
ffffffff80015ff8: 4c 89 43 20          	movq	%r8, 0x20(%rbx)
ffffffff80015ffc: 4c 89 4b 28          	movq	%r9, 0x28(%rbx)
ffffffff80016000: 4c 89 53 30          	movq	%r10, 0x30(%rbx)
ffffffff80016004: 89 43 38             	movl	%eax, 0x38(%rbx)
ffffffff80016007: 89 7b 3c             	movl	%edi, 0x3c(%rbx)
ffffffff8001600a: 4c 89 5b 40          	movq	%r11, 0x40(%rbx)
ffffffff8001600e: 31 c0                	xorl	%eax, %eax
ffffffff80016010: 48 89 03             	movq	%rax, (%rbx)
ffffffff80016013: 48 89 d8             	movq	%rbx, %rax
ffffffff80016016: 48 83 c4 50          	addq	$0x50, %rsp
ffffffff8001601a: 5b                   	popq	%rbx
ffffffff8001601b: c3                   	retq
ffffffff8001601c: cc                   	int3
ffffffff8001601d: cc                   	int3
ffffffff8001601e: cc                   	int3
ffffffff8001601f: cc                   	int3

ffffffff80016020 <goblin::elf::sym::Symtab::parse::h4eac2ba9bb25dec5>:
ffffffff80016020: 53                   	pushq	%rbx
ffffffff80016021: 48 83 ec 30          	subq	$0x30, %rsp
ffffffff80016025: 4d 89 c2             	movq	%r8, %r10
ffffffff80016028: 49 89 d0             	movq	%rdx, %r8
ffffffff8001602b: 48 89 fb             	movq	%rdi, %rbx
ffffffff8001602e: 48 89 0c 24          	movq	%rcx, (%rsp)
ffffffff80016032: 4c 89 54 24 08       	movq	%r10, 0x8(%rsp)
ffffffff80016037: 44 89 c8             	movl	%r9d, %eax
ffffffff8001603a: 48 8d 14 c5 10 00 00 00      	leaq	0x10(,%rax,8), %rdx
ffffffff80016042: 4c 89 d0             	movq	%r10, %rax
ffffffff80016045: 48 f7 e2             	mulq	%rdx
ffffffff80016048: 70 63                	jo	0xffffffff800160ad <goblin::elf::sym::Symtab::parse::h4eac2ba9bb25dec5+0x8d>
ffffffff8001604a: 49 29 c8             	subq	%rcx, %r8
ffffffff8001604d: 73 07                	jae	0xffffffff80016056 <goblin::elf::sym::Symtab::parse::h4eac2ba9bb25dec5+0x36>
ffffffff8001604f: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff80016054: eb 0a                	jmp	0xffffffff80016060 <goblin::elf::sym::Symtab::parse::h4eac2ba9bb25dec5+0x40>
ffffffff80016056: 49 39 c0             	cmpq	%rax, %r8
ffffffff80016059: 73 21                	jae	0xffffffff8001607c <goblin::elf::sym::Symtab::parse::h4eac2ba9bb25dec5+0x5c>
ffffffff8001605b: 31 d2                	xorl	%edx, %edx
ffffffff8001605d: 48 89 c1             	movq	%rax, %rcx
ffffffff80016060: 48 89 13             	movq	%rdx, (%rbx)
ffffffff80016063: 48 89 4b 08          	movq	%rcx, 0x8(%rbx)
ffffffff80016067: 4c 89 43 10          	movq	%r8, 0x10(%rbx)
ffffffff8001606b: 48 89 43 18          	movq	%rax, 0x18(%rbx)
ffffffff8001606f: c6 43 28 02          	movb	$0x2, 0x28(%rbx)
ffffffff80016073: 48 89 d8             	movq	%rbx, %rax
ffffffff80016076: 48 83 c4 30          	addq	$0x30, %rsp
ffffffff8001607a: 5b                   	popq	%rbx
ffffffff8001607b: c3                   	retq
ffffffff8001607c: 0f b6 54 24 40       	movzbl	0x40(%rsp), %edx
ffffffff80016081: 48 01 ce             	addq	%rcx, %rsi
ffffffff80016084: 48 89 c7             	movq	%rax, %rdi
ffffffff80016087: 48 01 cf             	addq	%rcx, %rdi
ffffffff8001608a: 48 89 33             	movq	%rsi, (%rbx)
ffffffff8001608d: 48 89 43 08          	movq	%rax, 0x8(%rbx)
ffffffff80016091: 4c 89 53 10          	movq	%r10, 0x10(%rbx)
ffffffff80016095: 48 89 4b 18          	movq	%rcx, 0x18(%rbx)
ffffffff80016099: 48 89 7b 20          	movq	%rdi, 0x20(%rbx)
ffffffff8001609d: 44 88 4b 28          	movb	%r9b, 0x28(%rbx)
ffffffff800160a1: 88 53 29             	movb	%dl, 0x29(%rbx)
ffffffff800160a4: 48 89 d8             	movq	%rbx, %rax
ffffffff800160a7: 48 83 c4 30          	addq	$0x30, %rsp
ffffffff800160ab: 5b                   	popq	%rbx
ffffffff800160ac: c3                   	retq
ffffffff800160ad: 48 8d 7c 24 10       	leaq	0x10(%rsp), %rdi
ffffffff800160b2: 48 89 e6             	movq	%rsp, %rsi
ffffffff800160b5: 48 8d 54 24 08       	leaq	0x8(%rsp), %rdx
ffffffff800160ba: e8 31 00 00 00       	callq	0xffffffff800160f0 <goblin::elf::sym::Symtab::parse::{{closure}}::hd40e473544717bc7.llvm.3953138781796771524>
ffffffff800160bf: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff800160c4: 48 8b 4c 24 18       	movq	0x18(%rsp), %rcx
ffffffff800160c9: 48 8b 54 24 28       	movq	0x28(%rsp), %rdx
ffffffff800160ce: 48 89 53 18          	movq	%rdx, 0x18(%rbx)
ffffffff800160d2: 48 8b 54 24 20       	movq	0x20(%rsp), %rdx
ffffffff800160d7: 48 89 53 10          	movq	%rdx, 0x10(%rbx)
ffffffff800160db: 48 89 03             	movq	%rax, (%rbx)
ffffffff800160de: 48 89 4b 08          	movq	%rcx, 0x8(%rbx)
ffffffff800160e2: eb 8b                	jmp	0xffffffff8001606f <goblin::elf::sym::Symtab::parse::h4eac2ba9bb25dec5+0x4f>
ffffffff800160e4: cc                   	int3
ffffffff800160e5: cc                   	int3
ffffffff800160e6: cc                   	int3
ffffffff800160e7: cc                   	int3
ffffffff800160e8: cc                   	int3
ffffffff800160e9: cc                   	int3
ffffffff800160ea: cc                   	int3
ffffffff800160eb: cc                   	int3
ffffffff800160ec: cc                   	int3
ffffffff800160ed: cc                   	int3
ffffffff800160ee: cc                   	int3
ffffffff800160ef: cc                   	int3

ffffffff800160f0 <goblin::elf::sym::Symtab::parse::{{closure}}::hd40e473544717bc7.llvm.3953138781796771524>:
ffffffff800160f0: 53                   	pushq	%rbx
ffffffff800160f1: 48 81 ec c0 00 00 00 	subq	$0xc0, %rsp
ffffffff800160f8: 48 89 fb             	movq	%rdi, %rbx
ffffffff800160fb: 48 89 34 24          	movq	%rsi, (%rsp)
ffffffff800160ff: 48 c7 44 24 08 20 93 01 80   	movq	$-0x7ffe6ce0, 0x8(%rsp) # imm = 0x80019320
ffffffff80016108: 48 89 54 24 10       	movq	%rdx, 0x10(%rsp)
ffffffff8001610d: 48 c7 44 24 18 c0 b8 01 80   	movq	$-0x7ffe4740, 0x18(%rsp) # imm = 0x8001B8C0
ffffffff80016116: 48 c7 44 24 50 02 00 00 00   	movq	$0x2, 0x50(%rsp)
ffffffff8001611f: 48 c7 44 24 60 02 00 00 00   	movq	$0x2, 0x60(%rsp)
ffffffff80016128: 48 c7 44 24 70 00 00 00 00   	movq	$0x0, 0x70(%rsp)
ffffffff80016131: 48 b8 20 00 00 00 04 00 00 00	movabsq	$0x400000020, %rax # imm = 0x400000020
ffffffff8001613b: 48 89 44 24 78       	movq	%rax, 0x78(%rsp)
ffffffff80016140: c6 84 24 80 00 00 00 03      	movb	$0x3, 0x80(%rsp)
ffffffff80016148: 48 c7 84 24 88 00 00 00 02 00 00 00  	movq	$0x2, 0x88(%rsp)
ffffffff80016154: 48 c7 84 24 98 00 00 00 02 00 00 00  	movq	$0x2, 0x98(%rsp)
ffffffff80016160: 48 c7 84 24 a8 00 00 00 01 00 00 00  	movq	$0x1, 0xa8(%rsp)
ffffffff8001616c: 48 c7 84 24 b0 00 00 00 20 00 00 00  	movq	$0x20, 0xb0(%rsp)
ffffffff80016178: c6 84 24 b8 00 00 00 03      	movb	$0x3, 0xb8(%rsp)
ffffffff80016180: 48 c7 44 24 20 d0 2a 02 80   	movq	$-0x7ffdd530, 0x20(%rsp) # imm = 0x80022AD0
ffffffff80016189: 48 c7 44 24 28 03 00 00 00   	movq	$0x3, 0x28(%rsp)
ffffffff80016192: 48 8d 44 24 50       	leaq	0x50(%rsp), %rax
ffffffff80016197: 48 89 44 24 40       	movq	%rax, 0x40(%rsp)
ffffffff8001619c: 48 c7 44 24 48 02 00 00 00   	movq	$0x2, 0x48(%rsp)
ffffffff800161a5: 48 89 e0             	movq	%rsp, %rax
ffffffff800161a8: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff800161ad: 48 c7 44 24 38 02 00 00 00   	movq	$0x2, 0x38(%rsp)
ffffffff800161b6: 48 83 c7 08          	addq	$0x8, %rdi
ffffffff800161ba: 48 8d 74 24 20       	leaq	0x20(%rsp), %rsi
ffffffff800161bf: e8 9c 29 00 00       	callq	0xffffffff80018b60 <alloc::fmt::format::format_inner::ha57507f8e4bcde35>
ffffffff800161c4: 48 c7 03 03 00 00 00 	movq	$0x3, (%rbx)
ffffffff800161cb: 48 81 c4 c0 00 00 00 	addq	$0xc0, %rsp
ffffffff800161d2: 5b                   	popq	%rbx
ffffffff800161d3: c3                   	retq
ffffffff800161d4: cc                   	int3
ffffffff800161d5: cc                   	int3
ffffffff800161d6: cc                   	int3
ffffffff800161d7: cc                   	int3
ffffffff800161d8: cc                   	int3
ffffffff800161d9: cc                   	int3
ffffffff800161da: cc                   	int3
ffffffff800161db: cc                   	int3
ffffffff800161dc: cc                   	int3
ffffffff800161dd: cc                   	int3
ffffffff800161de: cc                   	int3
ffffffff800161df: cc                   	int3

ffffffff800161e0 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98>:
ffffffff800161e0: 55                   	pushq	%rbp
ffffffff800161e1: 41 57                	pushq	%r15
ffffffff800161e3: 41 56                	pushq	%r14
ffffffff800161e5: 41 55                	pushq	%r13
ffffffff800161e7: 41 54                	pushq	%r12
ffffffff800161e9: 53                   	pushq	%rbx
ffffffff800161ea: 48 81 ec 78 01 00 00 	subq	$0x178, %rsp            # imm = 0x178
ffffffff800161f1: 49 89 ce             	movq	%rcx, %r14
ffffffff800161f4: 48 89 d0             	movq	%rdx, %rax
ffffffff800161f7: 48 89 fb             	movq	%rdi, %rbx
ffffffff800161fa: 41 bd 01 00 00 00    	movl	$0x1, %r13d
ffffffff80016200: 48 29 ca             	subq	%rcx, %rdx
ffffffff80016203: 73 05                	jae	0xffffffff8001620a <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x2a>
ffffffff80016205: 4d 89 f4             	movq	%r14, %r12
ffffffff80016208: eb 6f                	jmp	0xffffffff80016279 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x99>
ffffffff8001620a: 44 89 cd             	movl	%r9d, %ebp
ffffffff8001620d: 4d 89 c7             	movq	%r8, %r15
ffffffff80016210: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff80016215: 48 89 b4 24 b0 00 00 00      	movq	%rsi, 0xb0(%rsp)
ffffffff8001621d: 4c 01 f6             	addq	%r14, %rsi
ffffffff80016220: 40 0f b6 cd          	movzbl	%bpl, %ecx
ffffffff80016224: 44 0f b6 84 24 b0 01 00 00   	movzbl	0x1b0(%rsp), %r8d
ffffffff8001622d: 48 8d bc 24 20 01 00 00      	leaq	0x120(%rsp), %rdi
ffffffff80016235: 89 4c 24 2c          	movl	%ecx, 0x2c(%rsp)
ffffffff80016239: 44 89 44 24 28       	movl	%r8d, 0x28(%rsp)
ffffffff8001623e: e8 3d 06 00 00       	callq	0xffffffff80016880 <<goblin::elf::section_header::SectionHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::h6d65db649b0ab161>
ffffffff80016243: 8b 84 24 20 01 00 00 	movl	0x120(%rsp), %eax
ffffffff8001624a: 4c 8b ac 24 28 01 00 00      	movq	0x128(%rsp), %r13
ffffffff80016252: 4c 8b a4 24 30 01 00 00      	movq	0x130(%rsp), %r12
ffffffff8001625a: 48 8b 8c 24 38 01 00 00      	movq	0x138(%rsp), %rcx
ffffffff80016262: 48 89 4c 24 68       	movq	%rcx, 0x68(%rsp)
ffffffff80016267: 48 8b 8c 24 40 01 00 00      	movq	0x140(%rsp), %rcx
ffffffff8001626f: 48 89 4c 24 70       	movq	%rcx, 0x70(%rsp)
ffffffff80016274: 83 f8 01             	cmpl	$0x1, %eax
ffffffff80016277: 75 42                	jne	0xffffffff800162bb <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0xdb>
ffffffff80016279: 48 8b 44 24 68       	movq	0x68(%rsp), %rax
ffffffff8001627e: 48 8b 4c 24 70       	movq	0x70(%rsp), %rcx
ffffffff80016283: 48 89 4c 24 38       	movq	%rcx, 0x38(%rsp)
ffffffff80016288: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff8001628d: 4c 89 2b             	movq	%r13, (%rbx)
ffffffff80016290: 4c 89 63 08          	movq	%r12, 0x8(%rbx)
ffffffff80016294: 48 8b 44 24 30       	movq	0x30(%rsp), %rax
ffffffff80016299: 48 8b 4c 24 38       	movq	0x38(%rsp), %rcx
ffffffff8001629e: 48 89 43 10          	movq	%rax, 0x10(%rbx)
ffffffff800162a2: 48 89 4b 18          	movq	%rcx, 0x18(%rbx)
ffffffff800162a6: 48 89 d8             	movq	%rbx, %rax
ffffffff800162a9: 48 81 c4 78 01 00 00 	addq	$0x178, %rsp            # imm = 0x178
ffffffff800162b0: 5b                   	popq	%rbx
ffffffff800162b1: 41 5c                	popq	%r12
ffffffff800162b3: 41 5d                	popq	%r13
ffffffff800162b5: 41 5e                	popq	%r14
ffffffff800162b7: 41 5f                	popq	%r15
ffffffff800162b9: 5d                   	popq	%rbp
ffffffff800162ba: c3                   	retq
ffffffff800162bb: 48 8b 84 24 50 01 00 00      	movq	0x150(%rsp), %rax
ffffffff800162c3: 48 89 84 24 b8 00 00 00      	movq	%rax, 0xb8(%rsp)
ffffffff800162cb: 48 8b 84 24 58 01 00 00      	movq	0x158(%rsp), %rax
ffffffff800162d3: 48 89 84 24 c0 00 00 00      	movq	%rax, 0xc0(%rsp)
ffffffff800162db: 48 8b 84 24 60 01 00 00      	movq	0x160(%rsp), %rax
ffffffff800162e3: 48 89 84 24 c8 00 00 00      	movq	%rax, 0xc8(%rsp)
ffffffff800162eb: 48 8b 84 24 68 01 00 00      	movq	0x168(%rsp), %rax
ffffffff800162f3: 48 89 84 24 d0 00 00 00      	movq	%rax, 0xd0(%rsp)
ffffffff800162fb: 48 8b 44 24 68       	movq	0x68(%rsp), %rax
ffffffff80016300: 48 8b 4c 24 70       	movq	0x70(%rsp), %rcx
ffffffff80016305: 48 89 84 24 d8 00 00 00      	movq	%rax, 0xd8(%rsp)
ffffffff8001630d: 48 89 8c 24 e0 00 00 00      	movq	%rcx, 0xe0(%rsp)
ffffffff80016315: 4c 03 b4 24 70 01 00 00      	addq	0x170(%rsp), %r14
ffffffff8001631d: 48 8b b4 24 48 01 00 00      	movq	0x148(%rsp), %rsi
ffffffff80016325: 4d 85 ff             	testq	%r15, %r15
ffffffff80016328: 4c 0f 44 fe          	cmoveq	%rsi, %r15
ffffffff8001632c: 40 84 ed             	testb	%bpl, %bpl
ffffffff8001632f: b8 40 00 00 00       	movl	$0x40, %eax
ffffffff80016334: b9 28 00 00 00       	movl	$0x28, %ecx
ffffffff80016339: 48 0f 45 c8          	cmovneq	%rax, %rcx
ffffffff8001633d: 48 8b 44 24 20       	movq	0x20(%rsp), %rax
ffffffff80016342: 48 89 c2             	movq	%rax, %rdx
ffffffff80016345: 48 c1 ea 20          	shrq	$0x20, %rdx
ffffffff80016349: 74 2a                	je	0xffffffff80016375 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x195>
ffffffff8001634b: 31 d2                	xorl	%edx, %edx
ffffffff8001634d: 48 f7 f1             	divq	%rcx
ffffffff80016350: 49 39 c7             	cmpq	%rax, %r15
ffffffff80016353: 76 29                	jbe	0xffffffff8001637e <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x19e>
ffffffff80016355: 48 c7 03 06 00 00 00 	movq	$0x6, (%rbx)
ffffffff8001635c: 48 c7 43 08 b8 2b 02 80      	movq	$-0x7ffdd448, 0x8(%rbx) # imm = 0x80022BB8
ffffffff80016364: 48 c7 43 10 0f 00 00 00      	movq	$0xf, 0x10(%rbx)
ffffffff8001636c: 4c 89 7b 18          	movq	%r15, 0x18(%rbx)
ffffffff80016370: e9 31 ff ff ff       	jmp	0xffffffff800162a6 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0xc6>
ffffffff80016375: 31 d2                	xorl	%edx, %edx
ffffffff80016377: f7 f1                	divl	%ecx
ffffffff80016379: 49 39 c7             	cmpq	%rax, %r15
ffffffff8001637c: 77 d7                	ja	0xffffffff80016355 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x175>
ffffffff8001637e: 48 89 b4 24 a0 00 00 00      	movq	%rsi, 0xa0(%rsp)
ffffffff80016386: 31 ff                	xorl	%edi, %edi
ffffffff80016388: b9 48 00 00 00       	movl	$0x48, %ecx
ffffffff8001638d: 4c 89 f8             	movq	%r15, %rax
ffffffff80016390: 48 f7 e1             	mulq	%rcx
ffffffff80016393: 48 89 c5             	movq	%rax, %rbp
ffffffff80016396: 0f 80 8a 03 00 00    	jo	0xffffffff80016726 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x546>
ffffffff8001639c: 48 b8 f8 ff ff ff ff ff ff 7f	movabsq	$0x7ffffffffffffff8, %rax # imm = 0x7FFFFFFFFFFFFFF8
ffffffff800163a6: 48 39 c5             	cmpq	%rax, %rbp
ffffffff800163a9: 0f 87 77 03 00 00    	ja	0xffffffff80016726 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x546>
ffffffff800163af: 48 85 ed             	testq	%rbp, %rbp
ffffffff800163b2: 74 41                	je	0xffffffff800163f5 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x215>
ffffffff800163b4: 0f b6 05 26 ee 00 00 	movzbl	0xee26(%rip), %eax      # 0xffffffff800251e1 <__rust_no_alloc_shim_is_unstable>
ffffffff800163bb: be 08 00 00 00       	movl	$0x8, %esi
ffffffff800163c0: 48 89 ef             	movq	%rbp, %rdi
ffffffff800163c3: e8 28 89 ff ff       	callq	0xffffffff8000ecf0 <__rust_alloc>
ffffffff800163c8: bf 08 00 00 00       	movl	$0x8, %edi
ffffffff800163cd: 48 8b 74 24 20       	movq	0x20(%rsp), %rsi
ffffffff800163d2: 48 85 c0             	testq	%rax, %rax
ffffffff800163d5: 0f 84 4b 03 00 00    	je	0xffffffff80016726 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x546>
ffffffff800163db: 4c 89 7c 24 08       	movq	%r15, 0x8(%rsp)
ffffffff800163e0: 48 89 44 24 10       	movq	%rax, 0x10(%rsp)
ffffffff800163e5: 48 c7 44 24 18 00 00 00 00   	movq	$0x0, 0x18(%rsp)
ffffffff800163ee: 4d 85 ff             	testq	%r15, %r15
ffffffff800163f1: 75 38                	jne	0xffffffff8001642b <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x24b>
ffffffff800163f3: eb 1b                	jmp	0xffffffff80016410 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x230>
ffffffff800163f5: 48 c7 44 24 08 00 00 00 00   	movq	$0x0, 0x8(%rsp)
ffffffff800163fe: 48 c7 44 24 10 08 00 00 00   	movq	$0x8, 0x10(%rsp)
ffffffff80016407: 48 c7 44 24 18 00 00 00 00   	movq	$0x0, 0x18(%rsp)
ffffffff80016410: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff80016415: 48 c7 c6 88 2b 02 80 	movq	$-0x7ffdd478, %rsi      # imm = 0x80022B88
ffffffff8001641c: e8 8f f6 ff ff       	callq	0xffffffff80015ab0 <alloc::raw_vec::RawVec<T,A>::grow_one::h64ad729a5300afbf>
ffffffff80016421: 48 8b 74 24 20       	movq	0x20(%rsp), %rsi
ffffffff80016426: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff8001642b: 4c 89 28             	movq	%r13, (%rax)
ffffffff8001642e: 4c 89 60 08          	movq	%r12, 0x8(%rax)
ffffffff80016432: 48 8b 8c 24 d8 00 00 00      	movq	0xd8(%rsp), %rcx
ffffffff8001643a: 48 8b 94 24 e0 00 00 00      	movq	0xe0(%rsp), %rdx
ffffffff80016442: 48 89 48 10          	movq	%rcx, 0x10(%rax)
ffffffff80016446: 48 89 50 18          	movq	%rdx, 0x18(%rax)
ffffffff8001644a: 48 8b 8c 24 a0 00 00 00      	movq	0xa0(%rsp), %rcx
ffffffff80016452: 48 89 48 20          	movq	%rcx, 0x20(%rax)
ffffffff80016456: 48 8b 8c 24 b8 00 00 00      	movq	0xb8(%rsp), %rcx
ffffffff8001645e: 48 8b 94 24 c0 00 00 00      	movq	0xc0(%rsp), %rdx
ffffffff80016466: 48 89 48 28          	movq	%rcx, 0x28(%rax)
ffffffff8001646a: 48 89 50 30          	movq	%rdx, 0x30(%rax)
ffffffff8001646e: 48 8b 8c 24 c8 00 00 00      	movq	0xc8(%rsp), %rcx
ffffffff80016476: 48 89 48 38          	movq	%rcx, 0x38(%rax)
ffffffff8001647a: 48 8b 8c 24 d0 00 00 00      	movq	0xd0(%rsp), %rcx
ffffffff80016482: 48 89 48 40          	movq	%rcx, 0x40(%rax)
ffffffff80016486: 48 c7 44 24 18 01 00 00 00   	movq	$0x1, 0x18(%rsp)
ffffffff8001648f: 49 83 ff 02          	cmpq	$0x2, %r15
ffffffff80016493: 0f 82 f1 01 00 00    	jb	0xffffffff8001668a <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x4aa>
ffffffff80016499: 4c 8d a4 24 38 01 00 00      	leaq	0x138(%rsp), %r12
ffffffff800164a1: 49 ff cf             	decq	%r15
ffffffff800164a4: 48 89 9c 24 a8 00 00 00      	movq	%rbx, 0xa8(%rsp)
ffffffff800164ac: e9 9a 00 00 00       	jmp	0xffffffff8001654b <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x36b>
ffffffff800164b1: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
ffffffff800164c0: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff800164c5: 48 8d 0c db          	leaq	(%rbx,%rbx,8), %rcx
ffffffff800164c9: 4c 89 2c c8          	movq	%r13, (%rax,%rcx,8)
ffffffff800164cd: 48 89 6c c8 08       	movq	%rbp, 0x8(%rax,%rcx,8)
ffffffff800164d2: 48 8b 94 24 e8 00 00 00      	movq	0xe8(%rsp), %rdx
ffffffff800164da: 48 8b b4 24 f0 00 00 00      	movq	0xf0(%rsp), %rsi
ffffffff800164e2: 48 89 54 c8 10       	movq	%rdx, 0x10(%rax,%rcx,8)
ffffffff800164e7: 48 89 74 c8 18       	movq	%rsi, 0x18(%rax,%rcx,8)
ffffffff800164ec: 48 8b 94 24 f8 00 00 00      	movq	0xf8(%rsp), %rdx
ffffffff800164f4: 48 89 54 c8 20       	movq	%rdx, 0x20(%rax,%rcx,8)
ffffffff800164f9: 48 8b 94 24 00 01 00 00      	movq	0x100(%rsp), %rdx
ffffffff80016501: 48 89 54 c8 28       	movq	%rdx, 0x28(%rax,%rcx,8)
ffffffff80016506: 48 8b 94 24 08 01 00 00      	movq	0x108(%rsp), %rdx
ffffffff8001650e: 48 89 54 c8 30       	movq	%rdx, 0x30(%rax,%rcx,8)
ffffffff80016513: 48 8b 94 24 10 01 00 00      	movq	0x110(%rsp), %rdx
ffffffff8001651b: 48 89 54 c8 38       	movq	%rdx, 0x38(%rax,%rcx,8)
ffffffff80016520: 48 8b 94 24 18 01 00 00      	movq	0x118(%rsp), %rdx
ffffffff80016528: 48 89 54 c8 40       	movq	%rdx, 0x40(%rax,%rcx,8)
ffffffff8001652d: 48 ff c3             	incq	%rbx
ffffffff80016530: 48 89 5c 24 18       	movq	%rbx, 0x18(%rsp)
ffffffff80016535: 49 ff cf             	decq	%r15
ffffffff80016538: 48 8b 9c 24 a8 00 00 00      	movq	0xa8(%rsp), %rbx
ffffffff80016540: 48 8b 74 24 20       	movq	0x20(%rsp), %rsi
ffffffff80016545: 0f 84 3f 01 00 00    	je	0xffffffff8001668a <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x4aa>
ffffffff8001654b: 48 89 f2             	movq	%rsi, %rdx
ffffffff8001654e: 4c 29 f2             	subq	%r14, %rdx
ffffffff80016551: 0f 82 5a 01 00 00    	jb	0xffffffff800166b1 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x4d1>
ffffffff80016557: 48 8b 84 24 b0 00 00 00      	movq	0xb0(%rsp), %rax
ffffffff8001655f: 4a 8d 34 30          	leaq	(%rax,%r14), %rsi
ffffffff80016563: 48 8d bc 24 20 01 00 00      	leaq	0x120(%rsp), %rdi
ffffffff8001656b: 8b 4c 24 2c          	movl	0x2c(%rsp), %ecx
ffffffff8001656f: 44 8b 44 24 28       	movl	0x28(%rsp), %r8d
ffffffff80016574: e8 07 03 00 00       	callq	0xffffffff80016880 <<goblin::elf::section_header::SectionHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::h6d65db649b0ab161>
ffffffff80016579: 4c 8b ac 24 28 01 00 00      	movq	0x128(%rsp), %r13
ffffffff80016581: 48 8b ac 24 30 01 00 00      	movq	0x130(%rsp), %rbp
ffffffff80016589: 83 bc 24 20 01 00 00 01      	cmpl	$0x1, 0x120(%rsp)
ffffffff80016591: 0f 84 22 01 00 00    	je	0xffffffff800166b9 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x4d9>
ffffffff80016597: 49 8b 44 24 30       	movq	0x30(%r12), %rax
ffffffff8001659c: 48 89 84 24 98 00 00 00      	movq	%rax, 0x98(%rsp)
ffffffff800165a4: 49 8b 4c 24 28       	movq	0x28(%r12), %rcx
ffffffff800165a9: 48 89 8c 24 90 00 00 00      	movq	%rcx, 0x90(%rsp)
ffffffff800165b1: 49 8b 54 24 20       	movq	0x20(%r12), %rdx
ffffffff800165b6: 48 89 94 24 88 00 00 00      	movq	%rdx, 0x88(%rsp)
ffffffff800165be: 49 8b 74 24 18       	movq	0x18(%r12), %rsi
ffffffff800165c3: 48 89 b4 24 80 00 00 00      	movq	%rsi, 0x80(%rsp)
ffffffff800165cb: 49 8b 7c 24 10       	movq	0x10(%r12), %rdi
ffffffff800165d0: 48 89 7c 24 78       	movq	%rdi, 0x78(%rsp)
ffffffff800165d5: 4d 8b 04 24          	movq	(%r12), %r8
ffffffff800165d9: 4d 8b 4c 24 08       	movq	0x8(%r12), %r9
ffffffff800165de: 4c 03 b4 24 70 01 00 00      	addq	0x170(%rsp), %r14
ffffffff800165e6: 4c 89 44 24 30       	movq	%r8, 0x30(%rsp)
ffffffff800165eb: 4c 89 4c 24 38       	movq	%r9, 0x38(%rsp)
ffffffff800165f0: 48 89 7c 24 40       	movq	%rdi, 0x40(%rsp)
ffffffff800165f5: 48 89 74 24 48       	movq	%rsi, 0x48(%rsp)
ffffffff800165fa: 48 89 54 24 50       	movq	%rdx, 0x50(%rsp)
ffffffff800165ff: 48 89 4c 24 58       	movq	%rcx, 0x58(%rsp)
ffffffff80016604: 48 89 44 24 60       	movq	%rax, 0x60(%rsp)
ffffffff80016609: 48 8b 44 24 60       	movq	0x60(%rsp), %rax
ffffffff8001660e: 48 89 84 24 18 01 00 00      	movq	%rax, 0x118(%rsp)
ffffffff80016616: 48 8b 44 24 58       	movq	0x58(%rsp), %rax
ffffffff8001661b: 48 89 84 24 10 01 00 00      	movq	%rax, 0x110(%rsp)
ffffffff80016623: 48 8b 44 24 50       	movq	0x50(%rsp), %rax
ffffffff80016628: 48 89 84 24 08 01 00 00      	movq	%rax, 0x108(%rsp)
ffffffff80016630: 48 8b 44 24 48       	movq	0x48(%rsp), %rax
ffffffff80016635: 48 89 84 24 00 01 00 00      	movq	%rax, 0x100(%rsp)
ffffffff8001663d: 48 8b 44 24 40       	movq	0x40(%rsp), %rax
ffffffff80016642: 48 89 84 24 f8 00 00 00      	movq	%rax, 0xf8(%rsp)
ffffffff8001664a: 48 8b 44 24 30       	movq	0x30(%rsp), %rax
ffffffff8001664f: 48 8b 4c 24 38       	movq	0x38(%rsp), %rcx
ffffffff80016654: 48 89 8c 24 f0 00 00 00      	movq	%rcx, 0xf0(%rsp)
ffffffff8001665c: 48 89 84 24 e8 00 00 00      	movq	%rax, 0xe8(%rsp)
ffffffff80016664: 48 8b 5c 24 18       	movq	0x18(%rsp), %rbx
ffffffff80016669: 48 3b 5c 24 08       	cmpq	0x8(%rsp), %rbx
ffffffff8001666e: 0f 85 4c fe ff ff    	jne	0xffffffff800164c0 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x2e0>
ffffffff80016674: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff80016679: 48 c7 c6 a0 2b 02 80 	movq	$-0x7ffdd460, %rsi      # imm = 0x80022BA0
ffffffff80016680: e8 2b f4 ff ff       	callq	0xffffffff80015ab0 <alloc::raw_vec::RawVec<T,A>::grow_one::h64ad729a5300afbf>
ffffffff80016685: e9 36 fe ff ff       	jmp	0xffffffff800164c0 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x2e0>
ffffffff8001668a: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff8001668f: 48 89 43 18          	movq	%rax, 0x18(%rbx)
ffffffff80016693: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff80016698: 48 8b 4c 24 10       	movq	0x10(%rsp), %rcx
ffffffff8001669d: 48 89 4b 10          	movq	%rcx, 0x10(%rbx)
ffffffff800166a1: 48 89 43 08          	movq	%rax, 0x8(%rbx)
ffffffff800166a5: 48 c7 03 07 00 00 00 	movq	$0x7, (%rbx)
ffffffff800166ac: e9 f5 fb ff ff       	jmp	0xffffffff800162a6 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0xc6>
ffffffff800166b1: 41 bd 01 00 00 00    	movl	$0x1, %r13d
ffffffff800166b7: eb 16                	jmp	0xffffffff800166cf <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0x4ef>
ffffffff800166b9: 49 8b 04 24          	movq	(%r12), %rax
ffffffff800166bd: 49 8b 4c 24 08       	movq	0x8(%r12), %rcx
ffffffff800166c2: 48 89 4c 24 70       	movq	%rcx, 0x70(%rsp)
ffffffff800166c7: 48 89 44 24 68       	movq	%rax, 0x68(%rsp)
ffffffff800166cc: 49 89 ee             	movq	%rbp, %r14
ffffffff800166cf: 48 8b 44 24 68       	movq	0x68(%rsp), %rax
ffffffff800166d4: 48 8b 4c 24 70       	movq	0x70(%rsp), %rcx
ffffffff800166d9: 48 89 4c 24 38       	movq	%rcx, 0x38(%rsp)
ffffffff800166de: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff800166e3: 4c 89 2b             	movq	%r13, (%rbx)
ffffffff800166e6: 4c 89 73 08          	movq	%r14, 0x8(%rbx)
ffffffff800166ea: 48 8b 44 24 30       	movq	0x30(%rsp), %rax
ffffffff800166ef: 48 8b 4c 24 38       	movq	0x38(%rsp), %rcx
ffffffff800166f4: 48 89 4b 18          	movq	%rcx, 0x18(%rbx)
ffffffff800166f8: 48 89 43 10          	movq	%rax, 0x10(%rbx)
ffffffff800166fc: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff80016701: 48 85 c0             	testq	%rax, %rax
ffffffff80016704: 0f 84 9c fb ff ff    	je	0xffffffff800162a6 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0xc6>
ffffffff8001670a: 48 8b 7c 24 10       	movq	0x10(%rsp), %rdi
ffffffff8001670f: 48 c1 e0 03          	shlq	$0x3, %rax
ffffffff80016713: 48 8d 34 c0          	leaq	(%rax,%rax,8), %rsi
ffffffff80016717: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff8001671c: e8 1f 86 ff ff       	callq	0xffffffff8000ed40 <__rust_dealloc>
ffffffff80016721: e9 80 fb ff ff       	jmp	0xffffffff800162a6 <goblin::elf::section_header::SectionHeader::parse_from::h0f9a493bccb9ed98+0xc6>
ffffffff80016726: 48 89 ee             	movq	%rbp, %rsi
ffffffff80016729: 48 c7 c2 70 2b 02 80 	movq	$-0x7ffdd490, %rdx      # imm = 0x80022B70
ffffffff80016730: e8 12 24 00 00       	callq	0xffffffff80018b47 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff80016735: cc                   	int3
ffffffff80016736: cc                   	int3
ffffffff80016737: cc                   	int3
ffffffff80016738: cc                   	int3
ffffffff80016739: cc                   	int3
ffffffff8001673a: cc                   	int3
ffffffff8001673b: cc                   	int3
ffffffff8001673c: cc                   	int3
ffffffff8001673d: cc                   	int3
ffffffff8001673e: cc                   	int3
ffffffff8001673f: cc                   	int3

ffffffff80016740 <goblin::elf::section_header::SectionHeader::check_size::hf971422cac388d0f>:
ffffffff80016740: 53                   	pushq	%rbx
ffffffff80016741: 48 81 ec 80 00 00 00 	subq	$0x80, %rsp
ffffffff80016748: 48 89 fb             	movq	%rdi, %rbx
ffffffff8001674b: 83 7e 38 08          	cmpl	$0x8, 0x38(%rsi)
ffffffff8001674f: 0f 94 c0             	sete	%al
ffffffff80016752: 48 8b 4e 20          	movq	0x20(%rsi), %rcx
ffffffff80016756: 48 85 c9             	testq	%rcx, %rcx
ffffffff80016759: 40 0f 94 c7          	sete	%dil
ffffffff8001675d: 40 08 c7             	orb	%al, %dil
ffffffff80016760: 74 13                	je	0xffffffff80016775 <goblin::elf::section_header::SectionHeader::check_size::hf971422cac388d0f+0x35>
ffffffff80016762: 48 c7 03 07 00 00 00 	movq	$0x7, (%rbx)
ffffffff80016769: 48 89 d8             	movq	%rbx, %rax
ffffffff8001676c: 48 81 c4 80 00 00 00 	addq	$0x80, %rsp
ffffffff80016773: 5b                   	popq	%rbx
ffffffff80016774: c3                   	retq
ffffffff80016775: 48 8d 46 20          	leaq	0x20(%rsi), %rax
ffffffff80016779: 48 8b 7e 18          	movq	0x18(%rsi), %rdi
ffffffff8001677d: 48 01 cf             	addq	%rcx, %rdi
ffffffff80016780: 41 0f 92 c0          	setb	%r8b
ffffffff80016784: 0f 92 44 24 0e       	setb	0xe(%rsp)
ffffffff80016789: 48 39 d7             	cmpq	%rdx, %rdi
ffffffff8001678c: 0f 97 c2             	seta	%dl
ffffffff8001678f: 44 08 c2             	orb	%r8b, %dl
ffffffff80016792: 74 4c                	je	0xffffffff800167e0 <goblin::elf::section_header::SectionHeader::check_size::hf971422cac388d0f+0xa0>
ffffffff80016794: 48 89 74 24 10       	movq	%rsi, 0x10(%rsp)
ffffffff80016799: 48 83 c6 18          	addq	$0x18, %rsi
ffffffff8001679d: 48 c7 44 24 18 c0 b8 01 80   	movq	$-0x7ffe4740, 0x18(%rsp) # imm = 0x8001B8C0
ffffffff800167a6: 48 89 74 24 20       	movq	%rsi, 0x20(%rsp)
ffffffff800167ab: 48 c7 44 24 28 c0 b8 01 80   	movq	$-0x7ffe4740, 0x28(%rsp) # imm = 0x8001B8C0
ffffffff800167b4: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff800167b9: 48 c7 44 24 38 c0 b8 01 80   	movq	$-0x7ffe4740, 0x38(%rsp) # imm = 0x8001B8C0
ffffffff800167c2: 48 8d 44 24 0e       	leaq	0xe(%rsp), %rax
ffffffff800167c7: 48 89 44 24 40       	movq	%rax, 0x40(%rsp)
ffffffff800167cc: 48 c7 44 24 48 10 a4 01 80   	movq	$-0x7ffe5bf0, 0x48(%rsp) # imm = 0x8001A410
ffffffff800167d5: 48 c7 44 24 50 28 2c 02 80   	movq	$-0x7ffdd3d8, 0x50(%rsp) # imm = 0x80022C28
ffffffff800167de: eb 59                	jmp	0xffffffff80016839 <goblin::elf::section_header::SectionHeader::check_size::hf971422cac388d0f+0xf9>
ffffffff800167e0: 48 03 4e 10          	addq	0x10(%rsi), %rcx
ffffffff800167e4: 0f 92 44 24 0f       	setb	0xf(%rsp)
ffffffff800167e9: 0f 83 73 ff ff ff    	jae	0xffffffff80016762 <goblin::elf::section_header::SectionHeader::check_size::hf971422cac388d0f+0x22>
ffffffff800167ef: 48 89 74 24 10       	movq	%rsi, 0x10(%rsp)
ffffffff800167f4: 48 83 c6 10          	addq	$0x10, %rsi
ffffffff800167f8: 48 c7 44 24 18 c0 b8 01 80   	movq	$-0x7ffe4740, 0x18(%rsp) # imm = 0x8001B8C0
ffffffff80016801: 48 89 74 24 20       	movq	%rsi, 0x20(%rsp)
ffffffff80016806: 48 c7 44 24 28 c0 b8 01 80   	movq	$-0x7ffe4740, 0x28(%rsp) # imm = 0x8001B8C0
ffffffff8001680f: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff80016814: 48 c7 44 24 38 c0 b8 01 80   	movq	$-0x7ffe4740, 0x38(%rsp) # imm = 0x8001B8C0
ffffffff8001681d: 48 8d 44 24 0f       	leaq	0xf(%rsp), %rax
ffffffff80016822: 48 89 44 24 40       	movq	%rax, 0x40(%rsp)
ffffffff80016827: 48 c7 44 24 48 10 a4 01 80   	movq	$-0x7ffe5bf0, 0x48(%rsp) # imm = 0x8001A410
ffffffff80016830: 48 c7 44 24 50 d8 2b 02 80   	movq	$-0x7ffdd428, 0x50(%rsp) # imm = 0x80022BD8
ffffffff80016839: 48 c7 44 24 58 04 00 00 00   	movq	$0x4, 0x58(%rsp)
ffffffff80016842: 48 c7 44 24 70 00 00 00 00   	movq	$0x0, 0x70(%rsp)
ffffffff8001684b: 48 8d 44 24 10       	leaq	0x10(%rsp), %rax
ffffffff80016850: 48 89 44 24 60       	movq	%rax, 0x60(%rsp)
ffffffff80016855: 48 c7 44 24 68 04 00 00 00   	movq	$0x4, 0x68(%rsp)
ffffffff8001685e: 48 8d 7b 08          	leaq	0x8(%rbx), %rdi
ffffffff80016862: 48 8d 74 24 50       	leaq	0x50(%rsp), %rsi
ffffffff80016867: e8 f4 22 00 00       	callq	0xffffffff80018b60 <alloc::fmt::format::format_inner::ha57507f8e4bcde35>
ffffffff8001686c: 48 c7 03 03 00 00 00 	movq	$0x3, (%rbx)
ffffffff80016873: 48 89 d8             	movq	%rbx, %rax
ffffffff80016876: 48 81 c4 80 00 00 00 	addq	$0x80, %rsp
ffffffff8001687d: 5b                   	popq	%rbx
ffffffff8001687e: c3                   	retq
ffffffff8001687f: cc                   	int3

ffffffff80016880 <<goblin::elf::section_header::SectionHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::h6d65db649b0ab161>:
ffffffff80016880: 41 57                	pushq	%r15
ffffffff80016882: 41 56                	pushq	%r14
ffffffff80016884: 53                   	pushq	%rbx
ffffffff80016885: 48 83 ec 50          	subq	$0x50, %rsp
ffffffff80016889: 48 89 fb             	movq	%rdi, %rbx
ffffffff8001688c: 85 c9                	testl	%ecx, %ecx
ffffffff8001688e: 74 4b                	je	0xffffffff800168db <<goblin::elf::section_header::SectionHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::h6d65db649b0ab161+0x5b>
ffffffff80016890: 48 c7 04 24 00 00 00 00      	movq	$0x0, (%rsp)
ffffffff80016898: 45 0f b6 c0          	movzbl	%r8b, %r8d
ffffffff8001689c: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff800168a1: 48 89 e1             	movq	%rsp, %rcx
ffffffff800168a4: e8 37 e3 ff ff       	callq	0xffffffff80014be0 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb809a0df395ab15eE>
ffffffff800168a9: 8b 74 24 10          	movl	0x10(%rsp), %esi
ffffffff800168ad: 8b 44 24 14          	movl	0x14(%rsp), %eax
ffffffff800168b1: 48 8b 4c 24 18       	movq	0x18(%rsp), %rcx
ffffffff800168b6: 48 8b 54 24 20       	movq	0x20(%rsp), %rdx
ffffffff800168bb: 48 8b 7c 24 28       	movq	0x28(%rsp), %rdi
ffffffff800168c0: f6 44 24 08 01       	testb	$0x1, 0x8(%rsp)
ffffffff800168c5: 74 62                	je	0xffffffff80016929 <<goblin::elf::section_header::SectionHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::h6d65db649b0ab161+0xa9>
ffffffff800168c7: 89 73 08             	movl	%esi, 0x8(%rbx)
ffffffff800168ca: 89 43 0c             	movl	%eax, 0xc(%rbx)
ffffffff800168cd: 48 89 4b 10          	movq	%rcx, 0x10(%rbx)
ffffffff800168d1: 48 89 53 18          	movq	%rdx, 0x18(%rbx)
ffffffff800168d5: 48 89 7b 20          	movq	%rdi, 0x20(%rbx)
ffffffff800168d9: eb 44                	jmp	0xffffffff8001691f <<goblin::elf::section_header::SectionHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::h6d65db649b0ab161+0x9f>
ffffffff800168db: 48 c7 04 24 00 00 00 00      	movq	$0x0, (%rsp)
ffffffff800168e3: 45 0f b6 c0          	movzbl	%r8b, %r8d
ffffffff800168e7: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff800168ec: 48 89 e1             	movq	%rsp, %rcx
ffffffff800168ef: e8 6c e0 ff ff       	callq	0xffffffff80014960 <_ZN68_$LT$$u5b$u8$u5d$$u20$as$u20$scroll..pread..Pread$LT$Ctx$C$E$GT$$GT$10gread_with17hb239308fb965e23fE>
ffffffff800168f4: f6 44 24 08 01       	testb	$0x1, 0x8(%rsp)
ffffffff800168f9: 74 4f                	je	0xffffffff8001694a <<goblin::elf::section_header::SectionHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::h6d65db649b0ab161+0xca>
ffffffff800168fb: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff80016900: 48 8b 4c 24 18       	movq	0x18(%rsp), %rcx
ffffffff80016905: 48 8b 54 24 20       	movq	0x20(%rsp), %rdx
ffffffff8001690a: 48 8b 74 24 28       	movq	0x28(%rsp), %rsi
ffffffff8001690f: 48 89 43 08          	movq	%rax, 0x8(%rbx)
ffffffff80016913: 48 89 4b 10          	movq	%rcx, 0x10(%rbx)
ffffffff80016917: 48 89 53 18          	movq	%rdx, 0x18(%rbx)
ffffffff8001691b: 48 89 73 20          	movq	%rsi, 0x20(%rbx)
ffffffff8001691f: b8 01 00 00 00       	movl	$0x1, %eax
ffffffff80016924: e9 83 00 00 00       	jmp	0xffffffff800169ac <<goblin::elf::section_header::SectionHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::h6d65db649b0ab161+0x12c>
ffffffff80016929: 4c 8b 54 24 30       	movq	0x30(%rsp), %r10
ffffffff8001692e: 44 8b 44 24 38       	movl	0x38(%rsp), %r8d
ffffffff80016933: 44 8b 4c 24 3c       	movl	0x3c(%rsp), %r9d
ffffffff80016938: 4c 8b 5c 24 40       	movq	0x40(%rsp), %r11
ffffffff8001693d: 4c 8b 7c 24 48       	movq	0x48(%rsp), %r15
ffffffff80016942: 41 be 40 00 00 00    	movl	$0x40, %r14d
ffffffff80016948: eb 33                	jmp	0xffffffff8001697d <<goblin::elf::section_header::SectionHeader as scroll::ctx::TryFromCtx<goblin::container::Ctx>>::try_from_ctx::h6d65db649b0ab161+0xfd>
ffffffff8001694a: 8b 74 24 0c          	movl	0xc(%rsp), %esi
ffffffff8001694e: 8b 44 24 10          	movl	0x10(%rsp), %eax
ffffffff80016952: 8b 4c 24 14          	movl	0x14(%rsp), %ecx
ffffffff80016956: 8b 54 24 18          	movl	0x18(%rsp), %edx
ffffffff8001695a: 8b 7c 24 1c          	movl	0x1c(%rsp), %edi
ffffffff8001695e: 44 8b 54 24 20       	movl	0x20(%rsp), %r10d
ffffffff80016963: 44 8b 44 24 24       	movl	0x24(%rsp), %r8d
ffffffff80016968: 44 8b 4c 24 28       	movl	0x28(%rsp), %r9d
ffffffff8001696d: 44 8b 5c 24 2c       	movl	0x2c(%rsp), %r11d
ffffffff80016972: 44 8b 7c 24 30       	movl	0x30(%rsp), %r15d
ffffffff80016977: 41 be 28 00 00 00    	movl	$0x28, %r14d
ffffffff8001697d: 89 f6                	movl	%esi, %esi
ffffffff8001697f: 48 89 73 08          	movq	%rsi, 0x8(%rbx)
ffffffff80016983: 48 89 4b 10          	movq	%rcx, 0x10(%rbx)
ffffffff80016987: 48 89 53 18          	movq	%rdx, 0x18(%rbx)
ffffffff8001698b: 48 89 7b 20          	movq	%rdi, 0x20(%rbx)
ffffffff8001698f: 4c 89 53 28          	movq	%r10, 0x28(%rbx)
ffffffff80016993: 4c 89 5b 30          	movq	%r11, 0x30(%rbx)
ffffffff80016997: 4c 89 7b 38          	movq	%r15, 0x38(%rbx)
ffffffff8001699b: 89 43 40             	movl	%eax, 0x40(%rbx)
ffffffff8001699e: 44 89 43 44          	movl	%r8d, 0x44(%rbx)
ffffffff800169a2: 44 89 4b 48          	movl	%r9d, 0x48(%rbx)
ffffffff800169a6: 4c 89 73 50          	movq	%r14, 0x50(%rbx)
ffffffff800169aa: 31 c0                	xorl	%eax, %eax
ffffffff800169ac: 48 89 03             	movq	%rax, (%rbx)
ffffffff800169af: 48 89 d8             	movq	%rbx, %rax
ffffffff800169b2: 48 83 c4 50          	addq	$0x50, %rsp
ffffffff800169b6: 5b                   	popq	%rbx
ffffffff800169b7: 41 5e                	popq	%r14
ffffffff800169b9: 41 5f                	popq	%r15
ffffffff800169bb: c3                   	retq
ffffffff800169bc: cc                   	int3
ffffffff800169bd: cc                   	int3
ffffffff800169be: cc                   	int3
ffffffff800169bf: cc                   	int3

ffffffff800169c0 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045>:
ffffffff800169c0: 55                   	pushq	%rbp
ffffffff800169c1: 41 57                	pushq	%r15
ffffffff800169c3: 41 56                	pushq	%r14
ffffffff800169c5: 41 55                	pushq	%r13
ffffffff800169c7: 41 54                	pushq	%r12
ffffffff800169c9: 53                   	pushq	%rbx
ffffffff800169ca: 48 83 ec 48          	subq	$0x48, %rsp
ffffffff800169ce: 48 89 f3             	movq	%rsi, %rbx
ffffffff800169d1: 0f b6 4f 58          	movzbl	0x58(%rdi), %ecx
ffffffff800169d5: 80 f9 03             	cmpb	$0x3, %cl
ffffffff800169d8: 0f 84 27 01 00 00    	je	0xffffffff80016b05 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x145>
ffffffff800169de: 0f b6 47 28          	movzbl	0x28(%rdi), %eax
ffffffff800169e2: 3c 02                	cmpb	$0x2, %al
ffffffff800169e4: 0f 84 90 00 00 00    	je	0xffffffff80016a7a <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0xba>
ffffffff800169ea: 4c 8b 6f 20          	movq	0x20(%rdi), %r13
ffffffff800169ee: 4c 2b 6f 18          	subq	0x18(%rdi), %r13
ffffffff800169f2: 0f 86 82 00 00 00    	jbe	0xffffffff80016a7a <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0xba>
ffffffff800169f8: 88 4c 24 38          	movb	%cl, 0x38(%rsp)
ffffffff800169fc: 4c 8b 7f 08          	movq	0x8(%rdi), %r15
ffffffff80016a00: 4c 8b 67 10          	movq	0x10(%rdi), %r12
ffffffff80016a04: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff80016a09: 48 89 4c 24 40       	movq	%rcx, 0x40(%rsp)
ffffffff80016a0e: 4d 39 fc             	cmpq	%r15, %r12
ffffffff80016a11: 0f 87 28 02 00 00    	ja	0xffffffff80016c3f <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x27f>
ffffffff80016a17: 4c 8b 37             	movq	(%rdi), %r14
ffffffff80016a1a: 48 89 3c 24          	movq	%rdi, (%rsp)
ffffffff80016a1e: 0f b7 4f 29          	movzwl	0x29(%rdi), %ecx
ffffffff80016a22: c1 e1 08             	shll	$0x8, %ecx
ffffffff80016a25: 0f b6 e8             	movzbl	%al, %ebp
ffffffff80016a28: 09 cd                	orl	%ecx, %ebp
ffffffff80016a2a: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff80016a30: 4c 89 fa             	movq	%r15, %rdx
ffffffff80016a33: 4c 29 e2             	subq	%r12, %rdx
ffffffff80016a36: 4b 8d 34 26          	leaq	(%r14,%r12), %rsi
ffffffff80016a3a: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff80016a3f: 89 e9                	movl	%ebp, %ecx
ffffffff80016a41: e8 ea 0a 00 00       	callq	0xffffffff80017530 <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52>
ffffffff80016a46: 83 7c 24 08 02       	cmpl	$0x2, 0x8(%rsp)
ffffffff80016a4b: 0f 84 73 01 00 00    	je	0xffffffff80016bc4 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x204>
ffffffff80016a51: 48 8b 44 24 20       	movq	0x20(%rsp), %rax
ffffffff80016a56: 48 39 d8             	cmpq	%rbx, %rax
ffffffff80016a59: 48 0f 47 d8          	cmovaq	%rax, %rbx
ffffffff80016a5d: 49 ff cd             	decq	%r13
ffffffff80016a60: 74 0f                	je	0xffffffff80016a71 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0xb1>
ffffffff80016a62: 4c 03 64 24 30       	addq	0x30(%rsp), %r12
ffffffff80016a67: 4d 39 fc             	cmpq	%r15, %r12
ffffffff80016a6a: 76 c4                	jbe	0xffffffff80016a30 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x70>
ffffffff80016a6c: e9 67 01 00 00       	jmp	0xffffffff80016bd8 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x218>
ffffffff80016a71: 48 8b 3c 24          	movq	(%rsp), %rdi
ffffffff80016a75: 0f b6 4c 24 38       	movzbl	0x38(%rsp), %ecx
ffffffff80016a7a: 80 f9 02             	cmpb	$0x2, %cl
ffffffff80016a7d: 0f 84 82 00 00 00    	je	0xffffffff80016b05 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x145>
ffffffff80016a83: 4c 8b 6f 50          	movq	0x50(%rdi), %r13
ffffffff80016a87: 4c 2b 6f 48          	subq	0x48(%rdi), %r13
ffffffff80016a8b: 76 78                	jbe	0xffffffff80016b05 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x145>
ffffffff80016a8d: 4c 8b 7f 38          	movq	0x38(%rdi), %r15
ffffffff80016a91: 4c 8b 67 40          	movq	0x40(%rdi), %r12
ffffffff80016a95: b8 01 00 00 00       	movl	$0x1, %eax
ffffffff80016a9a: 4d 39 fc             	cmpq	%r15, %r12
ffffffff80016a9d: 0f 87 9e 01 00 00    	ja	0xffffffff80016c41 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x281>
ffffffff80016aa3: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff80016aa8: 4c 8b 77 30          	movq	0x30(%rdi), %r14
ffffffff80016aac: 48 89 3c 24          	movq	%rdi, (%rsp)
ffffffff80016ab0: 0f b7 47 59          	movzwl	0x59(%rdi), %eax
ffffffff80016ab4: c1 e0 08             	shll	$0x8, %eax
ffffffff80016ab7: 0f b6 e9             	movzbl	%cl, %ebp
ffffffff80016aba: 09 c5                	orl	%eax, %ebp
ffffffff80016abc: 0f 1f 40 00          	nopl	(%rax)
ffffffff80016ac0: 4c 89 fa             	movq	%r15, %rdx
ffffffff80016ac3: 4c 29 e2             	subq	%r12, %rdx
ffffffff80016ac6: 4b 8d 34 26          	leaq	(%r14,%r12), %rsi
ffffffff80016aca: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff80016acf: 89 e9                	movl	%ebp, %ecx
ffffffff80016ad1: e8 5a 0a 00 00       	callq	0xffffffff80017530 <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52>
ffffffff80016ad6: 83 7c 24 08 02       	cmpl	$0x2, 0x8(%rsp)
ffffffff80016adb: 0f 84 03 01 00 00    	je	0xffffffff80016be4 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x224>
ffffffff80016ae1: 48 8b 44 24 20       	movq	0x20(%rsp), %rax
ffffffff80016ae6: 48 39 d8             	cmpq	%rbx, %rax
ffffffff80016ae9: 48 0f 47 d8          	cmovaq	%rax, %rbx
ffffffff80016aed: 49 ff cd             	decq	%r13
ffffffff80016af0: 74 0f                	je	0xffffffff80016b01 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x141>
ffffffff80016af2: 4c 03 64 24 30       	addq	0x30(%rsp), %r12
ffffffff80016af7: 4d 39 fc             	cmpq	%r15, %r12
ffffffff80016afa: 76 c4                	jbe	0xffffffff80016ac0 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x100>
ffffffff80016afc: e9 f7 00 00 00       	jmp	0xffffffff80016bf8 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x238>
ffffffff80016b01: 48 8b 3c 24          	movq	(%rsp), %rdi
ffffffff80016b05: 80 bf 88 00 00 00 02 	cmpb	$0x2, 0x88(%rdi)
ffffffff80016b0c: 0f 84 78 00 00 00    	je	0xffffffff80016b8a <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x1ca>
ffffffff80016b12: 4c 8b af 80 00 00 00 	movq	0x80(%rdi), %r13
ffffffff80016b19: 4c 2b 6f 78          	subq	0x78(%rdi), %r13
ffffffff80016b1d: 76 6b                	jbe	0xffffffff80016b8a <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x1ca>
ffffffff80016b1f: 4c 8b 67 68          	movq	0x68(%rdi), %r12
ffffffff80016b23: 4c 8b 7f 70          	movq	0x70(%rdi), %r15
ffffffff80016b27: b8 01 00 00 00       	movl	$0x1, %eax
ffffffff80016b2c: 48 89 04 24          	movq	%rax, (%rsp)
ffffffff80016b30: 4d 39 e7             	cmpq	%r12, %r15
ffffffff80016b33: 0f 87 01 01 00 00    	ja	0xffffffff80016c3a <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x27a>
ffffffff80016b39: 4c 8b 77 60          	movq	0x60(%rdi), %r14
ffffffff80016b3d: 0f b7 87 88 00 00 00 	movzwl	0x88(%rdi), %eax
ffffffff80016b44: 0f b6 af 8a 00 00 00 	movzbl	0x8a(%rdi), %ebp
ffffffff80016b4b: c1 e5 10             	shll	$0x10, %ebp
ffffffff80016b4e: 09 c5                	orl	%eax, %ebp
ffffffff80016b50: 4c 89 e2             	movq	%r12, %rdx
ffffffff80016b53: 4c 29 fa             	subq	%r15, %rdx
ffffffff80016b56: 4b 8d 34 3e          	leaq	(%r14,%r15), %rsi
ffffffff80016b5a: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff80016b5f: 89 e9                	movl	%ebp, %ecx
ffffffff80016b61: e8 ca 09 00 00       	callq	0xffffffff80017530 <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52>
ffffffff80016b66: 83 7c 24 08 02       	cmpl	$0x2, 0x8(%rsp)
ffffffff80016b6b: 74 2f                	je	0xffffffff80016b9c <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x1dc>
ffffffff80016b6d: 48 8b 44 24 20       	movq	0x20(%rsp), %rax
ffffffff80016b72: 48 39 d8             	cmpq	%rbx, %rax
ffffffff80016b75: 48 0f 47 d8          	cmovaq	%rax, %rbx
ffffffff80016b79: 49 ff cd             	decq	%r13
ffffffff80016b7c: 74 0c                	je	0xffffffff80016b8a <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x1ca>
ffffffff80016b7e: 4c 03 7c 24 30       	addq	0x30(%rsp), %r15
ffffffff80016b83: 4d 39 e7             	cmpq	%r12, %r15
ffffffff80016b86: 76 c8                	jbe	0xffffffff80016b50 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x190>
ffffffff80016b88: eb 25                	jmp	0xffffffff80016baf <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x1ef>
ffffffff80016b8a: 48 89 d8             	movq	%rbx, %rax
ffffffff80016b8d: 48 83 c4 48          	addq	$0x48, %rsp
ffffffff80016b91: 5b                   	popq	%rbx
ffffffff80016b92: 41 5c                	popq	%r12
ffffffff80016b94: 41 5d                	popq	%r13
ffffffff80016b96: 41 5e                	popq	%r14
ffffffff80016b98: 41 5f                	popq	%r15
ffffffff80016b9a: 5d                   	popq	%rbp
ffffffff80016b9b: c3                   	retq
ffffffff80016b9c: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff80016ba1: 48 89 04 24          	movq	%rax, (%rsp)
ffffffff80016ba5: 4c 8b 7c 24 18       	movq	0x18(%rsp), %r15
ffffffff80016baa: 48 8b 44 24 20       	movq	0x20(%rsp), %rax
ffffffff80016baf: 48 8b 4c 24 28       	movq	0x28(%rsp), %rcx
ffffffff80016bb4: 48 8b 14 24          	movq	(%rsp), %rdx
ffffffff80016bb8: 48 89 54 24 08       	movq	%rdx, 0x8(%rsp)
ffffffff80016bbd: 4c 89 7c 24 10       	movq	%r15, 0x10(%rsp)
ffffffff80016bc2: eb 48                	jmp	0xffffffff80016c0c <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x24c>
ffffffff80016bc4: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff80016bc9: 48 89 44 24 40       	movq	%rax, 0x40(%rsp)
ffffffff80016bce: 4c 8b 64 24 18       	movq	0x18(%rsp), %r12
ffffffff80016bd3: 48 8b 44 24 20       	movq	0x20(%rsp), %rax
ffffffff80016bd8: 48 8b 4c 24 28       	movq	0x28(%rsp), %rcx
ffffffff80016bdd: 48 8b 54 24 40       	movq	0x40(%rsp), %rdx
ffffffff80016be2: eb 1e                	jmp	0xffffffff80016c02 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x242>
ffffffff80016be4: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff80016be9: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff80016bee: 4c 8b 64 24 18       	movq	0x18(%rsp), %r12
ffffffff80016bf3: 48 8b 44 24 20       	movq	0x20(%rsp), %rax
ffffffff80016bf8: 48 8b 4c 24 28       	movq	0x28(%rsp), %rcx
ffffffff80016bfd: 48 8b 54 24 38       	movq	0x38(%rsp), %rdx
ffffffff80016c02: 48 89 54 24 08       	movq	%rdx, 0x8(%rsp)
ffffffff80016c07: 4c 89 64 24 10       	movq	%r12, 0x10(%rsp)
ffffffff80016c0c: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff80016c11: 48 89 4c 24 20       	movq	%rcx, 0x20(%rsp)
ffffffff80016c16: 48 8d 54 24 08       	leaq	0x8(%rsp), %rdx
ffffffff80016c1b: be 2b 00 00 00       	movl	$0x2b, %esi
ffffffff80016c20: 48 c7 c7 20 2e 02 80 	movq	$-0x7ffdd1e0, %rdi      # imm = 0x80022E20
ffffffff80016c27: 48 c7 c1 00 2e 02 80 	movq	$-0x7ffdd200, %rcx      # imm = 0x80022E00
ffffffff80016c2e: 49 c7 c0 b0 2e 02 80 	movq	$-0x7ffdd150, %r8       # imm = 0x80022EB0
ffffffff80016c35: e8 a6 52 00 00       	callq	0xffffffff8001bee0 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff80016c3a: e9 75 ff ff ff       	jmp	0xffffffff80016bb4 <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x1f4>
ffffffff80016c3f: eb 9c                	jmp	0xffffffff80016bdd <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x21d>
ffffffff80016c41: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff80016c46: eb b5                	jmp	0xffffffff80016bfd <<core::iter::adapters::chain::Chain<A,B> as core::iter::traits::iterator::Iterator>::fold::h8c3a19785514e045+0x23d>
ffffffff80016c48: cc                   	int3
ffffffff80016c49: cc                   	int3
ffffffff80016c4a: cc                   	int3
ffffffff80016c4b: cc                   	int3
ffffffff80016c4c: cc                   	int3
ffffffff80016c4d: cc                   	int3
ffffffff80016c4e: cc                   	int3
ffffffff80016c4f: cc                   	int3

ffffffff80016c50 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09f62a01ec113f1c>:
ffffffff80016c50: 8b 46 24             	movl	0x24(%rsi), %eax
ffffffff80016c53: a8 10                	testb	$0x10, %al
ffffffff80016c55: 0f 85 c5 26 00 00    	jne	0xffffffff80019320 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hd0e7c1aefe0075e3>
ffffffff80016c5b: a8 20                	testb	$0x20, %al
ffffffff80016c5d: 0f 85 3d 27 00 00    	jne	0xffffffff800193a0 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::h869006add1042b35>
ffffffff80016c63: e9 58 4c 00 00       	jmp	0xffffffff8001b8c0 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f>
ffffffff80016c68: cc                   	int3
ffffffff80016c69: cc                   	int3
ffffffff80016c6a: cc                   	int3
ffffffff80016c6b: cc                   	int3
ffffffff80016c6c: cc                   	int3
ffffffff80016c6d: cc                   	int3
ffffffff80016c6e: cc                   	int3
ffffffff80016c6f: cc                   	int3

ffffffff80016c70 <core::ptr::drop_in_place<goblin::error::Error>::h9d02d45c4a2b3676>:
ffffffff80016c70: 83 3f 03             	cmpl	$0x3, (%rdi)
ffffffff80016c73: 75 17                	jne	0xffffffff80016c8c <core::ptr::drop_in_place<goblin::error::Error>::h9d02d45c4a2b3676+0x1c>
ffffffff80016c75: 48 8b 77 08          	movq	0x8(%rdi), %rsi
ffffffff80016c79: 48 85 f6             	testq	%rsi, %rsi
ffffffff80016c7c: 74 0e                	je	0xffffffff80016c8c <core::ptr::drop_in_place<goblin::error::Error>::h9d02d45c4a2b3676+0x1c>
ffffffff80016c7e: 48 8b 7f 10          	movq	0x10(%rdi), %rdi
ffffffff80016c82: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff80016c87: e9 b4 80 ff ff       	jmp	0xffffffff8000ed40 <__rust_dealloc>
ffffffff80016c8c: c3                   	retq
ffffffff80016c8d: cc                   	int3
ffffffff80016c8e: cc                   	int3
ffffffff80016c8f: cc                   	int3

ffffffff80016c90 <<goblin::error::Error as core::fmt::Debug>::fmt::ha73702cbb56a1a4b>:
ffffffff80016c90: 48 83 ec 18          	subq	$0x18, %rsp
ffffffff80016c94: 48 8b 07             	movq	(%rdi), %rax
ffffffff80016c97: 48 83 c0 fd          	addq	$-0x3, %rax
ffffffff80016c9b: 48 83 f8 04          	cmpq	$0x4, %rax
ffffffff80016c9f: b9 02 00 00 00       	movl	$0x2, %ecx
ffffffff80016ca4: 48 0f 42 c8          	cmovbq	%rax, %rcx
ffffffff80016ca8: ff 24 cd 68 2c 02 80 	jmpq	*-0x7ffdd398(,%rcx,8)
ffffffff80016caf: 48 83 c7 08          	addq	$0x8, %rdi
ffffffff80016cb3: 48 89 7c 24 10       	movq	%rdi, 0x10(%rsp)
ffffffff80016cb8: 48 8d 4c 24 10       	leaq	0x10(%rsp), %rcx
ffffffff80016cbd: ba 09 00 00 00       	movl	$0x9, %edx
ffffffff80016cc2: 48 89 f7             	movq	%rsi, %rdi
ffffffff80016cc5: 48 c7 c6 38 2d 02 80 	movq	$-0x7ffdd2c8, %rsi      # imm = 0x80022D38
ffffffff80016ccc: 49 c7 c0 18 2d 02 80 	movq	$-0x7ffdd2e8, %r8       # imm = 0x80022D18
ffffffff80016cd3: e8 88 33 00 00       	callq	0xffffffff8001a060 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>
ffffffff80016cd8: 48 83 c4 18          	addq	$0x18, %rsp
ffffffff80016cdc: c3                   	retq
ffffffff80016cdd: 48 89 7c 24 10       	movq	%rdi, 0x10(%rsp)
ffffffff80016ce2: 48 8d 4c 24 10       	leaq	0x10(%rsp), %rcx
ffffffff80016ce7: ba 06 00 00 00       	movl	$0x6, %edx
ffffffff80016cec: 48 89 f7             	movq	%rsi, %rdi
ffffffff80016cef: 48 c7 c6 88 2d 02 80 	movq	$-0x7ffdd278, %rsi      # imm = 0x80022D88
ffffffff80016cf6: 49 c7 c0 68 2d 02 80 	movq	$-0x7ffdd298, %r8       # imm = 0x80022D68
ffffffff80016cfd: e8 5e 33 00 00       	callq	0xffffffff8001a060 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>
ffffffff80016d02: 48 83 c4 18          	addq	$0x18, %rsp
ffffffff80016d06: c3                   	retq
ffffffff80016d07: 48 8d 4f 18          	leaq	0x18(%rdi), %rcx
ffffffff80016d0b: 48 83 c7 08          	addq	$0x8, %rdi
ffffffff80016d0f: 48 89 7c 24 10       	movq	%rdi, 0x10(%rsp)
ffffffff80016d14: 48 c7 04 24 b0 2d 02 80      	movq	$-0x7ffdd250, (%rsp) # imm = 0x80022DB0
ffffffff80016d1c: 4c 8d 4c 24 10       	leaq	0x10(%rsp), %r9
ffffffff80016d21: ba 0e 00 00 00       	movl	$0xe, %edx
ffffffff80016d26: 48 89 f7             	movq	%rsi, %rdi
ffffffff80016d29: 48 c7 c6 d0 2d 02 80 	movq	$-0x7ffdd230, %rsi      # imm = 0x80022DD0
ffffffff80016d30: 49 c7 c0 90 2d 02 80 	movq	$-0x7ffdd270, %r8       # imm = 0x80022D90
ffffffff80016d37: e8 a4 34 00 00       	callq	0xffffffff8001a1e0 <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2>
ffffffff80016d3c: 48 83 c4 18          	addq	$0x18, %rsp
ffffffff80016d40: c3                   	retq
ffffffff80016d41: 48 83 c7 08          	addq	$0x8, %rdi
ffffffff80016d45: 48 89 7c 24 10       	movq	%rdi, 0x10(%rsp)
ffffffff80016d4a: 48 8d 4c 24 10       	leaq	0x10(%rsp), %rcx
ffffffff80016d4f: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff80016d54: 48 89 f7             	movq	%rsi, %rdi
ffffffff80016d57: 48 c7 c6 58 d1 01 80 	movq	$-0x7ffe2ea8, %rsi      # imm = 0x8001D158
ffffffff80016d5e: 49 c7 c0 48 2d 02 80 	movq	$-0x7ffdd2b8, %r8       # imm = 0x80022D48
ffffffff80016d65: e8 f6 32 00 00       	callq	0xffffffff8001a060 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>
ffffffff80016d6a: 48 83 c4 18          	addq	$0x18, %rsp
ffffffff80016d6e: c3                   	retq
ffffffff80016d6f: cc                   	int3

ffffffff80016d70 <<goblin::elf::header::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h1766452b94fc5744>:
ffffffff80016d70: 55                   	pushq	%rbp
ffffffff80016d71: 41 56                	pushq	%r14
ffffffff80016d73: 53                   	pushq	%rbx
ffffffff80016d74: 48 81 ec 80 00 00 00 	subq	$0x80, %rsp
ffffffff80016d7b: 48 89 fb             	movq	%rdi, %rbx
ffffffff80016d7e: 48 83 fa 0f          	cmpq	$0xf, %rdx
ffffffff80016d82: 77 51                	ja	0xffffffff80016dd5 <<goblin::elf::header::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h1766452b94fc5744+0x65>
ffffffff80016d84: 0f b6 05 56 e4 00 00 	movzbl	0xe456(%rip), %eax      # 0xffffffff800251e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80016d8b: bf 09 00 00 00       	movl	$0x9, %edi
ffffffff80016d90: be 01 00 00 00       	movl	$0x1, %esi
ffffffff80016d95: e8 56 7f ff ff       	callq	0xffffffff8000ecf0 <__rust_alloc>
ffffffff80016d9a: 48 85 c0             	testq	%rax, %rax
ffffffff80016d9d: 0f 84 58 02 00 00    	je	0xffffffff80016ffb <<goblin::elf::header::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h1766452b94fc5744+0x28b>
ffffffff80016da3: 48 b9 54 6f 6f 20 73 6d 61 6c	movabsq	$0x6c616d73206f6f54, %rcx # imm = 0x6C616D73206F6F54
ffffffff80016dad: 48 89 08             	movq	%rcx, (%rax)
ffffffff80016db0: c6 40 08 6c          	movb	$0x6c, 0x8(%rax)
ffffffff80016db4: 48 c7 43 08 03 00 00 00      	movq	$0x3, 0x8(%rbx)
ffffffff80016dbc: 48 c7 43 10 09 00 00 00      	movq	$0x9, 0x10(%rbx)
ffffffff80016dc4: 48 89 43 18          	movq	%rax, 0x18(%rbx)
ffffffff80016dc8: 48 c7 43 20 09 00 00 00      	movq	$0x9, 0x20(%rbx)
ffffffff80016dd0: e9 4f 01 00 00       	jmp	0xffffffff80016f24 <<goblin::elf::header::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h1766452b94fc5744+0x1b4>
ffffffff80016dd5: 81 3e 7f 45 4c 46    	cmpl	$0x464c457f, (%rsi)     # imm = 0x464C457F
ffffffff80016ddb: 75 66                	jne	0xffffffff80016e43 <<goblin::elf::header::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h1766452b94fc5744+0xd3>
ffffffff80016ddd: 0f b6 46 04          	movzbl	0x4(%rsi), %eax
ffffffff80016de1: 88 44 24 07          	movb	%al, 0x7(%rsp)
ffffffff80016de5: 83 f8 01             	cmpl	$0x1, %eax
ffffffff80016de8: 74 6d                	je	0xffffffff80016e57 <<goblin::elf::header::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h1766452b94fc5744+0xe7>
ffffffff80016dea: 83 f8 02             	cmpl	$0x2, %eax
ffffffff80016ded: 0f 85 be 00 00 00    	jne	0xffffffff80016eb1 <<goblin::elf::header::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h1766452b94fc5744+0x141>
ffffffff80016df3: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff80016df8: 31 c9                	xorl	%ecx, %ecx
ffffffff80016dfa: e8 31 e1 ff ff       	callq	0xffffffff80014f30 <<goblin::elf::header::header64::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h46df0862a019124d>
ffffffff80016dff: 4c 8b 44 24 10       	movq	0x10(%rsp), %r8
ffffffff80016e04: 48 8b 7c 24 18       	movq	0x18(%rsp), %rdi
ffffffff80016e09: 0f b7 4c 24 20       	movzwl	0x20(%rsp), %ecx
ffffffff80016e0e: 0f b7 44 24 22       	movzwl	0x22(%rsp), %eax
ffffffff80016e13: 8b 54 24 24          	movl	0x24(%rsp), %edx
ffffffff80016e17: 48 8b 74 24 28       	movq	0x28(%rsp), %rsi
ffffffff80016e1c: f6 44 24 08 01       	testb	$0x1, 0x8(%rsp)
ffffffff80016e21: 0f 84 13 01 00 00    	je	0xffffffff80016f3a <<goblin::elf::header::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h1766452b94fc5744+0x1ca>
ffffffff80016e27: 4c 89 43 08          	movq	%r8, 0x8(%rbx)
ffffffff80016e2b: 48 89 7b 10          	movq	%rdi, 0x10(%rbx)
ffffffff80016e2f: 66 89 4b 18          	movw	%cx, 0x18(%rbx)
ffffffff80016e33: 66 89 43 1a          	movw	%ax, 0x1a(%rbx)
ffffffff80016e37: 89 53 1c             	movl	%edx, 0x1c(%rbx)
ffffffff80016e3a: 48 89 73 20          	movq	%rsi, 0x20(%rbx)
ffffffff80016e3e: e9 e1 00 00 00       	jmp	0xffffffff80016f24 <<goblin::elf::header::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h1766452b94fc5744+0x1b4>
ffffffff80016e43: 48 8b 06             	movq	(%rsi), %rax
ffffffff80016e46: 48 c7 43 08 04 00 00 00      	movq	$0x4, 0x8(%rbx)
ffffffff80016e4e: 48 89 43 10          	movq	%rax, 0x10(%rbx)
ffffffff80016e52: e9 cd 00 00 00       	jmp	0xffffffff80016f24 <<goblin::elf::header::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h1766452b94fc5744+0x1b4>
ffffffff80016e57: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff80016e5c: 31 c9                	xorl	%ecx, %ecx
ffffffff80016e5e: e8 9d e5 ff ff       	callq	0xffffffff80015400 <<goblin::elf::header::header32::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::ha4a830e489253b4b>
ffffffff80016e63: 8b 44 24 24          	movl	0x24(%rsp), %eax
ffffffff80016e67: 8b 54 24 28          	movl	0x28(%rsp), %edx
ffffffff80016e6b: 8b 4c 24 2c          	movl	0x2c(%rsp), %ecx
ffffffff80016e6f: f6 44 24 08 01       	testb	$0x1, 0x8(%rsp)
ffffffff80016e74: 0f 84 13 01 00 00    	je	0xffffffff80016f8d <<goblin::elf::header::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h1766452b94fc5744+0x21d>
ffffffff80016e7a: 48 8b 74 24 10       	movq	0x10(%rsp), %rsi
ffffffff80016e7f: 48 8b 7c 24 18       	movq	0x18(%rsp), %rdi
ffffffff80016e84: 49 89 f8             	movq	%rdi, %r8
ffffffff80016e87: 48 89 73 08          	movq	%rsi, 0x8(%rbx)
ffffffff80016e8b: 89 7b 10             	movl	%edi, 0x10(%rbx)
ffffffff80016e8e: 48 c1 ef 20          	shrq	$0x20, %rdi
ffffffff80016e92: 49 c1 e8 30          	shrq	$0x30, %r8
ffffffff80016e96: 8b 74 24 20          	movl	0x20(%rsp), %esi
ffffffff80016e9a: 66 89 7b 14          	movw	%di, 0x14(%rbx)
ffffffff80016e9e: 66 44 89 43 16       	movw	%r8w, 0x16(%rbx)
ffffffff80016ea3: 89 73 18             	movl	%esi, 0x18(%rbx)
ffffffff80016ea6: 89 43 1c             	movl	%eax, 0x1c(%rbx)
ffffffff80016ea9: 89 53 20             	movl	%edx, 0x20(%rbx)
ffffffff80016eac: 89 4b 24             	movl	%ecx, 0x24(%rbx)
ffffffff80016eaf: eb 73                	jmp	0xffffffff80016f24 <<goblin::elf::header::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h1766452b94fc5744+0x1b4>
ffffffff80016eb1: 48 8d 44 24 07       	leaq	0x7(%rsp), %rax
ffffffff80016eb6: 48 89 44 24 58       	movq	%rax, 0x58(%rsp)
ffffffff80016ebb: 48 c7 44 24 60 40 91 01 80   	movq	$-0x7ffe6ec0, 0x60(%rsp) # imm = 0x80019140
ffffffff80016ec4: 48 c7 44 24 08 f0 2d 02 80   	movq	$-0x7ffdd210, 0x8(%rsp) # imm = 0x80022DF0
ffffffff80016ecd: 48 c7 44 24 10 01 00 00 00   	movq	$0x1, 0x10(%rsp)
ffffffff80016ed6: 48 c7 44 24 28 00 00 00 00   	movq	$0x0, 0x28(%rsp)
ffffffff80016edf: 48 8d 44 24 58       	leaq	0x58(%rsp), %rax
ffffffff80016ee4: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff80016ee9: 48 c7 44 24 20 01 00 00 00   	movq	$0x1, 0x20(%rsp)
ffffffff80016ef2: 48 8d 7c 24 68       	leaq	0x68(%rsp), %rdi
ffffffff80016ef7: 48 8d 74 24 08       	leaq	0x8(%rsp), %rsi
ffffffff80016efc: e8 5f 1c 00 00       	callq	0xffffffff80018b60 <alloc::fmt::format::format_inner::ha57507f8e4bcde35>
ffffffff80016f01: 48 c7 43 08 03 00 00 00      	movq	$0x3, 0x8(%rbx)
ffffffff80016f09: 48 8b 44 24 68       	movq	0x68(%rsp), %rax
ffffffff80016f0e: 48 8b 4c 24 70       	movq	0x70(%rsp), %rcx
ffffffff80016f13: 48 89 43 10          	movq	%rax, 0x10(%rbx)
ffffffff80016f17: 48 89 4b 18          	movq	%rcx, 0x18(%rbx)
ffffffff80016f1b: 48 8b 44 24 78       	movq	0x78(%rsp), %rax
ffffffff80016f20: 48 89 43 20          	movq	%rax, 0x20(%rbx)
ffffffff80016f24: 48 c7 03 01 00 00 00 	movq	$0x1, (%rbx)
ffffffff80016f2b: 48 89 d8             	movq	%rbx, %rax
ffffffff80016f2e: 48 81 c4 80 00 00 00 	addq	$0x80, %rsp
ffffffff80016f35: 5b                   	popq	%rbx
ffffffff80016f36: 41 5e                	popq	%r14
ffffffff80016f38: 5d                   	popq	%rbp
ffffffff80016f39: c3                   	retq
ffffffff80016f3a: 4c 8b 4c 24 30       	movq	0x30(%rsp), %r9
ffffffff80016f3f: 4c 8b 54 24 38       	movq	0x38(%rsp), %r10
ffffffff80016f44: 44 8b 5c 24 40       	movl	0x40(%rsp), %r11d
ffffffff80016f49: 4c 8b 74 24 44       	movq	0x44(%rsp), %r14
ffffffff80016f4e: 8b 6c 24 4c          	movl	0x4c(%rsp), %ebp
ffffffff80016f52: 4c 89 43 08          	movq	%r8, 0x8(%rbx)
ffffffff80016f56: 48 89 7b 10          	movq	%rdi, 0x10(%rbx)
ffffffff80016f5a: 48 89 73 18          	movq	%rsi, 0x18(%rbx)
ffffffff80016f5e: 4c 89 4b 20          	movq	%r9, 0x20(%rbx)
ffffffff80016f62: 4c 89 53 28          	movq	%r10, 0x28(%rbx)
ffffffff80016f66: 89 53 30             	movl	%edx, 0x30(%rbx)
ffffffff80016f69: 44 89 5b 34          	movl	%r11d, 0x34(%rbx)
ffffffff80016f6d: 66 89 4b 38          	movw	%cx, 0x38(%rbx)
ffffffff80016f71: 66 89 43 3a          	movw	%ax, 0x3a(%rbx)
ffffffff80016f75: 4c 89 73 3c          	movq	%r14, 0x3c(%rbx)
ffffffff80016f79: 89 6b 44             	movl	%ebp, 0x44(%rbx)
ffffffff80016f7c: 48 c7 43 48 40 00 00 00      	movq	$0x40, 0x48(%rbx)
ffffffff80016f84: 48 c7 03 00 00 00 00 	movq	$0x0, (%rbx)
ffffffff80016f8b: eb 9e                	jmp	0xffffffff80016f2b <<goblin::elf::header::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h1766452b94fc5744+0x1bb>
ffffffff80016f8d: 8b 74 24 10          	movl	0x10(%rsp), %esi
ffffffff80016f91: 48 8b 7c 24 14       	movq	0x14(%rsp), %rdi
ffffffff80016f96: 4c 8b 44 24 1c       	movq	0x1c(%rsp), %r8
ffffffff80016f9b: 4d 89 c1             	movq	%r8, %r9
ffffffff80016f9e: 89 73 08             	movl	%esi, 0x8(%rbx)
ffffffff80016fa1: 48 89 7b 0c          	movq	%rdi, 0xc(%rbx)
ffffffff80016fa5: 44 89 43 14          	movl	%r8d, 0x14(%rbx)
ffffffff80016fa9: 49 c1 e8 20          	shrq	$0x20, %r8
ffffffff80016fad: 49 c1 e9 30          	shrq	$0x30, %r9
ffffffff80016fb1: 8b 74 24 30          	movl	0x30(%rsp), %esi
ffffffff80016fb5: 8b 7c 24 34          	movl	0x34(%rsp), %edi
ffffffff80016fb9: 4c 8b 54 24 38       	movq	0x38(%rsp), %r10
ffffffff80016fbe: 44 8b 5c 24 40       	movl	0x40(%rsp), %r11d
ffffffff80016fc3: 48 89 53 18          	movq	%rdx, 0x18(%rbx)
ffffffff80016fc7: 48 89 4b 20          	movq	%rcx, 0x20(%rbx)
ffffffff80016fcb: 48 89 73 28          	movq	%rsi, 0x28(%rbx)
ffffffff80016fcf: 89 43 30             	movl	%eax, 0x30(%rbx)
ffffffff80016fd2: 89 7b 34             	movl	%edi, 0x34(%rbx)
ffffffff80016fd5: 66 44 89 43 38       	movw	%r8w, 0x38(%rbx)
ffffffff80016fda: 66 44 89 4b 3a       	movw	%r9w, 0x3a(%rbx)
ffffffff80016fdf: 4c 89 53 3c          	movq	%r10, 0x3c(%rbx)
ffffffff80016fe3: 44 89 5b 44          	movl	%r11d, 0x44(%rbx)
ffffffff80016fe7: 48 c7 43 48 34 00 00 00      	movq	$0x34, 0x48(%rbx)
ffffffff80016fef: 48 c7 03 00 00 00 00 	movq	$0x0, (%rbx)
ffffffff80016ff6: e9 30 ff ff ff       	jmp	0xffffffff80016f2b <<goblin::elf::header::Header as scroll::ctx::TryFromCtx<scroll::endian::Endian>>::try_from_ctx::h1766452b94fc5744+0x1bb>
ffffffff80016ffb: bf 01 00 00 00       	movl	$0x1, %edi
ffffffff80017000: be 09 00 00 00       	movl	$0x9, %esi
ffffffff80017005: 48 c7 c2 00 2d 02 80 	movq	$-0x7ffdd300, %rdx      # imm = 0x80022D00
ffffffff8001700c: e8 36 1b 00 00       	callq	0xffffffff80018b47 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff80017011: cc                   	int3
ffffffff80017012: cc                   	int3
ffffffff80017013: cc                   	int3
ffffffff80017014: cc                   	int3
ffffffff80017015: cc                   	int3
ffffffff80017016: cc                   	int3
ffffffff80017017: cc                   	int3
ffffffff80017018: cc                   	int3
ffffffff80017019: cc                   	int3
ffffffff8001701a: cc                   	int3
ffffffff8001701b: cc                   	int3
ffffffff8001701c: cc                   	int3
ffffffff8001701d: cc                   	int3
ffffffff8001701e: cc                   	int3
ffffffff8001701f: cc                   	int3

ffffffff80017020 <<&T as core::fmt::Debug>::fmt::h87bd255f019d4b5e>:
ffffffff80017020: 48 8b 3f             	movq	(%rdi), %rdi
ffffffff80017023: 8b 46 24             	movl	0x24(%rsi), %eax
ffffffff80017026: a8 10                	testb	$0x10, %al
ffffffff80017028: 0f 85 f2 22 00 00    	jne	0xffffffff80019320 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hd0e7c1aefe0075e3>
ffffffff8001702e: a8 20                	testb	$0x20, %al
ffffffff80017030: 0f 85 6a 23 00 00    	jne	0xffffffff800193a0 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::h869006add1042b35>
ffffffff80017036: e9 85 48 00 00       	jmp	0xffffffff8001b8c0 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f>
ffffffff8001703b: cc                   	int3
ffffffff8001703c: cc                   	int3
ffffffff8001703d: cc                   	int3
ffffffff8001703e: cc                   	int3
ffffffff8001703f: cc                   	int3

ffffffff80017040 <<&T as core::fmt::Debug>::fmt::haa1b80f645ed0511>:
ffffffff80017040: 48 89 f2             	movq	%rsi, %rdx
ffffffff80017043: 48 8b 07             	movq	(%rdi), %rax
ffffffff80017046: 48 8b 38             	movq	(%rax), %rdi
ffffffff80017049: 48 8b 70 08          	movq	0x8(%rax), %rsi
ffffffff8001704d: e9 ee 33 00 00       	jmp	0xffffffff8001a440 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790>
ffffffff80017052: cc                   	int3
ffffffff80017053: cc                   	int3
ffffffff80017054: cc                   	int3
ffffffff80017055: cc                   	int3
ffffffff80017056: cc                   	int3
ffffffff80017057: cc                   	int3
ffffffff80017058: cc                   	int3
ffffffff80017059: cc                   	int3
ffffffff8001705a: cc                   	int3
ffffffff8001705b: cc                   	int3
ffffffff8001705c: cc                   	int3
ffffffff8001705d: cc                   	int3
ffffffff8001705e: cc                   	int3
ffffffff8001705f: cc                   	int3

ffffffff80017060 <<&T as core::fmt::Debug>::fmt::hca55e085813c69c7>:
ffffffff80017060: 50                   	pushq	%rax
ffffffff80017061: 48 8b 07             	movq	(%rdi), %rax
ffffffff80017064: 48 8b 08             	movq	(%rax), %rcx
ffffffff80017067: 48 85 c9             	testq	%rcx, %rcx
ffffffff8001706a: 74 2d                	je	0xffffffff80017099 <<&T as core::fmt::Debug>::fmt::hca55e085813c69c7+0x39>
ffffffff8001706c: 83 f9 01             	cmpl	$0x1, %ecx
ffffffff8001706f: 75 68                	jne	0xffffffff800170d9 <<&T as core::fmt::Debug>::fmt::hca55e085813c69c7+0x79>
ffffffff80017071: 48 83 c0 08          	addq	$0x8, %rax
ffffffff80017075: 48 89 04 24          	movq	%rax, (%rsp)
ffffffff80017079: 48 89 e1             	movq	%rsp, %rcx
ffffffff8001707c: ba 09 00 00 00       	movl	$0x9, %edx
ffffffff80017081: 48 89 f7             	movq	%rsi, %rdi
ffffffff80017084: 48 c7 c6 11 2f 02 80 	movq	$-0x7ffdd0ef, %rsi      # imm = 0x80022F11
ffffffff8001708b: 49 c7 c0 e8 2e 02 80 	movq	$-0x7ffdd118, %r8       # imm = 0x80022EE8
ffffffff80017092: e8 c9 2f 00 00       	callq	0xffffffff8001a060 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>
ffffffff80017097: 59                   	popq	%rcx
ffffffff80017098: c3                   	retq
ffffffff80017099: 4c 8d 48 08          	leaq	0x8(%rax), %r9
ffffffff8001709d: 48 83 c0 10          	addq	$0x10, %rax
ffffffff800170a1: 48 89 04 24          	movq	%rax, (%rsp)
ffffffff800170a5: 48 83 ec 08          	subq	$0x8, %rsp
ffffffff800170a9: 48 8d 44 24 08       	leaq	0x8(%rsp), %rax
ffffffff800170ae: ba 06 00 00 00       	movl	$0x6, %edx
ffffffff800170b3: 41 b8 04 00 00 00    	movl	$0x4, %r8d
ffffffff800170b9: 48 89 f7             	movq	%rsi, %rdi
ffffffff800170bc: 48 c7 c6 08 2f 02 80 	movq	$-0x7ffdd0f8, %rsi      # imm = 0x80022F08
ffffffff800170c3: 48 c7 c1 74 d0 01 80 	movq	$-0x7ffe2f8c, %rcx      # imm = 0x8001D074
ffffffff800170ca: 68 e8 2e 02 80       	pushq	$-0x7ffdd118            # imm = 0x80022EE8
ffffffff800170cf: 50                   	pushq	%rax
ffffffff800170d0: 6a 03                	pushq	$0x3
ffffffff800170d2: 68 0e 2f 02 80       	pushq	$-0x7ffdd0f2            # imm = 0x80022F0E
ffffffff800170d7: eb 3e                	jmp	0xffffffff80017117 <<&T as core::fmt::Debug>::fmt::hca55e085813c69c7+0xb7>
ffffffff800170d9: 4c 8d 48 08          	leaq	0x8(%rax), %r9
ffffffff800170dd: 48 83 c0 10          	addq	$0x10, %rax
ffffffff800170e1: 48 89 04 24          	movq	%rax, (%rsp)
ffffffff800170e5: 48 83 ec 08          	subq	$0x8, %rsp
ffffffff800170e9: 48 8d 44 24 08       	leaq	0x8(%rsp), %rax
ffffffff800170ee: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff800170f3: 41 b8 04 00 00 00    	movl	$0x4, %r8d
ffffffff800170f9: 48 89 f7             	movq	%rsi, %rdi
ffffffff800170fc: 48 c7 c6 40 d1 01 80 	movq	$-0x7ffe2ec0, %rsi      # imm = 0x8001D140
ffffffff80017103: 48 c7 c1 74 d0 01 80 	movq	$-0x7ffe2f8c, %rcx      # imm = 0x8001D074
ffffffff8001710a: 68 20 2f 02 80       	pushq	$-0x7ffdd0e0            # imm = 0x80022F20
ffffffff8001710f: 50                   	pushq	%rax
ffffffff80017110: 6a 03                	pushq	$0x3
ffffffff80017112: 68 40 2f 02 80       	pushq	$-0x7ffdd0c0            # imm = 0x80022F40
ffffffff80017117: 68 c8 2e 02 80       	pushq	$-0x7ffdd138            # imm = 0x80022EC8
ffffffff8001711c: e8 1f 2e 00 00       	callq	0xffffffff80019f40 <core::fmt::Formatter::debug_struct_field2_finish::h83a85978f04b0b76>
ffffffff80017121: 48 83 c4 30          	addq	$0x30, %rsp
ffffffff80017125: 59                   	popq	%rcx
ffffffff80017126: c3                   	retq
ffffffff80017127: cc                   	int3
ffffffff80017128: cc                   	int3
ffffffff80017129: cc                   	int3
ffffffff8001712a: cc                   	int3
ffffffff8001712b: cc                   	int3
ffffffff8001712c: cc                   	int3
ffffffff8001712d: cc                   	int3
ffffffff8001712e: cc                   	int3
ffffffff8001712f: cc                   	int3

ffffffff80017130 <<&T as core::fmt::Debug>::fmt::hdc0b5eeb18b013ab>:
ffffffff80017130: 48 8b 3f             	movq	(%rdi), %rdi
ffffffff80017133: 8b 46 24             	movl	0x24(%rsi), %eax
ffffffff80017136: a8 10                	testb	$0x10, %al
ffffffff80017138: 0f 85 e2 21 00 00    	jne	0xffffffff80019320 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hd0e7c1aefe0075e3>
ffffffff8001713e: a8 20                	testb	$0x20, %al
ffffffff80017140: 0f 85 5a 22 00 00    	jne	0xffffffff800193a0 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::h869006add1042b35>
ffffffff80017146: e9 75 47 00 00       	jmp	0xffffffff8001b8c0 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f>
ffffffff8001714b: cc                   	int3
ffffffff8001714c: cc                   	int3
ffffffff8001714d: cc                   	int3
ffffffff8001714e: cc                   	int3
ffffffff8001714f: cc                   	int3

ffffffff80017150 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09f62a01ec113f1c>:
ffffffff80017150: 8b 46 24             	movl	0x24(%rsi), %eax
ffffffff80017153: a8 10                	testb	$0x10, %al
ffffffff80017155: 0f 85 c5 21 00 00    	jne	0xffffffff80019320 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hd0e7c1aefe0075e3>
ffffffff8001715b: a8 20                	testb	$0x20, %al
ffffffff8001715d: 0f 85 3d 22 00 00    	jne	0xffffffff800193a0 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::h869006add1042b35>
ffffffff80017163: e9 58 47 00 00       	jmp	0xffffffff8001b8c0 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f>
ffffffff80017168: cc                   	int3
ffffffff80017169: cc                   	int3
ffffffff8001716a: cc                   	int3
ffffffff8001716b: cc                   	int3
ffffffff8001716c: cc                   	int3
ffffffff8001716d: cc                   	int3
ffffffff8001716e: cc                   	int3
ffffffff8001716f: cc                   	int3

ffffffff80017170 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3>:
ffffffff80017170: 55                   	pushq	%rbp
ffffffff80017171: 41 57                	pushq	%r15
ffffffff80017173: 41 56                	pushq	%r14
ffffffff80017175: 41 55                	pushq	%r13
ffffffff80017177: 41 54                	pushq	%r12
ffffffff80017179: 53                   	pushq	%rbx
ffffffff8001717a: 48 81 ec 98 00 00 00 	subq	$0x98, %rsp
ffffffff80017181: 48 89 fb             	movq	%rdi, %rbx
ffffffff80017184: 48 89 4c 24 50       	movq	%rcx, 0x50(%rsp)
ffffffff80017189: 4c 89 44 24 58       	movq	%r8, 0x58(%rsp)
ffffffff8001718e: 48 89 c8             	movq	%rcx, %rax
ffffffff80017191: 4c 01 c0             	addq	%r8, %rax
ffffffff80017194: 40 0f 92 c7          	setb	%dil
ffffffff80017198: 40 f6 d7             	notb	%dil
ffffffff8001719b: 0f 92 44 24 0f       	setb	0xf(%rsp)
ffffffff800171a0: 48 39 d0             	cmpq	%rdx, %rax
ffffffff800171a3: 0f 96 c0             	setbe	%al
ffffffff800171a6: 40 84 c7             	testb	%al, %dil
ffffffff800171a9: 0f 85 aa 00 00 00    	jne	0xffffffff80017259 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0xe9>
ffffffff800171af: 48 89 54 24 60       	movq	%rdx, 0x60(%rsp)
ffffffff800171b4: 48 8d 44 24 58       	leaq	0x58(%rsp), %rax
ffffffff800171b9: 48 89 44 24 10       	movq	%rax, 0x10(%rsp)
ffffffff800171be: 48 c7 44 24 18 c0 b8 01 80   	movq	$-0x7ffe4740, 0x18(%rsp) # imm = 0x8001B8C0
ffffffff800171c7: 48 8d 44 24 50       	leaq	0x50(%rsp), %rax
ffffffff800171cc: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff800171d1: 48 c7 44 24 28 c0 b8 01 80   	movq	$-0x7ffe4740, 0x28(%rsp) # imm = 0x8001B8C0
ffffffff800171da: 48 8d 44 24 60       	leaq	0x60(%rsp), %rax
ffffffff800171df: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff800171e4: 48 c7 44 24 38 c0 b8 01 80   	movq	$-0x7ffe4740, 0x38(%rsp) # imm = 0x8001B8C0
ffffffff800171ed: 48 8d 44 24 0f       	leaq	0xf(%rsp), %rax
ffffffff800171f2: 48 89 44 24 40       	movq	%rax, 0x40(%rsp)
ffffffff800171f7: 48 c7 44 24 48 10 a4 01 80   	movq	$-0x7ffe5bf0, 0x48(%rsp) # imm = 0x8001A410
ffffffff80017200: 48 c7 44 24 68 08 30 02 80   	movq	$-0x7ffdcff8, 0x68(%rsp) # imm = 0x80023008
ffffffff80017209: 48 c7 44 24 70 04 00 00 00   	movq	$0x4, 0x70(%rsp)
ffffffff80017212: 48 c7 84 24 88 00 00 00 00 00 00 00  	movq	$0x0, 0x88(%rsp)
ffffffff8001721e: 48 8d 44 24 10       	leaq	0x10(%rsp), %rax
ffffffff80017223: 48 89 44 24 78       	movq	%rax, 0x78(%rsp)
ffffffff80017228: 48 c7 84 24 80 00 00 00 04 00 00 00  	movq	$0x4, 0x80(%rsp)
ffffffff80017234: 48 8d 7b 10          	leaq	0x10(%rbx), %rdi
ffffffff80017238: 48 8d 74 24 68       	leaq	0x68(%rsp), %rsi
ffffffff8001723d: e8 1e 19 00 00       	callq	0xffffffff80018b60 <alloc::fmt::format::format_inner::ha57507f8e4bcde35>
ffffffff80017242: 48 c7 43 08 03 00 00 00      	movq	$0x3, 0x8(%rbx)
ffffffff8001724a: 48 b8 00 00 00 00 00 00 00 80	movabsq	$-0x8000000000000000, %rax # imm = 0x8000000000000000
ffffffff80017254: e9 aa 01 00 00       	jmp	0xffffffff80017403 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x293>
ffffffff80017259: 4d 89 c6             	movq	%r8, %r14
ffffffff8001725c: 48 01 ce             	addq	%rcx, %rsi
ffffffff8001725f: c6 44 24 28 00       	movb	$0x0, 0x28(%rsp)
ffffffff80017264: 44 88 4c 24 29       	movb	%r9b, 0x29(%rsp)
ffffffff80017269: 48 89 74 24 38       	movq	%rsi, 0x38(%rsp)
ffffffff8001726e: 4c 89 44 24 40       	movq	%r8, 0x40(%rsp)
ffffffff80017273: 48 c7 44 24 10 00 00 00 00   	movq	$0x0, 0x10(%rsp)
ffffffff8001727c: 48 c7 44 24 18 08 00 00 00   	movq	$0x8, 0x18(%rsp)
ffffffff80017285: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff8001728e: 4d 85 c0             	testq	%r8, %r8
ffffffff80017291: 0f 84 31 01 00 00    	je	0xffffffff800173c8 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x258>
ffffffff80017297: 4c 8d 7c 24 68       	leaq	0x68(%rsp), %r15
ffffffff8001729c: 31 c0                	xorl	%eax, %eax
ffffffff8001729e: 31 ed                	xorl	%ebp, %ebp
ffffffff800172a0: 49 29 ee             	subq	%rbp, %r14
ffffffff800172a3: 48 01 ee             	addq	%rbp, %rsi
ffffffff800172a6: 84 c0                	testb	%al, %al
ffffffff800172a8: 74 56                	je	0xffffffff80017300 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x190>
ffffffff800172aa: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff800172b0: 0f b6 c0             	movzbl	%al, %eax
ffffffff800172b3: 83 f8 01             	cmpl	$0x1, %eax
ffffffff800172b6: 75 38                	jne	0xffffffff800172f0 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x180>
ffffffff800172b8: 4c 39 f2             	cmpq	%r14, %rdx
ffffffff800172bb: 0f 87 6b 01 00 00    	ja	0xffffffff8001742c <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x2bc>
ffffffff800172c1: 48 85 d2             	testq	%rdx, %rdx
ffffffff800172c4: 74 1f                	je	0xffffffff800172e5 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x175>
ffffffff800172c6: 31 c0                	xorl	%eax, %eax
ffffffff800172c8: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
ffffffff800172d0: 49 39 c6             	cmpq	%rax, %r14
ffffffff800172d3: 74 49                	je	0xffffffff8001731e <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x1ae>
ffffffff800172d5: 44 38 0c 06          	cmpb	%r9b, (%rsi,%rax)
ffffffff800172d9: 74 0e                	je	0xffffffff800172e9 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x179>
ffffffff800172db: 48 ff c0             	incq	%rax
ffffffff800172de: 48 39 c2             	cmpq	%rax, %rdx
ffffffff800172e1: 75 ed                	jne	0xffffffff800172d0 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x160>
ffffffff800172e3: eb 0b                	jmp	0xffffffff800172f0 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x180>
ffffffff800172e5: 31 d2                	xorl	%edx, %edx
ffffffff800172e7: eb 47                	jmp	0xffffffff80017330 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x1c0>
ffffffff800172e9: 48 89 c2             	movq	%rax, %rdx
ffffffff800172ec: 0f 1f 40 00          	nopl	(%rax)
ffffffff800172f0: 4c 39 f2             	cmpq	%r14, %rdx
ffffffff800172f3: 76 3b                	jbe	0xffffffff80017330 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x1c0>
ffffffff800172f5: e9 32 01 00 00       	jmp	0xffffffff8001742c <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x2bc>
ffffffff800172fa: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff80017300: 31 d2                	xorl	%edx, %edx
ffffffff80017302: 4d 85 f6             	testq	%r14, %r14
ffffffff80017305: 74 29                	je	0xffffffff80017330 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x1c0>
ffffffff80017307: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
ffffffff80017310: 44 38 0c 16          	cmpb	%r9b, (%rsi,%rdx)
ffffffff80017314: 74 da                	je	0xffffffff800172f0 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x180>
ffffffff80017316: 48 ff c2             	incq	%rdx
ffffffff80017319: 49 39 d6             	cmpq	%rdx, %r14
ffffffff8001731c: 75 f2                	jne	0xffffffff80017310 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x1a0>
ffffffff8001731e: 4c 89 f2             	movq	%r14, %rdx
ffffffff80017321: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
ffffffff80017330: 4c 89 ff             	movq	%r15, %rdi
ffffffff80017333: e8 68 4c 00 00       	callq	0xffffffff8001bfa0 <core::str::converts::from_utf8::h68e3eef28d6cf63d>
ffffffff80017338: 83 7c 24 68 01       	cmpl	$0x1, 0x68(%rsp)
ffffffff8001733d: 0f 84 d8 00 00 00    	je	0xffffffff8001741b <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x2ab>
ffffffff80017343: 4c 8b 64 24 70       	movq	0x70(%rsp), %r12
ffffffff80017348: 4c 8b 74 24 78       	movq	0x78(%rsp), %r14
ffffffff8001734d: 4c 8b 6c 24 20       	movq	0x20(%rsp), %r13
ffffffff80017352: 4c 3b 6c 24 10       	cmpq	0x10(%rsp), %r13
ffffffff80017357: 75 11                	jne	0xffffffff8001736a <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x1fa>
ffffffff80017359: 48 8d 7c 24 10       	leaq	0x10(%rsp), %rdi
ffffffff8001735e: 48 c7 c6 a8 2f 02 80 	movq	$-0x7ffdd058, %rsi      # imm = 0x80022FA8
ffffffff80017365: e8 b6 e5 ff ff       	callq	0xffffffff80015920 <alloc::raw_vec::RawVec<T,A>::grow_one::h297af90850e82a42>
ffffffff8001736a: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff8001736f: 4a 8d 0c 6d 00 00 00 00      	leaq	(,%r13,2), %rcx
ffffffff80017377: 4c 01 e9             	addq	%r13, %rcx
ffffffff8001737a: 48 89 2c c8          	movq	%rbp, (%rax,%rcx,8)
ffffffff8001737e: 4c 89 64 c8 08       	movq	%r12, 0x8(%rax,%rcx,8)
ffffffff80017383: 4c 89 74 c8 10       	movq	%r14, 0x10(%rax,%rcx,8)
ffffffff80017388: 49 ff c5             	incq	%r13
ffffffff8001738b: 4c 89 6c 24 20       	movq	%r13, 0x20(%rsp)
ffffffff80017390: 4c 01 f5             	addq	%r14, %rbp
ffffffff80017393: 48 ff c5             	incq	%rbp
ffffffff80017396: 4c 8b 74 24 40       	movq	0x40(%rsp), %r14
ffffffff8001739b: 4c 39 f5             	cmpq	%r14, %rbp
ffffffff8001739e: 73 28                	jae	0xffffffff800173c8 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x258>
ffffffff800173a0: 48 8b 74 24 38       	movq	0x38(%rsp), %rsi
ffffffff800173a5: 0f b6 44 24 28       	movzbl	0x28(%rsp), %eax
ffffffff800173aa: 44 0f b6 4c 24 29    	movzbl	0x29(%rsp), %r9d
ffffffff800173b0: 48 8b 54 24 30       	movq	0x30(%rsp), %rdx
ffffffff800173b5: 49 29 ee             	subq	%rbp, %r14
ffffffff800173b8: 48 01 ee             	addq	%rbp, %rsi
ffffffff800173bb: 84 c0                	testb	%al, %al
ffffffff800173bd: 0f 85 ed fe ff ff    	jne	0xffffffff800172b0 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x140>
ffffffff800173c3: e9 38 ff ff ff       	jmp	0xffffffff80017300 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x190>
ffffffff800173c8: 48 8b 44 24 40       	movq	0x40(%rsp), %rax
ffffffff800173cd: 48 89 43 30          	movq	%rax, 0x30(%rbx)
ffffffff800173d1: 48 8b 44 24 38       	movq	0x38(%rsp), %rax
ffffffff800173d6: 48 89 43 28          	movq	%rax, 0x28(%rbx)
ffffffff800173da: 48 8b 44 24 30       	movq	0x30(%rsp), %rax
ffffffff800173df: 48 89 43 20          	movq	%rax, 0x20(%rbx)
ffffffff800173e3: 48 8b 44 24 28       	movq	0x28(%rsp), %rax
ffffffff800173e8: 48 89 43 18          	movq	%rax, 0x18(%rbx)
ffffffff800173ec: 48 8b 44 24 20       	movq	0x20(%rsp), %rax
ffffffff800173f1: 48 89 43 10          	movq	%rax, 0x10(%rbx)
ffffffff800173f5: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff800173fa: 48 8b 4c 24 18       	movq	0x18(%rsp), %rcx
ffffffff800173ff: 48 89 4b 08          	movq	%rcx, 0x8(%rbx)
ffffffff80017403: 48 89 03             	movq	%rax, (%rbx)
ffffffff80017406: 48 89 d8             	movq	%rbx, %rax
ffffffff80017409: 48 81 c4 98 00 00 00 	addq	$0x98, %rsp
ffffffff80017410: 5b                   	popq	%rbx
ffffffff80017411: 41 5c                	popq	%r12
ffffffff80017413: 41 5d                	popq	%r13
ffffffff80017415: 41 5e                	popq	%r14
ffffffff80017417: 41 5f                	popq	%r15
ffffffff80017419: 5d                   	popq	%rbp
ffffffff8001741a: c3                   	retq
ffffffff8001741b: b9 02 00 00 00       	movl	$0x2, %ecx
ffffffff80017420: 48 c7 c0 84 29 02 80 	movq	$-0x7ffdd67c, %rax      # imm = 0x80022984
ffffffff80017427: 4c 89 f2             	movq	%r14, %rdx
ffffffff8001742a: eb 05                	jmp	0xffffffff80017431 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x2c1>
ffffffff8001742c: 4c 89 f0             	movq	%r14, %rax
ffffffff8001742f: 31 c9                	xorl	%ecx, %ecx
ffffffff80017431: 48 89 4b 08          	movq	%rcx, 0x8(%rbx)
ffffffff80017435: 48 89 53 10          	movq	%rdx, 0x10(%rbx)
ffffffff80017439: 48 89 43 18          	movq	%rax, 0x18(%rbx)
ffffffff8001743d: 48 c7 43 20 0c 00 00 00      	movq	$0xc, 0x20(%rbx)
ffffffff80017445: 48 b8 00 00 00 00 00 00 00 80	movabsq	$-0x8000000000000000, %rax # imm = 0x8000000000000000
ffffffff8001744f: 48 89 03             	movq	%rax, (%rbx)
ffffffff80017452: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff80017457: 48 85 c0             	testq	%rax, %rax
ffffffff8001745a: 74 aa                	je	0xffffffff80017406 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x296>
ffffffff8001745c: 48 8b 7c 24 18       	movq	0x18(%rsp), %rdi
ffffffff80017461: 48 c1 e0 03          	shlq	$0x3, %rax
ffffffff80017465: 48 8d 34 40          	leaq	(%rax,%rax,2), %rsi
ffffffff80017469: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff8001746e: e8 cd 78 ff ff       	callq	0xffffffff8000ed40 <__rust_dealloc>
ffffffff80017473: eb 91                	jmp	0xffffffff80017406 <goblin::strtab::Strtab::parse::h5c4227a3febe12c3+0x296>
ffffffff80017475: cc                   	int3
ffffffff80017476: cc                   	int3
ffffffff80017477: cc                   	int3
ffffffff80017478: cc                   	int3
ffffffff80017479: cc                   	int3
ffffffff8001747a: cc                   	int3
ffffffff8001747b: cc                   	int3
ffffffff8001747c: cc                   	int3
ffffffff8001747d: cc                   	int3
ffffffff8001747e: cc                   	int3
ffffffff8001747f: cc                   	int3

ffffffff80017480 <goblin::strtab::Strtab::get_at::h79549c4c464d6553>:
ffffffff80017480: 48 8b 57 10          	movq	0x10(%rdi), %rdx
ffffffff80017484: 31 c0                	xorl	%eax, %eax
ffffffff80017486: 48 85 d2             	testq	%rdx, %rdx
ffffffff80017489: 74 4f                	je	0xffffffff800174da <goblin::strtab::Strtab::get_at::h79549c4c464d6553+0x5a>
ffffffff8001748b: 48 8b 4f 08          	movq	0x8(%rdi), %rcx
ffffffff8001748f: 48 83 fa 01          	cmpq	$0x1, %rdx
ffffffff80017493: 74 2d                	je	0xffffffff800174c2 <goblin::strtab::Strtab::get_at::h79549c4c464d6553+0x42>
ffffffff80017495: 31 ff                	xorl	%edi, %edi
ffffffff80017497: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
ffffffff800174a0: 49 89 d0             	movq	%rdx, %r8
ffffffff800174a3: 49 d1 e8             	shrq	%r8
ffffffff800174a6: 49 8d 04 38          	leaq	(%r8,%rdi), %rax
ffffffff800174aa: 4c 8d 0c 40          	leaq	(%rax,%rax,2), %r9
ffffffff800174ae: 4a 39 34 c9          	cmpq	%rsi, (%rcx,%r9,8)
ffffffff800174b2: 48 0f 47 c7          	cmovaq	%rdi, %rax
ffffffff800174b6: 4c 29 c2             	subq	%r8, %rdx
ffffffff800174b9: 48 89 c7             	movq	%rax, %rdi
ffffffff800174bc: 48 83 fa 01          	cmpq	$0x1, %rdx
ffffffff800174c0: 77 de                	ja	0xffffffff800174a0 <goblin::strtab::Strtab::get_at::h79549c4c464d6553+0x20>
ffffffff800174c2: 48 8d 14 40          	leaq	(%rax,%rax,2), %rdx
ffffffff800174c6: 48 8b 3c d1          	movq	(%rcx,%rdx,8), %rdi
ffffffff800174ca: 48 39 f7             	cmpq	%rsi, %rdi
ffffffff800174cd: 75 0c                	jne	0xffffffff800174db <goblin::strtab::Strtab::get_at::h79549c4c464d6553+0x5b>
ffffffff800174cf: 48 8b 44 d1 08       	movq	0x8(%rcx,%rdx,8), %rax
ffffffff800174d4: 48 8b 54 d1 10       	movq	0x10(%rcx,%rdx,8), %rdx
ffffffff800174d9: c3                   	retq
ffffffff800174da: c3                   	retq
ffffffff800174db: 48 83 d0 00          	adcq	$0x0, %rax
ffffffff800174df: 74 2b                	je	0xffffffff8001750c <goblin::strtab::Strtab::get_at::h79549c4c464d6553+0x8c>
ffffffff800174e1: 48 8d 3c 40          	leaq	(%rax,%rax,2), %rdi
ffffffff800174e5: 48 8b 44 f9 f0       	movq	-0x10(%rcx,%rdi,8), %rax
ffffffff800174ea: 48 8b 54 f9 f8       	movq	-0x8(%rcx,%rdi,8), %rdx
ffffffff800174ef: 48 2b 74 f9 e8       	subq	-0x18(%rcx,%rdi,8), %rsi
ffffffff800174f4: 75 07                	jne	0xffffffff800174fd <goblin::strtab::Strtab::get_at::h79549c4c464d6553+0x7d>
ffffffff800174f6: 48 29 f2             	subq	%rsi, %rdx
ffffffff800174f9: 48 01 f0             	addq	%rsi, %rax
ffffffff800174fc: c3                   	retq
ffffffff800174fd: 48 39 f2             	cmpq	%rsi, %rdx
ffffffff80017500: 76 08                	jbe	0xffffffff8001750a <goblin::strtab::Strtab::get_at::h79549c4c464d6553+0x8a>
ffffffff80017502: 80 3c 30 c0          	cmpb	$-0x40, (%rax,%rsi)
ffffffff80017506: 7d ee                	jge	0xffffffff800174f6 <goblin::strtab::Strtab::get_at::h79549c4c464d6553+0x76>
ffffffff80017508: eb 02                	jmp	0xffffffff8001750c <goblin::strtab::Strtab::get_at::h79549c4c464d6553+0x8c>
ffffffff8001750a: 74 ea                	je	0xffffffff800174f6 <goblin::strtab::Strtab::get_at::h79549c4c464d6553+0x76>
ffffffff8001750c: 31 c0                	xorl	%eax, %eax
ffffffff8001750e: c3                   	retq
ffffffff8001750f: cc                   	int3

ffffffff80017510 <<&T as core::fmt::Debug>::fmt::h1009f963b9ab3bfa>:
ffffffff80017510: 48 89 f2             	movq	%rsi, %rdx
ffffffff80017513: 48 8b 07             	movq	(%rdi), %rax
ffffffff80017516: 48 8b 78 08          	movq	0x8(%rax), %rdi
ffffffff8001751a: 48 8b 70 10          	movq	0x10(%rax), %rsi
ffffffff8001751e: e9 1d 2f 00 00       	jmp	0xffffffff8001a440 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790>
ffffffff80017523: cc                   	int3
ffffffff80017524: cc                   	int3
ffffffff80017525: cc                   	int3
ffffffff80017526: cc                   	int3
ffffffff80017527: cc                   	int3
ffffffff80017528: cc                   	int3
ffffffff80017529: cc                   	int3
ffffffff8001752a: cc                   	int3
ffffffff8001752b: cc                   	int3
ffffffff8001752c: cc                   	int3
ffffffff8001752d: cc                   	int3
ffffffff8001752e: cc                   	int3
ffffffff8001752f: cc                   	int3

ffffffff80017530 <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52>:
ffffffff80017530: 48 89 f8             	movq	%rdi, %rax
ffffffff80017533: f7 c1 00 01 00 00    	testl	$0x100, %ecx            # imm = 0x100
ffffffff80017539: 75 17                	jne	0xffffffff80017552 <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0x22>
ffffffff8001753b: f6 c1 01             	testb	$0x1, %cl
ffffffff8001753e: 74 29                	je	0xffffffff80017569 <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0x39>
ffffffff80017540: 48 83 fa 04          	cmpq	$0x4, %rdx
ffffffff80017544: 0f 83 87 00 00 00    	jae	0xffffffff800175d1 <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0xa1>
ffffffff8001754a: 49 89 d0             	movq	%rdx, %r8
ffffffff8001754d: e9 ac 00 00 00       	jmp	0xffffffff800175fe <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0xce>
ffffffff80017552: f6 c1 01             	testb	$0x1, %cl
ffffffff80017555: 74 42                	je	0xffffffff80017599 <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0x69>
ffffffff80017557: 48 83 fa 08          	cmpq	$0x8, %rdx
ffffffff8001755b: 0f 83 c8 00 00 00    	jae	0xffffffff80017629 <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0xf9>
ffffffff80017561: 49 89 d0             	movq	%rdx, %r8
ffffffff80017564: e9 ee 00 00 00       	jmp	0xffffffff80017657 <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0x127>
ffffffff80017569: 48 83 fa 04          	cmpq	$0x4, %rdx
ffffffff8001756d: 72 0e                	jb	0xffffffff8001757d <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0x4d>
ffffffff8001756f: 48 83 c2 fc          	addq	$-0x4, %rdx
ffffffff80017573: 48 83 fa 04          	cmpq	$0x4, %rdx
ffffffff80017577: 0f 83 fe 00 00 00    	jae	0xffffffff8001767b <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0x14b>
ffffffff8001757d: 48 89 50 18          	movq	%rdx, 0x18(%rax)
ffffffff80017581: 48 c7 40 08 00 00 00 00      	movq	$0x0, 0x8(%rax)
ffffffff80017589: 48 c7 40 10 04 00 00 00      	movq	$0x4, 0x10(%rax)
ffffffff80017591: 48 c7 00 02 00 00 00 	movq	$0x2, (%rax)
ffffffff80017598: c3                   	retq
ffffffff80017599: 48 83 fa 08          	cmpq	$0x8, %rdx
ffffffff8001759d: 72 0e                	jb	0xffffffff800175ad <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0x7d>
ffffffff8001759f: 48 83 c2 f8          	addq	$-0x8, %rdx
ffffffff800175a3: 48 83 fa 08          	cmpq	$0x8, %rdx
ffffffff800175a7: 0f 83 fd 00 00 00    	jae	0xffffffff800176aa <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0x17a>
ffffffff800175ad: 48 c7 40 08 00 00 00 00      	movq	$0x0, 0x8(%rax)
ffffffff800175b5: 48 c7 40 10 08 00 00 00      	movq	$0x8, 0x10(%rax)
ffffffff800175bd: 48 89 50 18          	movq	%rdx, 0x18(%rax)
ffffffff800175c1: 48 c7 40 20 10 00 00 00      	movq	$0x10, 0x20(%rax)
ffffffff800175c9: 48 c7 00 02 00 00 00 	movq	$0x2, (%rax)
ffffffff800175d0: c3                   	retq
ffffffff800175d1: f7 c1 00 00 01 00    	testl	$0x10000, %ecx          # imm = 0x10000
ffffffff800175d7: 44 8b 06             	movl	(%rsi), %r8d
ffffffff800175da: 44 89 c7             	movl	%r8d, %edi
ffffffff800175dd: 0f cf                	bswapl	%edi
ffffffff800175df: 41 0f 44 f8          	cmovel	%r8d, %edi
ffffffff800175e3: 4c 8d 42 fc          	leaq	-0x4(%rdx), %r8
ffffffff800175e7: 49 83 f8 04          	cmpq	$0x4, %r8
ffffffff800175eb: 72 11                	jb	0xffffffff800175fe <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0xce>
ffffffff800175ed: 48 83 c2 f8          	addq	$-0x8, %rdx
ffffffff800175f1: 49 89 d0             	movq	%rdx, %r8
ffffffff800175f4: 48 83 fa 04          	cmpq	$0x4, %rdx
ffffffff800175f8: 0f 83 de 00 00 00    	jae	0xffffffff800176dc <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0x1ac>
ffffffff800175fe: c7 40 1c 00 00 00 00 	movl	$0x0, 0x1c(%rax)
ffffffff80017605: 48 c7 40 20 0c 00 00 00      	movq	$0xc, 0x20(%rax)
ffffffff8001760d: 48 c7 40 08 00 00 00 00      	movq	$0x0, 0x8(%rax)
ffffffff80017615: 48 c7 40 10 04 00 00 00      	movq	$0x4, 0x10(%rax)
ffffffff8001761d: 44 89 40 18          	movl	%r8d, 0x18(%rax)
ffffffff80017621: 48 c7 00 02 00 00 00 	movq	$0x2, (%rax)
ffffffff80017628: c3                   	retq
ffffffff80017629: f7 c1 00 00 01 00    	testl	$0x10000, %ecx          # imm = 0x10000
ffffffff8001762f: 4c 8b 06             	movq	(%rsi), %r8
ffffffff80017632: 4c 89 c7             	movq	%r8, %rdi
ffffffff80017635: 48 0f cf             	bswapq	%rdi
ffffffff80017638: 49 0f 44 f8          	cmoveq	%r8, %rdi
ffffffff8001763c: 4c 8d 42 f8          	leaq	-0x8(%rdx), %r8
ffffffff80017640: 49 83 f8 08          	cmpq	$0x8, %r8
ffffffff80017644: 72 11                	jb	0xffffffff80017657 <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0x127>
ffffffff80017646: 48 83 c2 f0          	addq	$-0x10, %rdx
ffffffff8001764a: 49 89 d0             	movq	%rdx, %r8
ffffffff8001764d: 48 83 fa 08          	cmpq	$0x8, %rdx
ffffffff80017651: 0f 83 b4 00 00 00    	jae	0xffffffff8001770b <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0x1db>
ffffffff80017657: 48 c7 40 08 00 00 00 00      	movq	$0x0, 0x8(%rax)
ffffffff8001765f: 48 c7 40 10 08 00 00 00      	movq	$0x8, 0x10(%rax)
ffffffff80017667: 4c 89 40 18          	movq	%r8, 0x18(%rax)
ffffffff8001766b: 48 c7 40 20 18 00 00 00      	movq	$0x18, 0x20(%rax)
ffffffff80017673: 48 c7 00 02 00 00 00 	movq	$0x2, (%rax)
ffffffff8001767a: c3                   	retq
ffffffff8001767b: f7 c1 00 00 01 00    	testl	$0x10000, %ecx          # imm = 0x10000
ffffffff80017681: 8b 0e                	movl	(%rsi), %ecx
ffffffff80017683: 8b 56 04             	movl	0x4(%rsi), %edx
ffffffff80017686: 89 cf                	movl	%ecx, %edi
ffffffff80017688: 0f cf                	bswapl	%edi
ffffffff8001768a: 0f 44 f9             	cmovel	%ecx, %edi
ffffffff8001768d: 89 d6                	movl	%edx, %esi
ffffffff8001768f: 0f ce                	bswapl	%esi
ffffffff80017691: 0f 44 f2             	cmovel	%edx, %esi
ffffffff80017694: 40 0f b6 ce          	movzbl	%sil, %ecx
ffffffff80017698: 89 f2                	movl	%esi, %edx
ffffffff8001769a: c1 ea 08             	shrl	$0x8, %edx
ffffffff8001769d: be 08 00 00 00       	movl	$0x8, %esi
ffffffff800176a2: 45 31 c9             	xorl	%r9d, %r9d
ffffffff800176a5: e9 95 00 00 00       	jmp	0xffffffff8001773f <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0x20f>
ffffffff800176aa: f7 c1 00 00 01 00    	testl	$0x10000, %ecx          # imm = 0x10000
ffffffff800176b0: 48 8b 0e             	movq	(%rsi), %rcx
ffffffff800176b3: 48 89 cf             	movq	%rcx, %rdi
ffffffff800176b6: 48 0f cf             	bswapq	%rdi
ffffffff800176b9: 48 8b 56 08          	movq	0x8(%rsi), %rdx
ffffffff800176bd: 48 0f 44 f9          	cmoveq	%rcx, %rdi
ffffffff800176c1: 48 89 d1             	movq	%rdx, %rcx
ffffffff800176c4: 48 0f c9             	bswapq	%rcx
ffffffff800176c7: 48 0f 44 ca          	cmoveq	%rdx, %rcx
ffffffff800176cb: 48 89 ca             	movq	%rcx, %rdx
ffffffff800176ce: 48 c1 ea 20          	shrq	$0x20, %rdx
ffffffff800176d2: be 10 00 00 00       	movl	$0x10, %esi
ffffffff800176d7: 45 31 c9             	xorl	%r9d, %r9d
ffffffff800176da: eb 63                	jmp	0xffffffff8001773f <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0x20f>
ffffffff800176dc: f7 c1 00 00 01 00    	testl	$0x10000, %ecx          # imm = 0x10000
ffffffff800176e2: 8b 4e 04             	movl	0x4(%rsi), %ecx
ffffffff800176e5: 8b 56 08             	movl	0x8(%rsi), %edx
ffffffff800176e8: 89 ce                	movl	%ecx, %esi
ffffffff800176ea: 0f ce                	bswapl	%esi
ffffffff800176ec: 0f 44 f1             	cmovel	%ecx, %esi
ffffffff800176ef: 89 d1                	movl	%edx, %ecx
ffffffff800176f1: 0f c9                	bswapl	%ecx
ffffffff800176f3: 0f 44 ca             	cmovel	%edx, %ecx
ffffffff800176f6: 89 ff                	movl	%edi, %edi
ffffffff800176f8: 4c 63 c1             	movslq	%ecx, %r8
ffffffff800176fb: 40 0f b6 ce          	movzbl	%sil, %ecx
ffffffff800176ff: 89 f2                	movl	%esi, %edx
ffffffff80017701: c1 ea 08             	shrl	$0x8, %edx
ffffffff80017704: be 0c 00 00 00       	movl	$0xc, %esi
ffffffff80017709: eb 2e                	jmp	0xffffffff80017739 <<goblin::elf::reloc::Reloc as scroll::ctx::TryFromCtx<(bool,goblin::container::Ctx)>>::try_from_ctx::h677334bdbe13ed52+0x209>
ffffffff8001770b: f7 c1 00 00 01 00    	testl	$0x10000, %ecx          # imm = 0x10000
ffffffff80017711: 48 8b 56 08          	movq	0x8(%rsi), %rdx
ffffffff80017715: 48 89 d1             	movq	%rdx, %rcx
ffffffff80017718: 48 0f c9             	bswapq	%rcx
ffffffff8001771b: 48 8b 76 10          	movq	0x10(%rsi), %rsi
ffffffff8001771f: 48 0f 44 ca          	cmoveq	%rdx, %rcx
ffffffff80017723: 49 89 f0             	movq	%rsi, %r8
ffffffff80017726: 49 0f c8             	bswapq	%r8
ffffffff80017729: 4c 0f 44 c6          	cmoveq	%rsi, %r8
ffffffff8001772d: 48 89 ca             	movq	%rcx, %rdx
ffffffff80017730: 48 c1 ea 20          	shrq	$0x20, %rdx
ffffffff80017734: be 18 00 00 00       	movl	$0x18, %esi
ffffffff80017739: 41 b9 01 00 00 00    	movl	$0x1, %r9d
ffffffff8001773f: 4c 89 08             	movq	%r9, (%rax)
ffffffff80017742: 4c 89 40 08          	movq	%r8, 0x8(%rax)
ffffffff80017746: 48 89 78 10          	movq	%rdi, 0x10(%rax)
ffffffff8001774a: 48 89 50 18          	movq	%rdx, 0x18(%rax)
ffffffff8001774e: 89 48 20             	movl	%ecx, 0x20(%rax)
ffffffff80017751: 48 89 70 28          	movq	%rsi, 0x28(%rax)
ffffffff80017755: c3                   	retq
ffffffff80017756: cc                   	int3
ffffffff80017757: cc                   	int3
ffffffff80017758: cc                   	int3
ffffffff80017759: cc                   	int3
ffffffff8001775a: cc                   	int3
ffffffff8001775b: cc                   	int3
ffffffff8001775c: cc                   	int3
ffffffff8001775d: cc                   	int3
ffffffff8001775e: cc                   	int3
ffffffff8001775f: cc                   	int3

ffffffff80017760 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085>:
ffffffff80017760: 41 57                	pushq	%r15
ffffffff80017762: 41 56                	pushq	%r14
ffffffff80017764: 41 54                	pushq	%r12
ffffffff80017766: 53                   	pushq	%rbx
ffffffff80017767: 48 83 ec 38          	subq	$0x38, %rsp
ffffffff8001776b: 4c 8b 37             	movq	(%rdi), %r14
ffffffff8001776e: 4c 8b 7f 08          	movq	0x8(%rdi), %r15
ffffffff80017772: b0 01                	movb	$0x1, %al
ffffffff80017774: 4d 39 f7             	cmpq	%r14, %r15
ffffffff80017777: 0f 86 3c 02 00 00    	jbe	0xffffffff800179b9 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x259>
ffffffff8001777d: 4d 85 f6             	testq	%r14, %r14
ffffffff80017780: 0f 84 3f 02 00 00    	je	0xffffffff800179c5 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x265>
ffffffff80017786: 49 83 fe f7          	cmpq	$-0x9, %r14
ffffffff8001778a: 0f 87 29 02 00 00    	ja	0xffffffff800179b9 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x259>
ffffffff80017790: 49 83 c6 07          	addq	$0x7, %r14
ffffffff80017794: 49 83 e6 f8          	andq	$-0x8, %r14
ffffffff80017798: 49 83 e7 f8          	andq	$-0x8, %r15
ffffffff8001779c: 4c 89 f9             	movq	%r15, %rcx
ffffffff8001779f: 4c 29 f1             	subq	%r14, %rcx
ffffffff800177a2: 0f 86 11 02 00 00    	jbe	0xffffffff800179b9 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x259>
ffffffff800177a8: 48 8b 77 20          	movq	0x20(%rdi), %rsi
ffffffff800177ac: 48 85 f6             	testq	%rsi, %rsi
ffffffff800177af: 74 30                	je	0xffffffff800177e1 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x81>
ffffffff800177b1: 48 83 f9 1f          	cmpq	$0x1f, %rcx
ffffffff800177b5: 0f 86 fe 01 00 00    	jbe	0xffffffff800179b9 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x259>
ffffffff800177bb: 49 c7 06 03 00 00 00 	movq	$0x3, (%r14)
ffffffff800177c2: 49 8d 56 08          	leaq	0x8(%r14), %rdx
ffffffff800177c6: 4c 89 f8             	movq	%r15, %rax
ffffffff800177c9: 48 29 d0             	subq	%rdx, %rax
ffffffff800177cc: 48 3d 00 01 00 00    	cmpq	$0x100, %rax            # imm = 0x100
ffffffff800177d2: 73 74                	jae	0xffffffff80017848 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0xe8>
ffffffff800177d4: 48 8d 48 e8          	leaq	-0x18(%rax), %rcx
ffffffff800177d8: 48 c1 e9 03          	shrq	$0x3, %rcx
ffffffff800177dc: e9 c3 00 00 00       	jmp	0xffffffff800178a4 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x144>
ffffffff800177e1: 48 81 f9 0f 04 00 00 	cmpq	$0x40f, %rcx            # imm = 0x40F
ffffffff800177e8: 0f 86 cb 01 00 00    	jbe	0xffffffff800179b9 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x259>
ffffffff800177ee: 49 c7 06 01 00 00 00 	movq	$0x1, (%r14)
ffffffff800177f5: 49 8d 5e 08          	leaq	0x8(%r14), %rbx
ffffffff800177f9: ba 00 04 00 00       	movl	$0x400, %edx            # imm = 0x400
ffffffff800177fe: 49 89 fc             	movq	%rdi, %r12
ffffffff80017801: 48 89 df             	movq	%rbx, %rdi
ffffffff80017804: 31 f6                	xorl	%esi, %esi
ffffffff80017806: ff 15 24 ec 01 00    	callq	*0x1ec24(%rip)          # 0xffffffff80036430
ffffffff8001780c: 4c 89 e7             	movq	%r12, %rdi
ffffffff8001780f: 49 8d 86 08 04 00 00 	leaq	0x408(%r14), %rax
ffffffff80017816: 49 89 5c 24 20       	movq	%rbx, 0x20(%r12)
ffffffff8001781b: 49 8d b6 10 04 00 00 	leaq	0x410(%r14), %rsi
ffffffff80017822: 4c 89 fa             	movq	%r15, %rdx
ffffffff80017825: 48 29 f2             	subq	%rsi, %rdx
ffffffff80017828: 48 83 fa 17          	cmpq	$0x17, %rdx
ffffffff8001782c: 76 2f                	jbe	0xffffffff8001785d <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0xfd>
ffffffff8001782e: 48 81 fa 00 01 00 00 	cmpq	$0x100, %rdx            # imm = 0x100
ffffffff80017835: 0f 83 be 00 00 00    	jae	0xffffffff800178f9 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x199>
ffffffff8001783b: 48 8d 4a e8          	leaq	-0x18(%rdx), %rcx
ffffffff8001783f: 48 c1 e9 03          	shrq	$0x3, %rcx
ffffffff80017843: e9 f5 00 00 00       	jmp	0xffffffff8001793d <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x1dd>
ffffffff80017848: 48 3d 00 02 00 00    	cmpq	$0x200, %rax            # imm = 0x200
ffffffff8001784e: 73 26                	jae	0xffffffff80017876 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x116>
ffffffff80017850: 48 89 c1             	movq	%rax, %rcx
ffffffff80017853: 48 c1 e9 04          	shrq	$0x4, %rcx
ffffffff80017857: 48 83 c1 0d          	addq	$0xd, %rcx
ffffffff8001785b: eb 47                	jmp	0xffffffff800178a4 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x144>
ffffffff8001785d: 49 83 c7 f8          	addq	$-0x8, %r15
ffffffff80017861: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff80017866: 49 39 c7             	cmpq	%rax, %r15
ffffffff80017869: 74 03                	je	0xffffffff8001786e <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x10e>
ffffffff8001786b: 4c 89 38             	movq	%r15, (%rax)
ffffffff8001786e: 4c 89 f8             	movq	%r15, %rax
ffffffff80017871: e9 2c 01 00 00       	jmp	0xffffffff800179a2 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x242>
ffffffff80017876: 4c 0f bd c0          	bsrq	%rax, %r8
ffffffff8001787a: 49 83 f0 3f          	xorq	$0x3f, %r8
ffffffff8001787e: b1 3d                	movb	$0x3d, %cl
ffffffff80017880: 44 28 c1             	subb	%r8b, %cl
ffffffff80017883: 49 89 c1             	movq	%rax, %r9
ffffffff80017886: 49 d3 e9             	shrq	%cl, %r9
ffffffff80017889: 41 c1 e0 02          	shll	$0x2, %r8d
ffffffff8001788d: 4d 29 c1             	subq	%r8, %r9
ffffffff80017890: 49 81 c1 01 01 00 00 	addq	$0x101, %r9             # imm = 0x101
ffffffff80017897: 49 83 f9 7f          	cmpq	$0x7f, %r9
ffffffff8001789b: b9 7f 00 00 00       	movl	$0x7f, %ecx
ffffffff800178a0: 49 0f 42 c9          	cmovbq	%r9, %rcx
ffffffff800178a4: 4c 8d 04 ce          	leaq	(%rsi,%rcx,8), %r8
ffffffff800178a8: 48 8b 34 ce          	movq	(%rsi,%rcx,8), %rsi
ffffffff800178ac: 48 85 f6             	testq	%rsi, %rsi
ffffffff800178af: 74 14                	je	0xffffffff800178c5 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x165>
ffffffff800178b1: 49 89 76 08          	movq	%rsi, 0x8(%r14)
ffffffff800178b5: 4d 89 46 10          	movq	%r8, 0x10(%r14)
ffffffff800178b9: 49 89 10             	movq	%rdx, (%r8)
ffffffff800178bc: 48 83 c6 08          	addq	$0x8, %rsi
ffffffff800178c0: 49 89 f0             	movq	%rsi, %r8
ffffffff800178c3: eb 24                	jmp	0xffffffff800178e9 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x189>
ffffffff800178c5: 31 f6                	xorl	%esi, %esi
ffffffff800178c7: 48 83 f9 40          	cmpq	$0x40, %rcx
ffffffff800178cb: 40 0f 93 c6          	setae	%sil
ffffffff800178cf: 41 b9 01 00 00 00    	movl	$0x1, %r9d
ffffffff800178d5: 49 d3 e1             	shlq	%cl, %r9
ffffffff800178d8: 4c 31 4c f7 10       	xorq	%r9, 0x10(%rdi,%rsi,8)
ffffffff800178dd: 49 c7 46 08 00 00 00 00      	movq	$0x0, 0x8(%r14)
ffffffff800178e5: 4d 89 46 10          	movq	%r8, 0x10(%r14)
ffffffff800178e9: 49 89 10             	movq	%rdx, (%r8)
ffffffff800178ec: 49 89 46 18          	movq	%rax, 0x18(%r14)
ffffffff800178f0: 49 89 47 f8          	movq	%rax, -0x8(%r15)
ffffffff800178f4: e9 af 00 00 00       	jmp	0xffffffff800179a8 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x248>
ffffffff800178f9: 48 81 fa 00 02 00 00 	cmpq	$0x200, %rdx            # imm = 0x200
ffffffff80017900: 73 0d                	jae	0xffffffff8001790f <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x1af>
ffffffff80017902: 48 89 d1             	movq	%rdx, %rcx
ffffffff80017905: 48 c1 e9 04          	shrq	$0x4, %rcx
ffffffff80017909: 48 83 c1 0d          	addq	$0xd, %rcx
ffffffff8001790d: eb 2e                	jmp	0xffffffff8001793d <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x1dd>
ffffffff8001790f: 4c 0f bd c2          	bsrq	%rdx, %r8
ffffffff80017913: 49 83 f0 3f          	xorq	$0x3f, %r8
ffffffff80017917: b1 3d                	movb	$0x3d, %cl
ffffffff80017919: 44 28 c1             	subb	%r8b, %cl
ffffffff8001791c: 49 89 d1             	movq	%rdx, %r9
ffffffff8001791f: 49 d3 e9             	shrq	%cl, %r9
ffffffff80017922: 41 c1 e0 02          	shll	$0x2, %r8d
ffffffff80017926: 4d 29 c1             	subq	%r8, %r9
ffffffff80017929: 49 81 c1 01 01 00 00 	addq	$0x101, %r9             # imm = 0x101
ffffffff80017930: 49 83 f9 7f          	cmpq	$0x7f, %r9
ffffffff80017934: b9 7f 00 00 00       	movl	$0x7f, %ecx
ffffffff80017939: 49 0f 42 c9          	cmovbq	%r9, %rcx
ffffffff8001793d: 4c 8d 04 cb          	leaq	(%rbx,%rcx,8), %r8
ffffffff80017941: 4c 8b 0c cb          	movq	(%rbx,%rcx,8), %r9
ffffffff80017945: 4d 85 c9             	testq	%r9, %r9
ffffffff80017948: 74 1a                	je	0xffffffff80017964 <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x204>
ffffffff8001794a: 4d 89 8e 10 04 00 00 	movq	%r9, 0x410(%r14)
ffffffff80017951: 4d 89 86 18 04 00 00 	movq	%r8, 0x418(%r14)
ffffffff80017958: 49 89 30             	movq	%rsi, (%r8)
ffffffff8001795b: 49 83 c1 08          	addq	$0x8, %r9
ffffffff8001795f: 4d 89 c8             	movq	%r9, %r8
ffffffff80017962: eb 2b                	jmp	0xffffffff8001798f <<talc::oom_handler::ClaimOnOom as talc::oom_handler::OomHandler>::handle_oom::h16aa29185e97b085+0x22f>
ffffffff80017964: 45 31 c9             	xorl	%r9d, %r9d
ffffffff80017967: 48 83 f9 40          	cmpq	$0x40, %rcx
ffffffff8001796b: 41 0f 93 c1          	setae	%r9b
ffffffff8001796f: 41 ba 01 00 00 00    	movl	$0x1, %r10d
ffffffff80017975: 49 d3 e2             	shlq	%cl, %r10
ffffffff80017978: 4e 31 54 cf 10       	xorq	%r10, 0x10(%rdi,%r9,8)
ffffffff8001797d: 49 c7 86 10 04 00 00 00 00 00 00     	movq	$0x0, 0x410(%r14)
ffffffff80017988: 4d 89 86 18 04 00 00 	movq	%r8, 0x418(%r14)
ffffffff8001798f: 49 89 30             	movq	%rsi, (%r8)
ffffffff80017992: 49 89 96 20 04 00 00 	movq	%rdx, 0x420(%r14)
ffffffff80017999: 49 89 57 f8          	movq	%rdx, -0x8(%r15)
ffffffff8001799d: b9 03 00 00 00       	movl	$0x3, %ecx
ffffffff800179a2: 49 01 ce             	addq	%rcx, %r14
ffffffff800179a5: 4c 89 30             	movq	%r14, (%rax)
ffffffff800179a8: 48 c7 47 08 00 00 00 00      	movq	$0x0, 0x8(%rdi)
ffffffff800179b0: 48 c7 07 00 00 00 00 	movq	$0x0, (%rdi)
ffffffff800179b7: 31 c0                	xorl	%eax, %eax
ffffffff800179b9: 48 83 c4 38          	addq	$0x38, %rsp
ffffffff800179bd: 5b                   	popq	%rbx
ffffffff800179be: 41 5c                	popq	%r12
ffffffff800179c0: 41 5e                	popq	%r14
ffffffff800179c2: 41 5f                	popq	%r15
ffffffff800179c4: c3                   	retq
ffffffff800179c5: 48 c7 44 24 08 c0 30 02 80   	movq	$-0x7ffdcf40, 0x8(%rsp) # imm = 0x800230C0
ffffffff800179ce: 48 c7 44 24 10 01 00 00 00   	movq	$0x1, 0x10(%rsp)
ffffffff800179d7: 48 c7 44 24 28 00 00 00 00   	movq	$0x0, 0x28(%rsp)
ffffffff800179e0: 48 c7 44 24 18 08 00 00 00   	movq	$0x8, 0x18(%rsp)
ffffffff800179e9: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff800179f2: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff800179f7: 48 c7 c6 d0 30 02 80 	movq	$-0x7ffdcf30, %rsi      # imm = 0x800230D0
ffffffff800179fe: e8 ed 49 00 00       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff80017a03: cc                   	int3
ffffffff80017a04: cc                   	int3
ffffffff80017a05: cc                   	int3
ffffffff80017a06: cc                   	int3
ffffffff80017a07: cc                   	int3
ffffffff80017a08: cc                   	int3
ffffffff80017a09: cc                   	int3
ffffffff80017a0a: cc                   	int3
ffffffff80017a0b: cc                   	int3
ffffffff80017a0c: cc                   	int3
ffffffff80017a0d: cc                   	int3
ffffffff80017a0e: cc                   	int3
ffffffff80017a0f: cc                   	int3

ffffffff80017a10 <talc::ptr_utils::align_up::h3dc09199da0d2fc9>:
ffffffff80017a10: 48 8d 47 07          	leaq	0x7(%rdi), %rax
ffffffff80017a14: 48 83 e0 f8          	andq	$-0x8, %rax
ffffffff80017a18: c3                   	retq
ffffffff80017a19: cc                   	int3
ffffffff80017a1a: cc                   	int3
ffffffff80017a1b: cc                   	int3
ffffffff80017a1c: cc                   	int3
ffffffff80017a1d: cc                   	int3
ffffffff80017a1e: cc                   	int3
ffffffff80017a1f: cc                   	int3

ffffffff80017a20 <talc::talc::tag::Tag::write::h1e76d32195c79b2e>:
ffffffff80017a20: 89 d0                	movl	%edx, %eax
ffffffff80017a22: 48 8d 04 46          	leaq	(%rsi,%rax,2), %rax
ffffffff80017a26: 48 ff c0             	incq	%rax
ffffffff80017a29: 48 89 07             	movq	%rax, (%rdi)
ffffffff80017a2c: c3                   	retq
ffffffff80017a2d: cc                   	int3
ffffffff80017a2e: cc                   	int3
ffffffff80017a2f: cc                   	int3

ffffffff80017a30 <talc::ptr_utils::align_down::h6c85a3b2ada70f65>:
ffffffff80017a30: 48 89 f8             	movq	%rdi, %rax
ffffffff80017a33: 48 83 e0 f8          	andq	$-0x8, %rax
ffffffff80017a37: c3                   	retq
ffffffff80017a38: cc                   	int3
ffffffff80017a39: cc                   	int3
ffffffff80017a3a: cc                   	int3
ffffffff80017a3b: cc                   	int3
ffffffff80017a3c: cc                   	int3
ffffffff80017a3d: cc                   	int3
ffffffff80017a3e: cc                   	int3
ffffffff80017a3f: cc                   	int3

ffffffff80017a40 <talc::talc::tag::Tag::set_above_free::hb00f2bbb4a63b30b>:
ffffffff80017a40: 48 83 07 02          	addq	$0x2, (%rdi)
ffffffff80017a44: c3                   	retq
ffffffff80017a45: cc                   	int3
ffffffff80017a46: cc                   	int3
ffffffff80017a47: cc                   	int3
ffffffff80017a48: cc                   	int3
ffffffff80017a49: cc                   	int3
ffffffff80017a4a: cc                   	int3
ffffffff80017a4b: cc                   	int3
ffffffff80017a4c: cc                   	int3
ffffffff80017a4d: cc                   	int3
ffffffff80017a4e: cc                   	int3
ffffffff80017a4f: cc                   	int3

ffffffff80017a50 <talc::talc::tag::Tag::clear_above_free::hac6cde6801e53680>:
ffffffff80017a50: 48 83 07 fe          	addq	$-0x2, (%rdi)
ffffffff80017a54: c3                   	retq
ffffffff80017a55: cc                   	int3
ffffffff80017a56: cc                   	int3
ffffffff80017a57: cc                   	int3
ffffffff80017a58: cc                   	int3
ffffffff80017a59: cc                   	int3
ffffffff80017a5a: cc                   	int3
ffffffff80017a5b: cc                   	int3
ffffffff80017a5c: cc                   	int3
ffffffff80017a5d: cc                   	int3
ffffffff80017a5e: cc                   	int3
ffffffff80017a5f: cc                   	int3

ffffffff80017a60 <<log::Level as core::fmt::Display>::fmt::h000ffdd7435d1788>:
ffffffff80017a60: 48 89 f0             	movq	%rsi, %rax
ffffffff80017a63: 48 8b 0f             	movq	(%rdi), %rcx
ffffffff80017a66: 48 c1 e1 04          	shlq	$0x4, %rcx
ffffffff80017a6a: 48 8b b1 30 31 02 80 	movq	-0x7ffdced0(%rcx), %rsi
ffffffff80017a71: 48 8b 91 38 31 02 80 	movq	-0x7ffdcec8(%rcx), %rdx
ffffffff80017a78: 48 89 c7             	movq	%rax, %rdi
ffffffff80017a7b: e9 e0 21 00 00       	jmp	0xffffffff80019c60 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e>

ffffffff80017a80 <<log::NopLogger as log::Log>::enabled::h3974ef0408b93444>:
ffffffff80017a80: 31 c0                	xorl	%eax, %eax
ffffffff80017a82: c3                   	retq
ffffffff80017a83: cc                   	int3
ffffffff80017a84: cc                   	int3
ffffffff80017a85: cc                   	int3
ffffffff80017a86: cc                   	int3
ffffffff80017a87: cc                   	int3
ffffffff80017a88: cc                   	int3
ffffffff80017a89: cc                   	int3
ffffffff80017a8a: cc                   	int3
ffffffff80017a8b: cc                   	int3
ffffffff80017a8c: cc                   	int3
ffffffff80017a8d: cc                   	int3
ffffffff80017a8e: cc                   	int3
ffffffff80017a8f: cc                   	int3

ffffffff80017a90 <<log::NopLogger as log::Log>::log::h259ff80bad1c011e>:
ffffffff80017a90: c3                   	retq
ffffffff80017a91: cc                   	int3
ffffffff80017a92: cc                   	int3
ffffffff80017a93: cc                   	int3
ffffffff80017a94: cc                   	int3
ffffffff80017a95: cc                   	int3
ffffffff80017a96: cc                   	int3
ffffffff80017a97: cc                   	int3
ffffffff80017a98: cc                   	int3
ffffffff80017a99: cc                   	int3
ffffffff80017a9a: cc                   	int3
ffffffff80017a9b: cc                   	int3
ffffffff80017a9c: cc                   	int3
ffffffff80017a9d: cc                   	int3
ffffffff80017a9e: cc                   	int3
ffffffff80017a9f: cc                   	int3

ffffffff80017aa0 <<log::NopLogger as log::Log>::flush::h608f03e76d2b25da>:
ffffffff80017aa0: c3                   	retq
ffffffff80017aa1: cc                   	int3
ffffffff80017aa2: cc                   	int3
ffffffff80017aa3: cc                   	int3
ffffffff80017aa4: cc                   	int3
ffffffff80017aa5: cc                   	int3
ffffffff80017aa6: cc                   	int3
ffffffff80017aa7: cc                   	int3
ffffffff80017aa8: cc                   	int3
ffffffff80017aa9: cc                   	int3
ffffffff80017aaa: cc                   	int3
ffffffff80017aab: cc                   	int3
ffffffff80017aac: cc                   	int3
ffffffff80017aad: cc                   	int3
ffffffff80017aae: cc                   	int3
ffffffff80017aaf: cc                   	int3

ffffffff80017ab0 <log::set_logger::h21c01bbeecbbb945>:
ffffffff80017ab0: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff80017ab5: 31 c0                	xorl	%eax, %eax
ffffffff80017ab7: f0                   	lock
ffffffff80017ab8: 48 0f b1 0d 50 e9 01 00      	cmpxchgq	%rcx, 0x1e950(%rip) # 0xffffffff80036410 <log::STATE::h392333f3740010ba>
ffffffff80017ac0: 48 89 c1             	movq	%rax, %rcx
ffffffff80017ac3: 0f 94 c0             	sete	%al
ffffffff80017ac6: 75 1c                	jne	0xffffffff80017ae4 <log::set_logger::h21c01bbeecbbb945+0x34>
ffffffff80017ac8: 48 89 3d b9 d5 00 00 	movq	%rdi, 0xd5b9(%rip)      # 0xffffffff80025088 <log::LOGGER::hdff3cf2907474344.0>
ffffffff80017acf: 48 89 35 ba d5 00 00 	movq	%rsi, 0xd5ba(%rip)      # 0xffffffff80025090 <log::LOGGER::hdff3cf2907474344.1>
ffffffff80017ad6: 48 c7 05 2f e9 01 00 02 00 00 00     	movq	$0x2, 0x1e92f(%rip) # 0xffffffff80036410 <log::STATE::h392333f3740010ba>
ffffffff80017ae1: 34 01                	xorb	$0x1, %al
ffffffff80017ae3: c3                   	retq
ffffffff80017ae4: 48 83 f9 01          	cmpq	$0x1, %rcx
ffffffff80017ae8: 75 22                	jne	0xffffffff80017b0c <log::set_logger::h21c01bbeecbbb945+0x5c>
ffffffff80017aea: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff80017af0: 48 8b 0d 19 e9 01 00 	movq	0x1e919(%rip), %rcx     # 0xffffffff80036410 <log::STATE::h392333f3740010ba>
ffffffff80017af7: 48 83 f9 01          	cmpq	$0x1, %rcx
ffffffff80017afb: 75 0f                	jne	0xffffffff80017b0c <log::set_logger::h21c01bbeecbbb945+0x5c>
ffffffff80017afd: f3 90                	pause
ffffffff80017aff: 48 8b 0d 0a e9 01 00 	movq	0x1e90a(%rip), %rcx     # 0xffffffff80036410 <log::STATE::h392333f3740010ba>
ffffffff80017b06: 48 83 f9 01          	cmpq	$0x1, %rcx
ffffffff80017b0a: 74 f1                	je	0xffffffff80017afd <log::set_logger::h21c01bbeecbbb945+0x4d>
ffffffff80017b0c: 34 01                	xorb	$0x1, %al
ffffffff80017b0e: c3                   	retq
ffffffff80017b0f: cc                   	int3

ffffffff80017b10 <log::__private_api::log_impl::hbf977b1a5812fb97>:
ffffffff80017b10: 55                   	pushq	%rbp
ffffffff80017b11: 41 57                	pushq	%r15
ffffffff80017b13: 41 56                	pushq	%r14
ffffffff80017b15: 41 55                	pushq	%r13
ffffffff80017b17: 41 54                	pushq	%r12
ffffffff80017b19: 53                   	pushq	%rbx
ffffffff80017b1a: 48 81 ec 88 00 00 00 	subq	$0x88, %rsp
ffffffff80017b21: 48 85 c9             	testq	%rcx, %rcx
ffffffff80017b24: 0f 85 db 00 00 00    	jne	0xffffffff80017c05 <log::__private_api::log_impl::hbf977b1a5812fb97+0xf5>
ffffffff80017b2a: 48 8b 02             	movq	(%rdx), %rax
ffffffff80017b2d: 48 8b 4a 08          	movq	0x8(%rdx), %rcx
ffffffff80017b31: 4c 8b 42 20          	movq	0x20(%rdx), %r8
ffffffff80017b35: 4c 8b 4a 18          	movq	0x18(%rdx), %r9
ffffffff80017b39: 48 8b 52 10          	movq	0x10(%rdx), %rdx
ffffffff80017b3d: 4c 8b 17             	movq	(%rdi), %r10
ffffffff80017b40: 4c 8b 5f 08          	movq	0x8(%rdi), %r11
ffffffff80017b44: 48 8b 5f 10          	movq	0x10(%rdi), %rbx
ffffffff80017b48: 4c 8b 77 18          	movq	0x18(%rdi), %r14
ffffffff80017b4c: 4c 8b 7f 20          	movq	0x20(%rdi), %r15
ffffffff80017b50: 48 8b 7f 28          	movq	0x28(%rdi), %rdi
ffffffff80017b54: 4d 8b 20             	movq	(%r8), %r12
ffffffff80017b57: 4d 8b 68 08          	movq	0x8(%r8), %r13
ffffffff80017b5b: 45 8b 40 10          	movl	0x10(%r8), %r8d
ffffffff80017b5f: 48 8b 2d aa e8 01 00 	movq	0x1e8aa(%rip), %rbp     # 0xffffffff80036410 <log::STATE::h392333f3740010ba>
ffffffff80017b66: 48 83 fd 02          	cmpq	$0x2, %rbp
ffffffff80017b6a: 48 89 74 24 38       	movq	%rsi, 0x38(%rsp)
ffffffff80017b6f: 48 89 44 24 40       	movq	%rax, 0x40(%rsp)
ffffffff80017b74: 48 89 4c 24 48       	movq	%rcx, 0x48(%rsp)
ffffffff80017b79: 4c 89 54 24 58       	movq	%r10, 0x58(%rsp)
ffffffff80017b7e: 4c 89 5c 24 60       	movq	%r11, 0x60(%rsp)
ffffffff80017b83: 48 89 5c 24 68       	movq	%rbx, 0x68(%rsp)
ffffffff80017b88: 4c 89 74 24 70       	movq	%r14, 0x70(%rsp)
ffffffff80017b8d: 4c 89 7c 24 78       	movq	%r15, 0x78(%rsp)
ffffffff80017b92: 48 89 bc 24 80 00 00 00      	movq	%rdi, 0x80(%rsp)
ffffffff80017b9a: 48 c7 44 24 08 00 00 00 00   	movq	$0x0, 0x8(%rsp)
ffffffff80017ba3: 48 89 54 24 10       	movq	%rdx, 0x10(%rsp)
ffffffff80017ba8: 4c 89 4c 24 18       	movq	%r9, 0x18(%rsp)
ffffffff80017bad: 48 c7 c0 e8 30 02 80 	movq	$-0x7ffdcf18, %rax      # imm = 0x800230E8
ffffffff80017bb4: 48 0f 44 05 d4 d4 00 00      	cmoveq	0xd4d4(%rip), %rax # 0xffffffff80025090 <log::LOGGER::hdff3cf2907474344.1>
ffffffff80017bbc: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff80017bc5: 4c 89 64 24 28       	movq	%r12, 0x28(%rsp)
ffffffff80017bca: 4c 89 6c 24 30       	movq	%r13, 0x30(%rsp)
ffffffff80017bcf: c7 44 24 50 01 00 00 00      	movl	$0x1, 0x50(%rsp)
ffffffff80017bd7: 44 89 44 24 54       	movl	%r8d, 0x54(%rsp)
ffffffff80017bdc: 48 c7 c7 90 31 02 80 	movq	$-0x7ffdce70, %rdi      # imm = 0x80023190
ffffffff80017be3: 48 0f 44 3d 9d d4 00 00      	cmoveq	0xd49d(%rip), %rdi # 0xffffffff80025088 <log::LOGGER::hdff3cf2907474344.0>
ffffffff80017beb: 48 8d 74 24 08       	leaq	0x8(%rsp), %rsi
ffffffff80017bf0: ff 50 20             	callq	*0x20(%rax)
ffffffff80017bf3: 48 81 c4 88 00 00 00 	addq	$0x88, %rsp
ffffffff80017bfa: 5b                   	popq	%rbx
ffffffff80017bfb: 41 5c                	popq	%r12
ffffffff80017bfd: 41 5d                	popq	%r13
ffffffff80017bff: 41 5e                	popq	%r14
ffffffff80017c01: 41 5f                	popq	%r15
ffffffff80017c03: 5d                   	popq	%rbp
ffffffff80017c04: c3                   	retq
ffffffff80017c05: 48 c7 44 24 08 e0 31 02 80   	movq	$-0x7ffdce20, 0x8(%rsp) # imm = 0x800231E0
ffffffff80017c0e: 48 c7 44 24 10 01 00 00 00   	movq	$0x1, 0x10(%rsp)
ffffffff80017c17: 48 c7 44 24 28 00 00 00 00   	movq	$0x0, 0x28(%rsp)
ffffffff80017c20: 48 c7 44 24 18 08 00 00 00   	movq	$0x8, 0x18(%rsp)
ffffffff80017c29: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff80017c32: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff80017c37: 48 c7 c6 58 32 02 80 	movq	$-0x7ffdcda8, %rsi      # imm = 0x80023258
ffffffff80017c3e: e8 ad 47 00 00       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff80017c43: cc                   	int3
ffffffff80017c44: cc                   	int3
ffffffff80017c45: cc                   	int3
ffffffff80017c46: cc                   	int3
ffffffff80017c47: cc                   	int3
ffffffff80017c48: cc                   	int3
ffffffff80017c49: cc                   	int3
ffffffff80017c4a: cc                   	int3
ffffffff80017c4b: cc                   	int3
ffffffff80017c4c: cc                   	int3
ffffffff80017c4d: cc                   	int3
ffffffff80017c4e: cc                   	int3
ffffffff80017c4f: cc                   	int3

ffffffff80017c50 <log::__private_api::loc::h7d13c00ac743e0a8>:
ffffffff80017c50: 48 89 f8             	movq	%rdi, %rax
ffffffff80017c53: c3                   	retq
ffffffff80017c54: cc                   	int3
ffffffff80017c55: cc                   	int3
ffffffff80017c56: cc                   	int3
ffffffff80017c57: cc                   	int3
ffffffff80017c58: cc                   	int3
ffffffff80017c59: cc                   	int3
ffffffff80017c5a: cc                   	int3
ffffffff80017c5b: cc                   	int3
ffffffff80017c5c: cc                   	int3
ffffffff80017c5d: cc                   	int3
ffffffff80017c5e: cc                   	int3
ffffffff80017c5f: cc                   	int3

ffffffff80017c60 <raw_cpuid::CpuId<raw_cpuid::native_cpuid::CpuIdReaderNative>::new::h4e0c54ad999a6cca>:
ffffffff80017c60: 55                   	pushq	%rbp
ffffffff80017c61: 41 57                	pushq	%r15
ffffffff80017c63: 41 56                	pushq	%r14
ffffffff80017c65: 41 55                	pushq	%r13
ffffffff80017c67: 41 54                	pushq	%r12
ffffffff80017c69: 53                   	pushq	%rbx
ffffffff80017c6a: 48 83 ec 28          	subq	$0x28, %rsp
ffffffff80017c6e: 48 89 fb             	movq	%rdi, %rbx
ffffffff80017c71: 31 c0                	xorl	%eax, %eax
ffffffff80017c73: 31 c9                	xorl	%ecx, %ecx
ffffffff80017c75: 49 89 dd             	movq	%rbx, %r13
ffffffff80017c78: 0f a2                	cpuid
ffffffff80017c7a: 4c 87 eb             	xchgq	%rbx, %r13
ffffffff80017c7d: 41 89 ce             	movl	%ecx, %r14d
ffffffff80017c80: 41 89 d7             	movl	%edx, %r15d
ffffffff80017c83: 89 c5                	movl	%eax, %ebp
ffffffff80017c85: 31 c9                	xorl	%ecx, %ecx
ffffffff80017c87: b8 00 00 00 80       	movl	$0x80000000, %eax       # imm = 0x80000000
ffffffff80017c8c: 48 89 de             	movq	%rbx, %rsi
ffffffff80017c8f: 0f a2                	cpuid
ffffffff80017c91: 48 87 f3             	xchgq	%rbx, %rsi
ffffffff80017c94: 41 89 c4             	movl	%eax, %r12d
ffffffff80017c97: 44 89 6c 24 04       	movl	%r13d, 0x4(%rsp)
ffffffff80017c9c: 44 89 7c 24 08       	movl	%r15d, 0x8(%rsp)
ffffffff80017ca1: 44 89 74 24 0c       	movl	%r14d, 0xc(%rsp)
ffffffff80017ca6: 48 8d 7c 24 10       	leaq	0x10(%rsp), %rdi
ffffffff80017cab: 48 8d 74 24 04       	leaq	0x4(%rsp), %rsi
ffffffff80017cb0: ba 0c 00 00 00       	movl	$0xc, %edx
ffffffff80017cb5: e8 e6 42 00 00       	callq	0xffffffff8001bfa0 <core::str::converts::from_utf8::h68e3eef28d6cf63d>
ffffffff80017cba: 0f b6 54 24 10       	movzbl	0x10(%rsp), %edx
ffffffff80017cbf: 48 c7 c0 70 32 02 80 	movq	$-0x7ffdcd90, %rax      # imm = 0x80023270
ffffffff80017cc6: 84 d2                	testb	%dl, %dl
ffffffff80017cc8: 75 05                	jne	0xffffffff80017ccf <raw_cpuid::CpuId<raw_cpuid::native_cpuid::CpuIdReaderNative>::new::h4e0c54ad999a6cca+0x6f>
ffffffff80017cca: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff80017ccf: b9 02 00 00 00       	movl	$0x2, %ecx
ffffffff80017cd4: f6 c2 01             	testb	$0x1, %dl
ffffffff80017cd7: 75 66                	jne	0xffffffff80017d3f <raw_cpuid::CpuId<raw_cpuid::native_cpuid::CpuIdReaderNative>::new::h4e0c54ad999a6cca+0xdf>
ffffffff80017cd9: 48 83 7c 24 20 0c    	cmpq	$0xc, 0x20(%rsp)
ffffffff80017cdf: 75 5e                	jne	0xffffffff80017d3f <raw_cpuid::CpuId<raw_cpuid::native_cpuid::CpuIdReaderNative>::new::h4e0c54ad999a6cca+0xdf>
ffffffff80017ce1: 48 b9 47 65 6e 75 69 6e 65 49	movabsq	$0x49656e69756e6547, %rcx # imm = 0x49656E69756E6547
ffffffff80017ceb: 48 33 08             	xorq	(%rax), %rcx
ffffffff80017cee: 8b 50 08             	movl	0x8(%rax), %edx
ffffffff80017cf1: 48 81 f2 6e 74 65 6c 	xorq	$0x6c65746e, %rdx       # imm = 0x6C65746E
ffffffff80017cf8: 48 09 ca             	orq	%rcx, %rdx
ffffffff80017cfb: 74 40                	je	0xffffffff80017d3d <raw_cpuid::CpuId<raw_cpuid::native_cpuid::CpuIdReaderNative>::new::h4e0c54ad999a6cca+0xdd>
ffffffff80017cfd: 48 ba 69 74 6e 65 68 74 75 41	movabsq	$0x41757468656e7469, %rdx # imm = 0x41757468656E7469
ffffffff80017d07: 48 8b 08             	movq	(%rax), %rcx
ffffffff80017d0a: 48 0f c9             	bswapq	%rcx
ffffffff80017d0d: 48 39 d1             	cmpq	%rdx, %rcx
ffffffff80017d10: 75 14                	jne	0xffffffff80017d26 <raw_cpuid::CpuId<raw_cpuid::native_cpuid::CpuIdReaderNative>::new::h4e0c54ad999a6cca+0xc6>
ffffffff80017d12: 8b 48 08             	movl	0x8(%rax), %ecx
ffffffff80017d15: 0f c9                	bswapl	%ecx
ffffffff80017d17: 31 c0                	xorl	%eax, %eax
ffffffff80017d19: 81 f9 44 4d 41 63    	cmpl	$0x63414d44, %ecx       # imm = 0x63414D44
ffffffff80017d1f: 74 0f                	je	0xffffffff80017d30 <raw_cpuid::CpuId<raw_cpuid::native_cpuid::CpuIdReaderNative>::new::h4e0c54ad999a6cca+0xd0>
ffffffff80017d21: ba 44 4d 41 63       	movl	$0x63414d44, %edx       # imm = 0x63414D44
ffffffff80017d26: 31 c0                	xorl	%eax, %eax
ffffffff80017d28: 48 39 d1             	cmpq	%rdx, %rcx
ffffffff80017d2b: 19 c0                	sbbl	%eax, %eax
ffffffff80017d2d: 83 c8 01             	orl	$0x1, %eax
ffffffff80017d30: 83 f8 01             	cmpl	$0x1, %eax
ffffffff80017d33: b9 02 00 00 00       	movl	$0x2, %ecx
ffffffff80017d38: 83 d9 00             	sbbl	$0x0, %ecx
ffffffff80017d3b: eb 02                	jmp	0xffffffff80017d3f <raw_cpuid::CpuId<raw_cpuid::native_cpuid::CpuIdReaderNative>::new::h4e0c54ad999a6cca+0xdf>
ffffffff80017d3d: 31 c9                	xorl	%ecx, %ecx
ffffffff80017d3f: 89 0b                	movl	%ecx, (%rbx)
ffffffff80017d41: 44 89 6b 04          	movl	%r13d, 0x4(%rbx)
ffffffff80017d45: 44 89 73 08          	movl	%r14d, 0x8(%rbx)
ffffffff80017d49: 44 89 7b 0c          	movl	%r15d, 0xc(%rbx)
ffffffff80017d4d: 89 6b 10             	movl	%ebp, 0x10(%rbx)
ffffffff80017d50: 44 89 63 14          	movl	%r12d, 0x14(%rbx)
ffffffff80017d54: 48 89 d8             	movq	%rbx, %rax
ffffffff80017d57: 48 83 c4 28          	addq	$0x28, %rsp
ffffffff80017d5b: 5b                   	popq	%rbx
ffffffff80017d5c: 41 5c                	popq	%r12
ffffffff80017d5e: 41 5d                	popq	%r13
ffffffff80017d60: 41 5e                	popq	%r14
ffffffff80017d62: 41 5f                	popq	%r15
ffffffff80017d64: 5d                   	popq	%rbp
ffffffff80017d65: c3                   	retq
ffffffff80017d66: cc                   	int3
ffffffff80017d67: cc                   	int3
ffffffff80017d68: cc                   	int3
ffffffff80017d69: cc                   	int3
ffffffff80017d6a: cc                   	int3
ffffffff80017d6b: cc                   	int3
ffffffff80017d6c: cc                   	int3
ffffffff80017d6d: cc                   	int3
ffffffff80017d6e: cc                   	int3
ffffffff80017d6f: cc                   	int3

ffffffff80017d70 <uart_16550::port::SerialPort::send::h7ba3044ed84686d9>:
ffffffff80017d70: 50                   	pushq	%rax
ffffffff80017d71: 40 80 fe 08          	cmpb	$0x8, %sil
ffffffff80017d75: 74 09                	je	0xffffffff80017d80 <uart_16550::port::SerialPort::send::h7ba3044ed84686d9+0x10>
ffffffff80017d77: 40 0f b6 c6          	movzbl	%sil, %eax
ffffffff80017d7b: 83 f8 7f             	cmpl	$0x7f, %eax
ffffffff80017d7e: 75 60                	jne	0xffffffff80017de0 <uart_16550::port::SerialPort::send::h7ba3044ed84686d9+0x70>
ffffffff80017d80: 0f b7 0f             	movzwl	(%rdi), %ecx
ffffffff80017d83: 89 ce                	movl	%ecx, %esi
ffffffff80017d85: 83 c6 05             	addl	$0x5, %esi
ffffffff80017d88: 89 f2                	movl	%esi, %edx
ffffffff80017d8a: ec                   	inb	%dx, %al
ffffffff80017d8b: a8 20                	testb	$0x20, %al
ffffffff80017d8d: 75 0a                	jne	0xffffffff80017d99 <uart_16550::port::SerialPort::send::h7ba3044ed84686d9+0x29>
ffffffff80017d8f: 90                   	nop
ffffffff80017d90: f3 90                	pause
ffffffff80017d92: 89 f2                	movl	%esi, %edx
ffffffff80017d94: ec                   	inb	%dx, %al
ffffffff80017d95: a8 20                	testb	$0x20, %al
ffffffff80017d97: 74 f7                	je	0xffffffff80017d90 <uart_16550::port::SerialPort::send::h7ba3044ed84686d9+0x20>
ffffffff80017d99: b0 08                	movb	$0x8, %al
ffffffff80017d9b: 89 ca                	movl	%ecx, %edx
ffffffff80017d9d: ee                   	outb	%al, %dx
ffffffff80017d9e: 89 f2                	movl	%esi, %edx
ffffffff80017da0: ec                   	inb	%dx, %al
ffffffff80017da1: a8 20                	testb	$0x20, %al
ffffffff80017da3: 75 14                	jne	0xffffffff80017db9 <uart_16550::port::SerialPort::send::h7ba3044ed84686d9+0x49>
ffffffff80017da5: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff80017db0: f3 90                	pause
ffffffff80017db2: 89 f2                	movl	%esi, %edx
ffffffff80017db4: ec                   	inb	%dx, %al
ffffffff80017db5: a8 20                	testb	$0x20, %al
ffffffff80017db7: 74 f7                	je	0xffffffff80017db0 <uart_16550::port::SerialPort::send::h7ba3044ed84686d9+0x40>
ffffffff80017db9: b0 20                	movb	$0x20, %al
ffffffff80017dbb: 89 ca                	movl	%ecx, %edx
ffffffff80017dbd: ee                   	outb	%al, %dx
ffffffff80017dbe: 89 f2                	movl	%esi, %edx
ffffffff80017dc0: ec                   	inb	%dx, %al
ffffffff80017dc1: a8 20                	testb	$0x20, %al
ffffffff80017dc3: 75 14                	jne	0xffffffff80017dd9 <uart_16550::port::SerialPort::send::h7ba3044ed84686d9+0x69>
ffffffff80017dc5: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff80017dd0: f3 90                	pause
ffffffff80017dd2: 89 f2                	movl	%esi, %edx
ffffffff80017dd4: ec                   	inb	%dx, %al
ffffffff80017dd5: a8 20                	testb	$0x20, %al
ffffffff80017dd7: 74 f7                	je	0xffffffff80017dd0 <uart_16550::port::SerialPort::send::h7ba3044ed84686d9+0x60>
ffffffff80017dd9: b0 08                	movb	$0x8, %al
ffffffff80017ddb: 89 ca                	movl	%ecx, %edx
ffffffff80017ddd: ee                   	outb	%al, %dx
ffffffff80017dde: 58                   	popq	%rax
ffffffff80017ddf: c3                   	retq
ffffffff80017de0: 0f b7 0f             	movzwl	(%rdi), %ecx
ffffffff80017de3: 89 ca                	movl	%ecx, %edx
ffffffff80017de5: 83 c2 05             	addl	$0x5, %edx
ffffffff80017de8: ec                   	inb	%dx, %al
ffffffff80017de9: a8 20                	testb	$0x20, %al
ffffffff80017deb: 75 0a                	jne	0xffffffff80017df7 <uart_16550::port::SerialPort::send::h7ba3044ed84686d9+0x87>
ffffffff80017ded: 0f 1f 00             	nopl	(%rax)
ffffffff80017df0: f3 90                	pause
ffffffff80017df2: ec                   	inb	%dx, %al
ffffffff80017df3: a8 20                	testb	$0x20, %al
ffffffff80017df5: 74 f9                	je	0xffffffff80017df0 <uart_16550::port::SerialPort::send::h7ba3044ed84686d9+0x80>
ffffffff80017df7: 89 f0                	movl	%esi, %eax
ffffffff80017df9: 89 ca                	movl	%ecx, %edx
ffffffff80017dfb: ee                   	outb	%al, %dx
ffffffff80017dfc: 58                   	popq	%rax
ffffffff80017dfd: c3                   	retq
ffffffff80017dfe: cc                   	int3
ffffffff80017dff: cc                   	int3

ffffffff80017e00 <<uart_16550::port::SerialPort as core::fmt::Write>::write_str::h587fdbce39b46b10>:
ffffffff80017e00: 48 85 d2             	testq	%rdx, %rdx
ffffffff80017e03: 74 3b                	je	0xffffffff80017e40 <<uart_16550::port::SerialPort as core::fmt::Write>::write_str::h587fdbce39b46b10+0x40>
ffffffff80017e05: 41 57                	pushq	%r15
ffffffff80017e07: 41 56                	pushq	%r14
ffffffff80017e09: 41 54                	pushq	%r12
ffffffff80017e0b: 53                   	pushq	%rbx
ffffffff80017e0c: 50                   	pushq	%rax
ffffffff80017e0d: 48 89 d3             	movq	%rdx, %rbx
ffffffff80017e10: 49 89 f6             	movq	%rsi, %r14
ffffffff80017e13: 49 89 ff             	movq	%rdi, %r15
ffffffff80017e16: 45 31 e4             	xorl	%r12d, %r12d
ffffffff80017e19: 0f 1f 80 00 00 00 00 	nopl	(%rax)
ffffffff80017e20: 43 0f b6 34 26       	movzbl	(%r14,%r12), %esi
ffffffff80017e25: 4c 89 ff             	movq	%r15, %rdi
ffffffff80017e28: e8 43 ff ff ff       	callq	0xffffffff80017d70 <uart_16550::port::SerialPort::send::h7ba3044ed84686d9>
ffffffff80017e2d: 49 ff c4             	incq	%r12
ffffffff80017e30: 4c 39 e3             	cmpq	%r12, %rbx
ffffffff80017e33: 75 eb                	jne	0xffffffff80017e20 <<uart_16550::port::SerialPort as core::fmt::Write>::write_str::h587fdbce39b46b10+0x20>
ffffffff80017e35: 48 83 c4 08          	addq	$0x8, %rsp
ffffffff80017e39: 5b                   	popq	%rbx
ffffffff80017e3a: 41 5c                	popq	%r12
ffffffff80017e3c: 41 5e                	popq	%r14
ffffffff80017e3e: 41 5f                	popq	%r15
ffffffff80017e40: 31 c0                	xorl	%eax, %eax
ffffffff80017e42: c3                   	retq
ffffffff80017e43: cc                   	int3
ffffffff80017e44: cc                   	int3
ffffffff80017e45: cc                   	int3
ffffffff80017e46: cc                   	int3
ffffffff80017e47: cc                   	int3
ffffffff80017e48: cc                   	int3
ffffffff80017e49: cc                   	int3
ffffffff80017e4a: cc                   	int3
ffffffff80017e4b: cc                   	int3
ffffffff80017e4c: cc                   	int3
ffffffff80017e4d: cc                   	int3
ffffffff80017e4e: cc                   	int3
ffffffff80017e4f: cc                   	int3

ffffffff80017e50 <<x86_64::addr::VirtAddrNotValid as core::fmt::Debug>::fmt::hc6ba96ade9a547b2>:
ffffffff80017e50: 41 56                	pushq	%r14
ffffffff80017e52: 53                   	pushq	%rbx
ffffffff80017e53: 48 81 ec 98 00 00 00 	subq	$0x98, %rsp
ffffffff80017e5a: 48 89 fb             	movq	%rdi, %rbx
ffffffff80017e5d: 4c 8d b4 24 80 00 00 00      	leaq	0x80(%rsp), %r14
ffffffff80017e65: b9 10 00 00 00       	movl	$0x10, %ecx
ffffffff80017e6a: 4c 89 f7             	movq	%r14, %rdi
ffffffff80017e6d: 48 c7 c2 50 dc 01 80 	movq	$-0x7ffe23b0, %rdx      # imm = 0x8001DC50
ffffffff80017e74: e8 a7 21 00 00       	callq	0xffffffff8001a020 <core::fmt::Formatter::debug_tuple::hbed0784d0848e8ff>
ffffffff80017e79: 48 89 5c 24 08       	movq	%rbx, 0x8(%rsp)
ffffffff80017e7e: 48 c7 44 24 10 20 93 01 80   	movq	$-0x7ffe6ce0, 0x10(%rsp) # imm = 0x80019320
ffffffff80017e87: 48 c7 44 24 48 02 00 00 00   	movq	$0x2, 0x48(%rsp)
ffffffff80017e90: 48 c7 44 24 58 02 00 00 00   	movq	$0x2, 0x58(%rsp)
ffffffff80017e99: 48 c7 44 24 68 00 00 00 00   	movq	$0x0, 0x68(%rsp)
ffffffff80017ea2: 48 b8 20 00 00 00 04 00 00 00	movabsq	$0x400000020, %rax # imm = 0x400000020
ffffffff80017eac: 48 89 44 24 70       	movq	%rax, 0x70(%rsp)
ffffffff80017eb1: c6 44 24 78 03       	movb	$0x3, 0x78(%rsp)
ffffffff80017eb6: 48 c7 44 24 18 40 dc 01 80   	movq	$-0x7ffe23c0, 0x18(%rsp) # imm = 0x8001DC40
ffffffff80017ebf: 48 c7 44 24 20 01 00 00 00   	movq	$0x1, 0x20(%rsp)
ffffffff80017ec8: 48 8d 44 24 48       	leaq	0x48(%rsp), %rax
ffffffff80017ecd: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff80017ed2: 48 c7 44 24 40 01 00 00 00   	movq	$0x1, 0x40(%rsp)
ffffffff80017edb: 48 8d 44 24 08       	leaq	0x8(%rsp), %rax
ffffffff80017ee0: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff80017ee5: 48 c7 44 24 30 01 00 00 00   	movq	$0x1, 0x30(%rsp)
ffffffff80017eee: 48 8d 74 24 18       	leaq	0x18(%rsp), %rsi
ffffffff80017ef3: 4c 89 f7             	movq	%r14, %rdi
ffffffff80017ef6: 48 c7 c2 88 32 02 80 	movq	$-0x7ffdcd78, %rdx      # imm = 0x80023288
ffffffff80017efd: e8 ce 2e 00 00       	callq	0xffffffff8001add0 <core::fmt::builders::DebugTuple::field::hdeca1f40b2eb66f2>
ffffffff80017f02: 48 89 c7             	movq	%rax, %rdi
ffffffff80017f05: e8 26 30 00 00       	callq	0xffffffff8001af30 <core::fmt::builders::DebugTuple::finish::hbf12f8561b8a5c16>
ffffffff80017f0a: 48 81 c4 98 00 00 00 	addq	$0x98, %rsp
ffffffff80017f11: 5b                   	popq	%rbx
ffffffff80017f12: 41 5e                	popq	%r14
ffffffff80017f14: c3                   	retq
ffffffff80017f15: cc                   	int3
ffffffff80017f16: cc                   	int3
ffffffff80017f17: cc                   	int3
ffffffff80017f18: cc                   	int3
ffffffff80017f19: cc                   	int3
ffffffff80017f1a: cc                   	int3
ffffffff80017f1b: cc                   	int3
ffffffff80017f1c: cc                   	int3
ffffffff80017f1d: cc                   	int3
ffffffff80017f1e: cc                   	int3
ffffffff80017f1f: cc                   	int3

ffffffff80017f20 <<x86_64::addr::VirtAddr as core::fmt::Debug>::fmt::h8c13b6d9c5354ccf>:
ffffffff80017f20: 41 56                	pushq	%r14
ffffffff80017f22: 53                   	pushq	%rbx
ffffffff80017f23: 48 81 ec 98 00 00 00 	subq	$0x98, %rsp
ffffffff80017f2a: 48 89 fb             	movq	%rdi, %rbx
ffffffff80017f2d: 4c 8d b4 24 80 00 00 00      	leaq	0x80(%rsp), %r14
ffffffff80017f35: b9 08 00 00 00       	movl	$0x8, %ecx
ffffffff80017f3a: 4c 89 f7             	movq	%r14, %rdi
ffffffff80017f3d: 48 c7 c2 30 d1 01 80 	movq	$-0x7ffe2ed0, %rdx      # imm = 0x8001D130
ffffffff80017f44: e8 d7 20 00 00       	callq	0xffffffff8001a020 <core::fmt::Formatter::debug_tuple::hbed0784d0848e8ff>
ffffffff80017f49: 48 89 5c 24 08       	movq	%rbx, 0x8(%rsp)
ffffffff80017f4e: 48 c7 44 24 10 20 93 01 80   	movq	$-0x7ffe6ce0, 0x10(%rsp) # imm = 0x80019320
ffffffff80017f57: 48 c7 44 24 48 02 00 00 00   	movq	$0x2, 0x48(%rsp)
ffffffff80017f60: 48 c7 44 24 58 02 00 00 00   	movq	$0x2, 0x58(%rsp)
ffffffff80017f69: 48 c7 44 24 68 00 00 00 00   	movq	$0x0, 0x68(%rsp)
ffffffff80017f72: 48 b8 20 00 00 00 04 00 00 00	movabsq	$0x400000020, %rax # imm = 0x400000020
ffffffff80017f7c: 48 89 44 24 70       	movq	%rax, 0x70(%rsp)
ffffffff80017f81: c6 44 24 78 03       	movb	$0x3, 0x78(%rsp)
ffffffff80017f86: 48 c7 44 24 18 40 dc 01 80   	movq	$-0x7ffe23c0, 0x18(%rsp) # imm = 0x8001DC40
ffffffff80017f8f: 48 c7 44 24 20 01 00 00 00   	movq	$0x1, 0x20(%rsp)
ffffffff80017f98: 48 8d 44 24 48       	leaq	0x48(%rsp), %rax
ffffffff80017f9d: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff80017fa2: 48 c7 44 24 40 01 00 00 00   	movq	$0x1, 0x40(%rsp)
ffffffff80017fab: 48 8d 44 24 08       	leaq	0x8(%rsp), %rax
ffffffff80017fb0: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff80017fb5: 48 c7 44 24 30 01 00 00 00   	movq	$0x1, 0x30(%rsp)
ffffffff80017fbe: 48 8d 74 24 18       	leaq	0x18(%rsp), %rsi
ffffffff80017fc3: 4c 89 f7             	movq	%r14, %rdi
ffffffff80017fc6: 48 c7 c2 88 32 02 80 	movq	$-0x7ffdcd78, %rdx      # imm = 0x80023288
ffffffff80017fcd: e8 fe 2d 00 00       	callq	0xffffffff8001add0 <core::fmt::builders::DebugTuple::field::hdeca1f40b2eb66f2>
ffffffff80017fd2: 48 89 c7             	movq	%rax, %rdi
ffffffff80017fd5: e8 56 2f 00 00       	callq	0xffffffff8001af30 <core::fmt::builders::DebugTuple::finish::hbf12f8561b8a5c16>
ffffffff80017fda: 48 81 c4 98 00 00 00 	addq	$0x98, %rsp
ffffffff80017fe1: 5b                   	popq	%rbx
ffffffff80017fe2: 41 5e                	popq	%r14
ffffffff80017fe4: c3                   	retq
ffffffff80017fe5: cc                   	int3
ffffffff80017fe6: cc                   	int3
ffffffff80017fe7: cc                   	int3
ffffffff80017fe8: cc                   	int3
ffffffff80017fe9: cc                   	int3
ffffffff80017fea: cc                   	int3
ffffffff80017feb: cc                   	int3
ffffffff80017fec: cc                   	int3
ffffffff80017fed: cc                   	int3
ffffffff80017fee: cc                   	int3
ffffffff80017fef: cc                   	int3

ffffffff80017ff0 <<x86_64::addr::PhysAddr as core::fmt::Debug>::fmt::h1d2b386870f81baa>:
ffffffff80017ff0: 41 56                	pushq	%r14
ffffffff80017ff2: 53                   	pushq	%rbx
ffffffff80017ff3: 48 81 ec 98 00 00 00 	subq	$0x98, %rsp
ffffffff80017ffa: 48 89 fb             	movq	%rdi, %rbx
ffffffff80017ffd: 4c 8d b4 24 80 00 00 00      	leaq	0x80(%rsp), %r14
ffffffff80018005: b9 08 00 00 00       	movl	$0x8, %ecx
ffffffff8001800a: 4c 89 f7             	movq	%r14, %rdi
ffffffff8001800d: 48 c7 c2 78 d1 01 80 	movq	$-0x7ffe2e88, %rdx      # imm = 0x8001D178
ffffffff80018014: e8 07 20 00 00       	callq	0xffffffff8001a020 <core::fmt::Formatter::debug_tuple::hbed0784d0848e8ff>
ffffffff80018019: 48 89 5c 24 08       	movq	%rbx, 0x8(%rsp)
ffffffff8001801e: 48 c7 44 24 10 20 93 01 80   	movq	$-0x7ffe6ce0, 0x10(%rsp) # imm = 0x80019320
ffffffff80018027: 48 c7 44 24 48 02 00 00 00   	movq	$0x2, 0x48(%rsp)
ffffffff80018030: 48 c7 44 24 58 02 00 00 00   	movq	$0x2, 0x58(%rsp)
ffffffff80018039: 48 c7 44 24 68 00 00 00 00   	movq	$0x0, 0x68(%rsp)
ffffffff80018042: 48 b8 20 00 00 00 04 00 00 00	movabsq	$0x400000020, %rax # imm = 0x400000020
ffffffff8001804c: 48 89 44 24 70       	movq	%rax, 0x70(%rsp)
ffffffff80018051: c6 44 24 78 03       	movb	$0x3, 0x78(%rsp)
ffffffff80018056: 48 c7 44 24 18 40 dc 01 80   	movq	$-0x7ffe23c0, 0x18(%rsp) # imm = 0x8001DC40
ffffffff8001805f: 48 c7 44 24 20 01 00 00 00   	movq	$0x1, 0x20(%rsp)
ffffffff80018068: 48 8d 44 24 48       	leaq	0x48(%rsp), %rax
ffffffff8001806d: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff80018072: 48 c7 44 24 40 01 00 00 00   	movq	$0x1, 0x40(%rsp)
ffffffff8001807b: 48 8d 44 24 08       	leaq	0x8(%rsp), %rax
ffffffff80018080: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff80018085: 48 c7 44 24 30 01 00 00 00   	movq	$0x1, 0x30(%rsp)
ffffffff8001808e: 48 8d 74 24 18       	leaq	0x18(%rsp), %rsi
ffffffff80018093: 4c 89 f7             	movq	%r14, %rdi
ffffffff80018096: 48 c7 c2 88 32 02 80 	movq	$-0x7ffdcd78, %rdx      # imm = 0x80023288
ffffffff8001809d: e8 2e 2d 00 00       	callq	0xffffffff8001add0 <core::fmt::builders::DebugTuple::field::hdeca1f40b2eb66f2>
ffffffff800180a2: 48 89 c7             	movq	%rax, %rdi
ffffffff800180a5: e8 86 2e 00 00       	callq	0xffffffff8001af30 <core::fmt::builders::DebugTuple::finish::hbf12f8561b8a5c16>
ffffffff800180aa: 48 81 c4 98 00 00 00 	addq	$0x98, %rsp
ffffffff800180b1: 5b                   	popq	%rbx
ffffffff800180b2: 41 5e                	popq	%r14
ffffffff800180b4: c3                   	retq
ffffffff800180b5: cc                   	int3
ffffffff800180b6: cc                   	int3
ffffffff800180b7: cc                   	int3
ffffffff800180b8: cc                   	int3
ffffffff800180b9: cc                   	int3
ffffffff800180ba: cc                   	int3
ffffffff800180bb: cc                   	int3
ffffffff800180bc: cc                   	int3
ffffffff800180bd: cc                   	int3
ffffffff800180be: cc                   	int3
ffffffff800180bf: cc                   	int3

ffffffff800180c0 <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744>:
ffffffff800180c0: 48 03 37             	addq	(%rdi), %rsi
ffffffff800180c3: 48 b8 00 00 00 00 00 80 00 00	movabsq	$0x800000000000, %rax # imm = 0x800000000000
ffffffff800180cd: 48 01 f0             	addq	%rsi, %rax
ffffffff800180d0: 48 c1 e8 30          	shrq	$0x30, %rax
ffffffff800180d4: 75 04                	jne	0xffffffff800180da <<x86_64::structures::paging::mapper::offset_page_table::PhysOffset as x86_64::structures::paging::mapper::mapped_page_table::PageTableFrameMapping>::frame_to_pointer::h2b7fd0c8f95c6744+0x1a>
ffffffff800180d6: 48 89 f0             	movq	%rsi, %rax
ffffffff800180d9: c3                   	retq
ffffffff800180da: 50                   	pushq	%rax
ffffffff800180db: be 36 00 00 00       	movl	$0x36, %esi
ffffffff800180e0: 48 c7 c7 a8 32 02 80 	movq	$-0x7ffdcd58, %rdi      # imm = 0x800232A8
ffffffff800180e7: 48 c7 c2 40 33 02 80 	movq	$-0x7ffdccc0, %rdx      # imm = 0x80023340
ffffffff800180ee: e8 7d 43 00 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff800180f3: cc                   	int3
ffffffff800180f4: cc                   	int3
ffffffff800180f5: cc                   	int3
ffffffff800180f6: cc                   	int3
ffffffff800180f7: cc                   	int3
ffffffff800180f8: cc                   	int3
ffffffff800180f9: cc                   	int3
ffffffff800180fa: cc                   	int3
ffffffff800180fb: cc                   	int3
ffffffff800180fc: cc                   	int3
ffffffff800180fd: cc                   	int3
ffffffff800180fe: cc                   	int3
ffffffff800180ff: cc                   	int3

ffffffff80018100 <bitflags::parser::to_writer::h4929b1a98347bcd2>:
ffffffff80018100: 55                   	pushq	%rbp
ffffffff80018101: 41 57                	pushq	%r15
ffffffff80018103: 41 56                	pushq	%r14
ffffffff80018105: 41 55                	pushq	%r13
ffffffff80018107: 41 54                	pushq	%r12
ffffffff80018109: 53                   	pushq	%rbx
ffffffff8001810a: 48 83 ec 58          	subq	$0x58, %rsp
ffffffff8001810e: 4c 8b 27             	movq	(%rdi), %r12
ffffffff80018111: 4d 85 e4             	testq	%r12, %r12
ffffffff80018114: 0f 84 17 04 00 00    	je	0xffffffff80018531 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x431>
ffffffff8001811a: 48 89 f5             	movq	%rsi, %rbp
ffffffff8001811d: 41 f7 c4 00 00 20 00 	testl	$0x200000, %r12d        # imm = 0x200000
ffffffff80018124: 0f 85 ea 00 00 00    	jne	0xffffffff80018214 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x114>
ffffffff8001812a: 41 f7 c4 00 00 10 00 	testl	$0x100000, %r12d        # imm = 0x100000
ffffffff80018131: 0f 85 fa 00 00 00    	jne	0xffffffff80018231 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x131>
ffffffff80018137: ba 11 00 00 00       	movl	$0x11, %edx
ffffffff8001813c: 41 f7 c4 00 00 08 00 	testl	$0x80000, %r12d         # imm = 0x80000
ffffffff80018143: 0f 85 05 01 00 00    	jne	0xffffffff8001824e <bitflags::parser::to_writer::h4929b1a98347bcd2+0x14e>
ffffffff80018149: 41 f7 c4 00 00 04 00 	testl	$0x40000, %r12d         # imm = 0x40000
ffffffff80018150: 0f 85 10 01 00 00    	jne	0xffffffff80018266 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x166>
ffffffff80018156: 41 f7 c4 00 00 02 00 	testl	$0x20000, %r12d         # imm = 0x20000
ffffffff8001815d: 0f 85 20 01 00 00    	jne	0xffffffff80018283 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x183>
ffffffff80018163: ba 0b 00 00 00       	movl	$0xb, %edx
ffffffff80018168: 41 f7 c4 00 00 01 00 	testl	$0x10000, %r12d         # imm = 0x10000
ffffffff8001816f: 0f 85 26 01 00 00    	jne	0xffffffff8001829b <bitflags::parser::to_writer::h4929b1a98347bcd2+0x19b>
ffffffff80018175: 41 f7 c4 00 40 00 00 	testl	$0x4000, %r12d          # imm = 0x4000
ffffffff8001817c: 0f 85 31 01 00 00    	jne	0xffffffff800182b3 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x1b3>
ffffffff80018182: 41 f7 c4 00 20 00 00 	testl	$0x2000, %r12d          # imm = 0x2000
ffffffff80018189: 0f 85 3c 01 00 00    	jne	0xffffffff800182cb <bitflags::parser::to_writer::h4929b1a98347bcd2+0x1cb>
ffffffff8001818f: 41 f7 c4 00 10 00 00 	testl	$0x1000, %r12d          # imm = 0x1000
ffffffff80018196: 0f 85 4c 01 00 00    	jne	0xffffffff800182e8 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x1e8>
ffffffff8001819c: 41 f7 c4 00 08 00 00 	testl	$0x800, %r12d           # imm = 0x800
ffffffff800181a3: 0f 85 5c 01 00 00    	jne	0xffffffff80018305 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x205>
ffffffff800181a9: ba 0e 00 00 00       	movl	$0xe, %edx
ffffffff800181ae: 41 f7 c4 00 04 00 00 	testl	$0x400, %r12d           # imm = 0x400
ffffffff800181b5: 0f 85 67 01 00 00    	jne	0xffffffff80018322 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x222>
ffffffff800181bb: 41 f7 c4 00 02 00 00 	testl	$0x200, %r12d           # imm = 0x200
ffffffff800181c2: 0f 85 72 01 00 00    	jne	0xffffffff8001833a <bitflags::parser::to_writer::h4929b1a98347bcd2+0x23a>
ffffffff800181c8: ba 09 00 00 00       	movl	$0x9, %edx
ffffffff800181cd: 41 f7 c4 00 01 00 00 	testl	$0x100, %r12d           # imm = 0x100
ffffffff800181d4: 0f 85 78 01 00 00    	jne	0xffffffff80018352 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x252>
ffffffff800181da: 45 84 e4             	testb	%r12b, %r12b
ffffffff800181dd: 0f 88 84 01 00 00    	js	0xffffffff80018367 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x267>
ffffffff800181e3: 41 f6 c4 40          	testb	$0x40, %r12b
ffffffff800181e7: 0f 85 8f 01 00 00    	jne	0xffffffff8001837c <bitflags::parser::to_writer::h4929b1a98347bcd2+0x27c>
ffffffff800181ed: 41 f6 c4 10          	testb	$0x10, %r12b
ffffffff800181f1: 0f 85 9a 01 00 00    	jne	0xffffffff80018391 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x291>
ffffffff800181f7: 41 f6 c4 04          	testb	$0x4, %r12b
ffffffff800181fb: 0f 85 aa 01 00 00    	jne	0xffffffff800183ab <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2ab>
ffffffff80018201: 41 f6 c4 01          	testb	$0x1, %r12b
ffffffff80018205: 0f 85 ba 01 00 00    	jne	0xffffffff800183c5 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2c5>
ffffffff8001820b: 4c 89 24 24          	movq	%r12, (%rsp)
ffffffff8001820f: e9 a2 02 00 00       	jmp	0xffffffff800184b6 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x3b6>
ffffffff80018214: 49 c7 c5 ff ff df ff 	movq	$-0x200001, %r13        # imm = 0xFFDFFFFF
ffffffff8001821b: ba 02 00 00 00       	movl	$0x2, %edx
ffffffff80018220: bb 01 00 00 00       	movl	$0x1, %ebx
ffffffff80018225: 48 c7 c0 30 34 02 80 	movq	$-0x7ffdcbd0, %rax      # imm = 0x80023430
ffffffff8001822c: e9 ac 01 00 00       	jmp	0xffffffff800183dd <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff80018231: 49 c7 c5 ff ff ef ff 	movq	$-0x100001, %r13        # imm = 0xFFEFFFFF
ffffffff80018238: ba 19 00 00 00       	movl	$0x19, %edx
ffffffff8001823d: bb 02 00 00 00       	movl	$0x2, %ebx
ffffffff80018242: 48 c7 c0 48 34 02 80 	movq	$-0x7ffdcbb8, %rax      # imm = 0x80023448
ffffffff80018249: e9 8f 01 00 00       	jmp	0xffffffff800183dd <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff8001824e: 49 c7 c5 ff ff f7 ff 	movq	$-0x80001, %r13         # imm = 0xFFF7FFFF
ffffffff80018255: bb 03 00 00 00       	movl	$0x3, %ebx
ffffffff8001825a: 48 c7 c0 60 34 02 80 	movq	$-0x7ffdcba0, %rax      # imm = 0x80023460
ffffffff80018261: e9 77 01 00 00       	jmp	0xffffffff800183dd <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff80018266: 49 c7 c5 ff ff fb ff 	movq	$-0x40001, %r13         # imm = 0xFFFBFFFF
ffffffff8001826d: ba 0f 00 00 00       	movl	$0xf, %edx
ffffffff80018272: bb 04 00 00 00       	movl	$0x4, %ebx
ffffffff80018277: 48 c7 c0 78 34 02 80 	movq	$-0x7ffdcb88, %rax      # imm = 0x80023478
ffffffff8001827e: e9 5a 01 00 00       	jmp	0xffffffff800183dd <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff80018283: 49 c7 c5 ff ff fd ff 	movq	$-0x20001, %r13         # imm = 0xFFFDFFFF
ffffffff8001828a: bb 05 00 00 00       	movl	$0x5, %ebx
ffffffff8001828f: 48 c7 c0 90 34 02 80 	movq	$-0x7ffdcb70, %rax      # imm = 0x80023490
ffffffff80018296: e9 42 01 00 00       	jmp	0xffffffff800183dd <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff8001829b: 49 c7 c5 ff ff fe ff 	movq	$-0x10001, %r13         # imm = 0xFFFEFFFF
ffffffff800182a2: bb 06 00 00 00       	movl	$0x6, %ebx
ffffffff800182a7: 48 c7 c0 a8 34 02 80 	movq	$-0x7ffdcb58, %rax      # imm = 0x800234A8
ffffffff800182ae: e9 2a 01 00 00       	jmp	0xffffffff800183dd <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff800182b3: 49 c7 c5 ff bf ff ff 	movq	$-0x4001, %r13          # imm = 0xBFFF
ffffffff800182ba: bb 07 00 00 00       	movl	$0x7, %ebx
ffffffff800182bf: 48 c7 c0 c0 34 02 80 	movq	$-0x7ffdcb40, %rax      # imm = 0x800234C0
ffffffff800182c6: e9 12 01 00 00       	jmp	0xffffffff800183dd <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff800182cb: 49 c7 c5 ff df ff ff 	movq	$-0x2001, %r13          # imm = 0xDFFF
ffffffff800182d2: ba 09 00 00 00       	movl	$0x9, %edx
ffffffff800182d7: bb 08 00 00 00       	movl	$0x8, %ebx
ffffffff800182dc: 48 c7 c0 d8 34 02 80 	movq	$-0x7ffdcb28, %rax      # imm = 0x800234D8
ffffffff800182e3: e9 f5 00 00 00       	jmp	0xffffffff800183dd <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff800182e8: 49 c7 c5 ff ef ff ff 	movq	$-0x1001, %r13          # imm = 0xEFFF
ffffffff800182ef: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff800182f4: bb 09 00 00 00       	movl	$0x9, %ebx
ffffffff800182f9: 48 c7 c0 f0 34 02 80 	movq	$-0x7ffdcb10, %rax      # imm = 0x800234F0
ffffffff80018300: e9 d8 00 00 00       	jmp	0xffffffff800183dd <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff80018305: 49 c7 c5 ff f7 ff ff 	movq	$-0x801, %r13           # imm = 0xF7FF
ffffffff8001830c: ba 0d 00 00 00       	movl	$0xd, %edx
ffffffff80018311: bb 0a 00 00 00       	movl	$0xa, %ebx
ffffffff80018316: 48 c7 c0 08 35 02 80 	movq	$-0x7ffdcaf8, %rax      # imm = 0x80023508
ffffffff8001831d: e9 bb 00 00 00       	jmp	0xffffffff800183dd <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff80018322: 49 c7 c5 ff fb ff ff 	movq	$-0x401, %r13           # imm = 0xFBFF
ffffffff80018329: bb 0b 00 00 00       	movl	$0xb, %ebx
ffffffff8001832e: 48 c7 c0 20 35 02 80 	movq	$-0x7ffdcae0, %rax      # imm = 0x80023520
ffffffff80018335: e9 a3 00 00 00       	jmp	0xffffffff800183dd <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff8001833a: 49 c7 c5 ff fd ff ff 	movq	$-0x201, %r13           # imm = 0xFDFF
ffffffff80018341: bb 0c 00 00 00       	movl	$0xc, %ebx
ffffffff80018346: 48 c7 c0 38 35 02 80 	movq	$-0x7ffdcac8, %rax      # imm = 0x80023538
ffffffff8001834d: e9 8b 00 00 00       	jmp	0xffffffff800183dd <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff80018352: 49 c7 c5 ff fe ff ff 	movq	$-0x101, %r13           # imm = 0xFEFF
ffffffff80018359: bb 0d 00 00 00       	movl	$0xd, %ebx
ffffffff8001835e: 48 c7 c0 50 35 02 80 	movq	$-0x7ffdcab0, %rax      # imm = 0x80023550
ffffffff80018365: eb 76                	jmp	0xffffffff800183dd <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff80018367: 49 c7 c5 7f ff ff ff 	movq	$-0x81, %r13
ffffffff8001836e: bb 0e 00 00 00       	movl	$0xe, %ebx
ffffffff80018373: 48 c7 c0 68 35 02 80 	movq	$-0x7ffdca98, %rax      # imm = 0x80023568
ffffffff8001837a: eb 61                	jmp	0xffffffff800183dd <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff8001837c: 49 c7 c5 bf ff ff ff 	movq	$-0x41, %r13
ffffffff80018383: bb 0f 00 00 00       	movl	$0xf, %ebx
ffffffff80018388: 48 c7 c0 80 35 02 80 	movq	$-0x7ffdca80, %rax      # imm = 0x80023580
ffffffff8001838f: eb 4c                	jmp	0xffffffff800183dd <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff80018391: 49 c7 c5 ef ff ff ff 	movq	$-0x11, %r13
ffffffff80018398: ba 14 00 00 00       	movl	$0x14, %edx
ffffffff8001839d: bb 10 00 00 00       	movl	$0x10, %ebx
ffffffff800183a2: 48 c7 c0 98 35 02 80 	movq	$-0x7ffdca68, %rax      # imm = 0x80023598
ffffffff800183a9: eb 32                	jmp	0xffffffff800183dd <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff800183ab: 49 c7 c5 fb ff ff ff 	movq	$-0x5, %r13
ffffffff800183b2: ba 0b 00 00 00       	movl	$0xb, %edx
ffffffff800183b7: bb 11 00 00 00       	movl	$0x11, %ebx
ffffffff800183bc: 48 c7 c0 b0 35 02 80 	movq	$-0x7ffdca50, %rax      # imm = 0x800235B0
ffffffff800183c3: eb 18                	jmp	0xffffffff800183dd <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2dd>
ffffffff800183c5: 49 c7 c5 fe ff ff ff 	movq	$-0x2, %r13
ffffffff800183cc: ba 0a 00 00 00       	movl	$0xa, %edx
ffffffff800183d1: bb 12 00 00 00       	movl	$0x12, %ebx
ffffffff800183d6: 48 c7 c0 c8 35 02 80 	movq	$-0x7ffdca38, %rax      # imm = 0x800235C8
ffffffff800183dd: 48 8b 30             	movq	(%rax), %rsi
ffffffff800183e0: 48 89 ef             	movq	%rbp, %rdi
ffffffff800183e3: e8 f8 1a 00 00       	callq	0xffffffff80019ee0 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff800183e8: b1 01                	movb	$0x1, %cl
ffffffff800183ea: 84 c0                	testb	%al, %al
ffffffff800183ec: 0f 85 41 01 00 00    	jne	0xffffffff80018533 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x433>
ffffffff800183f2: 4d 21 e5             	andq	%r12, %r13
ffffffff800183f5: 49 f7 d4             	notq	%r12
ffffffff800183f8: 48 83 fb 11          	cmpq	$0x11, %rbx
ffffffff800183fc: 0f 87 8f 00 00 00    	ja	0xffffffff80018491 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x391>
ffffffff80018402: 4d 85 ed             	testq	%r13, %r13
ffffffff80018405: 0f 84 26 01 00 00    	je	0xffffffff80018531 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x431>
ffffffff8001840b: 48 8d 04 5b          	leaq	(%rbx,%rbx,2), %rax
ffffffff8001840f: 48 ff c3             	incq	%rbx
ffffffff80018412: 48 8d 04 c5 40 34 02 80      	leaq	-0x7ffdcbc0(,%rax,8), %rax
ffffffff8001841a: eb 11                	jmp	0xffffffff8001842d <bitflags::parser::to_writer::h4929b1a98347bcd2+0x32d>
ffffffff8001841c: 0f 1f 40 00          	nopl	(%rax)
ffffffff80018420: 48 ff c3             	incq	%rbx
ffffffff80018423: 48 83 c0 18          	addq	$0x18, %rax
ffffffff80018427: 48 83 fb 13          	cmpq	$0x13, %rbx
ffffffff8001842b: 74 64                	je	0xffffffff80018491 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x391>
ffffffff8001842d: 4c 8b 70 f8          	movq	-0x8(%rax), %r14
ffffffff80018431: 4d 85 f6             	testq	%r14, %r14
ffffffff80018434: 74 ea                	je	0xffffffff80018420 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x320>
ffffffff80018436: 4c 8b 38             	movq	(%rax), %r15
ffffffff80018439: 4d 85 e7             	testq	%r12, %r15
ffffffff8001843c: 0f 94 c1             	sete	%cl
ffffffff8001843f: 4d 85 ef             	testq	%r13, %r15
ffffffff80018442: 0f 95 c2             	setne	%dl
ffffffff80018445: 84 ca                	testb	%cl, %dl
ffffffff80018447: 74 d7                	je	0xffffffff80018420 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x320>
ffffffff80018449: 48 8b 40 f0          	movq	-0x10(%rax), %rax
ffffffff8001844d: 48 89 44 24 08       	movq	%rax, 0x8(%rsp)
ffffffff80018452: ba 03 00 00 00       	movl	$0x3, %edx
ffffffff80018457: 48 89 ef             	movq	%rbp, %rdi
ffffffff8001845a: 48 c7 c6 e2 35 02 80 	movq	$-0x7ffdca1e, %rsi      # imm = 0x800235E2
ffffffff80018461: e8 7a 1a 00 00       	callq	0xffffffff80019ee0 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff80018466: 84 c0                	testb	%al, %al
ffffffff80018468: 0f 85 bf 00 00 00    	jne	0xffffffff8001852d <bitflags::parser::to_writer::h4929b1a98347bcd2+0x42d>
ffffffff8001846e: 49 f7 d7             	notq	%r15
ffffffff80018471: 4d 21 fd             	andq	%r15, %r13
ffffffff80018474: 48 89 ef             	movq	%rbp, %rdi
ffffffff80018477: 48 8b 74 24 08       	movq	0x8(%rsp), %rsi
ffffffff8001847c: 4c 89 f2             	movq	%r14, %rdx
ffffffff8001847f: e8 5c 1a 00 00       	callq	0xffffffff80019ee0 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff80018484: 84 c0                	testb	%al, %al
ffffffff80018486: 0f 84 6c ff ff ff    	je	0xffffffff800183f8 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x2f8>
ffffffff8001848c: e9 9c 00 00 00       	jmp	0xffffffff8001852d <bitflags::parser::to_writer::h4929b1a98347bcd2+0x42d>
ffffffff80018491: 4c 89 2c 24          	movq	%r13, (%rsp)
ffffffff80018495: 4d 85 ed             	testq	%r13, %r13
ffffffff80018498: 0f 84 93 00 00 00    	je	0xffffffff80018531 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x431>
ffffffff8001849e: ba 03 00 00 00       	movl	$0x3, %edx
ffffffff800184a3: 48 89 ef             	movq	%rbp, %rdi
ffffffff800184a6: 48 c7 c6 e2 35 02 80 	movq	$-0x7ffdca1e, %rsi      # imm = 0x800235E2
ffffffff800184ad: e8 2e 1a 00 00       	callq	0xffffffff80019ee0 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff800184b2: 84 c0                	testb	%al, %al
ffffffff800184b4: 75 77                	jne	0xffffffff8001852d <bitflags::parser::to_writer::h4929b1a98347bcd2+0x42d>
ffffffff800184b6: ba 02 00 00 00       	movl	$0x2, %edx
ffffffff800184bb: 48 89 ef             	movq	%rbp, %rdi
ffffffff800184be: 48 c7 c6 e0 35 02 80 	movq	$-0x7ffdca20, %rsi      # imm = 0x800235E0
ffffffff800184c5: e8 16 1a 00 00       	callq	0xffffffff80019ee0 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff800184ca: 84 c0                	testb	%al, %al
ffffffff800184cc: 75 5f                	jne	0xffffffff8001852d <bitflags::parser::to_writer::h4929b1a98347bcd2+0x42d>
ffffffff800184ce: 48 89 e0             	movq	%rsp, %rax
ffffffff800184d1: 48 89 44 24 10       	movq	%rax, 0x10(%rsp)
ffffffff800184d6: 48 8d 44 24 10       	leaq	0x10(%rsp), %rax
ffffffff800184db: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff800184e0: 48 c7 44 24 20 00 86 01 80   	movq	$-0x7ffe7a00, 0x20(%rsp) # imm = 0x80018600
ffffffff800184e9: 48 c7 44 24 28 40 dc 01 80   	movq	$-0x7ffe23c0, 0x28(%rsp) # imm = 0x8001DC40
ffffffff800184f2: 48 c7 44 24 30 01 00 00 00   	movq	$0x1, 0x30(%rsp)
ffffffff800184fb: 48 c7 44 24 48 00 00 00 00   	movq	$0x0, 0x48(%rsp)
ffffffff80018504: 48 8d 44 24 18       	leaq	0x18(%rsp), %rax
ffffffff80018509: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff8001850e: 48 c7 44 24 40 01 00 00 00   	movq	$0x1, 0x40(%rsp)
ffffffff80018517: 48 8b 7d 30          	movq	0x30(%rbp), %rdi
ffffffff8001851b: 48 8b 75 38          	movq	0x38(%rbp), %rsi
ffffffff8001851f: 48 8d 54 24 28       	leaq	0x28(%rsp), %rdx
ffffffff80018524: e8 57 11 00 00       	callq	0xffffffff80019680 <core::fmt::write::h1a05140646fc4354>
ffffffff80018529: 84 c0                	testb	%al, %al
ffffffff8001852b: 74 04                	je	0xffffffff80018531 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x431>
ffffffff8001852d: b1 01                	movb	$0x1, %cl
ffffffff8001852f: eb 02                	jmp	0xffffffff80018533 <bitflags::parser::to_writer::h4929b1a98347bcd2+0x433>
ffffffff80018531: 31 c9                	xorl	%ecx, %ecx
ffffffff80018533: 89 c8                	movl	%ecx, %eax
ffffffff80018535: 48 83 c4 58          	addq	$0x58, %rsp
ffffffff80018539: 5b                   	popq	%rbx
ffffffff8001853a: 41 5c                	popq	%r12
ffffffff8001853c: 41 5d                	popq	%r13
ffffffff8001853e: 41 5e                	popq	%r14
ffffffff80018540: 41 5f                	popq	%r15
ffffffff80018542: 5d                   	popq	%rbp
ffffffff80018543: c3                   	retq
ffffffff80018544: cc                   	int3
ffffffff80018545: cc                   	int3
ffffffff80018546: cc                   	int3
ffffffff80018547: cc                   	int3
ffffffff80018548: cc                   	int3
ffffffff80018549: cc                   	int3
ffffffff8001854a: cc                   	int3
ffffffff8001854b: cc                   	int3
ffffffff8001854c: cc                   	int3
ffffffff8001854d: cc                   	int3
ffffffff8001854e: cc                   	int3
ffffffff8001854f: cc                   	int3

ffffffff80018550 <<&T as core::fmt::Debug>::fmt::hdf0469a69a7d1d66>:
ffffffff80018550: 48 83 ec 78          	subq	$0x78, %rsp
ffffffff80018554: 48 8b 07             	movq	(%rdi), %rax
ffffffff80018557: 48 8b 00             	movq	(%rax), %rax
ffffffff8001855a: 48 85 c0             	testq	%rax, %rax
ffffffff8001855d: 74 14                	je	0xffffffff80018573 <<&T as core::fmt::Debug>::fmt::hdf0469a69a7d1d66+0x23>
ffffffff8001855f: 48 89 44 24 40       	movq	%rax, 0x40(%rsp)
ffffffff80018564: 48 8d 7c 24 40       	leaq	0x40(%rsp), %rdi
ffffffff80018569: e8 92 fb ff ff       	callq	0xffffffff80018100 <bitflags::parser::to_writer::h4929b1a98347bcd2>
ffffffff8001856e: 48 83 c4 78          	addq	$0x78, %rsp
ffffffff80018572: c3                   	retq
ffffffff80018573: 48 c7 04 24 48 d1 01 80      	movq	$-0x7ffe2eb8, (%rsp) # imm = 0x8001D148
ffffffff8001857b: 48 c7 44 24 08 20 93 01 80   	movq	$-0x7ffe6ce0, 0x8(%rsp) # imm = 0x80019320
ffffffff80018584: 48 c7 44 24 40 02 00 00 00   	movq	$0x2, 0x40(%rsp)
ffffffff8001858d: 48 c7 44 24 50 02 00 00 00   	movq	$0x2, 0x50(%rsp)
ffffffff80018596: 48 c7 44 24 60 00 00 00 00   	movq	$0x0, 0x60(%rsp)
ffffffff8001859f: 48 b8 20 00 00 00 04 00 00 00	movabsq	$0x400000020, %rax # imm = 0x400000020
ffffffff800185a9: 48 89 44 24 68       	movq	%rax, 0x68(%rsp)
ffffffff800185ae: c6 44 24 70 03       	movb	$0x3, 0x70(%rsp)
ffffffff800185b3: 48 c7 44 24 10 40 dc 01 80   	movq	$-0x7ffe23c0, 0x10(%rsp) # imm = 0x8001DC40
ffffffff800185bc: 48 c7 44 24 18 01 00 00 00   	movq	$0x1, 0x18(%rsp)
ffffffff800185c5: 48 8d 44 24 40       	leaq	0x40(%rsp), %rax
ffffffff800185ca: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff800185cf: 48 c7 44 24 38 01 00 00 00   	movq	$0x1, 0x38(%rsp)
ffffffff800185d8: 48 89 e0             	movq	%rsp, %rax
ffffffff800185db: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff800185e0: 48 c7 44 24 28 01 00 00 00   	movq	$0x1, 0x28(%rsp)
ffffffff800185e9: 48 8b 7e 30          	movq	0x30(%rsi), %rdi
ffffffff800185ed: 48 8b 76 38          	movq	0x38(%rsi), %rsi
ffffffff800185f1: 48 8d 54 24 10       	leaq	0x10(%rsp), %rdx
ffffffff800185f6: e8 85 10 00 00       	callq	0xffffffff80019680 <core::fmt::write::h1a05140646fc4354>
ffffffff800185fb: 48 83 c4 78          	addq	$0x78, %rsp
ffffffff800185ff: c3                   	retq

ffffffff80018600 <<&T as core::fmt::LowerHex>::fmt::h8f025517e53b1cc7.llvm.2210142015394379644>:
ffffffff80018600: 48 8b 3f             	movq	(%rdi), %rdi
ffffffff80018603: e9 18 0d 00 00       	jmp	0xffffffff80019320 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hd0e7c1aefe0075e3>
ffffffff80018608: cc                   	int3
ffffffff80018609: cc                   	int3
ffffffff8001860a: cc                   	int3
ffffffff8001860b: cc                   	int3
ffffffff8001860c: cc                   	int3
ffffffff8001860d: cc                   	int3
ffffffff8001860e: cc                   	int3
ffffffff8001860f: cc                   	int3

ffffffff80018610 <core::fmt::num::<impl core::fmt::Debug for u16>::fmt::h4b3d592efb52dc7f>:
ffffffff80018610: 8b 46 24             	movl	0x24(%rsi), %eax
ffffffff80018613: a8 10                	testb	$0x10, %al
ffffffff80018615: 0f 85 05 0c 00 00    	jne	0xffffffff80019220 <core::fmt::num::<impl core::fmt::LowerHex for u16>::fmt::h2172977f28036374>
ffffffff8001861b: a8 20                	testb	$0x20, %al
ffffffff8001861d: 0f 85 7d 0c 00 00    	jne	0xffffffff800192a0 <core::fmt::num::<impl core::fmt::UpperHex for u16>::fmt::h393152b64093d107>
ffffffff80018623: e9 98 30 00 00       	jmp	0xffffffff8001b6c0 <core::fmt::num::imp::<impl core::fmt::Display for u16>::fmt::hd79ce5bcb02fb002>
ffffffff80018628: cc                   	int3
ffffffff80018629: cc                   	int3
ffffffff8001862a: cc                   	int3
ffffffff8001862b: cc                   	int3
ffffffff8001862c: cc                   	int3
ffffffff8001862d: cc                   	int3
ffffffff8001862e: cc                   	int3
ffffffff8001862f: cc                   	int3

ffffffff80018630 <<x86_64::registers::segmentation::SegmentSelector as core::fmt::Debug>::fmt::h23fd0fbb5260cef1>:
ffffffff80018630: 41 56                	pushq	%r14
ffffffff80018632: 53                   	pushq	%rbx
ffffffff80018633: 48 83 ec 18          	subq	$0x18, %rsp
ffffffff80018637: 48 89 fb             	movq	%rdi, %rbx
ffffffff8001863a: 4c 8d 74 24 08       	leaq	0x8(%rsp), %r14
ffffffff8001863f: b9 0f 00 00 00       	movl	$0xf, %ecx
ffffffff80018644: 4c 89 f7             	movq	%r14, %rdi
ffffffff80018647: 48 c7 c2 08 36 02 80 	movq	$-0x7ffdc9f8, %rdx      # imm = 0x80023608
ffffffff8001864e: e8 ad 18 00 00       	callq	0xffffffff80019f00 <core::fmt::Formatter::debug_struct::ha8e700b554531cc3>
ffffffff80018653: 0f b7 1b             	movzwl	(%rbx), %ebx
ffffffff80018656: 89 d8                	movl	%ebx, %eax
ffffffff80018658: c1 e8 03             	shrl	$0x3, %eax
ffffffff8001865b: 66 89 44 24 06       	movw	%ax, 0x6(%rsp)
ffffffff80018660: 48 8d 4c 24 06       	leaq	0x6(%rsp), %rcx
ffffffff80018665: ba 05 00 00 00       	movl	$0x5, %edx
ffffffff8001866a: 4c 89 f7             	movq	%r14, %rdi
ffffffff8001866d: 48 c7 c6 38 36 02 80 	movq	$-0x7ffdc9c8, %rsi      # imm = 0x80023638
ffffffff80018674: 49 c7 c0 18 36 02 80 	movq	$-0x7ffdc9e8, %r8       # imm = 0x80023618
ffffffff8001867b: e8 20 25 00 00       	callq	0xffffffff8001aba0 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5>
ffffffff80018680: 83 e3 03             	andl	$0x3, %ebx
ffffffff80018683: ff 24 dd e8 35 02 80 	jmpq	*-0x7ffdca18(,%rbx,8)
ffffffff8001868a: c6 44 24 06 00       	movb	$0x0, 0x6(%rsp)
ffffffff8001868f: eb 13                	jmp	0xffffffff800186a4 <<x86_64::registers::segmentation::SegmentSelector as core::fmt::Debug>::fmt::h23fd0fbb5260cef1+0x74>
ffffffff80018691: c6 44 24 06 02       	movb	$0x2, 0x6(%rsp)
ffffffff80018696: eb 0c                	jmp	0xffffffff800186a4 <<x86_64::registers::segmentation::SegmentSelector as core::fmt::Debug>::fmt::h23fd0fbb5260cef1+0x74>
ffffffff80018698: c6 44 24 06 03       	movb	$0x3, 0x6(%rsp)
ffffffff8001869d: eb 05                	jmp	0xffffffff800186a4 <<x86_64::registers::segmentation::SegmentSelector as core::fmt::Debug>::fmt::h23fd0fbb5260cef1+0x74>
ffffffff8001869f: c6 44 24 06 01       	movb	$0x1, 0x6(%rsp)
ffffffff800186a4: 48 8d 5c 24 08       	leaq	0x8(%rsp), %rbx
ffffffff800186a9: 48 8d 4c 24 06       	leaq	0x6(%rsp), %rcx
ffffffff800186ae: ba 03 00 00 00       	movl	$0x3, %edx
ffffffff800186b3: 48 89 df             	movq	%rbx, %rdi
ffffffff800186b6: 48 c7 c6 60 36 02 80 	movq	$-0x7ffdc9a0, %rsi      # imm = 0x80023660
ffffffff800186bd: 49 c7 c0 40 36 02 80 	movq	$-0x7ffdc9c0, %r8       # imm = 0x80023640
ffffffff800186c4: e8 d7 24 00 00       	callq	0xffffffff8001aba0 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5>
ffffffff800186c9: 48 89 df             	movq	%rbx, %rdi
ffffffff800186cc: e8 9f 26 00 00       	callq	0xffffffff8001ad70 <core::fmt::builders::DebugStruct::finish::h970ac4e7ca3b619d>
ffffffff800186d1: 48 83 c4 18          	addq	$0x18, %rsp
ffffffff800186d5: 5b                   	popq	%rbx
ffffffff800186d6: 41 5e                	popq	%r14
ffffffff800186d8: c3                   	retq
ffffffff800186d9: cc                   	int3
ffffffff800186da: cc                   	int3
ffffffff800186db: cc                   	int3
ffffffff800186dc: cc                   	int3
ffffffff800186dd: cc                   	int3
ffffffff800186de: cc                   	int3
ffffffff800186df: cc                   	int3

ffffffff800186e0 <<x86_64::PrivilegeLevel as core::fmt::Debug>::fmt::h92e6f6907a5dfe2b>:
ffffffff800186e0: 48 89 f0             	movq	%rsi, %rax
ffffffff800186e3: 0f b6 0f             	movzbl	(%rdi), %ecx
ffffffff800186e6: 48 8b 34 cd 78 36 02 80      	movq	-0x7ffdc988(,%rcx,8), %rsi
ffffffff800186ee: ba 05 00 00 00       	movl	$0x5, %edx
ffffffff800186f3: 48 89 c7             	movq	%rax, %rdi
ffffffff800186f6: e9 e5 17 00 00       	jmp	0xffffffff80019ee0 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff800186fb: cc                   	int3
ffffffff800186fc: cc                   	int3
ffffffff800186fd: cc                   	int3
ffffffff800186fe: cc                   	int3
ffffffff800186ff: cc                   	int3

ffffffff80018700 <x86_64::structures::idt::InterruptDescriptorTable::pointer::h919539d5e33678bd>:
ffffffff80018700: 48 b8 00 00 00 00 00 80 00 00	movabsq	$0x800000000000, %rax # imm = 0x800000000000
ffffffff8001870a: 48 01 f0             	addq	%rsi, %rax
ffffffff8001870d: 48 c1 e8 30          	shrq	$0x30, %rax
ffffffff80018711: 75 0d                	jne	0xffffffff80018720 <x86_64::structures::idt::InterruptDescriptorTable::pointer::h919539d5e33678bd+0x20>
ffffffff80018713: 66 c7 07 ff 0f       	movw	$0xfff, (%rdi)          # imm = 0xFFF
ffffffff80018718: 48 89 77 02          	movq	%rsi, 0x2(%rdi)
ffffffff8001871c: 48 89 f8             	movq	%rdi, %rax
ffffffff8001871f: c3                   	retq
ffffffff80018720: 50                   	pushq	%rax
ffffffff80018721: be 36 00 00 00       	movl	$0x36, %esi
ffffffff80018726: 48 c7 c7 98 36 02 80 	movq	$-0x7ffdc968, %rdi      # imm = 0x80023698
ffffffff8001872d: 48 c7 c2 30 37 02 80 	movq	$-0x7ffdc8d0, %rdx      # imm = 0x80023730
ffffffff80018734: e8 37 3d 00 00       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff80018739: cc                   	int3
ffffffff8001873a: cc                   	int3
ffffffff8001873b: cc                   	int3
ffffffff8001873c: cc                   	int3
ffffffff8001873d: cc                   	int3
ffffffff8001873e: cc                   	int3
ffffffff8001873f: cc                   	int3

ffffffff80018740 <<x86_64::structures::idt::InterruptStackFrameValue as core::fmt::Debug>::fmt::h547349f5b4b49a5c>:
ffffffff80018740: 41 56                	pushq	%r14
ffffffff80018742: 53                   	pushq	%rbx
ffffffff80018743: 48 83 ec 18          	subq	$0x18, %rsp
ffffffff80018747: 49 89 fe             	movq	%rdi, %r14
ffffffff8001874a: 48 8d 5c 24 08       	leaq	0x8(%rsp), %rbx
ffffffff8001874f: b9 13 00 00 00       	movl	$0x13, %ecx
ffffffff80018754: 48 89 df             	movq	%rbx, %rdi
ffffffff80018757: 48 c7 c2 68 37 02 80 	movq	$-0x7ffdc898, %rdx      # imm = 0x80023768
ffffffff8001875e: e8 9d 17 00 00       	callq	0xffffffff80019f00 <core::fmt::Formatter::debug_struct::ha8e700b554531cc3>
ffffffff80018763: ba 13 00 00 00       	movl	$0x13, %edx
ffffffff80018768: 48 89 df             	movq	%rbx, %rdi
ffffffff8001876b: 48 c7 c6 a0 37 02 80 	movq	$-0x7ffdc860, %rsi      # imm = 0x800237A0
ffffffff80018772: 4c 89 f1             	movq	%r14, %rcx
ffffffff80018775: 49 c7 c0 80 37 02 80 	movq	$-0x7ffdc880, %r8       # imm = 0x80023780
ffffffff8001877c: e8 1f 24 00 00       	callq	0xffffffff8001aba0 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5>
ffffffff80018781: 49 8d 4e 08          	leaq	0x8(%r14), %rcx
ffffffff80018785: ba 0c 00 00 00       	movl	$0xc, %edx
ffffffff8001878a: 48 89 df             	movq	%rbx, %rdi
ffffffff8001878d: 48 c7 c6 b3 37 02 80 	movq	$-0x7ffdc84d, %rsi      # imm = 0x800237B3
ffffffff80018794: 49 c7 c0 48 37 02 80 	movq	$-0x7ffdc8b8, %r8       # imm = 0x80023748
ffffffff8001879b: e8 00 24 00 00       	callq	0xffffffff8001aba0 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5>
ffffffff800187a0: 49 8d 4e 10          	leaq	0x10(%r14), %rcx
ffffffff800187a4: ba 09 00 00 00       	movl	$0x9, %edx
ffffffff800187a9: 48 89 df             	movq	%rbx, %rdi
ffffffff800187ac: 48 c7 c6 e0 37 02 80 	movq	$-0x7ffdc820, %rsi      # imm = 0x800237E0
ffffffff800187b3: 49 c7 c0 c0 37 02 80 	movq	$-0x7ffdc840, %r8       # imm = 0x800237C0
ffffffff800187ba: e8 e1 23 00 00       	callq	0xffffffff8001aba0 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5>
ffffffff800187bf: 49 8d 4e 18          	leaq	0x18(%r14), %rcx
ffffffff800187c3: ba 0d 00 00 00       	movl	$0xd, %edx
ffffffff800187c8: 48 89 df             	movq	%rbx, %rdi
ffffffff800187cb: 48 c7 c6 e9 37 02 80 	movq	$-0x7ffdc817, %rsi      # imm = 0x800237E9
ffffffff800187d2: 49 c7 c0 80 37 02 80 	movq	$-0x7ffdc880, %r8       # imm = 0x80023780
ffffffff800187d9: e8 c2 23 00 00       	callq	0xffffffff8001aba0 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5>
ffffffff800187de: 49 83 c6 20          	addq	$0x20, %r14
ffffffff800187e2: ba 0d 00 00 00       	movl	$0xd, %edx
ffffffff800187e7: 48 89 df             	movq	%rbx, %rdi
ffffffff800187ea: 48 c7 c6 f6 37 02 80 	movq	$-0x7ffdc80a, %rsi      # imm = 0x800237F6
ffffffff800187f1: 4c 89 f1             	movq	%r14, %rcx
ffffffff800187f4: 49 c7 c0 48 37 02 80 	movq	$-0x7ffdc8b8, %r8       # imm = 0x80023748
ffffffff800187fb: e8 a0 23 00 00       	callq	0xffffffff8001aba0 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5>
ffffffff80018800: 48 89 df             	movq	%rbx, %rdi
ffffffff80018803: e8 68 25 00 00       	callq	0xffffffff8001ad70 <core::fmt::builders::DebugStruct::finish::h970ac4e7ca3b619d>
ffffffff80018808: 48 83 c4 18          	addq	$0x18, %rsp
ffffffff8001880c: 5b                   	popq	%rbx
ffffffff8001880d: 41 5e                	popq	%r14
ffffffff8001880f: c3                   	retq

ffffffff80018810 <<x86_64::registers::rflags::RFlags as core::fmt::Debug>::fmt::h670f25a697b2096b>:
ffffffff80018810: 50                   	pushq	%rax
ffffffff80018811: 48 89 3c 24          	movq	%rdi, (%rsp)
ffffffff80018815: 48 89 e1             	movq	%rsp, %rcx
ffffffff80018818: ba 06 00 00 00       	movl	$0x6, %edx
ffffffff8001881d: 48 89 f7             	movq	%rsi, %rdi
ffffffff80018820: 48 c7 c6 28 38 02 80 	movq	$-0x7ffdc7d8, %rsi      # imm = 0x80023828
ffffffff80018827: 49 c7 c0 08 38 02 80 	movq	$-0x7ffdc7f8, %r8       # imm = 0x80023808
ffffffff8001882e: e8 2d 18 00 00       	callq	0xffffffff8001a060 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>
ffffffff80018833: 59                   	popq	%rcx
ffffffff80018834: c3                   	retq
ffffffff80018835: cc                   	int3
ffffffff80018836: cc                   	int3
ffffffff80018837: cc                   	int3
ffffffff80018838: cc                   	int3
ffffffff80018839: cc                   	int3
ffffffff8001883a: cc                   	int3
ffffffff8001883b: cc                   	int3
ffffffff8001883c: cc                   	int3
ffffffff8001883d: cc                   	int3
ffffffff8001883e: cc                   	int3
ffffffff8001883f: cc                   	int3

ffffffff80018840 <x86_64::structures::idt::_::<impl core::fmt::UpperHex for x86_64::structures::idt::PageFaultErrorCode>::fmt::h218f3e02babb5ee8>:
ffffffff80018840: 50                   	pushq	%rax
ffffffff80018841: 48 8b 07             	movq	(%rdi), %rax
ffffffff80018844: 48 89 04 24          	movq	%rax, (%rsp)
ffffffff80018848: 48 89 e7             	movq	%rsp, %rdi
ffffffff8001884b: e8 50 0b 00 00       	callq	0xffffffff800193a0 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::h869006add1042b35>
ffffffff80018850: 59                   	popq	%rcx
ffffffff80018851: c3                   	retq
ffffffff80018852: cc                   	int3
ffffffff80018853: cc                   	int3
ffffffff80018854: cc                   	int3
ffffffff80018855: cc                   	int3
ffffffff80018856: cc                   	int3
ffffffff80018857: cc                   	int3
ffffffff80018858: cc                   	int3
ffffffff80018859: cc                   	int3
ffffffff8001885a: cc                   	int3
ffffffff8001885b: cc                   	int3
ffffffff8001885c: cc                   	int3
ffffffff8001885d: cc                   	int3
ffffffff8001885e: cc                   	int3
ffffffff8001885f: cc                   	int3

ffffffff80018860 <limine::smp::GotoAddress::write::h253e0ab8f56c7fe5>:
ffffffff80018860: 48 89 37             	movq	%rsi, (%rdi)
ffffffff80018863: c3                   	retq
ffffffff80018864: cc                   	int3
ffffffff80018865: cc                   	int3
ffffffff80018866: cc                   	int3
ffffffff80018867: cc                   	int3
ffffffff80018868: cc                   	int3
ffffffff80018869: cc                   	int3
ffffffff8001886a: cc                   	int3
ffffffff8001886b: cc                   	int3
ffffffff8001886c: cc                   	int3
ffffffff8001886d: cc                   	int3
ffffffff8001886e: cc                   	int3
ffffffff8001886f: cc                   	int3

ffffffff80018870 <limine::request::EfiSystemTableRequest::get_response::h4a4b8b0bbd703f80>:
ffffffff80018870: 48 8b 47 28          	movq	0x28(%rdi), %rax
ffffffff80018874: c3                   	retq
ffffffff80018875: cc                   	int3
ffffffff80018876: cc                   	int3
ffffffff80018877: cc                   	int3
ffffffff80018878: cc                   	int3
ffffffff80018879: cc                   	int3
ffffffff8001887a: cc                   	int3
ffffffff8001887b: cc                   	int3
ffffffff8001887c: cc                   	int3
ffffffff8001887d: cc                   	int3
ffffffff8001887e: cc                   	int3
ffffffff8001887f: cc                   	int3

ffffffff80018880 <limine::request::SmpRequest::get_response::h21f02c6510d3c825>:
ffffffff80018880: 48 8b 47 28          	movq	0x28(%rdi), %rax
ffffffff80018884: c3                   	retq
ffffffff80018885: cc                   	int3
ffffffff80018886: cc                   	int3
ffffffff80018887: cc                   	int3
ffffffff80018888: cc                   	int3
ffffffff80018889: cc                   	int3
ffffffff8001888a: cc                   	int3
ffffffff8001888b: cc                   	int3
ffffffff8001888c: cc                   	int3
ffffffff8001888d: cc                   	int3
ffffffff8001888e: cc                   	int3
ffffffff8001888f: cc                   	int3

ffffffff80018890 <limine::request::BootloaderInfoRequest::get_response::h5ddf6f18b059e155>:
ffffffff80018890: 48 8b 47 28          	movq	0x28(%rdi), %rax
ffffffff80018894: c3                   	retq
ffffffff80018895: cc                   	int3
ffffffff80018896: cc                   	int3
ffffffff80018897: cc                   	int3
ffffffff80018898: cc                   	int3
ffffffff80018899: cc                   	int3
ffffffff8001889a: cc                   	int3
ffffffff8001889b: cc                   	int3
ffffffff8001889c: cc                   	int3
ffffffff8001889d: cc                   	int3
ffffffff8001889e: cc                   	int3
ffffffff8001889f: cc                   	int3

ffffffff800188a0 <limine::BaseRevision::is_supported::h4d97ddcac02f0bb0>:
ffffffff800188a0: 48 83 7f 10 00       	cmpq	$0x0, 0x10(%rdi)
ffffffff800188a5: 0f 94 c0             	sete	%al
ffffffff800188a8: c3                   	retq
ffffffff800188a9: cc                   	int3
ffffffff800188aa: cc                   	int3
ffffffff800188ab: cc                   	int3
ffffffff800188ac: cc                   	int3
ffffffff800188ad: cc                   	int3
ffffffff800188ae: cc                   	int3
ffffffff800188af: cc                   	int3

ffffffff800188b0 <core::ptr::drop_in_place<alloc::string::String>::ha2cbc7a0453587fb>:
ffffffff800188b0: 48 8b 37             	movq	(%rdi), %rsi
ffffffff800188b3: 48 85 f6             	testq	%rsi, %rsi
ffffffff800188b6: 74 0e                	je	0xffffffff800188c6 <core::ptr::drop_in_place<alloc::string::String>::ha2cbc7a0453587fb+0x16>
ffffffff800188b8: 48 8b 7f 08          	movq	0x8(%rdi), %rdi
ffffffff800188bc: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff800188c1: e9 7a 64 ff ff       	jmp	0xffffffff8000ed40 <__rust_dealloc>
ffffffff800188c6: c3                   	retq
ffffffff800188c7: cc                   	int3
ffffffff800188c8: cc                   	int3
ffffffff800188c9: cc                   	int3
ffffffff800188ca: cc                   	int3
ffffffff800188cb: cc                   	int3
ffffffff800188cc: cc                   	int3
ffffffff800188cd: cc                   	int3
ffffffff800188ce: cc                   	int3
ffffffff800188cf: cc                   	int3

ffffffff800188d0 <<core::fmt::Error as core::fmt::Debug>::fmt::hca9d617326e586b8>:
ffffffff800188d0: 48 89 f7             	movq	%rsi, %rdi
ffffffff800188d3: ba 05 00 00 00       	movl	$0x5, %edx
ffffffff800188d8: 48 c7 c6 2e 38 02 80 	movq	$-0x7ffdc7d2, %rsi      # imm = 0x8002382E
ffffffff800188df: e9 fc 15 00 00       	jmp	0xffffffff80019ee0 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>
ffffffff800188e4: cc                   	int3
ffffffff800188e5: cc                   	int3
ffffffff800188e6: cc                   	int3
ffffffff800188e7: cc                   	int3
ffffffff800188e8: cc                   	int3
ffffffff800188e9: cc                   	int3
ffffffff800188ea: cc                   	int3
ffffffff800188eb: cc                   	int3
ffffffff800188ec: cc                   	int3
ffffffff800188ed: cc                   	int3
ffffffff800188ee: cc                   	int3
ffffffff800188ef: cc                   	int3

ffffffff800188f0 <alloc::raw_vec::capacity_overflow::ha70ea8db05fe5aa9.llvm.16187557440381842777>:
ffffffff800188f0: 48 83 ec 38          	subq	$0x38, %rsp
ffffffff800188f4: 48 89 fe             	movq	%rdi, %rsi
ffffffff800188f7: 48 c7 44 24 08 80 38 02 80   	movq	$-0x7ffdc780, 0x8(%rsp) # imm = 0x80023880
ffffffff80018900: 48 c7 44 24 10 01 00 00 00   	movq	$0x1, 0x10(%rsp)
ffffffff80018909: 48 c7 44 24 28 00 00 00 00   	movq	$0x0, 0x28(%rsp)
ffffffff80018912: 48 c7 44 24 18 08 00 00 00   	movq	$0x8, 0x18(%rsp)
ffffffff8001891b: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff80018924: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff80018929: e8 c2 3a 00 00       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8001892e: cc                   	int3
ffffffff8001892f: cc                   	int3

ffffffff80018930 <alloc::raw_vec::RawVec<T,A>::grow_one::hf62aef241abb5f6c>:
ffffffff80018930: 41 57                	pushq	%r15
ffffffff80018932: 41 56                	pushq	%r14
ffffffff80018934: 53                   	pushq	%rbx
ffffffff80018935: 48 83 ec 30          	subq	$0x30, %rsp
ffffffff80018939: 48 89 f3             	movq	%rsi, %rbx
ffffffff8001893c: 48 8b 07             	movq	(%rdi), %rax
ffffffff8001893f: 48 8d 48 01          	leaq	0x1(%rax), %rcx
ffffffff80018943: 48 8d 14 00          	leaq	(%rax,%rax), %rdx
ffffffff80018947: 48 39 d1             	cmpq	%rdx, %rcx
ffffffff8001894a: 48 0f 47 d1          	cmovaq	%rcx, %rdx
ffffffff8001894e: 48 83 fa 09          	cmpq	$0x9, %rdx
ffffffff80018952: 41 bf 08 00 00 00    	movl	$0x8, %r15d
ffffffff80018958: 4c 0f 43 fa          	cmovaeq	%rdx, %r15
ffffffff8001895c: 4d 85 ff             	testq	%r15, %r15
ffffffff8001895f: 78 55                	js	0xffffffff800189b6 <alloc::raw_vec::RawVec<T,A>::grow_one::hf62aef241abb5f6c+0x86>
ffffffff80018961: 49 89 fe             	movq	%rdi, %r14
ffffffff80018964: 48 85 c0             	testq	%rax, %rax
ffffffff80018967: 75 04                	jne	0xffffffff8001896d <alloc::raw_vec::RawVec<T,A>::grow_one::hf62aef241abb5f6c+0x3d>
ffffffff80018969: 31 c0                	xorl	%eax, %eax
ffffffff8001896b: eb 13                	jmp	0xffffffff80018980 <alloc::raw_vec::RawVec<T,A>::grow_one::hf62aef241abb5f6c+0x50>
ffffffff8001896d: 49 8b 4e 08          	movq	0x8(%r14), %rcx
ffffffff80018971: 48 89 4c 24 18       	movq	%rcx, 0x18(%rsp)
ffffffff80018976: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff8001897b: b8 01 00 00 00       	movl	$0x1, %eax
ffffffff80018980: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff80018985: 48 89 e7             	movq	%rsp, %rdi
ffffffff80018988: 48 8d 4c 24 18       	leaq	0x18(%rsp), %rcx
ffffffff8001898d: be 01 00 00 00       	movl	$0x1, %esi
ffffffff80018992: 4c 89 fa             	movq	%r15, %rdx
ffffffff80018995: e8 46 01 00 00       	callq	0xffffffff80018ae0 <alloc::raw_vec::finish_grow::h37019e917bb7b718.llvm.16187557440381842777>
ffffffff8001899a: 83 3c 24 01          	cmpl	$0x1, (%rsp)
ffffffff8001899e: 74 20                	je	0xffffffff800189c0 <alloc::raw_vec::RawVec<T,A>::grow_one::hf62aef241abb5f6c+0x90>
ffffffff800189a0: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff800189a5: 49 89 46 08          	movq	%rax, 0x8(%r14)
ffffffff800189a9: 4d 89 3e             	movq	%r15, (%r14)
ffffffff800189ac: 48 83 c4 30          	addq	$0x30, %rsp
ffffffff800189b0: 5b                   	popq	%rbx
ffffffff800189b1: 41 5e                	popq	%r14
ffffffff800189b3: 41 5f                	popq	%r15
ffffffff800189b5: c3                   	retq
ffffffff800189b6: 31 ff                	xorl	%edi, %edi
ffffffff800189b8: 48 89 da             	movq	%rbx, %rdx
ffffffff800189bb: e8 87 01 00 00       	callq	0xffffffff80018b47 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff800189c0: 48 8b 7c 24 08       	movq	0x8(%rsp), %rdi
ffffffff800189c5: 48 8b 74 24 10       	movq	0x10(%rsp), %rsi
ffffffff800189ca: 48 89 da             	movq	%rbx, %rdx
ffffffff800189cd: e8 75 01 00 00       	callq	0xffffffff80018b47 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff800189d2: cc                   	int3
ffffffff800189d3: cc                   	int3
ffffffff800189d4: cc                   	int3
ffffffff800189d5: cc                   	int3
ffffffff800189d6: cc                   	int3
ffffffff800189d7: cc                   	int3
ffffffff800189d8: cc                   	int3
ffffffff800189d9: cc                   	int3
ffffffff800189da: cc                   	int3
ffffffff800189db: cc                   	int3
ffffffff800189dc: cc                   	int3
ffffffff800189dd: cc                   	int3
ffffffff800189de: cc                   	int3
ffffffff800189df: cc                   	int3

ffffffff800189e0 <alloc::raw_vec::RawVecInner<A>::reserve::do_reserve_and_handle::h42dcfc46384bc990>:
ffffffff800189e0: 41 56                	pushq	%r14
ffffffff800189e2: 53                   	pushq	%rbx
ffffffff800189e3: 48 83 ec 38          	subq	$0x38, %rsp
ffffffff800189e7: 4d 85 c0             	testq	%r8, %r8
ffffffff800189ea: 0f 84 bf 00 00 00    	je	0xffffffff80018aaf <alloc::raw_vec::RawVecInner<A>::reserve::do_reserve_and_handle::h42dcfc46384bc990+0xcf>
ffffffff800189f0: 48 01 d6             	addq	%rdx, %rsi
ffffffff800189f3: 0f 82 b6 00 00 00    	jb	0xffffffff80018aaf <alloc::raw_vec::RawVecInner<A>::reserve::do_reserve_and_handle::h42dcfc46384bc990+0xcf>
ffffffff800189f9: 48 89 fb             	movq	%rdi, %rbx
ffffffff800189fc: 4c 8b 0f             	movq	(%rdi), %r9
ffffffff800189ff: 4b 8d 04 09          	leaq	(%r9,%r9), %rax
ffffffff80018a03: 48 39 c6             	cmpq	%rax, %rsi
ffffffff80018a06: 48 0f 47 c6          	cmovaq	%rsi, %rax
ffffffff80018a0a: 31 d2                	xorl	%edx, %edx
ffffffff80018a0c: 49 81 f8 01 04 00 00 	cmpq	$0x401, %r8             # imm = 0x401
ffffffff80018a13: 0f 92 c2             	setb	%dl
ffffffff80018a16: 49 83 f8 01          	cmpq	$0x1, %r8
ffffffff80018a1a: 48 8d 54 52 01       	leaq	0x1(%rdx,%rdx,2), %rdx
ffffffff80018a1f: 41 be 08 00 00 00    	movl	$0x8, %r14d
ffffffff80018a25: 4c 0f 45 f2          	cmovneq	%rdx, %r14
ffffffff80018a29: 4c 39 f0             	cmpq	%r14, %rax
ffffffff80018a2c: 4c 0f 47 f0          	cmovaq	%rax, %r14
ffffffff80018a30: 4a 8d 14 01          	leaq	(%rcx,%r8), %rdx
ffffffff80018a34: 48 ff ca             	decq	%rdx
ffffffff80018a37: 48 89 c8             	movq	%rcx, %rax
ffffffff80018a3a: 48 f7 d8             	negq	%rax
ffffffff80018a3d: 48 21 d0             	andq	%rdx, %rax
ffffffff80018a40: 31 ff                	xorl	%edi, %edi
ffffffff80018a42: 49 f7 e6             	mulq	%r14
ffffffff80018a45: 70 6a                	jo	0xffffffff80018ab1 <alloc::raw_vec::RawVecInner<A>::reserve::do_reserve_and_handle::h42dcfc46384bc990+0xd1>
ffffffff80018a47: 48 ba 00 00 00 00 00 00 00 80	movabsq	$-0x8000000000000000, %rdx # imm = 0x8000000000000000
ffffffff80018a51: 48 29 ca             	subq	%rcx, %rdx
ffffffff80018a54: 48 39 d0             	cmpq	%rdx, %rax
ffffffff80018a57: 77 6e                	ja	0xffffffff80018ac7 <alloc::raw_vec::RawVecInner<A>::reserve::do_reserve_and_handle::h42dcfc46384bc990+0xe7>
ffffffff80018a59: 4d 85 c9             	testq	%r9, %r9
ffffffff80018a5c: 75 04                	jne	0xffffffff80018a62 <alloc::raw_vec::RawVecInner<A>::reserve::do_reserve_and_handle::h42dcfc46384bc990+0x82>
ffffffff80018a5e: 31 d2                	xorl	%edx, %edx
ffffffff80018a60: eb 15                	jmp	0xffffffff80018a77 <alloc::raw_vec::RawVecInner<A>::reserve::do_reserve_and_handle::h42dcfc46384bc990+0x97>
ffffffff80018a62: 48 8b 53 08          	movq	0x8(%rbx), %rdx
ffffffff80018a66: 4d 0f af c8          	imulq	%r8, %r9
ffffffff80018a6a: 48 89 54 24 20       	movq	%rdx, 0x20(%rsp)
ffffffff80018a6f: 4c 89 4c 24 30       	movq	%r9, 0x30(%rsp)
ffffffff80018a74: 48 89 ca             	movq	%rcx, %rdx
ffffffff80018a77: 48 89 54 24 28       	movq	%rdx, 0x28(%rsp)
ffffffff80018a7c: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff80018a81: 4c 8d 44 24 20       	leaq	0x20(%rsp), %r8
ffffffff80018a86: 48 89 ce             	movq	%rcx, %rsi
ffffffff80018a89: 48 89 c2             	movq	%rax, %rdx
ffffffff80018a8c: 4c 89 c1             	movq	%r8, %rcx
ffffffff80018a8f: e8 4c 00 00 00       	callq	0xffffffff80018ae0 <alloc::raw_vec::finish_grow::h37019e917bb7b718.llvm.16187557440381842777>
ffffffff80018a94: 83 7c 24 08 01       	cmpl	$0x1, 0x8(%rsp)
ffffffff80018a99: 74 22                	je	0xffffffff80018abd <alloc::raw_vec::RawVecInner<A>::reserve::do_reserve_and_handle::h42dcfc46384bc990+0xdd>
ffffffff80018a9b: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff80018aa0: 48 89 43 08          	movq	%rax, 0x8(%rbx)
ffffffff80018aa4: 4c 89 33             	movq	%r14, (%rbx)
ffffffff80018aa7: 48 83 c4 38          	addq	$0x38, %rsp
ffffffff80018aab: 5b                   	popq	%rbx
ffffffff80018aac: 41 5e                	popq	%r14
ffffffff80018aae: c3                   	retq
ffffffff80018aaf: 31 ff                	xorl	%edi, %edi
ffffffff80018ab1: 48 c7 c2 08 39 02 80 	movq	$-0x7ffdc6f8, %rdx      # imm = 0x80023908
ffffffff80018ab8: e8 8a 00 00 00       	callq	0xffffffff80018b47 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff80018abd: 48 8b 7c 24 10       	movq	0x10(%rsp), %rdi
ffffffff80018ac2: 48 8b 74 24 18       	movq	0x18(%rsp), %rsi
ffffffff80018ac7: 48 c7 c2 08 39 02 80 	movq	$-0x7ffdc6f8, %rdx      # imm = 0x80023908
ffffffff80018ace: e8 74 00 00 00       	callq	0xffffffff80018b47 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff80018ad3: cc                   	int3
ffffffff80018ad4: cc                   	int3
ffffffff80018ad5: cc                   	int3
ffffffff80018ad6: cc                   	int3
ffffffff80018ad7: cc                   	int3
ffffffff80018ad8: cc                   	int3
ffffffff80018ad9: cc                   	int3
ffffffff80018ada: cc                   	int3
ffffffff80018adb: cc                   	int3
ffffffff80018adc: cc                   	int3
ffffffff80018add: cc                   	int3
ffffffff80018ade: cc                   	int3
ffffffff80018adf: cc                   	int3

ffffffff80018ae0 <alloc::raw_vec::finish_grow::h37019e917bb7b718.llvm.16187557440381842777>:
ffffffff80018ae0: 41 57                	pushq	%r15
ffffffff80018ae2: 41 56                	pushq	%r14
ffffffff80018ae4: 53                   	pushq	%rbx
ffffffff80018ae5: 48 89 d3             	movq	%rdx, %rbx
ffffffff80018ae8: 49 89 f7             	movq	%rsi, %r15
ffffffff80018aeb: 49 89 fe             	movq	%rdi, %r14
ffffffff80018aee: 48 83 79 08 00       	cmpq	$0x0, 0x8(%rcx)
ffffffff80018af3: 74 19                	je	0xffffffff80018b0e <alloc::raw_vec::finish_grow::h37019e917bb7b718.llvm.16187557440381842777+0x2e>
ffffffff80018af5: 48 8b 71 10          	movq	0x10(%rcx), %rsi
ffffffff80018af9: 48 85 f6             	testq	%rsi, %rsi
ffffffff80018afc: 74 10                	je	0xffffffff80018b0e <alloc::raw_vec::finish_grow::h37019e917bb7b718.llvm.16187557440381842777+0x2e>
ffffffff80018afe: 48 8b 39             	movq	(%rcx), %rdi
ffffffff80018b01: 4c 89 fa             	movq	%r15, %rdx
ffffffff80018b04: 48 89 d9             	movq	%rbx, %rcx
ffffffff80018b07: e8 84 62 ff ff       	callq	0xffffffff8000ed90 <__rust_realloc>
ffffffff80018b0c: eb 1c                	jmp	0xffffffff80018b2a <alloc::raw_vec::finish_grow::h37019e917bb7b718.llvm.16187557440381842777+0x4a>
ffffffff80018b0e: 48 85 db             	testq	%rbx, %rbx
ffffffff80018b11: 74 14                	je	0xffffffff80018b27 <alloc::raw_vec::finish_grow::h37019e917bb7b718.llvm.16187557440381842777+0x47>
ffffffff80018b13: 0f b6 05 c7 c6 00 00 	movzbl	0xc6c7(%rip), %eax      # 0xffffffff800251e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80018b1a: 48 89 df             	movq	%rbx, %rdi
ffffffff80018b1d: 4c 89 fe             	movq	%r15, %rsi
ffffffff80018b20: e8 cb 61 ff ff       	callq	0xffffffff8000ecf0 <__rust_alloc>
ffffffff80018b25: eb 03                	jmp	0xffffffff80018b2a <alloc::raw_vec::finish_grow::h37019e917bb7b718.llvm.16187557440381842777+0x4a>
ffffffff80018b27: 4c 89 f8             	movq	%r15, %rax
ffffffff80018b2a: 31 c9                	xorl	%ecx, %ecx
ffffffff80018b2c: 48 85 c0             	testq	%rax, %rax
ffffffff80018b2f: 4c 0f 45 f8          	cmovneq	%rax, %r15
ffffffff80018b33: 0f 94 c1             	sete	%cl
ffffffff80018b36: 4d 89 7e 08          	movq	%r15, 0x8(%r14)
ffffffff80018b3a: 49 89 5e 10          	movq	%rbx, 0x10(%r14)
ffffffff80018b3e: 49 89 0e             	movq	%rcx, (%r14)
ffffffff80018b41: 5b                   	popq	%rbx
ffffffff80018b42: 41 5e                	popq	%r14
ffffffff80018b44: 41 5f                	popq	%r15
ffffffff80018b46: c3                   	retq

ffffffff80018b47 <alloc::raw_vec::handle_error::hfb597936acd3049c>:
ffffffff80018b47: 50                   	pushq	%rax
ffffffff80018b48: 48 85 ff             	testq	%rdi, %rdi
ffffffff80018b4b: 75 08                	jne	0xffffffff80018b55 <alloc::raw_vec::handle_error::hfb597936acd3049c+0xe>
ffffffff80018b4d: 48 89 d7             	movq	%rdx, %rdi
ffffffff80018b50: e8 9b fd ff ff       	callq	0xffffffff800188f0 <alloc::raw_vec::capacity_overflow::ha70ea8db05fe5aa9.llvm.16187557440381842777>
ffffffff80018b55: e8 08 05 00 00       	callq	0xffffffff80019062 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>
ffffffff80018b5a: cc                   	int3
ffffffff80018b5b: cc                   	int3
ffffffff80018b5c: cc                   	int3
ffffffff80018b5d: cc                   	int3
ffffffff80018b5e: cc                   	int3
ffffffff80018b5f: cc                   	int3

ffffffff80018b60 <alloc::fmt::format::format_inner::ha57507f8e4bcde35>:
ffffffff80018b60: 41 57                	pushq	%r15
ffffffff80018b62: 41 56                	pushq	%r14
ffffffff80018b64: 41 54                	pushq	%r12
ffffffff80018b66: 53                   	pushq	%rbx
ffffffff80018b67: 48 83 ec 28          	subq	$0x28, %rsp
ffffffff80018b6b: 49 89 f6             	movq	%rsi, %r14
ffffffff80018b6e: 48 89 fb             	movq	%rdi, %rbx
ffffffff80018b71: 48 8b 56 08          	movq	0x8(%rsi), %rdx
ffffffff80018b75: 48 85 d2             	testq	%rdx, %rdx
ffffffff80018b78: 0f 84 c0 00 00 00    	je	0xffffffff80018c3e <alloc::fmt::format::format_inner::ha57507f8e4bcde35+0xde>
ffffffff80018b7e: 49 8b 06             	movq	(%r14), %rax
ffffffff80018b81: 89 d1                	movl	%edx, %ecx
ffffffff80018b83: 83 e1 03             	andl	$0x3, %ecx
ffffffff80018b86: 48 83 fa 04          	cmpq	$0x4, %rdx
ffffffff80018b8a: 73 07                	jae	0xffffffff80018b93 <alloc::fmt::format::format_inner::ha57507f8e4bcde35+0x33>
ffffffff80018b8c: 45 31 ff             	xorl	%r15d, %r15d
ffffffff80018b8f: 31 f6                	xorl	%esi, %esi
ffffffff80018b91: eb 29                	jmp	0xffffffff80018bbc <alloc::fmt::format::format_inner::ha57507f8e4bcde35+0x5c>
ffffffff80018b93: 48 83 e2 fc          	andq	$-0x4, %rdx
ffffffff80018b97: 48 8d 78 38          	leaq	0x38(%rax), %rdi
ffffffff80018b9b: 45 31 ff             	xorl	%r15d, %r15d
ffffffff80018b9e: 31 f6                	xorl	%esi, %esi
ffffffff80018ba0: 4c 03 7f d0          	addq	-0x30(%rdi), %r15
ffffffff80018ba4: 4c 03 7f e0          	addq	-0x20(%rdi), %r15
ffffffff80018ba8: 4c 03 7f f0          	addq	-0x10(%rdi), %r15
ffffffff80018bac: 4c 03 3f             	addq	(%rdi), %r15
ffffffff80018baf: 48 83 c6 04          	addq	$0x4, %rsi
ffffffff80018bb3: 48 83 c7 40          	addq	$0x40, %rdi
ffffffff80018bb7: 48 39 f2             	cmpq	%rsi, %rdx
ffffffff80018bba: 75 e4                	jne	0xffffffff80018ba0 <alloc::fmt::format::format_inner::ha57507f8e4bcde35+0x40>
ffffffff80018bbc: 48 85 c9             	testq	%rcx, %rcx
ffffffff80018bbf: 74 2c                	je	0xffffffff80018bed <alloc::fmt::format::format_inner::ha57507f8e4bcde35+0x8d>
ffffffff80018bc1: 48 c1 e6 04          	shlq	$0x4, %rsi
ffffffff80018bc5: 48 8d 14 06          	leaq	(%rsi,%rax), %rdx
ffffffff80018bc9: 48 83 c2 08          	addq	$0x8, %rdx
ffffffff80018bcd: c1 e1 04             	shll	$0x4, %ecx
ffffffff80018bd0: 31 f6                	xorl	%esi, %esi
ffffffff80018bd2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
ffffffff80018be0: 4c 03 3c 32          	addq	(%rdx,%rsi), %r15
ffffffff80018be4: 48 83 c6 10          	addq	$0x10, %rsi
ffffffff80018be8: 48 39 f1             	cmpq	%rsi, %rcx
ffffffff80018beb: 75 f3                	jne	0xffffffff80018be0 <alloc::fmt::format::format_inner::ha57507f8e4bcde35+0x80>
ffffffff80018bed: 49 83 7e 18 00       	cmpq	$0x0, 0x18(%r14)
ffffffff80018bf2: 74 1b                	je	0xffffffff80018c0f <alloc::fmt::format::format_inner::ha57507f8e4bcde35+0xaf>
ffffffff80018bf4: 48 83 78 08 00       	cmpq	$0x0, 0x8(%rax)
ffffffff80018bf9: 0f 94 c0             	sete	%al
ffffffff80018bfc: 49 83 ff 10          	cmpq	$0x10, %r15
ffffffff80018c00: 0f 92 c1             	setb	%cl
ffffffff80018c03: 4d 85 ff             	testq	%r15, %r15
ffffffff80018c06: 78 36                	js	0xffffffff80018c3e <alloc::fmt::format::format_inner::ha57507f8e4bcde35+0xde>
ffffffff80018c08: 20 c1                	andb	%al, %cl
ffffffff80018c0a: 75 32                	jne	0xffffffff80018c3e <alloc::fmt::format::format_inner::ha57507f8e4bcde35+0xde>
ffffffff80018c0c: 4d 01 ff             	addq	%r15, %r15
ffffffff80018c0f: 4d 85 ff             	testq	%r15, %r15
ffffffff80018c12: 0f 88 a6 00 00 00    	js	0xffffffff80018cbe <alloc::fmt::format::format_inner::ha57507f8e4bcde35+0x15e>
ffffffff80018c18: 74 24                	je	0xffffffff80018c3e <alloc::fmt::format::format_inner::ha57507f8e4bcde35+0xde>
ffffffff80018c1a: 0f b6 05 c0 c5 00 00 	movzbl	0xc5c0(%rip), %eax      # 0xffffffff800251e1 <__rust_no_alloc_shim_is_unstable>
ffffffff80018c21: 41 bc 01 00 00 00    	movl	$0x1, %r12d
ffffffff80018c27: be 01 00 00 00       	movl	$0x1, %esi
ffffffff80018c2c: 4c 89 ff             	movq	%r15, %rdi
ffffffff80018c2f: e8 bc 60 ff ff       	callq	0xffffffff8000ecf0 <__rust_alloc>
ffffffff80018c34: 48 85 c0             	testq	%rax, %rax
ffffffff80018c37: 75 0d                	jne	0xffffffff80018c46 <alloc::fmt::format::format_inner::ha57507f8e4bcde35+0xe6>
ffffffff80018c39: e9 83 00 00 00       	jmp	0xffffffff80018cc1 <alloc::fmt::format::format_inner::ha57507f8e4bcde35+0x161>
ffffffff80018c3e: b8 01 00 00 00       	movl	$0x1, %eax
ffffffff80018c43: 45 31 ff             	xorl	%r15d, %r15d
ffffffff80018c46: 4c 89 7c 24 10       	movq	%r15, 0x10(%rsp)
ffffffff80018c4b: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff80018c50: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff80018c59: 48 8d 7c 24 10       	leaq	0x10(%rsp), %rdi
ffffffff80018c5e: 48 c7 c6 38 38 02 80 	movq	$-0x7ffdc7c8, %rsi      # imm = 0x80023838
ffffffff80018c65: 4c 89 f2             	movq	%r14, %rdx
ffffffff80018c68: e8 13 0a 00 00       	callq	0xffffffff80019680 <core::fmt::write::h1a05140646fc4354>
ffffffff80018c6d: 84 c0                	testb	%al, %al
ffffffff80018c6f: 75 29                	jne	0xffffffff80018c9a <alloc::fmt::format::format_inner::ha57507f8e4bcde35+0x13a>
ffffffff80018c71: 48 8b 44 24 20       	movq	0x20(%rsp), %rax
ffffffff80018c76: 48 89 43 10          	movq	%rax, 0x10(%rbx)
ffffffff80018c7a: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff80018c7f: 48 8b 4c 24 18       	movq	0x18(%rsp), %rcx
ffffffff80018c84: 48 89 4b 08          	movq	%rcx, 0x8(%rbx)
ffffffff80018c88: 48 89 03             	movq	%rax, (%rbx)
ffffffff80018c8b: 48 89 d8             	movq	%rbx, %rax
ffffffff80018c8e: 48 83 c4 28          	addq	$0x28, %rsp
ffffffff80018c92: 5b                   	popq	%rbx
ffffffff80018c93: 41 5c                	popq	%r12
ffffffff80018c95: 41 5e                	popq	%r14
ffffffff80018c97: 41 5f                	popq	%r15
ffffffff80018c99: c3                   	retq
ffffffff80018c9a: 48 8d 54 24 0f       	leaq	0xf(%rsp), %rdx
ffffffff80018c9f: be 56 00 00 00       	movl	$0x56, %esi
ffffffff80018ca4: 48 c7 c7 d0 39 02 80 	movq	$-0x7ffdc630, %rdi      # imm = 0x800239D0
ffffffff80018cab: 48 c7 c1 b0 39 02 80 	movq	$-0x7ffdc650, %rcx      # imm = 0x800239B0
ffffffff80018cb2: 49 c7 c0 98 3a 02 80 	movq	$-0x7ffdc568, %r8       # imm = 0x80023A98
ffffffff80018cb9: e8 22 32 00 00       	callq	0xffffffff8001bee0 <core::result::unwrap_failed::hf66f866f6b418554>
ffffffff80018cbe: 45 31 e4             	xorl	%r12d, %r12d
ffffffff80018cc1: 4c 89 e7             	movq	%r12, %rdi
ffffffff80018cc4: 4c 89 fe             	movq	%r15, %rsi
ffffffff80018cc7: 48 c7 c2 98 39 02 80 	movq	$-0x7ffdc668, %rdx      # imm = 0x80023998
ffffffff80018cce: e8 74 fe ff ff       	callq	0xffffffff80018b47 <alloc::raw_vec::handle_error::hfb597936acd3049c>
ffffffff80018cd3: cc                   	int3
ffffffff80018cd4: cc                   	int3
ffffffff80018cd5: cc                   	int3
ffffffff80018cd6: cc                   	int3
ffffffff80018cd7: cc                   	int3
ffffffff80018cd8: cc                   	int3
ffffffff80018cd9: cc                   	int3
ffffffff80018cda: cc                   	int3
ffffffff80018cdb: cc                   	int3
ffffffff80018cdc: cc                   	int3
ffffffff80018cdd: cc                   	int3
ffffffff80018cde: cc                   	int3
ffffffff80018cdf: cc                   	int3

ffffffff80018ce0 <<alloc::string::String as core::fmt::Write>::write_str::h4a7d2315930701cd>:
ffffffff80018ce0: 41 57                	pushq	%r15
ffffffff80018ce2: 41 56                	pushq	%r14
ffffffff80018ce4: 41 54                	pushq	%r12
ffffffff80018ce6: 53                   	pushq	%rbx
ffffffff80018ce7: 50                   	pushq	%rax
ffffffff80018ce8: 48 89 d3             	movq	%rdx, %rbx
ffffffff80018ceb: 49 89 fe             	movq	%rdi, %r14
ffffffff80018cee: 48 8b 07             	movq	(%rdi), %rax
ffffffff80018cf1: 4c 8b 7f 10          	movq	0x10(%rdi), %r15
ffffffff80018cf5: 4c 29 f8             	subq	%r15, %rax
ffffffff80018cf8: 48 39 d0             	cmpq	%rdx, %rax
ffffffff80018cfb: 72 25                	jb	0xffffffff80018d22 <<alloc::string::String as core::fmt::Write>::write_str::h4a7d2315930701cd+0x42>
ffffffff80018cfd: 49 8b 7e 08          	movq	0x8(%r14), %rdi
ffffffff80018d01: 4c 01 ff             	addq	%r15, %rdi
ffffffff80018d04: 48 89 da             	movq	%rbx, %rdx
ffffffff80018d07: ff 15 13 d7 01 00    	callq	*0x1d713(%rip)          # 0xffffffff80036420
ffffffff80018d0d: 49 01 df             	addq	%rbx, %r15
ffffffff80018d10: 4d 89 7e 10          	movq	%r15, 0x10(%r14)
ffffffff80018d14: 31 c0                	xorl	%eax, %eax
ffffffff80018d16: 48 83 c4 08          	addq	$0x8, %rsp
ffffffff80018d1a: 5b                   	popq	%rbx
ffffffff80018d1b: 41 5c                	popq	%r12
ffffffff80018d1d: 41 5e                	popq	%r14
ffffffff80018d1f: 41 5f                	popq	%r15
ffffffff80018d21: c3                   	retq
ffffffff80018d22: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff80018d27: 41 b8 01 00 00 00    	movl	$0x1, %r8d
ffffffff80018d2d: 4c 89 f7             	movq	%r14, %rdi
ffffffff80018d30: 49 89 f4             	movq	%rsi, %r12
ffffffff80018d33: 4c 89 fe             	movq	%r15, %rsi
ffffffff80018d36: 48 89 da             	movq	%rbx, %rdx
ffffffff80018d39: e8 a2 fc ff ff       	callq	0xffffffff800189e0 <alloc::raw_vec::RawVecInner<A>::reserve::do_reserve_and_handle::h42dcfc46384bc990>
ffffffff80018d3e: 4c 89 e6             	movq	%r12, %rsi
ffffffff80018d41: 4d 8b 7e 10          	movq	0x10(%r14), %r15
ffffffff80018d45: eb b6                	jmp	0xffffffff80018cfd <<alloc::string::String as core::fmt::Write>::write_str::h4a7d2315930701cd+0x1d>
ffffffff80018d47: cc                   	int3
ffffffff80018d48: cc                   	int3
ffffffff80018d49: cc                   	int3
ffffffff80018d4a: cc                   	int3
ffffffff80018d4b: cc                   	int3
ffffffff80018d4c: cc                   	int3
ffffffff80018d4d: cc                   	int3
ffffffff80018d4e: cc                   	int3
ffffffff80018d4f: cc                   	int3

ffffffff80018d50 <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb>:
ffffffff80018d50: 55                   	pushq	%rbp
ffffffff80018d51: 41 57                	pushq	%r15
ffffffff80018d53: 41 56                	pushq	%r14
ffffffff80018d55: 53                   	pushq	%rbx
ffffffff80018d56: 50                   	pushq	%rax
ffffffff80018d57: 48 89 fb             	movq	%rdi, %rbx
ffffffff80018d5a: 81 fe 80 00 00 00    	cmpl	$0x80, %esi
ffffffff80018d60: 73 30                	jae	0xffffffff80018d92 <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0x42>
ffffffff80018d62: 4c 8b 73 10          	movq	0x10(%rbx), %r14
ffffffff80018d66: 4c 3b 33             	cmpq	(%rbx), %r14
ffffffff80018d69: 75 13                	jne	0xffffffff80018d7e <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0x2e>
ffffffff80018d6b: 48 89 df             	movq	%rbx, %rdi
ffffffff80018d6e: 89 f5                	movl	%esi, %ebp
ffffffff80018d70: 48 c7 c6 b0 3a 02 80 	movq	$-0x7ffdc550, %rsi      # imm = 0x80023AB0
ffffffff80018d77: e8 b4 fb ff ff       	callq	0xffffffff80018930 <alloc::raw_vec::RawVec<T,A>::grow_one::hf62aef241abb5f6c>
ffffffff80018d7c: 89 ee                	movl	%ebp, %esi
ffffffff80018d7e: 48 8b 43 08          	movq	0x8(%rbx), %rax
ffffffff80018d82: 42 88 34 30          	movb	%sil, (%rax,%r14)
ffffffff80018d86: 49 ff c6             	incq	%r14
ffffffff80018d89: 4c 89 73 10          	movq	%r14, 0x10(%rbx)
ffffffff80018d8d: e9 c4 00 00 00       	jmp	0xffffffff80018e56 <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0x106>
ffffffff80018d92: c7 44 24 04 00 00 00 00      	movl	$0x0, 0x4(%rsp)
ffffffff80018d9a: 81 fe 00 08 00 00    	cmpl	$0x800, %esi            # imm = 0x800
ffffffff80018da0: 73 19                	jae	0xffffffff80018dbb <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0x6b>
ffffffff80018da2: 48 8d 44 24 05       	leaq	0x5(%rsp), %rax
ffffffff80018da7: 89 f1                	movl	%esi, %ecx
ffffffff80018da9: c1 e9 06             	shrl	$0x6, %ecx
ffffffff80018dac: 80 c9 c0             	orb	$-0x40, %cl
ffffffff80018daf: 88 4c 24 04          	movb	%cl, 0x4(%rsp)
ffffffff80018db3: 41 be 02 00 00 00    	movl	$0x2, %r14d
ffffffff80018db9: eb 65                	jmp	0xffffffff80018e20 <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0xd0>
ffffffff80018dbb: 81 fe 00 00 01 00    	cmpl	$0x10000, %esi          # imm = 0x10000
ffffffff80018dc1: 73 28                	jae	0xffffffff80018deb <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0x9b>
ffffffff80018dc3: 48 8d 44 24 06       	leaq	0x6(%rsp), %rax
ffffffff80018dc8: 89 f1                	movl	%esi, %ecx
ffffffff80018dca: c1 e9 0c             	shrl	$0xc, %ecx
ffffffff80018dcd: 80 c9 e0             	orb	$-0x20, %cl
ffffffff80018dd0: 88 4c 24 04          	movb	%cl, 0x4(%rsp)
ffffffff80018dd4: 89 f1                	movl	%esi, %ecx
ffffffff80018dd6: c1 e9 06             	shrl	$0x6, %ecx
ffffffff80018dd9: 80 e1 3f             	andb	$0x3f, %cl
ffffffff80018ddc: 80 c9 80             	orb	$-0x80, %cl
ffffffff80018ddf: 88 4c 24 05          	movb	%cl, 0x5(%rsp)
ffffffff80018de3: 41 be 03 00 00 00    	movl	$0x3, %r14d
ffffffff80018de9: eb 35                	jmp	0xffffffff80018e20 <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0xd0>
ffffffff80018deb: 48 8d 44 24 07       	leaq	0x7(%rsp), %rax
ffffffff80018df0: 89 f1                	movl	%esi, %ecx
ffffffff80018df2: c1 e9 12             	shrl	$0x12, %ecx
ffffffff80018df5: 80 c9 f0             	orb	$-0x10, %cl
ffffffff80018df8: 88 4c 24 04          	movb	%cl, 0x4(%rsp)
ffffffff80018dfc: 89 f1                	movl	%esi, %ecx
ffffffff80018dfe: c1 e9 0c             	shrl	$0xc, %ecx
ffffffff80018e01: 80 e1 3f             	andb	$0x3f, %cl
ffffffff80018e04: 80 c9 80             	orb	$-0x80, %cl
ffffffff80018e07: 88 4c 24 05          	movb	%cl, 0x5(%rsp)
ffffffff80018e0b: 89 f1                	movl	%esi, %ecx
ffffffff80018e0d: c1 e9 06             	shrl	$0x6, %ecx
ffffffff80018e10: 80 e1 3f             	andb	$0x3f, %cl
ffffffff80018e13: 80 c9 80             	orb	$-0x80, %cl
ffffffff80018e16: 88 4c 24 06          	movb	%cl, 0x6(%rsp)
ffffffff80018e1a: 41 be 04 00 00 00    	movl	$0x4, %r14d
ffffffff80018e20: 40 80 e6 3f          	andb	$0x3f, %sil
ffffffff80018e24: 40 80 ce 80          	orb	$-0x80, %sil
ffffffff80018e28: 40 88 30             	movb	%sil, (%rax)
ffffffff80018e2b: 48 8b 03             	movq	(%rbx), %rax
ffffffff80018e2e: 4c 8b 7b 10          	movq	0x10(%rbx), %r15
ffffffff80018e32: 4c 29 f8             	subq	%r15, %rax
ffffffff80018e35: 4c 39 f0             	cmpq	%r14, %rax
ffffffff80018e38: 72 29                	jb	0xffffffff80018e63 <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0x113>
ffffffff80018e3a: 48 8b 7b 08          	movq	0x8(%rbx), %rdi
ffffffff80018e3e: 4c 01 ff             	addq	%r15, %rdi
ffffffff80018e41: 48 8d 74 24 04       	leaq	0x4(%rsp), %rsi
ffffffff80018e46: 4c 89 f2             	movq	%r14, %rdx
ffffffff80018e49: ff 15 d1 d5 01 00    	callq	*0x1d5d1(%rip)          # 0xffffffff80036420
ffffffff80018e4f: 4d 01 f7             	addq	%r14, %r15
ffffffff80018e52: 4c 89 7b 10          	movq	%r15, 0x10(%rbx)
ffffffff80018e56: 31 c0                	xorl	%eax, %eax
ffffffff80018e58: 48 83 c4 08          	addq	$0x8, %rsp
ffffffff80018e5c: 5b                   	popq	%rbx
ffffffff80018e5d: 41 5e                	popq	%r14
ffffffff80018e5f: 41 5f                	popq	%r15
ffffffff80018e61: 5d                   	popq	%rbp
ffffffff80018e62: c3                   	retq
ffffffff80018e63: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff80018e68: 41 b8 01 00 00 00    	movl	$0x1, %r8d
ffffffff80018e6e: 48 89 df             	movq	%rbx, %rdi
ffffffff80018e71: 4c 89 fe             	movq	%r15, %rsi
ffffffff80018e74: 4c 89 f2             	movq	%r14, %rdx
ffffffff80018e77: e8 64 fb ff ff       	callq	0xffffffff800189e0 <alloc::raw_vec::RawVecInner<A>::reserve::do_reserve_and_handle::h42dcfc46384bc990>
ffffffff80018e7c: 4c 8b 7b 10          	movq	0x10(%rbx), %r15
ffffffff80018e80: eb b8                	jmp	0xffffffff80018e3a <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0xea>
ffffffff80018e82: cc                   	int3
ffffffff80018e83: cc                   	int3
ffffffff80018e84: cc                   	int3
ffffffff80018e85: cc                   	int3
ffffffff80018e86: cc                   	int3
ffffffff80018e87: cc                   	int3
ffffffff80018e88: cc                   	int3
ffffffff80018e89: cc                   	int3
ffffffff80018e8a: cc                   	int3
ffffffff80018e8b: cc                   	int3
ffffffff80018e8c: cc                   	int3
ffffffff80018e8d: cc                   	int3
ffffffff80018e8e: cc                   	int3
ffffffff80018e8f: cc                   	int3

ffffffff80018e90 <core::fmt::Write::write_fmt::hee4adfe1aba0cc4c>:
ffffffff80018e90: 48 89 f2             	movq	%rsi, %rdx
ffffffff80018e93: 48 c7 c6 c8 3a 02 80 	movq	$-0x7ffdc538, %rsi      # imm = 0x80023AC8
ffffffff80018e9a: e9 e1 07 00 00       	jmp	0xffffffff80019680 <core::fmt::write::h1a05140646fc4354>
ffffffff80018e9f: cc                   	int3

ffffffff80018ea0 <core::ptr::drop_in_place<alloc::string::String>::ha2cbc7a0453587fb>:
ffffffff80018ea0: 48 8b 37             	movq	(%rdi), %rsi
ffffffff80018ea3: 48 85 f6             	testq	%rsi, %rsi
ffffffff80018ea6: 74 0e                	je	0xffffffff80018eb6 <core::ptr::drop_in_place<alloc::string::String>::ha2cbc7a0453587fb+0x16>
ffffffff80018ea8: 48 8b 7f 08          	movq	0x8(%rdi), %rdi
ffffffff80018eac: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff80018eb1: e9 8a 5e ff ff       	jmp	0xffffffff8000ed40 <__rust_dealloc>
ffffffff80018eb6: c3                   	retq
ffffffff80018eb7: cc                   	int3
ffffffff80018eb8: cc                   	int3
ffffffff80018eb9: cc                   	int3
ffffffff80018eba: cc                   	int3
ffffffff80018ebb: cc                   	int3
ffffffff80018ebc: cc                   	int3
ffffffff80018ebd: cc                   	int3
ffffffff80018ebe: cc                   	int3
ffffffff80018ebf: cc                   	int3

ffffffff80018ec0 <<alloc::string::String as core::fmt::Write>::write_str::h4a7d2315930701cd>:
ffffffff80018ec0: 41 57                	pushq	%r15
ffffffff80018ec2: 41 56                	pushq	%r14
ffffffff80018ec4: 41 54                	pushq	%r12
ffffffff80018ec6: 53                   	pushq	%rbx
ffffffff80018ec7: 50                   	pushq	%rax
ffffffff80018ec8: 48 89 d3             	movq	%rdx, %rbx
ffffffff80018ecb: 49 89 fe             	movq	%rdi, %r14
ffffffff80018ece: 48 8b 07             	movq	(%rdi), %rax
ffffffff80018ed1: 4c 8b 7f 10          	movq	0x10(%rdi), %r15
ffffffff80018ed5: 4c 29 f8             	subq	%r15, %rax
ffffffff80018ed8: 48 39 d0             	cmpq	%rdx, %rax
ffffffff80018edb: 72 25                	jb	0xffffffff80018f02 <<alloc::string::String as core::fmt::Write>::write_str::h4a7d2315930701cd+0x42>
ffffffff80018edd: 49 8b 7e 08          	movq	0x8(%r14), %rdi
ffffffff80018ee1: 4c 01 ff             	addq	%r15, %rdi
ffffffff80018ee4: 48 89 da             	movq	%rbx, %rdx
ffffffff80018ee7: ff 15 33 d5 01 00    	callq	*0x1d533(%rip)          # 0xffffffff80036420
ffffffff80018eed: 49 01 df             	addq	%rbx, %r15
ffffffff80018ef0: 4d 89 7e 10          	movq	%r15, 0x10(%r14)
ffffffff80018ef4: 31 c0                	xorl	%eax, %eax
ffffffff80018ef6: 48 83 c4 08          	addq	$0x8, %rsp
ffffffff80018efa: 5b                   	popq	%rbx
ffffffff80018efb: 41 5c                	popq	%r12
ffffffff80018efd: 41 5e                	popq	%r14
ffffffff80018eff: 41 5f                	popq	%r15
ffffffff80018f01: c3                   	retq
ffffffff80018f02: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff80018f07: 41 b8 01 00 00 00    	movl	$0x1, %r8d
ffffffff80018f0d: 4c 89 f7             	movq	%r14, %rdi
ffffffff80018f10: 49 89 f4             	movq	%rsi, %r12
ffffffff80018f13: 4c 89 fe             	movq	%r15, %rsi
ffffffff80018f16: 48 89 da             	movq	%rbx, %rdx
ffffffff80018f19: e8 c2 fa ff ff       	callq	0xffffffff800189e0 <alloc::raw_vec::RawVecInner<A>::reserve::do_reserve_and_handle::h42dcfc46384bc990>
ffffffff80018f1e: 4c 89 e6             	movq	%r12, %rsi
ffffffff80018f21: 4d 8b 7e 10          	movq	0x10(%r14), %r15
ffffffff80018f25: eb b6                	jmp	0xffffffff80018edd <<alloc::string::String as core::fmt::Write>::write_str::h4a7d2315930701cd+0x1d>
ffffffff80018f27: cc                   	int3
ffffffff80018f28: cc                   	int3
ffffffff80018f29: cc                   	int3
ffffffff80018f2a: cc                   	int3
ffffffff80018f2b: cc                   	int3
ffffffff80018f2c: cc                   	int3
ffffffff80018f2d: cc                   	int3
ffffffff80018f2e: cc                   	int3
ffffffff80018f2f: cc                   	int3

ffffffff80018f30 <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb>:
ffffffff80018f30: 55                   	pushq	%rbp
ffffffff80018f31: 41 57                	pushq	%r15
ffffffff80018f33: 41 56                	pushq	%r14
ffffffff80018f35: 53                   	pushq	%rbx
ffffffff80018f36: 50                   	pushq	%rax
ffffffff80018f37: 48 89 fb             	movq	%rdi, %rbx
ffffffff80018f3a: 81 fe 80 00 00 00    	cmpl	$0x80, %esi
ffffffff80018f40: 73 30                	jae	0xffffffff80018f72 <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0x42>
ffffffff80018f42: 4c 8b 73 10          	movq	0x10(%rbx), %r14
ffffffff80018f46: 4c 3b 33             	cmpq	(%rbx), %r14
ffffffff80018f49: 75 13                	jne	0xffffffff80018f5e <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0x2e>
ffffffff80018f4b: 48 89 df             	movq	%rbx, %rdi
ffffffff80018f4e: 89 f5                	movl	%esi, %ebp
ffffffff80018f50: 48 c7 c6 70 3b 02 80 	movq	$-0x7ffdc490, %rsi      # imm = 0x80023B70
ffffffff80018f57: e8 d4 f9 ff ff       	callq	0xffffffff80018930 <alloc::raw_vec::RawVec<T,A>::grow_one::hf62aef241abb5f6c>
ffffffff80018f5c: 89 ee                	movl	%ebp, %esi
ffffffff80018f5e: 48 8b 43 08          	movq	0x8(%rbx), %rax
ffffffff80018f62: 42 88 34 30          	movb	%sil, (%rax,%r14)
ffffffff80018f66: 49 ff c6             	incq	%r14
ffffffff80018f69: 4c 89 73 10          	movq	%r14, 0x10(%rbx)
ffffffff80018f6d: e9 c4 00 00 00       	jmp	0xffffffff80019036 <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0x106>
ffffffff80018f72: c7 44 24 04 00 00 00 00      	movl	$0x0, 0x4(%rsp)
ffffffff80018f7a: 81 fe 00 08 00 00    	cmpl	$0x800, %esi            # imm = 0x800
ffffffff80018f80: 73 19                	jae	0xffffffff80018f9b <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0x6b>
ffffffff80018f82: 48 8d 44 24 05       	leaq	0x5(%rsp), %rax
ffffffff80018f87: 89 f1                	movl	%esi, %ecx
ffffffff80018f89: c1 e9 06             	shrl	$0x6, %ecx
ffffffff80018f8c: 80 c9 c0             	orb	$-0x40, %cl
ffffffff80018f8f: 88 4c 24 04          	movb	%cl, 0x4(%rsp)
ffffffff80018f93: 41 be 02 00 00 00    	movl	$0x2, %r14d
ffffffff80018f99: eb 65                	jmp	0xffffffff80019000 <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0xd0>
ffffffff80018f9b: 81 fe 00 00 01 00    	cmpl	$0x10000, %esi          # imm = 0x10000
ffffffff80018fa1: 73 28                	jae	0xffffffff80018fcb <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0x9b>
ffffffff80018fa3: 48 8d 44 24 06       	leaq	0x6(%rsp), %rax
ffffffff80018fa8: 89 f1                	movl	%esi, %ecx
ffffffff80018faa: c1 e9 0c             	shrl	$0xc, %ecx
ffffffff80018fad: 80 c9 e0             	orb	$-0x20, %cl
ffffffff80018fb0: 88 4c 24 04          	movb	%cl, 0x4(%rsp)
ffffffff80018fb4: 89 f1                	movl	%esi, %ecx
ffffffff80018fb6: c1 e9 06             	shrl	$0x6, %ecx
ffffffff80018fb9: 80 e1 3f             	andb	$0x3f, %cl
ffffffff80018fbc: 80 c9 80             	orb	$-0x80, %cl
ffffffff80018fbf: 88 4c 24 05          	movb	%cl, 0x5(%rsp)
ffffffff80018fc3: 41 be 03 00 00 00    	movl	$0x3, %r14d
ffffffff80018fc9: eb 35                	jmp	0xffffffff80019000 <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0xd0>
ffffffff80018fcb: 48 8d 44 24 07       	leaq	0x7(%rsp), %rax
ffffffff80018fd0: 89 f1                	movl	%esi, %ecx
ffffffff80018fd2: c1 e9 12             	shrl	$0x12, %ecx
ffffffff80018fd5: 80 c9 f0             	orb	$-0x10, %cl
ffffffff80018fd8: 88 4c 24 04          	movb	%cl, 0x4(%rsp)
ffffffff80018fdc: 89 f1                	movl	%esi, %ecx
ffffffff80018fde: c1 e9 0c             	shrl	$0xc, %ecx
ffffffff80018fe1: 80 e1 3f             	andb	$0x3f, %cl
ffffffff80018fe4: 80 c9 80             	orb	$-0x80, %cl
ffffffff80018fe7: 88 4c 24 05          	movb	%cl, 0x5(%rsp)
ffffffff80018feb: 89 f1                	movl	%esi, %ecx
ffffffff80018fed: c1 e9 06             	shrl	$0x6, %ecx
ffffffff80018ff0: 80 e1 3f             	andb	$0x3f, %cl
ffffffff80018ff3: 80 c9 80             	orb	$-0x80, %cl
ffffffff80018ff6: 88 4c 24 06          	movb	%cl, 0x6(%rsp)
ffffffff80018ffa: 41 be 04 00 00 00    	movl	$0x4, %r14d
ffffffff80019000: 40 80 e6 3f          	andb	$0x3f, %sil
ffffffff80019004: 40 80 ce 80          	orb	$-0x80, %sil
ffffffff80019008: 40 88 30             	movb	%sil, (%rax)
ffffffff8001900b: 48 8b 03             	movq	(%rbx), %rax
ffffffff8001900e: 4c 8b 7b 10          	movq	0x10(%rbx), %r15
ffffffff80019012: 4c 29 f8             	subq	%r15, %rax
ffffffff80019015: 4c 39 f0             	cmpq	%r14, %rax
ffffffff80019018: 72 29                	jb	0xffffffff80019043 <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0x113>
ffffffff8001901a: 48 8b 7b 08          	movq	0x8(%rbx), %rdi
ffffffff8001901e: 4c 01 ff             	addq	%r15, %rdi
ffffffff80019021: 48 8d 74 24 04       	leaq	0x4(%rsp), %rsi
ffffffff80019026: 4c 89 f2             	movq	%r14, %rdx
ffffffff80019029: ff 15 f1 d3 01 00    	callq	*0x1d3f1(%rip)          # 0xffffffff80036420
ffffffff8001902f: 4d 01 f7             	addq	%r14, %r15
ffffffff80019032: 4c 89 7b 10          	movq	%r15, 0x10(%rbx)
ffffffff80019036: 31 c0                	xorl	%eax, %eax
ffffffff80019038: 48 83 c4 08          	addq	$0x8, %rsp
ffffffff8001903c: 5b                   	popq	%rbx
ffffffff8001903d: 41 5e                	popq	%r14
ffffffff8001903f: 41 5f                	popq	%r15
ffffffff80019041: 5d                   	popq	%rbp
ffffffff80019042: c3                   	retq
ffffffff80019043: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff80019048: 41 b8 01 00 00 00    	movl	$0x1, %r8d
ffffffff8001904e: 48 89 df             	movq	%rbx, %rdi
ffffffff80019051: 4c 89 fe             	movq	%r15, %rsi
ffffffff80019054: 4c 89 f2             	movq	%r14, %rdx
ffffffff80019057: e8 84 f9 ff ff       	callq	0xffffffff800189e0 <alloc::raw_vec::RawVecInner<A>::reserve::do_reserve_and_handle::h42dcfc46384bc990>
ffffffff8001905c: 4c 8b 7b 10          	movq	0x10(%rbx), %r15
ffffffff80019060: eb b8                	jmp	0xffffffff8001901a <<alloc::string::String as core::fmt::Write>::write_char::h30456f7ca74734eb+0xea>

ffffffff80019062 <alloc::alloc::handle_alloc_error::hde4df6d7afd15767>:
ffffffff80019062: 50                   	pushq	%rax
ffffffff80019063: 48 89 f8             	movq	%rdi, %rax
ffffffff80019066: 48 89 f7             	movq	%rsi, %rdi
ffffffff80019069: 48 89 c6             	movq	%rax, %rsi
ffffffff8001906c: e8 af 70 fe ff       	callq	0xffffffff80000120 <__rust_alloc_error_handler>
ffffffff80019071: cc                   	int3
ffffffff80019072: cc                   	int3
ffffffff80019073: cc                   	int3
ffffffff80019074: cc                   	int3
ffffffff80019075: cc                   	int3
ffffffff80019076: cc                   	int3
ffffffff80019077: cc                   	int3
ffffffff80019078: cc                   	int3
ffffffff80019079: cc                   	int3
ffffffff8001907a: cc                   	int3
ffffffff8001907b: cc                   	int3
ffffffff8001907c: cc                   	int3
ffffffff8001907d: cc                   	int3
ffffffff8001907e: cc                   	int3
ffffffff8001907f: cc                   	int3

ffffffff80019080 <__rdl_oom>:
ffffffff80019080: 48 83 ec 48          	subq	$0x48, %rsp
ffffffff80019084: 48 89 3c 24          	movq	%rdi, (%rsp)
ffffffff80019088: 80 3d 51 c1 00 00 00 	cmpb	$0x0, 0xc151(%rip)      # 0xffffffff800251e0 <__rust_alloc_error_handler_should_panic>
ffffffff8001908f: 75 52                	jne	0xffffffff800190e3 <__rdl_oom+0x63>
ffffffff80019091: 48 89 e0             	movq	%rsp, %rax
ffffffff80019094: 48 89 44 24 08       	movq	%rax, 0x8(%rsp)
ffffffff80019099: 48 c7 44 24 10 c0 b8 01 80   	movq	$-0x7ffe4740, 0x10(%rsp) # imm = 0x8001B8C0
ffffffff800190a2: 48 c7 44 24 18 b0 3b 02 80   	movq	$-0x7ffdc450, 0x18(%rsp) # imm = 0x80023BB0
ffffffff800190ab: 48 c7 44 24 20 02 00 00 00   	movq	$0x2, 0x20(%rsp)
ffffffff800190b4: 48 c7 44 24 38 00 00 00 00   	movq	$0x0, 0x38(%rsp)
ffffffff800190bd: 48 8d 44 24 08       	leaq	0x8(%rsp), %rax
ffffffff800190c2: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff800190c7: 48 c7 44 24 30 01 00 00 00   	movq	$0x1, 0x30(%rsp)
ffffffff800190d0: 48 8d 7c 24 18       	leaq	0x18(%rsp), %rdi
ffffffff800190d5: 31 f6                	xorl	%esi, %esi
ffffffff800190d7: 48 c7 c2 48 3c 02 80 	movq	$-0x7ffdc3b8, %rdx      # imm = 0x80023C48
ffffffff800190de: e8 2d 33 00 00       	callq	0xffffffff8001c410 <core::panicking::panic_nounwind_fmt::hfff70d18e33a2d27>
ffffffff800190e3: 48 89 e0             	movq	%rsp, %rax
ffffffff800190e6: 48 89 44 24 08       	movq	%rax, 0x8(%rsp)
ffffffff800190eb: 48 c7 44 24 10 c0 b8 01 80   	movq	$-0x7ffe4740, 0x10(%rsp) # imm = 0x8001B8C0
ffffffff800190f4: 48 c7 44 24 18 b0 3b 02 80   	movq	$-0x7ffdc450, 0x18(%rsp) # imm = 0x80023BB0
ffffffff800190fd: 48 c7 44 24 20 02 00 00 00   	movq	$0x2, 0x20(%rsp)
ffffffff80019106: 48 c7 44 24 38 00 00 00 00   	movq	$0x0, 0x38(%rsp)
ffffffff8001910f: 48 8d 44 24 08       	leaq	0x8(%rsp), %rax
ffffffff80019114: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff80019119: 48 c7 44 24 30 01 00 00 00   	movq	$0x1, 0x30(%rsp)
ffffffff80019122: 48 8d 7c 24 18       	leaq	0x18(%rsp), %rdi
ffffffff80019127: 48 c7 c6 60 3c 02 80 	movq	$-0x7ffdc3a0, %rsi      # imm = 0x80023C60
ffffffff8001912e: e8 bd 32 00 00       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff80019133: cc                   	int3
ffffffff80019134: cc                   	int3
ffffffff80019135: cc                   	int3
ffffffff80019136: cc                   	int3
ffffffff80019137: cc                   	int3
ffffffff80019138: cc                   	int3
ffffffff80019139: cc                   	int3
ffffffff8001913a: cc                   	int3
ffffffff8001913b: cc                   	int3
ffffffff8001913c: cc                   	int3
ffffffff8001913d: cc                   	int3
ffffffff8001913e: cc                   	int3
ffffffff8001913f: cc                   	int3

ffffffff80019140 <core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt::h91bffb6be8aabb18>:
ffffffff80019140: 48 81 ec 88 00 00 00 	subq	$0x88, %rsp
ffffffff80019147: 0f b6 07             	movzbl	(%rdi), %eax
ffffffff8001914a: 45 31 c9             	xorl	%r9d, %r9d
ffffffff8001914d: 89 c1                	movl	%eax, %ecx
ffffffff8001914f: 90                   	nop
ffffffff80019150: c0 e9 04             	shrb	$0x4, %cl
ffffffff80019153: 89 c2                	movl	%eax, %edx
ffffffff80019155: 80 e2 0f             	andb	$0xf, %dl
ffffffff80019158: 8d 7a 30             	leal	0x30(%rdx), %edi
ffffffff8001915b: 44 8d 42 57          	leal	0x57(%rdx), %r8d
ffffffff8001915f: 80 fa 0a             	cmpb	$0xa, %dl
ffffffff80019162: 40 0f b6 d7          	movzbl	%dil, %edx
ffffffff80019166: 41 0f b6 f8          	movzbl	%r8b, %edi
ffffffff8001916a: 0f 42 fa             	cmovbl	%edx, %edi
ffffffff8001916d: 42 88 bc 0c 87 00 00 00      	movb	%dil, 0x87(%rsp,%r9)
ffffffff80019175: 49 ff c9             	decq	%r9
ffffffff80019178: 3c 0f                	cmpb	$0xf, %al
ffffffff8001917a: 89 c8                	movl	%ecx, %eax
ffffffff8001917c: 77 d2                	ja	0xffffffff80019150 <core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt::h91bffb6be8aabb18+0x10>
ffffffff8001917e: 4e 8d 04 0c          	leaq	(%rsp,%r9), %r8
ffffffff80019182: 49 81 c0 88 00 00 00 	addq	$0x88, %r8
ffffffff80019189: 49 f7 d9             	negq	%r9
ffffffff8001918c: b9 02 00 00 00       	movl	$0x2, %ecx
ffffffff80019191: 48 89 f7             	movq	%rsi, %rdi
ffffffff80019194: be 01 00 00 00       	movl	$0x1, %esi
ffffffff80019199: 48 c7 c2 78 3c 02 80 	movq	$-0x7ffdc388, %rdx      # imm = 0x80023C78
ffffffff800191a0: e8 fb 06 00 00       	callq	0xffffffff800198a0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb>
ffffffff800191a5: 48 81 c4 88 00 00 00 	addq	$0x88, %rsp
ffffffff800191ac: c3                   	retq
ffffffff800191ad: cc                   	int3
ffffffff800191ae: cc                   	int3
ffffffff800191af: cc                   	int3

ffffffff800191b0 <core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt::h3b2fbee468aa9cf2>:
ffffffff800191b0: 48 81 ec 88 00 00 00 	subq	$0x88, %rsp
ffffffff800191b7: 0f b6 07             	movzbl	(%rdi), %eax
ffffffff800191ba: 45 31 c9             	xorl	%r9d, %r9d
ffffffff800191bd: 89 c1                	movl	%eax, %ecx
ffffffff800191bf: 90                   	nop
ffffffff800191c0: c0 e9 04             	shrb	$0x4, %cl
ffffffff800191c3: 89 c2                	movl	%eax, %edx
ffffffff800191c5: 80 e2 0f             	andb	$0xf, %dl
ffffffff800191c8: 8d 7a 30             	leal	0x30(%rdx), %edi
ffffffff800191cb: 44 8d 42 37          	leal	0x37(%rdx), %r8d
ffffffff800191cf: 80 fa 0a             	cmpb	$0xa, %dl
ffffffff800191d2: 40 0f b6 d7          	movzbl	%dil, %edx
ffffffff800191d6: 41 0f b6 f8          	movzbl	%r8b, %edi
ffffffff800191da: 0f 42 fa             	cmovbl	%edx, %edi
ffffffff800191dd: 42 88 bc 0c 87 00 00 00      	movb	%dil, 0x87(%rsp,%r9)
ffffffff800191e5: 49 ff c9             	decq	%r9
ffffffff800191e8: 3c 0f                	cmpb	$0xf, %al
ffffffff800191ea: 89 c8                	movl	%ecx, %eax
ffffffff800191ec: 77 d2                	ja	0xffffffff800191c0 <core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt::h3b2fbee468aa9cf2+0x10>
ffffffff800191ee: 4e 8d 04 0c          	leaq	(%rsp,%r9), %r8
ffffffff800191f2: 49 81 c0 88 00 00 00 	addq	$0x88, %r8
ffffffff800191f9: 49 f7 d9             	negq	%r9
ffffffff800191fc: b9 02 00 00 00       	movl	$0x2, %ecx
ffffffff80019201: 48 89 f7             	movq	%rsi, %rdi
ffffffff80019204: be 01 00 00 00       	movl	$0x1, %esi
ffffffff80019209: 48 c7 c2 78 3c 02 80 	movq	$-0x7ffdc388, %rdx      # imm = 0x80023C78
ffffffff80019210: e8 8b 06 00 00       	callq	0xffffffff800198a0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb>
ffffffff80019215: 48 81 c4 88 00 00 00 	addq	$0x88, %rsp
ffffffff8001921c: c3                   	retq
ffffffff8001921d: cc                   	int3
ffffffff8001921e: cc                   	int3
ffffffff8001921f: cc                   	int3

ffffffff80019220 <core::fmt::num::<impl core::fmt::LowerHex for u16>::fmt::h2172977f28036374>:
ffffffff80019220: 48 81 ec 88 00 00 00 	subq	$0x88, %rsp
ffffffff80019227: 0f b7 07             	movzwl	(%rdi), %eax
ffffffff8001922a: 45 31 c9             	xorl	%r9d, %r9d
ffffffff8001922d: 0f 1f 00             	nopl	(%rax)
ffffffff80019230: 0f b7 c8             	movzwl	%ax, %ecx
ffffffff80019233: 89 c8                	movl	%ecx, %eax
ffffffff80019235: c1 e8 04             	shrl	$0x4, %eax
ffffffff80019238: 89 ca                	movl	%ecx, %edx
ffffffff8001923a: 80 e2 0f             	andb	$0xf, %dl
ffffffff8001923d: 8d 7a 30             	leal	0x30(%rdx), %edi
ffffffff80019240: 44 8d 42 57          	leal	0x57(%rdx), %r8d
ffffffff80019244: 80 fa 0a             	cmpb	$0xa, %dl
ffffffff80019247: 40 0f b6 d7          	movzbl	%dil, %edx
ffffffff8001924b: 41 0f b6 f8          	movzbl	%r8b, %edi
ffffffff8001924f: 0f 42 fa             	cmovbl	%edx, %edi
ffffffff80019252: 42 88 bc 0c 87 00 00 00      	movb	%dil, 0x87(%rsp,%r9)
ffffffff8001925a: 49 ff c9             	decq	%r9
ffffffff8001925d: 66 83 f9 0f          	cmpw	$0xf, %cx
ffffffff80019261: 77 cd                	ja	0xffffffff80019230 <core::fmt::num::<impl core::fmt::LowerHex for u16>::fmt::h2172977f28036374+0x10>
ffffffff80019263: 4e 8d 04 0c          	leaq	(%rsp,%r9), %r8
ffffffff80019267: 49 81 c0 88 00 00 00 	addq	$0x88, %r8
ffffffff8001926e: 49 f7 d9             	negq	%r9
ffffffff80019271: b9 02 00 00 00       	movl	$0x2, %ecx
ffffffff80019276: 48 89 f7             	movq	%rsi, %rdi
ffffffff80019279: be 01 00 00 00       	movl	$0x1, %esi
ffffffff8001927e: 48 c7 c2 78 3c 02 80 	movq	$-0x7ffdc388, %rdx      # imm = 0x80023C78
ffffffff80019285: e8 16 06 00 00       	callq	0xffffffff800198a0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb>
ffffffff8001928a: 48 81 c4 88 00 00 00 	addq	$0x88, %rsp
ffffffff80019291: c3                   	retq
ffffffff80019292: cc                   	int3
ffffffff80019293: cc                   	int3
ffffffff80019294: cc                   	int3
ffffffff80019295: cc                   	int3
ffffffff80019296: cc                   	int3
ffffffff80019297: cc                   	int3
ffffffff80019298: cc                   	int3
ffffffff80019299: cc                   	int3
ffffffff8001929a: cc                   	int3
ffffffff8001929b: cc                   	int3
ffffffff8001929c: cc                   	int3
ffffffff8001929d: cc                   	int3
ffffffff8001929e: cc                   	int3
ffffffff8001929f: cc                   	int3

ffffffff800192a0 <core::fmt::num::<impl core::fmt::UpperHex for u16>::fmt::h393152b64093d107>:
ffffffff800192a0: 48 81 ec 88 00 00 00 	subq	$0x88, %rsp
ffffffff800192a7: 0f b7 07             	movzwl	(%rdi), %eax
ffffffff800192aa: 45 31 c9             	xorl	%r9d, %r9d
ffffffff800192ad: 0f 1f 00             	nopl	(%rax)
ffffffff800192b0: 0f b7 c8             	movzwl	%ax, %ecx
ffffffff800192b3: 89 c8                	movl	%ecx, %eax
ffffffff800192b5: c1 e8 04             	shrl	$0x4, %eax
ffffffff800192b8: 89 ca                	movl	%ecx, %edx
ffffffff800192ba: 80 e2 0f             	andb	$0xf, %dl
ffffffff800192bd: 8d 7a 30             	leal	0x30(%rdx), %edi
ffffffff800192c0: 44 8d 42 37          	leal	0x37(%rdx), %r8d
ffffffff800192c4: 80 fa 0a             	cmpb	$0xa, %dl
ffffffff800192c7: 40 0f b6 d7          	movzbl	%dil, %edx
ffffffff800192cb: 41 0f b6 f8          	movzbl	%r8b, %edi
ffffffff800192cf: 0f 42 fa             	cmovbl	%edx, %edi
ffffffff800192d2: 42 88 bc 0c 87 00 00 00      	movb	%dil, 0x87(%rsp,%r9)
ffffffff800192da: 49 ff c9             	decq	%r9
ffffffff800192dd: 66 83 f9 0f          	cmpw	$0xf, %cx
ffffffff800192e1: 77 cd                	ja	0xffffffff800192b0 <core::fmt::num::<impl core::fmt::UpperHex for u16>::fmt::h393152b64093d107+0x10>
ffffffff800192e3: 4e 8d 04 0c          	leaq	(%rsp,%r9), %r8
ffffffff800192e7: 49 81 c0 88 00 00 00 	addq	$0x88, %r8
ffffffff800192ee: 49 f7 d9             	negq	%r9
ffffffff800192f1: b9 02 00 00 00       	movl	$0x2, %ecx
ffffffff800192f6: 48 89 f7             	movq	%rsi, %rdi
ffffffff800192f9: be 01 00 00 00       	movl	$0x1, %esi
ffffffff800192fe: 48 c7 c2 78 3c 02 80 	movq	$-0x7ffdc388, %rdx      # imm = 0x80023C78
ffffffff80019305: e8 96 05 00 00       	callq	0xffffffff800198a0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb>
ffffffff8001930a: 48 81 c4 88 00 00 00 	addq	$0x88, %rsp
ffffffff80019311: c3                   	retq
ffffffff80019312: cc                   	int3
ffffffff80019313: cc                   	int3
ffffffff80019314: cc                   	int3
ffffffff80019315: cc                   	int3
ffffffff80019316: cc                   	int3
ffffffff80019317: cc                   	int3
ffffffff80019318: cc                   	int3
ffffffff80019319: cc                   	int3
ffffffff8001931a: cc                   	int3
ffffffff8001931b: cc                   	int3
ffffffff8001931c: cc                   	int3
ffffffff8001931d: cc                   	int3
ffffffff8001931e: cc                   	int3
ffffffff8001931f: cc                   	int3

ffffffff80019320 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hd0e7c1aefe0075e3>:
ffffffff80019320: 48 81 ec 88 00 00 00 	subq	$0x88, %rsp
ffffffff80019327: 48 8b 07             	movq	(%rdi), %rax
ffffffff8001932a: 45 31 c9             	xorl	%r9d, %r9d
ffffffff8001932d: 48 89 c1             	movq	%rax, %rcx
ffffffff80019330: 48 c1 e9 04          	shrq	$0x4, %rcx
ffffffff80019334: 89 c2                	movl	%eax, %edx
ffffffff80019336: 80 e2 0f             	andb	$0xf, %dl
ffffffff80019339: 8d 7a 30             	leal	0x30(%rdx), %edi
ffffffff8001933c: 44 8d 42 57          	leal	0x57(%rdx), %r8d
ffffffff80019340: 80 fa 0a             	cmpb	$0xa, %dl
ffffffff80019343: 40 0f b6 d7          	movzbl	%dil, %edx
ffffffff80019347: 41 0f b6 f8          	movzbl	%r8b, %edi
ffffffff8001934b: 0f 42 fa             	cmovbl	%edx, %edi
ffffffff8001934e: 42 88 bc 0c 87 00 00 00      	movb	%dil, 0x87(%rsp,%r9)
ffffffff80019356: 49 ff c9             	decq	%r9
ffffffff80019359: 48 83 f8 0f          	cmpq	$0xf, %rax
ffffffff8001935d: 48 89 c8             	movq	%rcx, %rax
ffffffff80019360: 77 ce                	ja	0xffffffff80019330 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hd0e7c1aefe0075e3+0x10>
ffffffff80019362: 4e 8d 04 0c          	leaq	(%rsp,%r9), %r8
ffffffff80019366: 49 81 c0 88 00 00 00 	addq	$0x88, %r8
ffffffff8001936d: 49 f7 d9             	negq	%r9
ffffffff80019370: b9 02 00 00 00       	movl	$0x2, %ecx
ffffffff80019375: 48 89 f7             	movq	%rsi, %rdi
ffffffff80019378: be 01 00 00 00       	movl	$0x1, %esi
ffffffff8001937d: 48 c7 c2 78 3c 02 80 	movq	$-0x7ffdc388, %rdx      # imm = 0x80023C78
ffffffff80019384: e8 17 05 00 00       	callq	0xffffffff800198a0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb>
ffffffff80019389: 48 81 c4 88 00 00 00 	addq	$0x88, %rsp
ffffffff80019390: c3                   	retq
ffffffff80019391: cc                   	int3
ffffffff80019392: cc                   	int3
ffffffff80019393: cc                   	int3
ffffffff80019394: cc                   	int3
ffffffff80019395: cc                   	int3
ffffffff80019396: cc                   	int3
ffffffff80019397: cc                   	int3
ffffffff80019398: cc                   	int3
ffffffff80019399: cc                   	int3
ffffffff8001939a: cc                   	int3
ffffffff8001939b: cc                   	int3
ffffffff8001939c: cc                   	int3
ffffffff8001939d: cc                   	int3
ffffffff8001939e: cc                   	int3
ffffffff8001939f: cc                   	int3

ffffffff800193a0 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::h869006add1042b35>:
ffffffff800193a0: 48 81 ec 88 00 00 00 	subq	$0x88, %rsp
ffffffff800193a7: 48 8b 07             	movq	(%rdi), %rax
ffffffff800193aa: 45 31 c9             	xorl	%r9d, %r9d
ffffffff800193ad: 48 89 c1             	movq	%rax, %rcx
ffffffff800193b0: 48 c1 e9 04          	shrq	$0x4, %rcx
ffffffff800193b4: 89 c2                	movl	%eax, %edx
ffffffff800193b6: 80 e2 0f             	andb	$0xf, %dl
ffffffff800193b9: 8d 7a 30             	leal	0x30(%rdx), %edi
ffffffff800193bc: 44 8d 42 37          	leal	0x37(%rdx), %r8d
ffffffff800193c0: 80 fa 0a             	cmpb	$0xa, %dl
ffffffff800193c3: 40 0f b6 d7          	movzbl	%dil, %edx
ffffffff800193c7: 41 0f b6 f8          	movzbl	%r8b, %edi
ffffffff800193cb: 0f 42 fa             	cmovbl	%edx, %edi
ffffffff800193ce: 42 88 bc 0c 87 00 00 00      	movb	%dil, 0x87(%rsp,%r9)
ffffffff800193d6: 49 ff c9             	decq	%r9
ffffffff800193d9: 48 83 f8 0f          	cmpq	$0xf, %rax
ffffffff800193dd: 48 89 c8             	movq	%rcx, %rax
ffffffff800193e0: 77 ce                	ja	0xffffffff800193b0 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::h869006add1042b35+0x10>
ffffffff800193e2: 4e 8d 04 0c          	leaq	(%rsp,%r9), %r8
ffffffff800193e6: 49 81 c0 88 00 00 00 	addq	$0x88, %r8
ffffffff800193ed: 49 f7 d9             	negq	%r9
ffffffff800193f0: b9 02 00 00 00       	movl	$0x2, %ecx
ffffffff800193f5: 48 89 f7             	movq	%rsi, %rdi
ffffffff800193f8: be 01 00 00 00       	movl	$0x1, %esi
ffffffff800193fd: 48 c7 c2 78 3c 02 80 	movq	$-0x7ffdc388, %rdx      # imm = 0x80023C78
ffffffff80019404: e8 97 04 00 00       	callq	0xffffffff800198a0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb>
ffffffff80019409: 48 81 c4 88 00 00 00 	addq	$0x88, %rsp
ffffffff80019410: c3                   	retq
ffffffff80019411: cc                   	int3
ffffffff80019412: cc                   	int3
ffffffff80019413: cc                   	int3
ffffffff80019414: cc                   	int3
ffffffff80019415: cc                   	int3
ffffffff80019416: cc                   	int3
ffffffff80019417: cc                   	int3
ffffffff80019418: cc                   	int3
ffffffff80019419: cc                   	int3
ffffffff8001941a: cc                   	int3
ffffffff8001941b: cc                   	int3
ffffffff8001941c: cc                   	int3
ffffffff8001941d: cc                   	int3
ffffffff8001941e: cc                   	int3
ffffffff8001941f: cc                   	int3

ffffffff80019420 <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2>:
ffffffff80019420: 41 56                	pushq	%r14
ffffffff80019422: 53                   	pushq	%rbx
ffffffff80019423: 48 83 ec 18          	subq	$0x18, %rsp
ffffffff80019427: 89 f3                	movl	%esi, %ebx
ffffffff80019429: 83 fe 27             	cmpl	$0x27, %esi
ffffffff8001942c: 77 13                	ja	0xffffffff80019441 <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2+0x21>
ffffffff8001942e: 89 d8                	movl	%ebx, %eax
ffffffff80019430: ff 24 c5 48 3d 02 80 	jmpq	*-0x7ffdc2b8(,%rax,8)
ffffffff80019437: 66 c7 07 5c 30       	movw	$0x305c, (%rdi)         # imm = 0x305C
ffffffff8001943c: e9 09 02 00 00       	jmp	0xffffffff8001964a <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2+0x22a>
ffffffff80019441: 83 fb 5c             	cmpl	$0x5c, %ebx
ffffffff80019444: 75 0a                	jne	0xffffffff80019450 <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2+0x30>
ffffffff80019446: 66 c7 07 5c 5c       	movw	$0x5c5c, (%rdi)         # imm = 0x5C5C
ffffffff8001944b: e9 fa 01 00 00       	jmp	0xffffffff8001964a <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2+0x22a>
ffffffff80019450: 81 fb 00 03 00 00    	cmpl	$0x300, %ebx            # imm = 0x300
ffffffff80019456: 0f 93 c0             	setae	%al
ffffffff80019459: 84 d0                	testb	%dl, %al
ffffffff8001945b: 0f 84 0a 01 00 00    	je	0xffffffff8001956b <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2+0x14b>
ffffffff80019461: 49 89 fe             	movq	%rdi, %r14
ffffffff80019464: 89 df                	movl	%ebx, %edi
ffffffff80019466: e8 15 2e 00 00       	callq	0xffffffff8001c280 <core::unicode::unicode_data::grapheme_extend::lookup_slow::hc5758a9b91ef4cfb>
ffffffff8001946b: 4c 89 f7             	movq	%r14, %rdi
ffffffff8001946e: 84 c0                	testb	%al, %al
ffffffff80019470: 0f 84 f5 00 00 00    	je	0xffffffff8001956b <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2+0x14b>
ffffffff80019476: 89 d8                	movl	%ebx, %eax
ffffffff80019478: 83 c8 01             	orl	$0x1, %eax
ffffffff8001947b: 0f bd c0             	bsrl	%eax, %eax
ffffffff8001947e: 83 f0 1c             	xorl	$0x1c, %eax
ffffffff80019481: c1 e8 02             	shrl	$0x2, %eax
ffffffff80019484: 48 8d 48 fe          	leaq	-0x2(%rax), %rcx
ffffffff80019488: c6 44 24 06 00       	movb	$0x0, 0x6(%rsp)
ffffffff8001948d: 66 c7 44 24 04 00 00 	movw	$0x0, 0x4(%rsp)
ffffffff80019494: 89 da                	movl	%ebx, %edx
ffffffff80019496: c1 ea 14             	shrl	$0x14, %edx
ffffffff80019499: 0f b6 92 60 dc 01 80 	movzbl	-0x7ffe23a0(%rdx), %edx
ffffffff800194a0: 88 54 24 07          	movb	%dl, 0x7(%rsp)
ffffffff800194a4: 89 da                	movl	%ebx, %edx
ffffffff800194a6: c1 ea 10             	shrl	$0x10, %edx
ffffffff800194a9: 83 e2 0f             	andl	$0xf, %edx
ffffffff800194ac: 0f b6 92 60 dc 01 80 	movzbl	-0x7ffe23a0(%rdx), %edx
ffffffff800194b3: 88 54 24 08          	movb	%dl, 0x8(%rsp)
ffffffff800194b7: 89 da                	movl	%ebx, %edx
ffffffff800194b9: c1 ea 0c             	shrl	$0xc, %edx
ffffffff800194bc: 83 e2 0f             	andl	$0xf, %edx
ffffffff800194bf: 0f b6 92 60 dc 01 80 	movzbl	-0x7ffe23a0(%rdx), %edx
ffffffff800194c6: 88 54 24 09          	movb	%dl, 0x9(%rsp)
ffffffff800194ca: 89 da                	movl	%ebx, %edx
ffffffff800194cc: c1 ea 08             	shrl	$0x8, %edx
ffffffff800194cf: 83 e2 0f             	andl	$0xf, %edx
ffffffff800194d2: 0f b6 92 60 dc 01 80 	movzbl	-0x7ffe23a0(%rdx), %edx
ffffffff800194d9: 88 54 24 0a          	movb	%dl, 0xa(%rsp)
ffffffff800194dd: 89 da                	movl	%ebx, %edx
ffffffff800194df: c1 ea 04             	shrl	$0x4, %edx
ffffffff800194e2: 83 e2 0f             	andl	$0xf, %edx
ffffffff800194e5: 0f b6 92 60 dc 01 80 	movzbl	-0x7ffe23a0(%rdx), %edx
ffffffff800194ec: 88 54 24 0b          	movb	%dl, 0xb(%rsp)
ffffffff800194f0: 83 e3 0f             	andl	$0xf, %ebx
ffffffff800194f3: 0f b6 93 60 dc 01 80 	movzbl	-0x7ffe23a0(%rbx), %edx
ffffffff800194fa: 88 54 24 0c          	movb	%dl, 0xc(%rsp)
ffffffff800194fe: c6 44 24 0d 7d       	movb	$0x7d, 0xd(%rsp)
ffffffff80019503: 66 c7 44 04 02 5c 75 	movw	$0x755c, 0x2(%rsp,%rax) # imm = 0x755C
ffffffff8001950a: c6 44 04 04 7b       	movb	$0x7b, 0x4(%rsp,%rax)
ffffffff8001950f: 0f b7 44 24 0c       	movzwl	0xc(%rsp), %eax
ffffffff80019514: 66 89 47 08          	movw	%ax, 0x8(%rdi)
ffffffff80019518: 48 8b 44 24 04       	movq	0x4(%rsp), %rax
ffffffff8001951d: 48 89 07             	movq	%rax, (%rdi)
ffffffff80019520: 88 4f 0a             	movb	%cl, 0xa(%rdi)
ffffffff80019523: c6 47 0b 0a          	movb	$0xa, 0xb(%rdi)
ffffffff80019527: 48 83 c4 18          	addq	$0x18, %rsp
ffffffff8001952b: 5b                   	popq	%rbx
ffffffff8001952c: 41 5e                	popq	%r14
ffffffff8001952e: c3                   	retq
ffffffff8001952f: 66 c7 07 5c 6e       	movw	$0x6e5c, (%rdi)         # imm = 0x6E5C
ffffffff80019534: e9 11 01 00 00       	jmp	0xffffffff8001964a <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2+0x22a>
ffffffff80019539: f7 c2 00 01 00 00    	testl	$0x100, %edx            # imm = 0x100
ffffffff8001953f: 74 2a                	je	0xffffffff8001956b <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2+0x14b>
ffffffff80019541: 66 c7 07 5c 27       	movw	$0x275c, (%rdi)         # imm = 0x275C
ffffffff80019546: e9 ff 00 00 00       	jmp	0xffffffff8001964a <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2+0x22a>
ffffffff8001954b: 66 c7 07 5c 72       	movw	$0x725c, (%rdi)         # imm = 0x725C
ffffffff80019550: e9 f5 00 00 00       	jmp	0xffffffff8001964a <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2+0x22a>
ffffffff80019555: 66 c7 07 5c 74       	movw	$0x745c, (%rdi)         # imm = 0x745C
ffffffff8001955a: e9 eb 00 00 00       	jmp	0xffffffff8001964a <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2+0x22a>
ffffffff8001955f: f7 c2 00 00 01 00    	testl	$0x10000, %edx          # imm = 0x10000
ffffffff80019565: 0f 85 da 00 00 00    	jne	0xffffffff80019645 <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2+0x225>
ffffffff8001956b: 49 89 fe             	movq	%rdi, %r14
ffffffff8001956e: 89 df                	movl	%ebx, %edi
ffffffff80019570: e8 7b 1b 00 00       	callq	0xffffffff8001b0f0 <core::unicode::printable::is_printable::hdd600e6e9a348a8e>
ffffffff80019575: 84 c0                	testb	%al, %al
ffffffff80019577: 74 10                	je	0xffffffff80019589 <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2+0x169>
ffffffff80019579: 41 c6 06 80          	movb	$-0x80, (%r14)
ffffffff8001957d: 41 89 5e 04          	movl	%ebx, 0x4(%r14)
ffffffff80019581: 48 83 c4 18          	addq	$0x18, %rsp
ffffffff80019585: 5b                   	popq	%rbx
ffffffff80019586: 41 5e                	popq	%r14
ffffffff80019588: c3                   	retq
ffffffff80019589: 89 d8                	movl	%ebx, %eax
ffffffff8001958b: 83 c8 01             	orl	$0x1, %eax
ffffffff8001958e: 0f bd c0             	bsrl	%eax, %eax
ffffffff80019591: 83 f0 1c             	xorl	$0x1c, %eax
ffffffff80019594: c1 e8 02             	shrl	$0x2, %eax
ffffffff80019597: 48 8d 48 fe          	leaq	-0x2(%rax), %rcx
ffffffff8001959b: c6 44 24 10 00       	movb	$0x0, 0x10(%rsp)
ffffffff800195a0: 66 c7 44 24 0e 00 00 	movw	$0x0, 0xe(%rsp)
ffffffff800195a7: 89 da                	movl	%ebx, %edx
ffffffff800195a9: c1 ea 14             	shrl	$0x14, %edx
ffffffff800195ac: 0f b6 92 60 dc 01 80 	movzbl	-0x7ffe23a0(%rdx), %edx
ffffffff800195b3: 88 54 24 11          	movb	%dl, 0x11(%rsp)
ffffffff800195b7: 89 da                	movl	%ebx, %edx
ffffffff800195b9: c1 ea 10             	shrl	$0x10, %edx
ffffffff800195bc: 83 e2 0f             	andl	$0xf, %edx
ffffffff800195bf: 0f b6 92 60 dc 01 80 	movzbl	-0x7ffe23a0(%rdx), %edx
ffffffff800195c6: 88 54 24 12          	movb	%dl, 0x12(%rsp)
ffffffff800195ca: 89 da                	movl	%ebx, %edx
ffffffff800195cc: c1 ea 0c             	shrl	$0xc, %edx
ffffffff800195cf: 83 e2 0f             	andl	$0xf, %edx
ffffffff800195d2: 0f b6 92 60 dc 01 80 	movzbl	-0x7ffe23a0(%rdx), %edx
ffffffff800195d9: 88 54 24 13          	movb	%dl, 0x13(%rsp)
ffffffff800195dd: 89 da                	movl	%ebx, %edx
ffffffff800195df: c1 ea 08             	shrl	$0x8, %edx
ffffffff800195e2: 83 e2 0f             	andl	$0xf, %edx
ffffffff800195e5: 0f b6 92 60 dc 01 80 	movzbl	-0x7ffe23a0(%rdx), %edx
ffffffff800195ec: 88 54 24 14          	movb	%dl, 0x14(%rsp)
ffffffff800195f0: 89 da                	movl	%ebx, %edx
ffffffff800195f2: c1 ea 04             	shrl	$0x4, %edx
ffffffff800195f5: 83 e2 0f             	andl	$0xf, %edx
ffffffff800195f8: 0f b6 92 60 dc 01 80 	movzbl	-0x7ffe23a0(%rdx), %edx
ffffffff800195ff: 88 54 24 15          	movb	%dl, 0x15(%rsp)
ffffffff80019603: 83 e3 0f             	andl	$0xf, %ebx
ffffffff80019606: 0f b6 93 60 dc 01 80 	movzbl	-0x7ffe23a0(%rbx), %edx
ffffffff8001960d: 88 54 24 16          	movb	%dl, 0x16(%rsp)
ffffffff80019611: c6 44 24 17 7d       	movb	$0x7d, 0x17(%rsp)
ffffffff80019616: 66 c7 44 04 0c 5c 75 	movw	$0x755c, 0xc(%rsp,%rax) # imm = 0x755C
ffffffff8001961d: c6 44 04 0e 7b       	movb	$0x7b, 0xe(%rsp,%rax)
ffffffff80019622: 0f b7 44 24 16       	movzwl	0x16(%rsp), %eax
ffffffff80019627: 66 41 89 46 08       	movw	%ax, 0x8(%r14)
ffffffff8001962c: 48 8b 44 24 0e       	movq	0xe(%rsp), %rax
ffffffff80019631: 49 89 06             	movq	%rax, (%r14)
ffffffff80019634: 41 88 4e 0a          	movb	%cl, 0xa(%r14)
ffffffff80019638: 41 c6 46 0b 0a       	movb	$0xa, 0xb(%r14)
ffffffff8001963d: 48 83 c4 18          	addq	$0x18, %rsp
ffffffff80019641: 5b                   	popq	%rbx
ffffffff80019642: 41 5e                	popq	%r14
ffffffff80019644: c3                   	retq
ffffffff80019645: 66 c7 07 5c 22       	movw	$0x225c, (%rdi)         # imm = 0x225C
ffffffff8001964a: 48 c7 47 02 00 00 00 00      	movq	$0x0, 0x2(%rdi)
ffffffff80019652: 66 c7 47 0a 00 02    	movw	$0x200, 0xa(%rdi)       # imm = 0x200
ffffffff80019658: 48 83 c4 18          	addq	$0x18, %rsp
ffffffff8001965c: 5b                   	popq	%rbx
ffffffff8001965d: 41 5e                	popq	%r14
ffffffff8001965f: c3                   	retq

ffffffff80019660 <<core::fmt::Arguments as core::fmt::Debug>::fmt::hbf2870b6b8eb2548>:
ffffffff80019660: 48 89 fa             	movq	%rdi, %rdx
ffffffff80019663: 48 8b 7e 30          	movq	0x30(%rsi), %rdi
ffffffff80019667: 48 8b 76 38          	movq	0x38(%rsi), %rsi
ffffffff8001966b: e9 10 00 00 00       	jmp	0xffffffff80019680 <core::fmt::write::h1a05140646fc4354>

ffffffff80019670 <<core::fmt::Arguments as core::fmt::Display>::fmt::h748934159bb7ee61>:
ffffffff80019670: 48 89 fa             	movq	%rdi, %rdx
ffffffff80019673: 48 8b 7e 30          	movq	0x30(%rsi), %rdi
ffffffff80019677: 48 8b 76 38          	movq	0x38(%rsi), %rsi
ffffffff8001967b: e9 00 00 00 00       	jmp	0xffffffff80019680 <core::fmt::write::h1a05140646fc4354>

ffffffff80019680 <core::fmt::write::h1a05140646fc4354>:
ffffffff80019680: 55                   	pushq	%rbp
ffffffff80019681: 41 57                	pushq	%r15
ffffffff80019683: 41 56                	pushq	%r14
ffffffff80019685: 41 55                	pushq	%r13
ffffffff80019687: 41 54                	pushq	%r12
ffffffff80019689: 53                   	pushq	%rbx
ffffffff8001968a: 48 83 ec 48          	subq	$0x48, %rsp
ffffffff8001968e: 48 c7 44 24 08 00 00 00 00   	movq	$0x0, 0x8(%rsp)
ffffffff80019697: 48 c7 44 24 18 00 00 00 00   	movq	$0x0, 0x18(%rsp)
ffffffff800196a0: 48 c7 44 24 28 20 00 00 00   	movq	$0x20, 0x28(%rsp)
ffffffff800196a9: c6 44 24 30 03       	movb	$0x3, 0x30(%rsp)
ffffffff800196ae: 48 89 7c 24 38       	movq	%rdi, 0x38(%rsp)
ffffffff800196b3: 48 89 74 24 40       	movq	%rsi, 0x40(%rsp)
ffffffff800196b8: 4c 8b 62 20          	movq	0x20(%rdx), %r12
ffffffff800196bc: 4d 85 e4             	testq	%r12, %r12
ffffffff800196bf: 48 89 14 24          	movq	%rdx, (%rsp)
ffffffff800196c3: 0f 84 0e 01 00 00    	je	0xffffffff800197d7 <core::fmt::write::h1a05140646fc4354+0x157>
ffffffff800196c9: 48 8b 42 28          	movq	0x28(%rdx), %rax
ffffffff800196cd: 48 85 c0             	testq	%rax, %rax
ffffffff800196d0: 0f 84 70 01 00 00    	je	0xffffffff80019846 <core::fmt::write::h1a05140646fc4354+0x1c6>
ffffffff800196d6: 4c 8b 2a             	movq	(%rdx), %r13
ffffffff800196d9: 48 8b 6a 10          	movq	0x10(%rdx), %rbp
ffffffff800196dd: 49 83 c5 08          	addq	$0x8, %r13
ffffffff800196e1: 4c 6b f0 38          	imulq	$0x38, %rax, %r14
ffffffff800196e5: 31 db                	xorl	%ebx, %ebx
ffffffff800196e7: 45 31 ff             	xorl	%r15d, %r15d
ffffffff800196ea: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff800196f0: 49 8b 55 00          	movq	(%r13), %rdx
ffffffff800196f4: 48 85 d2             	testq	%rdx, %rdx
ffffffff800196f7: 74 19                	je	0xffffffff80019712 <core::fmt::write::h1a05140646fc4354+0x92>
ffffffff800196f9: 48 8b 7c 24 38       	movq	0x38(%rsp), %rdi
ffffffff800196fe: 48 8b 44 24 40       	movq	0x40(%rsp), %rax
ffffffff80019703: 49 8b 75 f8          	movq	-0x8(%r13), %rsi
ffffffff80019707: ff 50 18             	callq	*0x18(%rax)
ffffffff8001970a: 84 c0                	testb	%al, %al
ffffffff8001970c: 0f 85 66 01 00 00    	jne	0xffffffff80019878 <core::fmt::write::h1a05140646fc4354+0x1f8>
ffffffff80019712: 41 8b 44 1c 28       	movl	0x28(%r12,%rbx), %eax
ffffffff80019717: 89 44 24 28          	movl	%eax, 0x28(%rsp)
ffffffff8001971b: 41 0f b6 44 1c 30    	movzbl	0x30(%r12,%rbx), %eax
ffffffff80019721: 88 44 24 30          	movb	%al, 0x30(%rsp)
ffffffff80019725: 41 8b 44 1c 2c       	movl	0x2c(%r12,%rbx), %eax
ffffffff8001972a: 89 44 24 2c          	movl	%eax, 0x2c(%rsp)
ffffffff8001972e: 49 8b 4c 1c 10       	movq	0x10(%r12,%rbx), %rcx
ffffffff80019733: 49 8b 44 1c 18       	movq	0x18(%r12,%rbx), %rax
ffffffff80019738: 48 85 c9             	testq	%rcx, %rcx
ffffffff8001973b: 74 1c                	je	0xffffffff80019759 <core::fmt::write::h1a05140646fc4354+0xd9>
ffffffff8001973d: 83 f9 01             	cmpl	$0x1, %ecx
ffffffff80019740: 75 0c                	jne	0xffffffff8001974e <core::fmt::write::h1a05140646fc4354+0xce>
ffffffff80019742: 48 c1 e0 04          	shlq	$0x4, %rax
ffffffff80019746: 48 83 7c 05 00 00    	cmpq	$0x0, (%rbp,%rax)
ffffffff8001974c: 74 04                	je	0xffffffff80019752 <core::fmt::write::h1a05140646fc4354+0xd2>
ffffffff8001974e: 31 c9                	xorl	%ecx, %ecx
ffffffff80019750: eb 0c                	jmp	0xffffffff8001975e <core::fmt::write::h1a05140646fc4354+0xde>
ffffffff80019752: 48 01 e8             	addq	%rbp, %rax
ffffffff80019755: 48 8b 40 08          	movq	0x8(%rax), %rax
ffffffff80019759: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff8001975e: 48 89 4c 24 08       	movq	%rcx, 0x8(%rsp)
ffffffff80019763: 48 89 44 24 10       	movq	%rax, 0x10(%rsp)
ffffffff80019768: 49 8b 0c 1c          	movq	(%r12,%rbx), %rcx
ffffffff8001976c: 48 83 f9 02          	cmpq	$0x2, %rcx
ffffffff80019770: 74 16                	je	0xffffffff80019788 <core::fmt::write::h1a05140646fc4354+0x108>
ffffffff80019772: 49 8b 44 1c 08       	movq	0x8(%r12,%rbx), %rax
ffffffff80019777: 83 f9 01             	cmpl	$0x1, %ecx
ffffffff8001977a: 75 17                	jne	0xffffffff80019793 <core::fmt::write::h1a05140646fc4354+0x113>
ffffffff8001977c: 48 c1 e0 04          	shlq	$0x4, %rax
ffffffff80019780: 48 83 7c 05 00 00    	cmpq	$0x0, (%rbp,%rax)
ffffffff80019786: 74 04                	je	0xffffffff8001978c <core::fmt::write::h1a05140646fc4354+0x10c>
ffffffff80019788: 31 c9                	xorl	%ecx, %ecx
ffffffff8001978a: eb 0c                	jmp	0xffffffff80019798 <core::fmt::write::h1a05140646fc4354+0x118>
ffffffff8001978c: 48 01 e8             	addq	%rbp, %rax
ffffffff8001978f: 48 8b 40 08          	movq	0x8(%rax), %rax
ffffffff80019793: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff80019798: 48 89 4c 24 18       	movq	%rcx, 0x18(%rsp)
ffffffff8001979d: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff800197a2: 49 8b 44 1c 20       	movq	0x20(%r12,%rbx), %rax
ffffffff800197a7: 48 c1 e0 04          	shlq	$0x4, %rax
ffffffff800197ab: 48 8b 7c 05 00       	movq	(%rbp,%rax), %rdi
ffffffff800197b0: 48 8d 74 24 08       	leaq	0x8(%rsp), %rsi
ffffffff800197b5: ff 54 05 08          	callq	*0x8(%rbp,%rax)
ffffffff800197b9: 84 c0                	testb	%al, %al
ffffffff800197bb: 0f 85 b7 00 00 00    	jne	0xffffffff80019878 <core::fmt::write::h1a05140646fc4354+0x1f8>
ffffffff800197c1: 49 83 c5 10          	addq	$0x10, %r13
ffffffff800197c5: 48 83 c3 38          	addq	$0x38, %rbx
ffffffff800197c9: 49 ff c7             	incq	%r15
ffffffff800197cc: 49 39 de             	cmpq	%rbx, %r14
ffffffff800197cf: 0f 85 1b ff ff ff    	jne	0xffffffff800196f0 <core::fmt::write::h1a05140646fc4354+0x70>
ffffffff800197d5: eb 72                	jmp	0xffffffff80019849 <core::fmt::write::h1a05140646fc4354+0x1c9>
ffffffff800197d7: 48 8b 5a 18          	movq	0x18(%rdx), %rbx
ffffffff800197db: 48 85 db             	testq	%rbx, %rbx
ffffffff800197de: 0f 84 98 00 00 00    	je	0xffffffff8001987c <core::fmt::write::h1a05140646fc4354+0x1fc>
ffffffff800197e4: 4c 8b 62 10          	movq	0x10(%rdx), %r12
ffffffff800197e8: 48 c1 e3 04          	shlq	$0x4, %rbx
ffffffff800197ec: 4c 01 e3             	addq	%r12, %rbx
ffffffff800197ef: 4c 8b 2a             	movq	(%rdx), %r13
ffffffff800197f2: 31 ed                	xorl	%ebp, %ebp
ffffffff800197f4: 45 31 ff             	xorl	%r15d, %r15d
ffffffff800197f7: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
ffffffff80019800: 49 8b 54 2d 08       	movq	0x8(%r13,%rbp), %rdx
ffffffff80019805: 48 85 d2             	testq	%rdx, %rdx
ffffffff80019808: 74 16                	je	0xffffffff80019820 <core::fmt::write::h1a05140646fc4354+0x1a0>
ffffffff8001980a: 48 8b 7c 24 38       	movq	0x38(%rsp), %rdi
ffffffff8001980f: 48 8b 44 24 40       	movq	0x40(%rsp), %rax
ffffffff80019814: 49 8b 74 2d 00       	movq	(%r13,%rbp), %rsi
ffffffff80019819: ff 50 18             	callq	*0x18(%rax)
ffffffff8001981c: 84 c0                	testb	%al, %al
ffffffff8001981e: 75 58                	jne	0xffffffff80019878 <core::fmt::write::h1a05140646fc4354+0x1f8>
ffffffff80019820: 4d 8d 34 2c          	leaq	(%r12,%rbp), %r14
ffffffff80019824: 49 8b 3e             	movq	(%r14), %rdi
ffffffff80019827: 48 8d 74 24 08       	leaq	0x8(%rsp), %rsi
ffffffff8001982c: 41 ff 56 08          	callq	*0x8(%r14)
ffffffff80019830: 84 c0                	testb	%al, %al
ffffffff80019832: 75 44                	jne	0xffffffff80019878 <core::fmt::write::h1a05140646fc4354+0x1f8>
ffffffff80019834: 48 83 c5 10          	addq	$0x10, %rbp
ffffffff80019838: 49 83 c6 10          	addq	$0x10, %r14
ffffffff8001983c: 49 ff c7             	incq	%r15
ffffffff8001983f: 49 39 de             	cmpq	%rbx, %r14
ffffffff80019842: 75 bc                	jne	0xffffffff80019800 <core::fmt::write::h1a05140646fc4354+0x180>
ffffffff80019844: eb 03                	jmp	0xffffffff80019849 <core::fmt::write::h1a05140646fc4354+0x1c9>
ffffffff80019846: 45 31 ff             	xorl	%r15d, %r15d
ffffffff80019849: 48 8b 04 24          	movq	(%rsp), %rax
ffffffff8001984d: 4c 3b 78 08          	cmpq	0x8(%rax), %r15
ffffffff80019851: 73 36                	jae	0xffffffff80019889 <core::fmt::write::h1a05140646fc4354+0x209>
ffffffff80019853: 48 8b 04 24          	movq	(%rsp), %rax
ffffffff80019857: 48 8b 00             	movq	(%rax), %rax
ffffffff8001985a: 49 c1 e7 04          	shlq	$0x4, %r15
ffffffff8001985e: 48 8b 7c 24 38       	movq	0x38(%rsp), %rdi
ffffffff80019863: 48 8b 4c 24 40       	movq	0x40(%rsp), %rcx
ffffffff80019868: 4a 8b 34 38          	movq	(%rax,%r15), %rsi
ffffffff8001986c: 4a 8b 54 38 08       	movq	0x8(%rax,%r15), %rdx
ffffffff80019871: ff 51 18             	callq	*0x18(%rcx)
ffffffff80019874: 84 c0                	testb	%al, %al
ffffffff80019876: 74 11                	je	0xffffffff80019889 <core::fmt::write::h1a05140646fc4354+0x209>
ffffffff80019878: b0 01                	movb	$0x1, %al
ffffffff8001987a: eb 0f                	jmp	0xffffffff8001988b <core::fmt::write::h1a05140646fc4354+0x20b>
ffffffff8001987c: 45 31 ff             	xorl	%r15d, %r15d
ffffffff8001987f: 48 8b 04 24          	movq	(%rsp), %rax
ffffffff80019883: 4c 3b 78 08          	cmpq	0x8(%rax), %r15
ffffffff80019887: 72 ca                	jb	0xffffffff80019853 <core::fmt::write::h1a05140646fc4354+0x1d3>
ffffffff80019889: 31 c0                	xorl	%eax, %eax
ffffffff8001988b: 48 83 c4 48          	addq	$0x48, %rsp
ffffffff8001988f: 5b                   	popq	%rbx
ffffffff80019890: 41 5c                	popq	%r12
ffffffff80019892: 41 5d                	popq	%r13
ffffffff80019894: 41 5e                	popq	%r14
ffffffff80019896: 41 5f                	popq	%r15
ffffffff80019898: 5d                   	popq	%rbp
ffffffff80019899: c3                   	retq
ffffffff8001989a: cc                   	int3
ffffffff8001989b: cc                   	int3
ffffffff8001989c: cc                   	int3
ffffffff8001989d: cc                   	int3
ffffffff8001989e: cc                   	int3
ffffffff8001989f: cc                   	int3

ffffffff800198a0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb>:
ffffffff800198a0: 55                   	pushq	%rbp
ffffffff800198a1: 41 57                	pushq	%r15
ffffffff800198a3: 41 56                	pushq	%r14
ffffffff800198a5: 41 55                	pushq	%r13
ffffffff800198a7: 41 54                	pushq	%r12
ffffffff800198a9: 53                   	pushq	%rbx
ffffffff800198aa: 48 83 ec 28          	subq	$0x28, %rsp
ffffffff800198ae: 4d 89 cd             	movq	%r9, %r13
ffffffff800198b1: 4c 89 c5             	movq	%r8, %rbp
ffffffff800198b4: 49 89 ca             	movq	%rcx, %r10
ffffffff800198b7: 49 89 d4             	movq	%rdx, %r12
ffffffff800198ba: 85 f6                	testl	%esi, %esi
ffffffff800198bc: 74 48                	je	0xffffffff80019906 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x66>
ffffffff800198be: 8b 5f 24             	movl	0x24(%rdi), %ebx
ffffffff800198c1: 41 89 de             	movl	%ebx, %r14d
ffffffff800198c4: 41 83 e6 01          	andl	$0x1, %r14d
ffffffff800198c8: b8 00 00 11 00       	movl	$0x110000, %eax         # imm = 0x110000
ffffffff800198cd: ba 2b 00 00 00       	movl	$0x2b, %edx
ffffffff800198d2: 0f 44 d0             	cmovel	%eax, %edx
ffffffff800198d5: 4d 01 ee             	addq	%r13, %r14
ffffffff800198d8: f6 c3 04             	testb	$0x4, %bl
ffffffff800198db: 74 3a                	je	0xffffffff80019917 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x77>
ffffffff800198dd: 49 83 fa 20          	cmpq	$0x20, %r10
ffffffff800198e1: 73 73                	jae	0xffffffff80019956 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0xb6>
ffffffff800198e3: 4d 85 d2             	testq	%r10, %r10
ffffffff800198e6: 0f 84 a3 00 00 00    	je	0xffffffff8001998f <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0xef>
ffffffff800198ec: 44 89 d1             	movl	%r10d, %ecx
ffffffff800198ef: 83 e1 03             	andl	$0x3, %ecx
ffffffff800198f2: 49 83 fa 04          	cmpq	$0x4, %r10
ffffffff800198f6: 0f 83 97 00 00 00    	jae	0xffffffff80019993 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0xf3>
ffffffff800198fc: 31 c0                	xorl	%eax, %eax
ffffffff800198fe: 45 31 db             	xorl	%r11d, %r11d
ffffffff80019901: e9 de 00 00 00       	jmp	0xffffffff800199e4 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x144>
ffffffff80019906: 4d 8d 75 01          	leaq	0x1(%r13), %r14
ffffffff8001990a: 8b 5f 24             	movl	0x24(%rdi), %ebx
ffffffff8001990d: ba 2d 00 00 00       	movl	$0x2d, %edx
ffffffff80019912: f6 c3 04             	testb	$0x4, %bl
ffffffff80019915: 75 c6                	jne	0xffffffff800198dd <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x3d>
ffffffff80019917: 45 31 e4             	xorl	%r12d, %r12d
ffffffff8001991a: f6 07 01             	testb	$0x1, (%rdi)
ffffffff8001991d: 0f 85 f0 00 00 00    	jne	0xffffffff80019a13 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x173>
ffffffff80019923: 48 8b 5f 30          	movq	0x30(%rdi), %rbx
ffffffff80019927: 4c 8b 77 38          	movq	0x38(%rdi), %r14
ffffffff8001992b: 48 89 df             	movq	%rbx, %rdi
ffffffff8001992e: 4c 89 f6             	movq	%r14, %rsi
ffffffff80019931: 4c 89 e1             	movq	%r12, %rcx
ffffffff80019934: 4d 89 d0             	movq	%r10, %r8
ffffffff80019937: e8 c4 02 00 00       	callq	0xffffffff80019c00 <core::fmt::Formatter::pad_integral::write_prefix::h2f2aa88e91aa74b2>
ffffffff8001993c: 41 b7 01             	movb	$0x1, %r15b
ffffffff8001993f: 84 c0                	testb	%al, %al
ffffffff80019941: 0f 85 9c 02 00 00    	jne	0xffffffff80019be3 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x343>
ffffffff80019947: 49 8b 46 18          	movq	0x18(%r14), %rax
ffffffff8001994b: 48 89 df             	movq	%rbx, %rdi
ffffffff8001994e: 48 89 ee             	movq	%rbp, %rsi
ffffffff80019951: e9 3c 01 00 00       	jmp	0xffffffff80019a92 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x1f2>
ffffffff80019956: 48 89 6c 24 18       	movq	%rbp, 0x18(%rsp)
ffffffff8001995b: 4c 89 d5             	movq	%r10, %rbp
ffffffff8001995e: 48 89 5c 24 10       	movq	%rbx, 0x10(%rsp)
ffffffff80019963: 4c 89 eb             	movq	%r13, %rbx
ffffffff80019966: 41 89 d5             	movl	%edx, %r13d
ffffffff80019969: 49 89 ff             	movq	%rdi, %r15
ffffffff8001996c: 4c 89 e7             	movq	%r12, %rdi
ffffffff8001996f: 4c 89 d6             	movq	%r10, %rsi
ffffffff80019972: e8 19 19 00 00       	callq	0xffffffff8001b290 <core::str::count::do_count_chars::h06cfda6302d02fdc>
ffffffff80019977: 4c 89 ff             	movq	%r15, %rdi
ffffffff8001997a: 44 89 ea             	movl	%r13d, %edx
ffffffff8001997d: 49 89 dd             	movq	%rbx, %r13
ffffffff80019980: 48 8b 5c 24 10       	movq	0x10(%rsp), %rbx
ffffffff80019985: 49 89 ea             	movq	%rbp, %r10
ffffffff80019988: 48 8b 6c 24 18       	movq	0x18(%rsp), %rbp
ffffffff8001998d: eb 78                	jmp	0xffffffff80019a07 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x167>
ffffffff8001998f: 31 c0                	xorl	%eax, %eax
ffffffff80019991: eb 74                	jmp	0xffffffff80019a07 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x167>
ffffffff80019993: 44 89 d6             	movl	%r10d, %esi
ffffffff80019996: 83 e6 1c             	andl	$0x1c, %esi
ffffffff80019999: 31 c0                	xorl	%eax, %eax
ffffffff8001999b: 45 31 db             	xorl	%r11d, %r11d
ffffffff8001999e: 66 90                	nop
ffffffff800199a0: 45 31 c0             	xorl	%r8d, %r8d
ffffffff800199a3: 43 80 3c 1c c0       	cmpb	$-0x40, (%r12,%r11)
ffffffff800199a8: 41 0f 9d c0          	setge	%r8b
ffffffff800199ac: 49 01 c0             	addq	%rax, %r8
ffffffff800199af: 31 c0                	xorl	%eax, %eax
ffffffff800199b1: 43 80 7c 1c 01 c0    	cmpb	$-0x40, 0x1(%r12,%r11)
ffffffff800199b7: 0f 9d c0             	setge	%al
ffffffff800199ba: 45 31 c9             	xorl	%r9d, %r9d
ffffffff800199bd: 43 80 7c 1c 02 c0    	cmpb	$-0x40, 0x2(%r12,%r11)
ffffffff800199c3: 41 0f 9d c1          	setge	%r9b
ffffffff800199c7: 49 01 c1             	addq	%rax, %r9
ffffffff800199ca: 4d 01 c1             	addq	%r8, %r9
ffffffff800199cd: 31 c0                	xorl	%eax, %eax
ffffffff800199cf: 43 80 7c 1c 03 c0    	cmpb	$-0x40, 0x3(%r12,%r11)
ffffffff800199d5: 0f 9d c0             	setge	%al
ffffffff800199d8: 4c 01 c8             	addq	%r9, %rax
ffffffff800199db: 49 83 c3 04          	addq	$0x4, %r11
ffffffff800199df: 4c 39 de             	cmpq	%r11, %rsi
ffffffff800199e2: 75 bc                	jne	0xffffffff800199a0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x100>
ffffffff800199e4: 48 85 c9             	testq	%rcx, %rcx
ffffffff800199e7: 74 1e                	je	0xffffffff80019a07 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x167>
ffffffff800199e9: 4d 01 e3             	addq	%r12, %r11
ffffffff800199ec: 31 f6                	xorl	%esi, %esi
ffffffff800199ee: 66 90                	nop
ffffffff800199f0: 45 31 c0             	xorl	%r8d, %r8d
ffffffff800199f3: 41 80 3c 33 c0       	cmpb	$-0x40, (%r11,%rsi)
ffffffff800199f8: 41 0f 9d c0          	setge	%r8b
ffffffff800199fc: 4c 01 c0             	addq	%r8, %rax
ffffffff800199ff: 48 ff c6             	incq	%rsi
ffffffff80019a02: 48 39 f1             	cmpq	%rsi, %rcx
ffffffff80019a05: 75 e9                	jne	0xffffffff800199f0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x150>
ffffffff80019a07: 49 01 c6             	addq	%rax, %r14
ffffffff80019a0a: f6 07 01             	testb	$0x1, (%rdi)
ffffffff80019a0d: 0f 84 10 ff ff ff    	je	0xffffffff80019923 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x83>
ffffffff80019a13: 48 89 6c 24 18       	movq	%rbp, 0x18(%rsp)
ffffffff80019a18: 48 8b 6f 08          	movq	0x8(%rdi), %rbp
ffffffff80019a1c: 4c 29 f5             	subq	%r14, %rbp
ffffffff80019a1f: 76 41                	jbe	0xffffffff80019a62 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x1c2>
ffffffff80019a21: f6 c3 08             	testb	$0x8, %bl
ffffffff80019a24: 75 7f                	jne	0xffffffff80019aa5 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x205>
ffffffff80019a26: 89 54 24 0c          	movl	%edx, 0xc(%rsp)
ffffffff80019a2a: 4c 89 54 24 10       	movq	%r10, 0x10(%rsp)
ffffffff80019a2f: 8b 47 28             	movl	0x28(%rdi), %eax
ffffffff80019a32: 3c 03                	cmpb	$0x3, %al
ffffffff80019a34: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff80019a39: 0f 45 c8             	cmovnel	%eax, %ecx
ffffffff80019a3c: 44 0f b6 f9          	movzbl	%cl, %r15d
ffffffff80019a40: 45 84 ff             	testb	%r15b, %r15b
ffffffff80019a43: 4c 89 6c 24 20       	movq	%r13, 0x20(%rsp)
ffffffff80019a48: 0f 84 cb 00 00 00    	je	0xffffffff80019b19 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x279>
ffffffff80019a4e: 41 83 ff 01          	cmpl	$0x1, %r15d
ffffffff80019a52: 0f 85 b5 00 00 00    	jne	0xffffffff80019b0d <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x26d>
ffffffff80019a58: 49 89 ef             	movq	%rbp, %r15
ffffffff80019a5b: 31 ed                	xorl	%ebp, %ebp
ffffffff80019a5d: e9 b7 00 00 00       	jmp	0xffffffff80019b19 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x279>
ffffffff80019a62: 48 8b 5f 30          	movq	0x30(%rdi), %rbx
ffffffff80019a66: 4c 8b 77 38          	movq	0x38(%rdi), %r14
ffffffff80019a6a: 48 89 df             	movq	%rbx, %rdi
ffffffff80019a6d: 4c 89 f6             	movq	%r14, %rsi
ffffffff80019a70: 4c 89 e1             	movq	%r12, %rcx
ffffffff80019a73: 4d 89 d0             	movq	%r10, %r8
ffffffff80019a76: e8 85 01 00 00       	callq	0xffffffff80019c00 <core::fmt::Formatter::pad_integral::write_prefix::h2f2aa88e91aa74b2>
ffffffff80019a7b: 41 b7 01             	movb	$0x1, %r15b
ffffffff80019a7e: 84 c0                	testb	%al, %al
ffffffff80019a80: 48 8b 74 24 18       	movq	0x18(%rsp), %rsi
ffffffff80019a85: 0f 85 58 01 00 00    	jne	0xffffffff80019be3 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x343>
ffffffff80019a8b: 49 8b 46 18          	movq	0x18(%r14), %rax
ffffffff80019a8f: 48 89 df             	movq	%rbx, %rdi
ffffffff80019a92: 4c 89 ea             	movq	%r13, %rdx
ffffffff80019a95: 48 83 c4 28          	addq	$0x28, %rsp
ffffffff80019a99: 5b                   	popq	%rbx
ffffffff80019a9a: 41 5c                	popq	%r12
ffffffff80019a9c: 41 5d                	popq	%r13
ffffffff80019a9e: 41 5e                	popq	%r14
ffffffff80019aa0: 41 5f                	popq	%r15
ffffffff80019aa2: 5d                   	popq	%rbp
ffffffff80019aa3: ff e0                	jmpq	*%rax
ffffffff80019aa5: 8b 47 20             	movl	0x20(%rdi), %eax
ffffffff80019aa8: 89 44 24 0c          	movl	%eax, 0xc(%rsp)
ffffffff80019aac: c7 47 20 30 00 00 00 	movl	$0x30, 0x20(%rdi)
ffffffff80019ab3: 0f b6 47 28          	movzbl	0x28(%rdi), %eax
ffffffff80019ab7: 88 44 24 0b          	movb	%al, 0xb(%rsp)
ffffffff80019abb: c6 47 28 01          	movb	$0x1, 0x28(%rdi)
ffffffff80019abf: 4c 8b 77 30          	movq	0x30(%rdi), %r14
ffffffff80019ac3: 48 89 7c 24 10       	movq	%rdi, 0x10(%rsp)
ffffffff80019ac8: 48 8b 5f 38          	movq	0x38(%rdi), %rbx
ffffffff80019acc: 4c 89 f7             	movq	%r14, %rdi
ffffffff80019acf: 48 89 de             	movq	%rbx, %rsi
ffffffff80019ad2: 4c 89 e1             	movq	%r12, %rcx
ffffffff80019ad5: 4d 89 d0             	movq	%r10, %r8
ffffffff80019ad8: e8 23 01 00 00       	callq	0xffffffff80019c00 <core::fmt::Formatter::pad_integral::write_prefix::h2f2aa88e91aa74b2>
ffffffff80019add: 41 b7 01             	movb	$0x1, %r15b
ffffffff80019ae0: 84 c0                	testb	%al, %al
ffffffff80019ae2: 0f 85 fb 00 00 00    	jne	0xffffffff80019be3 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x343>
ffffffff80019ae8: 48 ff c5             	incq	%rbp
ffffffff80019aeb: 0f 1f 44 00 00       	nopl	(%rax,%rax)
ffffffff80019af0: 48 ff cd             	decq	%rbp
ffffffff80019af3: 0f 84 b3 00 00 00    	je	0xffffffff80019bac <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x30c>
ffffffff80019af9: 4c 89 f7             	movq	%r14, %rdi
ffffffff80019afc: be 30 00 00 00       	movl	$0x30, %esi
ffffffff80019b01: ff 53 20             	callq	*0x20(%rbx)
ffffffff80019b04: 84 c0                	testb	%al, %al
ffffffff80019b06: 74 e8                	je	0xffffffff80019af0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x250>
ffffffff80019b08: e9 d6 00 00 00       	jmp	0xffffffff80019be3 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x343>
ffffffff80019b0d: 49 89 ef             	movq	%rbp, %r15
ffffffff80019b10: 49 d1 ef             	shrq	%r15
ffffffff80019b13: 48 ff c5             	incq	%rbp
ffffffff80019b16: 48 d1 ed             	shrq	%rbp
ffffffff80019b19: 4c 8b 6f 30          	movq	0x30(%rdi), %r13
ffffffff80019b1d: 4c 8b 77 38          	movq	0x38(%rdi), %r14
ffffffff80019b21: 8b 5f 20             	movl	0x20(%rdi), %ebx
ffffffff80019b24: 49 ff c7             	incq	%r15
ffffffff80019b27: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
ffffffff80019b30: 4c 89 ef             	movq	%r13, %rdi
ffffffff80019b33: 49 ff cf             	decq	%r15
ffffffff80019b36: 74 12                	je	0xffffffff80019b4a <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x2aa>
ffffffff80019b38: 89 de                	movl	%ebx, %esi
ffffffff80019b3a: 41 ff 56 20          	callq	*0x20(%r14)
ffffffff80019b3e: 84 c0                	testb	%al, %al
ffffffff80019b40: 74 ee                	je	0xffffffff80019b30 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x290>
ffffffff80019b42: 41 b7 01             	movb	$0x1, %r15b
ffffffff80019b45: e9 99 00 00 00       	jmp	0xffffffff80019be3 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x343>
ffffffff80019b4a: 4c 89 f6             	movq	%r14, %rsi
ffffffff80019b4d: 8b 54 24 0c          	movl	0xc(%rsp), %edx
ffffffff80019b51: 4c 89 e1             	movq	%r12, %rcx
ffffffff80019b54: 4c 8b 44 24 10       	movq	0x10(%rsp), %r8
ffffffff80019b59: e8 a2 00 00 00       	callq	0xffffffff80019c00 <core::fmt::Formatter::pad_integral::write_prefix::h2f2aa88e91aa74b2>
ffffffff80019b5e: 41 b7 01             	movb	$0x1, %r15b
ffffffff80019b61: 84 c0                	testb	%al, %al
ffffffff80019b63: 0f 85 7a 00 00 00    	jne	0xffffffff80019be3 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x343>
ffffffff80019b69: 4c 89 ef             	movq	%r13, %rdi
ffffffff80019b6c: 48 8b 74 24 18       	movq	0x18(%rsp), %rsi
ffffffff80019b71: 48 8b 54 24 20       	movq	0x20(%rsp), %rdx
ffffffff80019b76: 41 ff 56 18          	callq	*0x18(%r14)
ffffffff80019b7a: 84 c0                	testb	%al, %al
ffffffff80019b7c: 75 65                	jne	0xffffffff80019be3 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x343>
ffffffff80019b7e: 49 89 ec             	movq	%rbp, %r12
ffffffff80019b81: 49 f7 dc             	negq	%r12
ffffffff80019b84: 49 c7 c7 ff ff ff ff 	movq	$-0x1, %r15
ffffffff80019b8b: 0f 1f 44 00 00       	nopl	(%rax,%rax)
ffffffff80019b90: 4b 8d 04 3c          	leaq	(%r12,%r15), %rax
ffffffff80019b94: 48 83 f8 ff          	cmpq	$-0x1, %rax
ffffffff80019b98: 74 3f                	je	0xffffffff80019bd9 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x339>
ffffffff80019b9a: 4c 89 ef             	movq	%r13, %rdi
ffffffff80019b9d: 89 de                	movl	%ebx, %esi
ffffffff80019b9f: 41 ff 56 20          	callq	*0x20(%r14)
ffffffff80019ba3: 49 ff c7             	incq	%r15
ffffffff80019ba6: 84 c0                	testb	%al, %al
ffffffff80019ba8: 74 e6                	je	0xffffffff80019b90 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x2f0>
ffffffff80019baa: eb 30                	jmp	0xffffffff80019bdc <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x33c>
ffffffff80019bac: 4c 89 f7             	movq	%r14, %rdi
ffffffff80019baf: 48 8b 74 24 18       	movq	0x18(%rsp), %rsi
ffffffff80019bb4: 4c 89 ea             	movq	%r13, %rdx
ffffffff80019bb7: ff 53 18             	callq	*0x18(%rbx)
ffffffff80019bba: 84 c0                	testb	%al, %al
ffffffff80019bbc: 75 25                	jne	0xffffffff80019be3 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x343>
ffffffff80019bbe: 4c 8b 6c 24 10       	movq	0x10(%rsp), %r13
ffffffff80019bc3: 8b 44 24 0c          	movl	0xc(%rsp), %eax
ffffffff80019bc7: 41 89 45 20          	movl	%eax, 0x20(%r13)
ffffffff80019bcb: 0f b6 44 24 0b       	movzbl	0xb(%rsp), %eax
ffffffff80019bd0: 41 88 45 28          	movb	%al, 0x28(%r13)
ffffffff80019bd4: 45 31 ff             	xorl	%r15d, %r15d
ffffffff80019bd7: eb 0a                	jmp	0xffffffff80019be3 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb+0x343>
ffffffff80019bd9: 49 89 ef             	movq	%rbp, %r15
ffffffff80019bdc: 49 39 ef             	cmpq	%rbp, %r15
ffffffff80019bdf: 41 0f 92 c7          	setb	%r15b
ffffffff80019be3: 44 89 f8             	movl	%r15d, %eax
ffffffff80019be6: 48 83 c4 28          	addq	$0x28, %rsp
ffffffff80019bea: 5b                   	popq	%rbx
ffffffff80019beb: 41 5c                	popq	%r12
ffffffff80019bed: 41 5d                	popq	%r13
ffffffff80019bef: 41 5e                	popq	%r14
ffffffff80019bf1: 41 5f                	popq	%r15
ffffffff80019bf3: 5d                   	popq	%rbp
ffffffff80019bf4: c3                   	retq
ffffffff80019bf5: cc                   	int3
ffffffff80019bf6: cc                   	int3
ffffffff80019bf7: cc                   	int3
ffffffff80019bf8: cc                   	int3
ffffffff80019bf9: cc                   	int3
ffffffff80019bfa: cc                   	int3
ffffffff80019bfb: cc                   	int3
ffffffff80019bfc: cc                   	int3
ffffffff80019bfd: cc                   	int3
ffffffff80019bfe: cc                   	int3
ffffffff80019bff: cc                   	int3

ffffffff80019c00 <core::fmt::Formatter::pad_integral::write_prefix::h2f2aa88e91aa74b2>:
ffffffff80019c00: 41 57                	pushq	%r15
ffffffff80019c02: 41 56                	pushq	%r14
ffffffff80019c04: 41 54                	pushq	%r12
ffffffff80019c06: 53                   	pushq	%rbx
ffffffff80019c07: 50                   	pushq	%rax
ffffffff80019c08: 4c 89 c3             	movq	%r8, %rbx
ffffffff80019c0b: 49 89 ce             	movq	%rcx, %r14
ffffffff80019c0e: 49 89 f7             	movq	%rsi, %r15
ffffffff80019c11: 81 fa 00 00 11 00    	cmpl	$0x110000, %edx         # imm = 0x110000
ffffffff80019c17: 74 14                	je	0xffffffff80019c2d <core::fmt::Formatter::pad_integral::write_prefix::h2f2aa88e91aa74b2+0x2d>
ffffffff80019c19: 49 89 fc             	movq	%rdi, %r12
ffffffff80019c1c: 89 d6                	movl	%edx, %esi
ffffffff80019c1e: 41 ff 57 20          	callq	*0x20(%r15)
ffffffff80019c22: 4c 89 e7             	movq	%r12, %rdi
ffffffff80019c25: 89 c1                	movl	%eax, %ecx
ffffffff80019c27: b0 01                	movb	$0x1, %al
ffffffff80019c29: 84 c9                	testb	%cl, %cl
ffffffff80019c2b: 75 1e                	jne	0xffffffff80019c4b <core::fmt::Formatter::pad_integral::write_prefix::h2f2aa88e91aa74b2+0x4b>
ffffffff80019c2d: 4d 85 f6             	testq	%r14, %r14
ffffffff80019c30: 74 17                	je	0xffffffff80019c49 <core::fmt::Formatter::pad_integral::write_prefix::h2f2aa88e91aa74b2+0x49>
ffffffff80019c32: 49 8b 47 18          	movq	0x18(%r15), %rax
ffffffff80019c36: 4c 89 f6             	movq	%r14, %rsi
ffffffff80019c39: 48 89 da             	movq	%rbx, %rdx
ffffffff80019c3c: 48 83 c4 08          	addq	$0x8, %rsp
ffffffff80019c40: 5b                   	popq	%rbx
ffffffff80019c41: 41 5c                	popq	%r12
ffffffff80019c43: 41 5e                	popq	%r14
ffffffff80019c45: 41 5f                	popq	%r15
ffffffff80019c47: ff e0                	jmpq	*%rax
ffffffff80019c49: 31 c0                	xorl	%eax, %eax
ffffffff80019c4b: 48 83 c4 08          	addq	$0x8, %rsp
ffffffff80019c4f: 5b                   	popq	%rbx
ffffffff80019c50: 41 5c                	popq	%r12
ffffffff80019c52: 41 5e                	popq	%r14
ffffffff80019c54: 41 5f                	popq	%r15
ffffffff80019c56: c3                   	retq
ffffffff80019c57: cc                   	int3
ffffffff80019c58: cc                   	int3
ffffffff80019c59: cc                   	int3
ffffffff80019c5a: cc                   	int3
ffffffff80019c5b: cc                   	int3
ffffffff80019c5c: cc                   	int3
ffffffff80019c5d: cc                   	int3
ffffffff80019c5e: cc                   	int3
ffffffff80019c5f: cc                   	int3

ffffffff80019c60 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e>:
ffffffff80019c60: 55                   	pushq	%rbp
ffffffff80019c61: 41 57                	pushq	%r15
ffffffff80019c63: 41 56                	pushq	%r14
ffffffff80019c65: 41 55                	pushq	%r13
ffffffff80019c67: 41 54                	pushq	%r12
ffffffff80019c69: 53                   	pushq	%rbx
ffffffff80019c6a: 50                   	pushq	%rax
ffffffff80019c6b: 48 89 d3             	movq	%rdx, %rbx
ffffffff80019c6e: 49 89 f6             	movq	%rsi, %r14
ffffffff80019c71: 48 8b 07             	movq	(%rdi), %rax
ffffffff80019c74: 48 8b 4f 10          	movq	0x10(%rdi), %rcx
ffffffff80019c78: 48 89 c2             	movq	%rax, %rdx
ffffffff80019c7b: 48 09 ca             	orq	%rcx, %rdx
ffffffff80019c7e: 0f 84 8d 01 00 00    	je	0xffffffff80019e11 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x1b1>
ffffffff80019c84: f6 c1 01             	testb	$0x1, %cl
ffffffff80019c87: 0f 84 9c 00 00 00    	je	0xffffffff80019d29 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0xc9>
ffffffff80019c8d: 48 8b 77 18          	movq	0x18(%rdi), %rsi
ffffffff80019c91: 49 8d 14 1e          	leaq	(%r14,%rbx), %rdx
ffffffff80019c95: 31 c9                	xorl	%ecx, %ecx
ffffffff80019c97: 48 85 f6             	testq	%rsi, %rsi
ffffffff80019c9a: 74 55                	je	0xffffffff80019cf1 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x91>
ffffffff80019c9c: 4d 89 f0             	movq	%r14, %r8
ffffffff80019c9f: eb 24                	jmp	0xffffffff80019cc5 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x65>
ffffffff80019ca1: 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
ffffffff80019cb0: 4d 8d 48 01          	leaq	0x1(%r8), %r9
ffffffff80019cb4: 4d 89 ca             	movq	%r9, %r10
ffffffff80019cb7: 4d 29 c2             	subq	%r8, %r10
ffffffff80019cba: 4c 01 d1             	addq	%r10, %rcx
ffffffff80019cbd: 4d 89 c8             	movq	%r9, %r8
ffffffff80019cc0: 48 ff ce             	decq	%rsi
ffffffff80019cc3: 74 2f                	je	0xffffffff80019cf4 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x94>
ffffffff80019cc5: 49 39 d0             	cmpq	%rdx, %r8
ffffffff80019cc8: 74 5f                	je	0xffffffff80019d29 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0xc9>
ffffffff80019cca: 45 0f b6 08          	movzbl	(%r8), %r9d
ffffffff80019cce: 45 84 c9             	testb	%r9b, %r9b
ffffffff80019cd1: 79 dd                	jns	0xffffffff80019cb0 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x50>
ffffffff80019cd3: 41 80 f9 e0          	cmpb	$-0x20, %r9b
ffffffff80019cd7: 72 0c                	jb	0xffffffff80019ce5 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x85>
ffffffff80019cd9: 41 80 f9 f0          	cmpb	$-0x10, %r9b
ffffffff80019cdd: 72 0c                	jb	0xffffffff80019ceb <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x8b>
ffffffff80019cdf: 4d 8d 48 04          	leaq	0x4(%r8), %r9
ffffffff80019ce3: eb cf                	jmp	0xffffffff80019cb4 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x54>
ffffffff80019ce5: 4d 8d 48 02          	leaq	0x2(%r8), %r9
ffffffff80019ce9: eb c9                	jmp	0xffffffff80019cb4 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x54>
ffffffff80019ceb: 4d 8d 48 03          	leaq	0x3(%r8), %r9
ffffffff80019cef: eb c3                	jmp	0xffffffff80019cb4 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x54>
ffffffff80019cf1: 4d 89 f1             	movq	%r14, %r9
ffffffff80019cf4: 49 39 d1             	cmpq	%rdx, %r9
ffffffff80019cf7: 74 30                	je	0xffffffff80019d29 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0xc9>
ffffffff80019cf9: 41 0f b6 11          	movzbl	(%r9), %edx
ffffffff80019cfd: 84 d2                	testb	%dl, %dl
ffffffff80019cff: 79 03                	jns	0xffffffff80019d04 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0xa4>
ffffffff80019d01: 80 fa e0             	cmpb	$-0x20, %dl
ffffffff80019d04: 48 85 c9             	testq	%rcx, %rcx
ffffffff80019d07: 74 12                	je	0xffffffff80019d1b <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0xbb>
ffffffff80019d09: 48 39 d9             	cmpq	%rbx, %rcx
ffffffff80019d0c: 73 0b                	jae	0xffffffff80019d19 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0xb9>
ffffffff80019d0e: 41 80 3c 0e c0       	cmpb	$-0x40, (%r14,%rcx)
ffffffff80019d13: 7d 06                	jge	0xffffffff80019d1b <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0xbb>
ffffffff80019d15: 31 d2                	xorl	%edx, %edx
ffffffff80019d17: eb 05                	jmp	0xffffffff80019d1e <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0xbe>
ffffffff80019d19: 75 fa                	jne	0xffffffff80019d15 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0xb5>
ffffffff80019d1b: 4c 89 f2             	movq	%r14, %rdx
ffffffff80019d1e: 48 85 d2             	testq	%rdx, %rdx
ffffffff80019d21: 48 0f 45 d9          	cmovneq	%rcx, %rbx
ffffffff80019d25: 4c 0f 45 f2          	cmovneq	%rdx, %r14
ffffffff80019d29: 48 85 c0             	testq	%rax, %rax
ffffffff80019d2c: 0f 84 df 00 00 00    	je	0xffffffff80019e11 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x1b1>
ffffffff80019d32: 4c 8b 6f 08          	movq	0x8(%rdi), %r13
ffffffff80019d36: 48 83 fb 20          	cmpq	$0x20, %rbx
ffffffff80019d3a: 73 16                	jae	0xffffffff80019d52 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0xf2>
ffffffff80019d3c: 48 85 db             	testq	%rbx, %rbx
ffffffff80019d3f: 74 27                	je	0xffffffff80019d68 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x108>
ffffffff80019d41: 89 d9                	movl	%ebx, %ecx
ffffffff80019d43: 83 e1 03             	andl	$0x3, %ecx
ffffffff80019d46: 48 83 fb 04          	cmpq	$0x4, %rbx
ffffffff80019d4a: 73 20                	jae	0xffffffff80019d6c <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x10c>
ffffffff80019d4c: 31 c0                	xorl	%eax, %eax
ffffffff80019d4e: 31 d2                	xorl	%edx, %edx
ffffffff80019d50: eb 72                	jmp	0xffffffff80019dc4 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x164>
ffffffff80019d52: 49 89 ff             	movq	%rdi, %r15
ffffffff80019d55: 4c 89 f7             	movq	%r14, %rdi
ffffffff80019d58: 48 89 de             	movq	%rbx, %rsi
ffffffff80019d5b: e8 30 15 00 00       	callq	0xffffffff8001b290 <core::str::count::do_count_chars::h06cfda6302d02fdc>
ffffffff80019d60: 4c 89 ff             	movq	%r15, %rdi
ffffffff80019d63: e9 7e 00 00 00       	jmp	0xffffffff80019de6 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x186>
ffffffff80019d68: 31 c0                	xorl	%eax, %eax
ffffffff80019d6a: eb 7a                	jmp	0xffffffff80019de6 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x186>
ffffffff80019d6c: 89 de                	movl	%ebx, %esi
ffffffff80019d6e: 83 e6 1c             	andl	$0x1c, %esi
ffffffff80019d71: 31 c0                	xorl	%eax, %eax
ffffffff80019d73: 31 d2                	xorl	%edx, %edx
ffffffff80019d75: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff80019d80: 45 31 c0             	xorl	%r8d, %r8d
ffffffff80019d83: 41 80 3c 16 c0       	cmpb	$-0x40, (%r14,%rdx)
ffffffff80019d88: 41 0f 9d c0          	setge	%r8b
ffffffff80019d8c: 49 01 c0             	addq	%rax, %r8
ffffffff80019d8f: 31 c0                	xorl	%eax, %eax
ffffffff80019d91: 41 80 7c 16 01 c0    	cmpb	$-0x40, 0x1(%r14,%rdx)
ffffffff80019d97: 0f 9d c0             	setge	%al
ffffffff80019d9a: 45 31 c9             	xorl	%r9d, %r9d
ffffffff80019d9d: 41 80 7c 16 02 c0    	cmpb	$-0x40, 0x2(%r14,%rdx)
ffffffff80019da3: 41 0f 9d c1          	setge	%r9b
ffffffff80019da7: 49 01 c1             	addq	%rax, %r9
ffffffff80019daa: 4d 01 c1             	addq	%r8, %r9
ffffffff80019dad: 31 c0                	xorl	%eax, %eax
ffffffff80019daf: 41 80 7c 16 03 c0    	cmpb	$-0x40, 0x3(%r14,%rdx)
ffffffff80019db5: 0f 9d c0             	setge	%al
ffffffff80019db8: 4c 01 c8             	addq	%r9, %rax
ffffffff80019dbb: 48 83 c2 04          	addq	$0x4, %rdx
ffffffff80019dbf: 48 39 d6             	cmpq	%rdx, %rsi
ffffffff80019dc2: 75 bc                	jne	0xffffffff80019d80 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x120>
ffffffff80019dc4: 48 85 c9             	testq	%rcx, %rcx
ffffffff80019dc7: 74 1d                	je	0xffffffff80019de6 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x186>
ffffffff80019dc9: 4c 01 f2             	addq	%r14, %rdx
ffffffff80019dcc: 31 f6                	xorl	%esi, %esi
ffffffff80019dce: 66 90                	nop
ffffffff80019dd0: 45 31 c0             	xorl	%r8d, %r8d
ffffffff80019dd3: 80 3c 32 c0          	cmpb	$-0x40, (%rdx,%rsi)
ffffffff80019dd7: 41 0f 9d c0          	setge	%r8b
ffffffff80019ddb: 4c 01 c0             	addq	%r8, %rax
ffffffff80019dde: 48 ff c6             	incq	%rsi
ffffffff80019de1: 48 39 f1             	cmpq	%rsi, %rcx
ffffffff80019de4: 75 ea                	jne	0xffffffff80019dd0 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x170>
ffffffff80019de6: 49 29 c5             	subq	%rax, %r13
ffffffff80019de9: 76 26                	jbe	0xffffffff80019e11 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x1b1>
ffffffff80019deb: 8b 47 28             	movl	0x28(%rdi), %eax
ffffffff80019dee: 31 c9                	xorl	%ecx, %ecx
ffffffff80019df0: 3c 03                	cmpb	$0x3, %al
ffffffff80019df2: 0f 45 c8             	cmovnel	%eax, %ecx
ffffffff80019df5: 44 0f b6 e1          	movzbl	%cl, %r12d
ffffffff80019df9: 45 84 e4             	testb	%r12b, %r12b
ffffffff80019dfc: 74 44                	je	0xffffffff80019e42 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x1e2>
ffffffff80019dfe: 41 83 fc 01          	cmpl	$0x1, %r12d
ffffffff80019e02: 75 32                	jne	0xffffffff80019e36 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x1d6>
ffffffff80019e04: 4d 89 ec             	movq	%r13, %r12
ffffffff80019e07: 48 c7 04 24 00 00 00 00      	movq	$0x0, (%rsp)
ffffffff80019e0f: eb 35                	jmp	0xffffffff80019e46 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x1e6>
ffffffff80019e11: 48 8b 47 30          	movq	0x30(%rdi), %rax
ffffffff80019e15: 48 8b 4f 38          	movq	0x38(%rdi), %rcx
ffffffff80019e19: 48 8b 49 18          	movq	0x18(%rcx), %rcx
ffffffff80019e1d: 48 89 c7             	movq	%rax, %rdi
ffffffff80019e20: 4c 89 f6             	movq	%r14, %rsi
ffffffff80019e23: 48 89 da             	movq	%rbx, %rdx
ffffffff80019e26: 48 83 c4 08          	addq	$0x8, %rsp
ffffffff80019e2a: 5b                   	popq	%rbx
ffffffff80019e2b: 41 5c                	popq	%r12
ffffffff80019e2d: 41 5d                	popq	%r13
ffffffff80019e2f: 41 5e                	popq	%r14
ffffffff80019e31: 41 5f                	popq	%r15
ffffffff80019e33: 5d                   	popq	%rbp
ffffffff80019e34: ff e1                	jmpq	*%rcx
ffffffff80019e36: 4d 89 ec             	movq	%r13, %r12
ffffffff80019e39: 49 d1 ec             	shrq	%r12
ffffffff80019e3c: 49 ff c5             	incq	%r13
ffffffff80019e3f: 49 d1 ed             	shrq	%r13
ffffffff80019e42: 4c 89 2c 24          	movq	%r13, (%rsp)
ffffffff80019e46: 4c 8b 7f 30          	movq	0x30(%rdi), %r15
ffffffff80019e4a: 4c 8b 6f 38          	movq	0x38(%rdi), %r13
ffffffff80019e4e: 8b 6f 20             	movl	0x20(%rdi), %ebp
ffffffff80019e51: 49 ff c4             	incq	%r12
ffffffff80019e54: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
ffffffff80019e60: 4c 89 ff             	movq	%r15, %rdi
ffffffff80019e63: 49 ff cc             	decq	%r12
ffffffff80019e66: 74 0e                	je	0xffffffff80019e76 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x216>
ffffffff80019e68: 89 ee                	movl	%ebp, %esi
ffffffff80019e6a: 41 ff 55 20          	callq	*0x20(%r13)
ffffffff80019e6e: 84 c0                	testb	%al, %al
ffffffff80019e70: 74 ee                	je	0xffffffff80019e60 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x200>
ffffffff80019e72: b0 01                	movb	$0x1, %al
ffffffff80019e74: eb 51                	jmp	0xffffffff80019ec7 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x267>
ffffffff80019e76: 4c 89 f6             	movq	%r14, %rsi
ffffffff80019e79: 48 89 da             	movq	%rbx, %rdx
ffffffff80019e7c: 41 ff 55 18          	callq	*0x18(%r13)
ffffffff80019e80: 89 c1                	movl	%eax, %ecx
ffffffff80019e82: b0 01                	movb	$0x1, %al
ffffffff80019e84: 84 c9                	testb	%cl, %cl
ffffffff80019e86: 75 3f                	jne	0xffffffff80019ec7 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x267>
ffffffff80019e88: 4c 8b 34 24          	movq	(%rsp), %r14
ffffffff80019e8c: 49 f7 de             	negq	%r14
ffffffff80019e8f: 48 c7 c3 ff ff ff ff 	movq	$-0x1, %rbx
ffffffff80019e96: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
ffffffff80019ea0: 49 8d 04 1e          	leaq	(%r14,%rbx), %rax
ffffffff80019ea4: 48 83 f8 ff          	cmpq	$-0x1, %rax
ffffffff80019ea8: 74 12                	je	0xffffffff80019ebc <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x25c>
ffffffff80019eaa: 4c 89 ff             	movq	%r15, %rdi
ffffffff80019ead: 89 ee                	movl	%ebp, %esi
ffffffff80019eaf: 41 ff 55 20          	callq	*0x20(%r13)
ffffffff80019eb3: 48 ff c3             	incq	%rbx
ffffffff80019eb6: 84 c0                	testb	%al, %al
ffffffff80019eb8: 74 e6                	je	0xffffffff80019ea0 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x240>
ffffffff80019eba: eb 04                	jmp	0xffffffff80019ec0 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e+0x260>
ffffffff80019ebc: 48 8b 1c 24          	movq	(%rsp), %rbx
ffffffff80019ec0: 48 3b 1c 24          	cmpq	(%rsp), %rbx
ffffffff80019ec4: 0f 92 c0             	setb	%al
ffffffff80019ec7: 48 83 c4 08          	addq	$0x8, %rsp
ffffffff80019ecb: 5b                   	popq	%rbx
ffffffff80019ecc: 41 5c                	popq	%r12
ffffffff80019ece: 41 5d                	popq	%r13
ffffffff80019ed0: 41 5e                	popq	%r14
ffffffff80019ed2: 41 5f                	popq	%r15
ffffffff80019ed4: 5d                   	popq	%rbp
ffffffff80019ed5: c3                   	retq
ffffffff80019ed6: cc                   	int3
ffffffff80019ed7: cc                   	int3
ffffffff80019ed8: cc                   	int3
ffffffff80019ed9: cc                   	int3
ffffffff80019eda: cc                   	int3
ffffffff80019edb: cc                   	int3
ffffffff80019edc: cc                   	int3
ffffffff80019edd: cc                   	int3
ffffffff80019ede: cc                   	int3
ffffffff80019edf: cc                   	int3

ffffffff80019ee0 <<core::fmt::Formatter as core::fmt::Write>::write_str::hb19ae6a0bd18cbe0>:
ffffffff80019ee0: 48 8b 47 30          	movq	0x30(%rdi), %rax
ffffffff80019ee4: 48 8b 4f 38          	movq	0x38(%rdi), %rcx
ffffffff80019ee8: 48 8b 49 18          	movq	0x18(%rcx), %rcx
ffffffff80019eec: 48 89 c7             	movq	%rax, %rdi
ffffffff80019eef: ff e1                	jmpq	*%rcx
ffffffff80019ef1: cc                   	int3
ffffffff80019ef2: cc                   	int3
ffffffff80019ef3: cc                   	int3
ffffffff80019ef4: cc                   	int3
ffffffff80019ef5: cc                   	int3
ffffffff80019ef6: cc                   	int3
ffffffff80019ef7: cc                   	int3
ffffffff80019ef8: cc                   	int3
ffffffff80019ef9: cc                   	int3
ffffffff80019efa: cc                   	int3
ffffffff80019efb: cc                   	int3
ffffffff80019efc: cc                   	int3
ffffffff80019efd: cc                   	int3
ffffffff80019efe: cc                   	int3
ffffffff80019eff: cc                   	int3

ffffffff80019f00 <core::fmt::Formatter::debug_struct::ha8e700b554531cc3>:
ffffffff80019f00: 41 56                	pushq	%r14
ffffffff80019f02: 53                   	pushq	%rbx
ffffffff80019f03: 50                   	pushq	%rax
ffffffff80019f04: 48 89 f3             	movq	%rsi, %rbx
ffffffff80019f07: 49 89 fe             	movq	%rdi, %r14
ffffffff80019f0a: 48 8b 7e 30          	movq	0x30(%rsi), %rdi
ffffffff80019f0e: 48 8b 46 38          	movq	0x38(%rsi), %rax
ffffffff80019f12: 48 89 d6             	movq	%rdx, %rsi
ffffffff80019f15: 48 89 ca             	movq	%rcx, %rdx
ffffffff80019f18: ff 50 18             	callq	*0x18(%rax)
ffffffff80019f1b: 49 89 1e             	movq	%rbx, (%r14)
ffffffff80019f1e: 41 88 46 08          	movb	%al, 0x8(%r14)
ffffffff80019f22: 41 c6 46 09 00       	movb	$0x0, 0x9(%r14)
ffffffff80019f27: 4c 89 f0             	movq	%r14, %rax
ffffffff80019f2a: 48 83 c4 08          	addq	$0x8, %rsp
ffffffff80019f2e: 5b                   	popq	%rbx
ffffffff80019f2f: 41 5e                	popq	%r14
ffffffff80019f31: c3                   	retq
ffffffff80019f32: cc                   	int3
ffffffff80019f33: cc                   	int3
ffffffff80019f34: cc                   	int3
ffffffff80019f35: cc                   	int3
ffffffff80019f36: cc                   	int3
ffffffff80019f37: cc                   	int3
ffffffff80019f38: cc                   	int3
ffffffff80019f39: cc                   	int3
ffffffff80019f3a: cc                   	int3
ffffffff80019f3b: cc                   	int3
ffffffff80019f3c: cc                   	int3
ffffffff80019f3d: cc                   	int3
ffffffff80019f3e: cc                   	int3
ffffffff80019f3f: cc                   	int3

ffffffff80019f40 <core::fmt::Formatter::debug_struct_field2_finish::h83a85978f04b0b76>:
ffffffff80019f40: 55                   	pushq	%rbp
ffffffff80019f41: 41 57                	pushq	%r15
ffffffff80019f43: 41 56                	pushq	%r14
ffffffff80019f45: 41 55                	pushq	%r13
ffffffff80019f47: 41 54                	pushq	%r12
ffffffff80019f49: 53                   	pushq	%rbx
ffffffff80019f4a: 48 83 ec 18          	subq	$0x18, %rsp
ffffffff80019f4e: 4c 89 cb             	movq	%r9, %rbx
ffffffff80019f51: 4d 89 c6             	movq	%r8, %r14
ffffffff80019f54: 49 89 cf             	movq	%rcx, %r15
ffffffff80019f57: 49 89 fc             	movq	%rdi, %r12
ffffffff80019f5a: 48 8b 6c 24 60       	movq	0x60(%rsp), %rbp
ffffffff80019f5f: 4c 8b 6c 24 50       	movq	0x50(%rsp), %r13
ffffffff80019f64: 48 8b 7f 30          	movq	0x30(%rdi), %rdi
ffffffff80019f68: 49 8b 44 24 38       	movq	0x38(%r12), %rax
ffffffff80019f6d: ff 50 18             	callq	*0x18(%rax)
ffffffff80019f70: 4c 89 64 24 08       	movq	%r12, 0x8(%rsp)
ffffffff80019f75: 88 44 24 10          	movb	%al, 0x10(%rsp)
ffffffff80019f79: c6 44 24 11 00       	movb	$0x0, 0x11(%rsp)
ffffffff80019f7e: 4c 8d 64 24 08       	leaq	0x8(%rsp), %r12
ffffffff80019f83: 4c 89 e7             	movq	%r12, %rdi
ffffffff80019f86: 4c 89 fe             	movq	%r15, %rsi
ffffffff80019f89: 4c 89 f2             	movq	%r14, %rdx
ffffffff80019f8c: 48 89 d9             	movq	%rbx, %rcx
ffffffff80019f8f: 4d 89 e8             	movq	%r13, %r8
ffffffff80019f92: e8 09 0c 00 00       	callq	0xffffffff8001aba0 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5>
ffffffff80019f97: 4c 89 e7             	movq	%r12, %rdi
ffffffff80019f9a: 48 8b 74 24 58       	movq	0x58(%rsp), %rsi
ffffffff80019f9f: 48 89 ea             	movq	%rbp, %rdx
ffffffff80019fa2: 48 8b 4c 24 68       	movq	0x68(%rsp), %rcx
ffffffff80019fa7: 4c 8b 44 24 70       	movq	0x70(%rsp), %r8
ffffffff80019fac: e8 ef 0b 00 00       	callq	0xffffffff8001aba0 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5>
ffffffff80019fb1: 0f b6 4c 24 10       	movzbl	0x10(%rsp), %ecx
ffffffff80019fb6: 0f b6 44 24 11       	movzbl	0x11(%rsp), %eax
ffffffff80019fbb: 89 c2                	movl	%eax, %edx
ffffffff80019fbd: f6 d2                	notb	%dl
ffffffff80019fbf: 08 ca                	orb	%cl, %dl
ffffffff80019fc1: f6 c2 01             	testb	$0x1, %dl
ffffffff80019fc4: 74 04                	je	0xffffffff80019fca <core::fmt::Formatter::debug_struct_field2_finish::h83a85978f04b0b76+0x8a>
ffffffff80019fc6: 08 c8                	orb	%cl, %al
ffffffff80019fc8: eb 38                	jmp	0xffffffff8001a002 <core::fmt::Formatter::debug_struct_field2_finish::h83a85978f04b0b76+0xc2>
ffffffff80019fca: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff80019fcf: f6 40 24 04          	testb	$0x4, 0x24(%rax)
ffffffff80019fd3: 75 16                	jne	0xffffffff80019feb <core::fmt::Formatter::debug_struct_field2_finish::h83a85978f04b0b76+0xab>
ffffffff80019fd5: 48 8b 78 30          	movq	0x30(%rax), %rdi
ffffffff80019fd9: 48 8b 40 38          	movq	0x38(%rax), %rax
ffffffff80019fdd: ba 02 00 00 00       	movl	$0x2, %edx
ffffffff80019fe2: 48 c7 c6 6d 3f 02 80 	movq	$-0x7ffdc093, %rsi      # imm = 0x80023F6D
ffffffff80019fe9: eb 14                	jmp	0xffffffff80019fff <core::fmt::Formatter::debug_struct_field2_finish::h83a85978f04b0b76+0xbf>
ffffffff80019feb: 48 8b 78 30          	movq	0x30(%rax), %rdi
ffffffff80019fef: 48 8b 40 38          	movq	0x38(%rax), %rax
ffffffff80019ff3: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff80019ff8: 48 c7 c6 6c 3f 02 80 	movq	$-0x7ffdc094, %rsi      # imm = 0x80023F6C
ffffffff80019fff: ff 50 18             	callq	*0x18(%rax)
ffffffff8001a002: 24 01                	andb	$0x1, %al
ffffffff8001a004: 48 83 c4 18          	addq	$0x18, %rsp
ffffffff8001a008: 5b                   	popq	%rbx
ffffffff8001a009: 41 5c                	popq	%r12
ffffffff8001a00b: 41 5d                	popq	%r13
ffffffff8001a00d: 41 5e                	popq	%r14
ffffffff8001a00f: 41 5f                	popq	%r15
ffffffff8001a011: 5d                   	popq	%rbp
ffffffff8001a012: c3                   	retq
ffffffff8001a013: cc                   	int3
ffffffff8001a014: cc                   	int3
ffffffff8001a015: cc                   	int3
ffffffff8001a016: cc                   	int3
ffffffff8001a017: cc                   	int3
ffffffff8001a018: cc                   	int3
ffffffff8001a019: cc                   	int3
ffffffff8001a01a: cc                   	int3
ffffffff8001a01b: cc                   	int3
ffffffff8001a01c: cc                   	int3
ffffffff8001a01d: cc                   	int3
ffffffff8001a01e: cc                   	int3
ffffffff8001a01f: cc                   	int3

ffffffff8001a020 <core::fmt::Formatter::debug_tuple::hbed0784d0848e8ff>:
ffffffff8001a020: 41 57                	pushq	%r15
ffffffff8001a022: 41 56                	pushq	%r14
ffffffff8001a024: 53                   	pushq	%rbx
ffffffff8001a025: 48 89 cb             	movq	%rcx, %rbx
ffffffff8001a028: 49 89 f6             	movq	%rsi, %r14
ffffffff8001a02b: 49 89 ff             	movq	%rdi, %r15
ffffffff8001a02e: 48 8b 7e 30          	movq	0x30(%rsi), %rdi
ffffffff8001a032: 48 8b 46 38          	movq	0x38(%rsi), %rax
ffffffff8001a036: 48 89 d6             	movq	%rdx, %rsi
ffffffff8001a039: 48 89 ca             	movq	%rcx, %rdx
ffffffff8001a03c: ff 50 18             	callq	*0x18(%rax)
ffffffff8001a03f: 48 85 db             	testq	%rbx, %rbx
ffffffff8001a042: 4d 89 77 08          	movq	%r14, 0x8(%r15)
ffffffff8001a046: 41 88 47 10          	movb	%al, 0x10(%r15)
ffffffff8001a04a: 49 c7 07 00 00 00 00 	movq	$0x0, (%r15)
ffffffff8001a051: 41 0f 94 47 11       	sete	0x11(%r15)
ffffffff8001a056: 4c 89 f8             	movq	%r15, %rax
ffffffff8001a059: 5b                   	popq	%rbx
ffffffff8001a05a: 41 5e                	popq	%r14
ffffffff8001a05c: 41 5f                	popq	%r15
ffffffff8001a05e: c3                   	retq
ffffffff8001a05f: cc                   	int3

ffffffff8001a060 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef>:
ffffffff8001a060: 55                   	pushq	%rbp
ffffffff8001a061: 41 57                	pushq	%r15
ffffffff8001a063: 41 56                	pushq	%r14
ffffffff8001a065: 41 55                	pushq	%r13
ffffffff8001a067: 41 54                	pushq	%r12
ffffffff8001a069: 53                   	pushq	%rbx
ffffffff8001a06a: 48 83 ec 78          	subq	$0x78, %rsp
ffffffff8001a06e: 4c 89 44 24 18       	movq	%r8, 0x18(%rsp)
ffffffff8001a073: 48 89 4c 24 10       	movq	%rcx, 0x10(%rsp)
ffffffff8001a078: 49 89 d7             	movq	%rdx, %r15
ffffffff8001a07b: 49 89 fe             	movq	%rdi, %r14
ffffffff8001a07e: 48 8b 6f 30          	movq	0x30(%rdi), %rbp
ffffffff8001a082: 4c 8b 67 38          	movq	0x38(%rdi), %r12
ffffffff8001a086: 4d 8b 6c 24 18       	movq	0x18(%r12), %r13
ffffffff8001a08b: 48 89 ef             	movq	%rbp, %rdi
ffffffff8001a08e: 41 ff d5             	callq	*%r13
ffffffff8001a091: b3 01                	movb	$0x1, %bl
ffffffff8001a093: 84 c0                	testb	%al, %al
ffffffff8001a095: 74 11                	je	0xffffffff8001a0a8 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef+0x48>
ffffffff8001a097: 89 d8                	movl	%ebx, %eax
ffffffff8001a099: 48 83 c4 78          	addq	$0x78, %rsp
ffffffff8001a09d: 5b                   	popq	%rbx
ffffffff8001a09e: 41 5c                	popq	%r12
ffffffff8001a0a0: 41 5d                	popq	%r13
ffffffff8001a0a2: 41 5e                	popq	%r14
ffffffff8001a0a4: 41 5f                	popq	%r15
ffffffff8001a0a6: 5d                   	popq	%rbp
ffffffff8001a0a7: c3                   	retq
ffffffff8001a0a8: 41 f6 46 24 04       	testb	$0x4, 0x24(%r14)
ffffffff8001a0ad: 75 2f                	jne	0xffffffff8001a0de <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef+0x7e>
ffffffff8001a0af: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff8001a0b4: 48 89 ef             	movq	%rbp, %rdi
ffffffff8001a0b7: 48 c7 c6 6f 3f 02 80 	movq	$-0x7ffdc091, %rsi      # imm = 0x80023F6F
ffffffff8001a0be: 41 ff d5             	callq	*%r13
ffffffff8001a0c1: 84 c0                	testb	%al, %al
ffffffff8001a0c3: 75 d2                	jne	0xffffffff8001a097 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef+0x37>
ffffffff8001a0c5: 48 8b 7c 24 10       	movq	0x10(%rsp), %rdi
ffffffff8001a0ca: 4c 89 f6             	movq	%r14, %rsi
ffffffff8001a0cd: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff8001a0d2: ff 50 18             	callq	*0x18(%rax)
ffffffff8001a0d5: 84 c0                	testb	%al, %al
ffffffff8001a0d7: 75 be                	jne	0xffffffff8001a097 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef+0x37>
ffffffff8001a0d9: e9 b2 00 00 00       	jmp	0xffffffff8001a190 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef+0x130>
ffffffff8001a0de: ba 02 00 00 00       	movl	$0x2, %edx
ffffffff8001a0e3: 48 89 ef             	movq	%rbp, %rdi
ffffffff8001a0e6: 48 c7 c6 70 3f 02 80 	movq	$-0x7ffdc090, %rsi      # imm = 0x80023F70
ffffffff8001a0ed: 41 ff d5             	callq	*%r13
ffffffff8001a0f0: 84 c0                	testb	%al, %al
ffffffff8001a0f2: 75 a3                	jne	0xffffffff8001a097 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef+0x37>
ffffffff8001a0f4: c6 44 24 0f 01       	movb	$0x1, 0xf(%rsp)
ffffffff8001a0f9: 48 89 6c 24 60       	movq	%rbp, 0x60(%rsp)
ffffffff8001a0fe: 4c 89 64 24 68       	movq	%r12, 0x68(%rsp)
ffffffff8001a103: 48 8d 44 24 0f       	leaq	0xf(%rsp), %rax
ffffffff8001a108: 48 89 44 24 70       	movq	%rax, 0x70(%rsp)
ffffffff8001a10d: 49 8b 06             	movq	(%r14), %rax
ffffffff8001a110: 49 8b 4e 08          	movq	0x8(%r14), %rcx
ffffffff8001a114: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff8001a119: 48 89 4c 24 28       	movq	%rcx, 0x28(%rsp)
ffffffff8001a11e: 49 8b 46 10          	movq	0x10(%r14), %rax
ffffffff8001a122: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff8001a127: 49 8b 46 18          	movq	0x18(%r14), %rax
ffffffff8001a12b: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff8001a130: 49 8b 46 20          	movq	0x20(%r14), %rax
ffffffff8001a134: 48 89 44 24 40       	movq	%rax, 0x40(%rsp)
ffffffff8001a139: 49 8b 46 28          	movq	0x28(%r14), %rax
ffffffff8001a13d: 48 89 44 24 48       	movq	%rax, 0x48(%rsp)
ffffffff8001a142: 48 8d 44 24 60       	leaq	0x60(%rsp), %rax
ffffffff8001a147: 48 89 44 24 50       	movq	%rax, 0x50(%rsp)
ffffffff8001a14c: 48 c7 44 24 58 30 3f 02 80   	movq	$-0x7ffdc0d0, 0x58(%rsp) # imm = 0x80023F30
ffffffff8001a155: 48 8d 74 24 20       	leaq	0x20(%rsp), %rsi
ffffffff8001a15a: 48 8b 7c 24 10       	movq	0x10(%rsp), %rdi
ffffffff8001a15f: 48 8b 44 24 18       	movq	0x18(%rsp), %rax
ffffffff8001a164: ff 50 18             	callq	*0x18(%rax)
ffffffff8001a167: 84 c0                	testb	%al, %al
ffffffff8001a169: 0f 85 28 ff ff ff    	jne	0xffffffff8001a097 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef+0x37>
ffffffff8001a16f: 48 8b 7c 24 50       	movq	0x50(%rsp), %rdi
ffffffff8001a174: 48 8b 44 24 58       	movq	0x58(%rsp), %rax
ffffffff8001a179: ba 02 00 00 00       	movl	$0x2, %edx
ffffffff8001a17e: 48 c7 c6 6a 3f 02 80 	movq	$-0x7ffdc096, %rsi      # imm = 0x80023F6A
ffffffff8001a185: ff 50 18             	callq	*0x18(%rax)
ffffffff8001a188: 84 c0                	testb	%al, %al
ffffffff8001a18a: 0f 85 07 ff ff ff    	jne	0xffffffff8001a097 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef+0x37>
ffffffff8001a190: 4d 85 ff             	testq	%r15, %r15
ffffffff8001a193: 75 26                	jne	0xffffffff8001a1bb <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef+0x15b>
ffffffff8001a195: 41 f6 46 24 04       	testb	$0x4, 0x24(%r14)
ffffffff8001a19a: 75 1f                	jne	0xffffffff8001a1bb <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef+0x15b>
ffffffff8001a19c: 49 8b 7e 30          	movq	0x30(%r14), %rdi
ffffffff8001a1a0: 49 8b 46 38          	movq	0x38(%r14), %rax
ffffffff8001a1a4: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff8001a1a9: 48 c7 c6 73 3f 02 80 	movq	$-0x7ffdc08d, %rsi      # imm = 0x80023F73
ffffffff8001a1b0: ff 50 18             	callq	*0x18(%rax)
ffffffff8001a1b3: 84 c0                	testb	%al, %al
ffffffff8001a1b5: 0f 85 dc fe ff ff    	jne	0xffffffff8001a097 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef+0x37>
ffffffff8001a1bb: 49 8b 7e 30          	movq	0x30(%r14), %rdi
ffffffff8001a1bf: 49 8b 46 38          	movq	0x38(%r14), %rax
ffffffff8001a1c3: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff8001a1c8: 48 c7 c6 72 3f 02 80 	movq	$-0x7ffdc08e, %rsi      # imm = 0x80023F72
ffffffff8001a1cf: ff 50 18             	callq	*0x18(%rax)
ffffffff8001a1d2: 89 c3                	movl	%eax, %ebx
ffffffff8001a1d4: e9 be fe ff ff       	jmp	0xffffffff8001a097 <core::fmt::Formatter::debug_tuple_field1_finish::ha9e2910b7a92e6ef+0x37>
ffffffff8001a1d9: cc                   	int3
ffffffff8001a1da: cc                   	int3
ffffffff8001a1db: cc                   	int3
ffffffff8001a1dc: cc                   	int3
ffffffff8001a1dd: cc                   	int3
ffffffff8001a1de: cc                   	int3
ffffffff8001a1df: cc                   	int3

ffffffff8001a1e0 <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2>:
ffffffff8001a1e0: 55                   	pushq	%rbp
ffffffff8001a1e1: 41 57                	pushq	%r15
ffffffff8001a1e3: 41 56                	pushq	%r14
ffffffff8001a1e5: 41 55                	pushq	%r13
ffffffff8001a1e7: 41 54                	pushq	%r12
ffffffff8001a1e9: 53                   	pushq	%rbx
ffffffff8001a1ea: 48 83 ec 68          	subq	$0x68, %rsp
ffffffff8001a1ee: 4c 89 4c 24 08       	movq	%r9, 0x8(%rsp)
ffffffff8001a1f3: 4d 89 c4             	movq	%r8, %r12
ffffffff8001a1f6: 49 89 cd             	movq	%rcx, %r13
ffffffff8001a1f9: 49 89 fe             	movq	%rdi, %r14
ffffffff8001a1fc: 48 8b 6f 30          	movq	0x30(%rdi), %rbp
ffffffff8001a200: 48 8b 47 38          	movq	0x38(%rdi), %rax
ffffffff8001a204: 4c 8b 78 18          	movq	0x18(%rax), %r15
ffffffff8001a208: 48 89 ef             	movq	%rbp, %rdi
ffffffff8001a20b: 41 ff d7             	callq	*%r15
ffffffff8001a20e: b3 01                	movb	$0x1, %bl
ffffffff8001a210: 84 c0                	testb	%al, %al
ffffffff8001a212: 74 11                	je	0xffffffff8001a225 <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2+0x45>
ffffffff8001a214: 89 d8                	movl	%ebx, %eax
ffffffff8001a216: 48 83 c4 68          	addq	$0x68, %rsp
ffffffff8001a21a: 5b                   	popq	%rbx
ffffffff8001a21b: 41 5c                	popq	%r12
ffffffff8001a21d: 41 5d                	popq	%r13
ffffffff8001a21f: 41 5e                	popq	%r14
ffffffff8001a221: 41 5f                	popq	%r15
ffffffff8001a223: 5d                   	popq	%rbp
ffffffff8001a224: c3                   	retq
ffffffff8001a225: 41 f6 46 24 04       	testb	$0x4, 0x24(%r14)
ffffffff8001a22a: 75 2a                	jne	0xffffffff8001a256 <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2+0x76>
ffffffff8001a22c: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff8001a231: 48 89 ef             	movq	%rbp, %rdi
ffffffff8001a234: 48 c7 c6 6f 3f 02 80 	movq	$-0x7ffdc091, %rsi      # imm = 0x80023F6F
ffffffff8001a23b: 41 ff d7             	callq	*%r15
ffffffff8001a23e: 84 c0                	testb	%al, %al
ffffffff8001a240: 75 d2                	jne	0xffffffff8001a214 <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2+0x34>
ffffffff8001a242: 4c 89 ef             	movq	%r13, %rdi
ffffffff8001a245: 4c 89 f6             	movq	%r14, %rsi
ffffffff8001a248: 41 ff 54 24 18       	callq	*0x18(%r12)
ffffffff8001a24d: 84 c0                	testb	%al, %al
ffffffff8001a24f: 75 c3                	jne	0xffffffff8001a214 <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2+0x34>
ffffffff8001a251: e9 b5 00 00 00       	jmp	0xffffffff8001a30b <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2+0x12b>
ffffffff8001a256: ba 02 00 00 00       	movl	$0x2, %edx
ffffffff8001a25b: 48 89 ef             	movq	%rbp, %rdi
ffffffff8001a25e: 48 c7 c6 70 3f 02 80 	movq	$-0x7ffdc090, %rsi      # imm = 0x80023F70
ffffffff8001a265: 41 ff d7             	callq	*%r15
ffffffff8001a268: 84 c0                	testb	%al, %al
ffffffff8001a26a: 75 a8                	jne	0xffffffff8001a214 <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2+0x34>
ffffffff8001a26c: c6 44 24 07 01       	movb	$0x1, 0x7(%rsp)
ffffffff8001a271: 49 8b 46 30          	movq	0x30(%r14), %rax
ffffffff8001a275: 49 8b 4e 38          	movq	0x38(%r14), %rcx
ffffffff8001a279: 48 89 44 24 50       	movq	%rax, 0x50(%rsp)
ffffffff8001a27e: 48 89 4c 24 58       	movq	%rcx, 0x58(%rsp)
ffffffff8001a283: 48 8d 44 24 07       	leaq	0x7(%rsp), %rax
ffffffff8001a288: 48 89 44 24 60       	movq	%rax, 0x60(%rsp)
ffffffff8001a28d: 49 8b 06             	movq	(%r14), %rax
ffffffff8001a290: 49 8b 4e 08          	movq	0x8(%r14), %rcx
ffffffff8001a294: 48 89 44 24 10       	movq	%rax, 0x10(%rsp)
ffffffff8001a299: 48 89 4c 24 18       	movq	%rcx, 0x18(%rsp)
ffffffff8001a29e: 49 8b 46 10          	movq	0x10(%r14), %rax
ffffffff8001a2a2: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff8001a2a7: 49 8b 46 18          	movq	0x18(%r14), %rax
ffffffff8001a2ab: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff8001a2b0: 49 8b 46 20          	movq	0x20(%r14), %rax
ffffffff8001a2b4: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff8001a2b9: 49 8b 46 28          	movq	0x28(%r14), %rax
ffffffff8001a2bd: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff8001a2c2: 48 8d 44 24 50       	leaq	0x50(%rsp), %rax
ffffffff8001a2c7: 48 89 44 24 40       	movq	%rax, 0x40(%rsp)
ffffffff8001a2cc: 48 c7 44 24 48 30 3f 02 80   	movq	$-0x7ffdc0d0, 0x48(%rsp) # imm = 0x80023F30
ffffffff8001a2d5: 48 8d 74 24 10       	leaq	0x10(%rsp), %rsi
ffffffff8001a2da: 4c 89 ef             	movq	%r13, %rdi
ffffffff8001a2dd: 41 ff 54 24 18       	callq	*0x18(%r12)
ffffffff8001a2e2: 84 c0                	testb	%al, %al
ffffffff8001a2e4: 0f 85 2a ff ff ff    	jne	0xffffffff8001a214 <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2+0x34>
ffffffff8001a2ea: 48 8b 7c 24 40       	movq	0x40(%rsp), %rdi
ffffffff8001a2ef: 48 8b 44 24 48       	movq	0x48(%rsp), %rax
ffffffff8001a2f4: ba 02 00 00 00       	movl	$0x2, %edx
ffffffff8001a2f9: 48 c7 c6 6a 3f 02 80 	movq	$-0x7ffdc096, %rsi      # imm = 0x80023F6A
ffffffff8001a300: ff 50 18             	callq	*0x18(%rax)
ffffffff8001a303: 84 c0                	testb	%al, %al
ffffffff8001a305: 0f 85 09 ff ff ff    	jne	0xffffffff8001a214 <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2+0x34>
ffffffff8001a30b: 4c 8b a4 24 a0 00 00 00      	movq	0xa0(%rsp), %r12
ffffffff8001a313: 41 f6 46 24 04       	testb	$0x4, 0x24(%r14)
ffffffff8001a318: 75 31                	jne	0xffffffff8001a34b <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2+0x16b>
ffffffff8001a31a: 49 8b 7e 30          	movq	0x30(%r14), %rdi
ffffffff8001a31e: 49 8b 46 38          	movq	0x38(%r14), %rax
ffffffff8001a322: ba 02 00 00 00       	movl	$0x2, %edx
ffffffff8001a327: 48 c7 c6 63 3f 02 80 	movq	$-0x7ffdc09d, %rsi      # imm = 0x80023F63
ffffffff8001a32e: ff 50 18             	callq	*0x18(%rax)
ffffffff8001a331: 84 c0                	testb	%al, %al
ffffffff8001a333: 0f 85 db fe ff ff    	jne	0xffffffff8001a214 <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2+0x34>
ffffffff8001a339: 48 8b 7c 24 08       	movq	0x8(%rsp), %rdi
ffffffff8001a33e: 4c 89 f6             	movq	%r14, %rsi
ffffffff8001a341: 41 ff 54 24 18       	callq	*0x18(%r12)
ffffffff8001a346: e9 99 00 00 00       	jmp	0xffffffff8001a3e4 <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2+0x204>
ffffffff8001a34b: c6 44 24 07 01       	movb	$0x1, 0x7(%rsp)
ffffffff8001a350: 49 8b 46 30          	movq	0x30(%r14), %rax
ffffffff8001a354: 49 8b 4e 38          	movq	0x38(%r14), %rcx
ffffffff8001a358: 48 89 44 24 50       	movq	%rax, 0x50(%rsp)
ffffffff8001a35d: 48 89 4c 24 58       	movq	%rcx, 0x58(%rsp)
ffffffff8001a362: 48 8d 44 24 07       	leaq	0x7(%rsp), %rax
ffffffff8001a367: 48 89 44 24 60       	movq	%rax, 0x60(%rsp)
ffffffff8001a36c: 49 8b 06             	movq	(%r14), %rax
ffffffff8001a36f: 49 8b 4e 08          	movq	0x8(%r14), %rcx
ffffffff8001a373: 48 89 44 24 10       	movq	%rax, 0x10(%rsp)
ffffffff8001a378: 48 89 4c 24 18       	movq	%rcx, 0x18(%rsp)
ffffffff8001a37d: 49 8b 46 10          	movq	0x10(%r14), %rax
ffffffff8001a381: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff8001a386: 49 8b 46 18          	movq	0x18(%r14), %rax
ffffffff8001a38a: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff8001a38f: 49 8b 46 20          	movq	0x20(%r14), %rax
ffffffff8001a393: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff8001a398: 49 8b 46 28          	movq	0x28(%r14), %rax
ffffffff8001a39c: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff8001a3a1: 48 8d 44 24 50       	leaq	0x50(%rsp), %rax
ffffffff8001a3a6: 48 89 44 24 40       	movq	%rax, 0x40(%rsp)
ffffffff8001a3ab: 48 c7 44 24 48 30 3f 02 80   	movq	$-0x7ffdc0d0, 0x48(%rsp) # imm = 0x80023F30
ffffffff8001a3b4: 48 8d 74 24 10       	leaq	0x10(%rsp), %rsi
ffffffff8001a3b9: 48 8b 7c 24 08       	movq	0x8(%rsp), %rdi
ffffffff8001a3be: 41 ff 54 24 18       	callq	*0x18(%r12)
ffffffff8001a3c3: 84 c0                	testb	%al, %al
ffffffff8001a3c5: 0f 85 49 fe ff ff    	jne	0xffffffff8001a214 <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2+0x34>
ffffffff8001a3cb: 48 8b 7c 24 40       	movq	0x40(%rsp), %rdi
ffffffff8001a3d0: 48 8b 44 24 48       	movq	0x48(%rsp), %rax
ffffffff8001a3d5: ba 02 00 00 00       	movl	$0x2, %edx
ffffffff8001a3da: 48 c7 c6 6a 3f 02 80 	movq	$-0x7ffdc096, %rsi      # imm = 0x80023F6A
ffffffff8001a3e1: ff 50 18             	callq	*0x18(%rax)
ffffffff8001a3e4: 84 c0                	testb	%al, %al
ffffffff8001a3e6: 0f 85 28 fe ff ff    	jne	0xffffffff8001a214 <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2+0x34>
ffffffff8001a3ec: 49 8b 7e 30          	movq	0x30(%r14), %rdi
ffffffff8001a3f0: 49 8b 46 38          	movq	0x38(%r14), %rax
ffffffff8001a3f4: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff8001a3f9: 48 c7 c6 72 3f 02 80 	movq	$-0x7ffdc08e, %rsi      # imm = 0x80023F72
ffffffff8001a400: ff 50 18             	callq	*0x18(%rax)
ffffffff8001a403: 89 c3                	movl	%eax, %ebx
ffffffff8001a405: e9 0a fe ff ff       	jmp	0xffffffff8001a214 <core::fmt::Formatter::debug_tuple_field2_finish::hd8c78ff059ce97e2+0x34>
ffffffff8001a40a: cc                   	int3
ffffffff8001a40b: cc                   	int3
ffffffff8001a40c: cc                   	int3
ffffffff8001a40d: cc                   	int3
ffffffff8001a40e: cc                   	int3
ffffffff8001a40f: cc                   	int3

ffffffff8001a410 <<bool as core::fmt::Display>::fmt::h198794c47a13c7a1>:
ffffffff8001a410: 80 3f 00             	cmpb	$0x0, (%rdi)
ffffffff8001a413: 74 14                	je	0xffffffff8001a429 <<bool as core::fmt::Display>::fmt::h198794c47a13c7a1+0x19>
ffffffff8001a415: ba 04 00 00 00       	movl	$0x4, %edx
ffffffff8001a41a: 48 89 f7             	movq	%rsi, %rdi
ffffffff8001a41d: 48 c7 c6 5c d0 01 80 	movq	$-0x7ffe2fa4, %rsi      # imm = 0x8001D05C
ffffffff8001a424: e9 37 f8 ff ff       	jmp	0xffffffff80019c60 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e>
ffffffff8001a429: ba 05 00 00 00       	movl	$0x5, %edx
ffffffff8001a42e: 48 89 f7             	movq	%rsi, %rdi
ffffffff8001a431: 48 c7 c6 fb 3e 02 80 	movq	$-0x7ffdc105, %rsi      # imm = 0x80023EFB
ffffffff8001a438: e9 23 f8 ff ff       	jmp	0xffffffff80019c60 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e>
ffffffff8001a43d: cc                   	int3
ffffffff8001a43e: cc                   	int3
ffffffff8001a43f: cc                   	int3

ffffffff8001a440 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790>:
ffffffff8001a440: 55                   	pushq	%rbp
ffffffff8001a441: 41 57                	pushq	%r15
ffffffff8001a443: 41 56                	pushq	%r14
ffffffff8001a445: 41 55                	pushq	%r13
ffffffff8001a447: 41 54                	pushq	%r12
ffffffff8001a449: 53                   	pushq	%rbx
ffffffff8001a44a: 48 83 ec 58          	subq	$0x58, %rsp
ffffffff8001a44e: 49 89 f7             	movq	%rsi, %r15
ffffffff8001a451: 48 89 7c 24 08       	movq	%rdi, 0x8(%rsp)
ffffffff8001a456: 48 8b 5a 30          	movq	0x30(%rdx), %rbx
ffffffff8001a45a: 4c 8b 62 38          	movq	0x38(%rdx), %r12
ffffffff8001a45e: 4d 8b 74 24 20       	movq	0x20(%r12), %r14
ffffffff8001a463: 48 89 df             	movq	%rbx, %rdi
ffffffff8001a466: be 22 00 00 00       	movl	$0x22, %esi
ffffffff8001a46b: 41 ff d6             	callq	*%r14
ffffffff8001a46e: 40 b5 01             	movb	$0x1, %bpl
ffffffff8001a471: 84 c0                	testb	%al, %al
ffffffff8001a473: 0f 85 0c 03 00 00    	jne	0xffffffff8001a785 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x345>
ffffffff8001a479: 4c 89 64 24 40       	movq	%r12, 0x40(%rsp)
ffffffff8001a47e: 4d 85 ff             	testq	%r15, %r15
ffffffff8001a481: 0f 84 ae 02 00 00    	je	0xffffffff8001a735 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x2f5>
ffffffff8001a487: 4c 89 74 24 38       	movq	%r14, 0x38(%rsp)
ffffffff8001a48c: 4c 89 f8             	movq	%r15, %rax
ffffffff8001a48f: 48 f7 d8             	negq	%rax
ffffffff8001a492: 48 89 44 24 48       	movq	%rax, 0x48(%rsp)
ffffffff8001a497: 45 31 e4             	xorl	%r12d, %r12d
ffffffff8001a49a: 31 ed                	xorl	%ebp, %ebp
ffffffff8001a49c: 4c 8b 74 24 08       	movq	0x8(%rsp), %r14
ffffffff8001a4a1: 4c 89 7c 24 28       	movq	%r15, 0x28(%rsp)
ffffffff8001a4a6: 4c 89 f8             	movq	%r15, %rax
ffffffff8001a4a9: eb 16                	jmp	0xffffffff8001a4c1 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x81>
ffffffff8001a4ab: 0f 1f 44 00 00       	nopl	(%rax,%rax)
ffffffff8001a4b0: 48 01 cd             	addq	%rcx, %rbp
ffffffff8001a4b3: 48 8b 44 24 50       	movq	0x50(%rsp), %rax
ffffffff8001a4b8: 4c 29 f0             	subq	%r14, %rax
ffffffff8001a4bb: 0f 84 d5 02 00 00    	je	0xffffffff8001a796 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x356>
ffffffff8001a4c1: 49 8d 34 06          	leaq	(%r14,%rax), %rsi
ffffffff8001a4c5: 45 31 ff             	xorl	%r15d, %r15d
ffffffff8001a4c8: 0f 1f 84 00 00 00 00 00      	nopl	(%rax,%rax)
ffffffff8001a4d0: 43 0f b6 0c 3e       	movzbl	(%r14,%r15), %ecx
ffffffff8001a4d5: 8d 51 81             	leal	-0x7f(%rcx), %edx
ffffffff8001a4d8: 80 fa a1             	cmpb	$-0x5f, %dl
ffffffff8001a4db: 72 23                	jb	0xffffffff8001a500 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0xc0>
ffffffff8001a4dd: 83 f9 22             	cmpl	$0x22, %ecx
ffffffff8001a4e0: 74 1e                	je	0xffffffff8001a500 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0xc0>
ffffffff8001a4e2: 83 f9 5c             	cmpl	$0x5c, %ecx
ffffffff8001a4e5: 74 19                	je	0xffffffff8001a500 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0xc0>
ffffffff8001a4e7: 49 ff c7             	incq	%r15
ffffffff8001a4ea: 4c 39 f8             	cmpq	%r15, %rax
ffffffff8001a4ed: 75 e1                	jne	0xffffffff8001a4d0 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x90>
ffffffff8001a4ef: e9 0d 02 00 00       	jmp	0xffffffff8001a701 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x2c1>
ffffffff8001a4f4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
ffffffff8001a500: 48 89 74 24 50       	movq	%rsi, 0x50(%rsp)
ffffffff8001a505: 47 0f b6 2c 3e       	movzbl	(%r14,%r15), %r13d
ffffffff8001a50a: 45 84 ed             	testb	%r13b, %r13b
ffffffff8001a50d: 78 11                	js	0xffffffff8001a520 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0xe0>
ffffffff8001a50f: 4d 01 fe             	addq	%r15, %r14
ffffffff8001a512: 49 ff c6             	incq	%r14
ffffffff8001a515: eb 79                	jmp	0xffffffff8001a590 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x150>
ffffffff8001a517: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
ffffffff8001a520: 44 89 e8             	movl	%r13d, %eax
ffffffff8001a523: 83 e0 1f             	andl	$0x1f, %eax
ffffffff8001a526: 43 0f b6 54 3e 01    	movzbl	0x1(%r14,%r15), %edx
ffffffff8001a52c: 83 e2 3f             	andl	$0x3f, %edx
ffffffff8001a52f: 41 80 fd df          	cmpb	$-0x21, %r13b
ffffffff8001a533: 76 36                	jbe	0xffffffff8001a56b <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x12b>
ffffffff8001a535: 43 0f b6 4c 3e 02    	movzbl	0x2(%r14,%r15), %ecx
ffffffff8001a53b: c1 e2 06             	shll	$0x6, %edx
ffffffff8001a53e: 83 e1 3f             	andl	$0x3f, %ecx
ffffffff8001a541: 09 d1                	orl	%edx, %ecx
ffffffff8001a543: 41 80 fd f0          	cmpb	$-0x10, %r13b
ffffffff8001a547: 72 33                	jb	0xffffffff8001a57c <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x13c>
ffffffff8001a549: 47 0f b6 6c 3e 03    	movzbl	0x3(%r14,%r15), %r13d
ffffffff8001a54f: 4d 01 fe             	addq	%r15, %r14
ffffffff8001a552: 49 83 c6 04          	addq	$0x4, %r14
ffffffff8001a556: 83 e0 07             	andl	$0x7, %eax
ffffffff8001a559: c1 e0 12             	shll	$0x12, %eax
ffffffff8001a55c: c1 e1 06             	shll	$0x6, %ecx
ffffffff8001a55f: 41 83 e5 3f          	andl	$0x3f, %r13d
ffffffff8001a563: 41 09 cd             	orl	%ecx, %r13d
ffffffff8001a566: 41 09 c5             	orl	%eax, %r13d
ffffffff8001a569: eb 25                	jmp	0xffffffff8001a590 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x150>
ffffffff8001a56b: 4d 01 fe             	addq	%r15, %r14
ffffffff8001a56e: 49 83 c6 02          	addq	$0x2, %r14
ffffffff8001a572: c1 e0 06             	shll	$0x6, %eax
ffffffff8001a575: 09 d0                	orl	%edx, %eax
ffffffff8001a577: 41 89 c5             	movl	%eax, %r13d
ffffffff8001a57a: eb 14                	jmp	0xffffffff8001a590 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x150>
ffffffff8001a57c: 4d 01 fe             	addq	%r15, %r14
ffffffff8001a57f: 49 83 c6 03          	addq	$0x3, %r14
ffffffff8001a583: c1 e0 0c             	shll	$0xc, %eax
ffffffff8001a586: 09 c1                	orl	%eax, %ecx
ffffffff8001a588: 41 89 cd             	movl	%ecx, %r13d
ffffffff8001a58b: 0f 1f 44 00 00       	nopl	(%rax,%rax)
ffffffff8001a590: 48 89 6c 24 30       	movq	%rbp, 0x30(%rsp)
ffffffff8001a595: 4c 01 fd             	addq	%r15, %rbp
ffffffff8001a598: 48 8d 7c 24 14       	leaq	0x14(%rsp), %rdi
ffffffff8001a59d: 44 89 ee             	movl	%r13d, %esi
ffffffff8001a5a0: ba 01 00 01 00       	movl	$0x10001, %edx          # imm = 0x10001
ffffffff8001a5a5: e8 76 ee ff ff       	callq	0xffffffff80019420 <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2>
ffffffff8001a5aa: 31 c0                	xorl	%eax, %eax
ffffffff8001a5ac: 3a 44 24 14          	cmpb	0x14(%rsp), %al
ffffffff8001a5b0: 0f 80 12 01 00 00    	jo	0xffffffff8001a6c8 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x288>
ffffffff8001a5b6: 0f b6 44 24 1f       	movzbl	0x1f(%rsp), %eax
ffffffff8001a5bb: 2a 44 24 1e          	subb	0x1e(%rsp), %al
ffffffff8001a5bf: 3c 01                	cmpb	$0x1, %al
ffffffff8001a5c1: 0f 84 01 01 00 00    	je	0xffffffff8001a6c8 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x288>
ffffffff8001a5c7: 48 89 5c 24 20       	movq	%rbx, 0x20(%rsp)
ffffffff8001a5cc: 49 39 ec             	cmpq	%rbp, %r12
ffffffff8001a5cf: 0f 87 ea 01 00 00    	ja	0xffffffff8001a7bf <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x37f>
ffffffff8001a5d5: 4d 85 e4             	testq	%r12, %r12
ffffffff8001a5d8: 74 1e                	je	0xffffffff8001a5f8 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x1b8>
ffffffff8001a5da: 4c 3b 64 24 28       	cmpq	0x28(%rsp), %r12
ffffffff8001a5df: 73 11                	jae	0xffffffff8001a5f2 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x1b2>
ffffffff8001a5e1: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff8001a5e6: 42 80 3c 20 bf       	cmpb	$-0x41, (%rax,%r12)
ffffffff8001a5eb: 7f 0b                	jg	0xffffffff8001a5f8 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x1b8>
ffffffff8001a5ed: e9 cd 01 00 00       	jmp	0xffffffff8001a7bf <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x37f>
ffffffff8001a5f2: 0f 85 c7 01 00 00    	jne	0xffffffff8001a7bf <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x37f>
ffffffff8001a5f8: 48 85 ed             	testq	%rbp, %rbp
ffffffff8001a5fb: 74 2e                	je	0xffffffff8001a62b <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x1eb>
ffffffff8001a5fd: 48 3b 6c 24 28       	cmpq	0x28(%rsp), %rbp
ffffffff8001a602: 73 19                	jae	0xffffffff8001a61d <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x1dd>
ffffffff8001a604: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff8001a609: 48 8b 4c 24 30       	movq	0x30(%rsp), %rcx
ffffffff8001a60e: 48 01 c8             	addq	%rcx, %rax
ffffffff8001a611: 41 80 3c 07 bf       	cmpb	$-0x41, (%r15,%rax)
ffffffff8001a616: 7f 13                	jg	0xffffffff8001a62b <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x1eb>
ffffffff8001a618: e9 a2 01 00 00       	jmp	0xffffffff8001a7bf <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x37f>
ffffffff8001a61d: 48 89 e8             	movq	%rbp, %rax
ffffffff8001a620: 48 03 44 24 48       	addq	0x48(%rsp), %rax
ffffffff8001a625: 0f 85 94 01 00 00    	jne	0xffffffff8001a7bf <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x37f>
ffffffff8001a62b: 48 8b 54 24 30       	movq	0x30(%rsp), %rdx
ffffffff8001a630: 4c 29 e2             	subq	%r12, %rdx
ffffffff8001a633: 4c 01 fa             	addq	%r15, %rdx
ffffffff8001a636: 4c 03 64 24 08       	addq	0x8(%rsp), %r12
ffffffff8001a63b: 48 8b 44 24 40       	movq	0x40(%rsp), %rax
ffffffff8001a640: 48 8b 58 18          	movq	0x18(%rax), %rbx
ffffffff8001a644: 48 8b 7c 24 20       	movq	0x20(%rsp), %rdi
ffffffff8001a649: 4c 89 e6             	movq	%r12, %rsi
ffffffff8001a64c: ff d3                	callq	*%rbx
ffffffff8001a64e: 84 c0                	testb	%al, %al
ffffffff8001a650: 0f 85 4d 01 00 00    	jne	0xffffffff8001a7a3 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x363>
ffffffff8001a656: 31 c0                	xorl	%eax, %eax
ffffffff8001a658: 3a 44 24 14          	cmpb	0x14(%rsp), %al
ffffffff8001a65c: 71 0f                	jno	0xffffffff8001a66d <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x22d>
ffffffff8001a65e: 8b 74 24 18          	movl	0x18(%rsp), %esi
ffffffff8001a662: 48 8b 7c 24 20       	movq	0x20(%rsp), %rdi
ffffffff8001a667: ff 54 24 38          	callq	*0x38(%rsp)
ffffffff8001a66b: eb 1c                	jmp	0xffffffff8001a689 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x249>
ffffffff8001a66d: 0f b6 44 24 1e       	movzbl	0x1e(%rsp), %eax
ffffffff8001a672: 0f b6 54 24 1f       	movzbl	0x1f(%rsp), %edx
ffffffff8001a677: 48 29 c2             	subq	%rax, %rdx
ffffffff8001a67a: 48 8d 34 04          	leaq	(%rsp,%rax), %rsi
ffffffff8001a67e: 48 83 c6 14          	addq	$0x14, %rsi
ffffffff8001a682: 48 8b 7c 24 20       	movq	0x20(%rsp), %rdi
ffffffff8001a687: ff d3                	callq	*%rbx
ffffffff8001a689: 84 c0                	testb	%al, %al
ffffffff8001a68b: 0f 85 12 01 00 00    	jne	0xffffffff8001a7a3 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x363>
ffffffff8001a691: 41 bc 01 00 00 00    	movl	$0x1, %r12d
ffffffff8001a697: 41 81 fd 80 00 00 00 	cmpl	$0x80, %r13d
ffffffff8001a69e: 72 20                	jb	0xffffffff8001a6c0 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x280>
ffffffff8001a6a0: 41 bc 02 00 00 00    	movl	$0x2, %r12d
ffffffff8001a6a6: 41 81 fd 00 08 00 00 	cmpl	$0x800, %r13d           # imm = 0x800
ffffffff8001a6ad: 72 11                	jb	0xffffffff8001a6c0 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x280>
ffffffff8001a6af: 41 81 fd 00 00 01 00 	cmpl	$0x10000, %r13d         # imm = 0x10000
ffffffff8001a6b6: 41 bc 04 00 00 00    	movl	$0x4, %r12d
ffffffff8001a6bc: 49 83 dc 00          	sbbq	$0x0, %r12
ffffffff8001a6c0: 49 01 ec             	addq	%rbp, %r12
ffffffff8001a6c3: 48 8b 5c 24 20       	movq	0x20(%rsp), %rbx
ffffffff8001a6c8: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff8001a6cd: 41 81 fd 80 00 00 00 	cmpl	$0x80, %r13d
ffffffff8001a6d4: 0f 82 d6 fd ff ff    	jb	0xffffffff8001a4b0 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x70>
ffffffff8001a6da: b9 02 00 00 00       	movl	$0x2, %ecx
ffffffff8001a6df: 41 81 fd 00 08 00 00 	cmpl	$0x800, %r13d           # imm = 0x800
ffffffff8001a6e6: 0f 82 c4 fd ff ff    	jb	0xffffffff8001a4b0 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x70>
ffffffff8001a6ec: 41 81 fd 00 00 01 00 	cmpl	$0x10000, %r13d         # imm = 0x10000
ffffffff8001a6f3: b9 04 00 00 00       	movl	$0x4, %ecx
ffffffff8001a6f8: 48 83 d9 00          	sbbq	$0x0, %rcx
ffffffff8001a6fc: e9 af fd ff ff       	jmp	0xffffffff8001a4b0 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x70>
ffffffff8001a701: 48 01 e8             	addq	%rbp, %rax
ffffffff8001a704: 48 89 c1             	movq	%rax, %rcx
ffffffff8001a707: 49 39 cc             	cmpq	%rcx, %r12
ffffffff8001a70a: 4c 8b 74 24 38       	movq	0x38(%rsp), %r14
ffffffff8001a70f: 40 b5 01             	movb	$0x1, %bpl
ffffffff8001a712: 48 8b 54 24 28       	movq	0x28(%rsp), %rdx
ffffffff8001a717: 0f 87 8b 00 00 00    	ja	0xffffffff8001a7a8 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x368>
ffffffff8001a71d: 4d 85 e4             	testq	%r12, %r12
ffffffff8001a720: 74 1c                	je	0xffffffff8001a73e <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x2fe>
ffffffff8001a722: 49 39 d4             	cmpq	%rdx, %r12
ffffffff8001a725: 73 15                	jae	0xffffffff8001a73c <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x2fc>
ffffffff8001a727: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff8001a72c: 42 80 3c 20 bf       	cmpb	$-0x41, (%rax,%r12)
ffffffff8001a731: 7f 0b                	jg	0xffffffff8001a73e <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x2fe>
ffffffff8001a733: eb 73                	jmp	0xffffffff8001a7a8 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x368>
ffffffff8001a735: 31 d2                	xorl	%edx, %edx
ffffffff8001a737: 45 31 e4             	xorl	%r12d, %r12d
ffffffff8001a73a: eb 22                	jmp	0xffffffff8001a75e <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x31e>
ffffffff8001a73c: 75 6a                	jne	0xffffffff8001a7a8 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x368>
ffffffff8001a73e: 48 85 c9             	testq	%rcx, %rcx
ffffffff8001a741: 74 15                	je	0xffffffff8001a758 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x318>
ffffffff8001a743: 48 39 d1             	cmpq	%rdx, %rcx
ffffffff8001a746: 73 14                	jae	0xffffffff8001a75c <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x31c>
ffffffff8001a748: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff8001a74d: 80 3c 08 bf          	cmpb	$-0x41, (%rax,%rcx)
ffffffff8001a751: 7e 55                	jle	0xffffffff8001a7a8 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x368>
ffffffff8001a753: 48 89 ca             	movq	%rcx, %rdx
ffffffff8001a756: eb 06                	jmp	0xffffffff8001a75e <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x31e>
ffffffff8001a758: 31 d2                	xorl	%edx, %edx
ffffffff8001a75a: eb 02                	jmp	0xffffffff8001a75e <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x31e>
ffffffff8001a75c: 75 4a                	jne	0xffffffff8001a7a8 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x368>
ffffffff8001a75e: 4c 29 e2             	subq	%r12, %rdx
ffffffff8001a761: 48 8b 74 24 08       	movq	0x8(%rsp), %rsi
ffffffff8001a766: 4c 01 e6             	addq	%r12, %rsi
ffffffff8001a769: 48 89 df             	movq	%rbx, %rdi
ffffffff8001a76c: 48 8b 44 24 40       	movq	0x40(%rsp), %rax
ffffffff8001a771: ff 50 18             	callq	*0x18(%rax)
ffffffff8001a774: 84 c0                	testb	%al, %al
ffffffff8001a776: 75 0d                	jne	0xffffffff8001a785 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x345>
ffffffff8001a778: 48 89 df             	movq	%rbx, %rdi
ffffffff8001a77b: be 22 00 00 00       	movl	$0x22, %esi
ffffffff8001a780: 41 ff d6             	callq	*%r14
ffffffff8001a783: 89 c5                	movl	%eax, %ebp
ffffffff8001a785: 89 e8                	movl	%ebp, %eax
ffffffff8001a787: 48 83 c4 58          	addq	$0x58, %rsp
ffffffff8001a78b: 5b                   	popq	%rbx
ffffffff8001a78c: 41 5c                	popq	%r12
ffffffff8001a78e: 41 5d                	popq	%r13
ffffffff8001a790: 41 5e                	popq	%r14
ffffffff8001a792: 41 5f                	popq	%r15
ffffffff8001a794: 5d                   	popq	%rbp
ffffffff8001a795: c3                   	retq
ffffffff8001a796: 48 03 4c 24 30       	addq	0x30(%rsp), %rcx
ffffffff8001a79b: 4c 01 f9             	addq	%r15, %rcx
ffffffff8001a79e: e9 64 ff ff ff       	jmp	0xffffffff8001a707 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x2c7>
ffffffff8001a7a3: 40 b5 01             	movb	$0x1, %bpl
ffffffff8001a7a6: eb dd                	jmp	0xffffffff8001a785 <<str as core::fmt::Debug>::fmt::h0f79c3c22c3c5790+0x345>
ffffffff8001a7a8: 48 8b 7c 24 08       	movq	0x8(%rsp), %rdi
ffffffff8001a7ad: 48 89 d6             	movq	%rdx, %rsi
ffffffff8001a7b0: 4c 89 e2             	movq	%r12, %rdx
ffffffff8001a7b3: 49 c7 c0 18 3f 02 80 	movq	$-0x7ffdc0e8, %r8       # imm = 0x80023F18
ffffffff8001a7ba: e8 61 1d 00 00       	callq	0xffffffff8001c520 <core::str::slice_error_fail::h119858e2b5d21404>
ffffffff8001a7bf: 48 8b 7c 24 08       	movq	0x8(%rsp), %rdi
ffffffff8001a7c4: 48 8b 74 24 28       	movq	0x28(%rsp), %rsi
ffffffff8001a7c9: 4c 89 e2             	movq	%r12, %rdx
ffffffff8001a7cc: 48 89 e9             	movq	%rbp, %rcx
ffffffff8001a7cf: 49 c7 c0 00 3f 02 80 	movq	$-0x7ffdc100, %r8       # imm = 0x80023F00
ffffffff8001a7d6: e8 45 1d 00 00       	callq	0xffffffff8001c520 <core::str::slice_error_fail::h119858e2b5d21404>
ffffffff8001a7db: cc                   	int3
ffffffff8001a7dc: cc                   	int3
ffffffff8001a7dd: cc                   	int3
ffffffff8001a7de: cc                   	int3
ffffffff8001a7df: cc                   	int3

ffffffff8001a7e0 <<str as core::fmt::Display>::fmt::h8862704feddd2413>:
ffffffff8001a7e0: 48 89 d0             	movq	%rdx, %rax
ffffffff8001a7e3: 48 89 f2             	movq	%rsi, %rdx
ffffffff8001a7e6: 48 89 fe             	movq	%rdi, %rsi
ffffffff8001a7e9: 48 89 c7             	movq	%rax, %rdi
ffffffff8001a7ec: e9 6f f4 ff ff       	jmp	0xffffffff80019c60 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e>
ffffffff8001a7f1: cc                   	int3
ffffffff8001a7f2: cc                   	int3
ffffffff8001a7f3: cc                   	int3
ffffffff8001a7f4: cc                   	int3
ffffffff8001a7f5: cc                   	int3
ffffffff8001a7f6: cc                   	int3
ffffffff8001a7f7: cc                   	int3
ffffffff8001a7f8: cc                   	int3
ffffffff8001a7f9: cc                   	int3
ffffffff8001a7fa: cc                   	int3
ffffffff8001a7fb: cc                   	int3
ffffffff8001a7fc: cc                   	int3
ffffffff8001a7fd: cc                   	int3
ffffffff8001a7fe: cc                   	int3
ffffffff8001a7ff: cc                   	int3

ffffffff8001a800 <<char as core::fmt::Debug>::fmt::hc8c784158d62e7e4>:
ffffffff8001a800: 41 57                	pushq	%r15
ffffffff8001a802: 41 56                	pushq	%r14
ffffffff8001a804: 41 54                	pushq	%r12
ffffffff8001a806: 53                   	pushq	%rbx
ffffffff8001a807: 48 83 ec 18          	subq	$0x18, %rsp
ffffffff8001a80b: 49 89 fe             	movq	%rdi, %r14
ffffffff8001a80e: 48 8b 5e 30          	movq	0x30(%rsi), %rbx
ffffffff8001a812: 4c 8b 66 38          	movq	0x38(%rsi), %r12
ffffffff8001a816: 4d 8b 7c 24 20       	movq	0x20(%r12), %r15
ffffffff8001a81b: 48 89 df             	movq	%rbx, %rdi
ffffffff8001a81e: be 27 00 00 00       	movl	$0x27, %esi
ffffffff8001a823: 41 ff d7             	callq	*%r15
ffffffff8001a826: 89 c1                	movl	%eax, %ecx
ffffffff8001a828: b0 01                	movb	$0x1, %al
ffffffff8001a82a: 84 c9                	testb	%cl, %cl
ffffffff8001a82c: 75 58                	jne	0xffffffff8001a886 <<char as core::fmt::Debug>::fmt::hc8c784158d62e7e4+0x86>
ffffffff8001a82e: 41 8b 36             	movl	(%r14), %esi
ffffffff8001a831: 48 8d 7c 24 0c       	leaq	0xc(%rsp), %rdi
ffffffff8001a836: ba 01 01 00 00       	movl	$0x101, %edx            # imm = 0x101
ffffffff8001a83b: e8 e0 eb ff ff       	callq	0xffffffff80019420 <core::char::methods::<impl char>::escape_debug_ext::h9c0239bfbf4e0ce2>
ffffffff8001a840: 31 c0                	xorl	%eax, %eax
ffffffff8001a842: 3a 44 24 0c          	cmpb	0xc(%rsp), %al
ffffffff8001a846: 71 1b                	jno	0xffffffff8001a863 <<char as core::fmt::Debug>::fmt::hc8c784158d62e7e4+0x63>
ffffffff8001a848: 8b 74 24 10          	movl	0x10(%rsp), %esi
ffffffff8001a84c: 48 89 df             	movq	%rbx, %rdi
ffffffff8001a84f: 41 ff d7             	callq	*%r15
ffffffff8001a852: 84 c0                	testb	%al, %al
ffffffff8001a854: 75 2e                	jne	0xffffffff8001a884 <<char as core::fmt::Debug>::fmt::hc8c784158d62e7e4+0x84>
ffffffff8001a856: 48 89 df             	movq	%rbx, %rdi
ffffffff8001a859: be 27 00 00 00       	movl	$0x27, %esi
ffffffff8001a85e: 41 ff d7             	callq	*%r15
ffffffff8001a861: eb 23                	jmp	0xffffffff8001a886 <<char as core::fmt::Debug>::fmt::hc8c784158d62e7e4+0x86>
ffffffff8001a863: 0f b6 44 24 16       	movzbl	0x16(%rsp), %eax
ffffffff8001a868: 0f b6 54 24 17       	movzbl	0x17(%rsp), %edx
ffffffff8001a86d: 48 29 c2             	subq	%rax, %rdx
ffffffff8001a870: 48 8d 34 04          	leaq	(%rsp,%rax), %rsi
ffffffff8001a874: 48 83 c6 0c          	addq	$0xc, %rsi
ffffffff8001a878: 48 89 df             	movq	%rbx, %rdi
ffffffff8001a87b: 41 ff 54 24 18       	callq	*0x18(%r12)
ffffffff8001a880: 84 c0                	testb	%al, %al
ffffffff8001a882: 74 d2                	je	0xffffffff8001a856 <<char as core::fmt::Debug>::fmt::hc8c784158d62e7e4+0x56>
ffffffff8001a884: b0 01                	movb	$0x1, %al
ffffffff8001a886: 48 83 c4 18          	addq	$0x18, %rsp
ffffffff8001a88a: 5b                   	popq	%rbx
ffffffff8001a88b: 41 5c                	popq	%r12
ffffffff8001a88d: 41 5e                	popq	%r14
ffffffff8001a88f: 41 5f                	popq	%r15
ffffffff8001a891: c3                   	retq
ffffffff8001a892: cc                   	int3
ffffffff8001a893: cc                   	int3
ffffffff8001a894: cc                   	int3
ffffffff8001a895: cc                   	int3
ffffffff8001a896: cc                   	int3
ffffffff8001a897: cc                   	int3
ffffffff8001a898: cc                   	int3
ffffffff8001a899: cc                   	int3
ffffffff8001a89a: cc                   	int3
ffffffff8001a89b: cc                   	int3
ffffffff8001a89c: cc                   	int3
ffffffff8001a89d: cc                   	int3
ffffffff8001a89e: cc                   	int3
ffffffff8001a89f: cc                   	int3

ffffffff8001a8a0 <<&T as core::fmt::Debug>::fmt::hfde5ca57d3930bd4>:
ffffffff8001a8a0: 48 8b 07             	movq	(%rdi), %rax
ffffffff8001a8a3: 48 8b 4f 08          	movq	0x8(%rdi), %rcx
ffffffff8001a8a7: 48 8b 49 18          	movq	0x18(%rcx), %rcx
ffffffff8001a8ab: 48 89 c7             	movq	%rax, %rdi
ffffffff8001a8ae: ff e1                	jmpq	*%rcx

ffffffff8001a8b0 <<&T as core::fmt::Display>::fmt::h9caa31ed2d31ce39>:
ffffffff8001a8b0: 48 89 f0             	movq	%rsi, %rax
ffffffff8001a8b3: 48 8b 37             	movq	(%rdi), %rsi
ffffffff8001a8b6: 48 8b 57 08          	movq	0x8(%rdi), %rdx
ffffffff8001a8ba: 48 89 c7             	movq	%rax, %rdi
ffffffff8001a8bd: e9 9e f3 ff ff       	jmp	0xffffffff80019c60 <core::fmt::Formatter::pad::he5ef5a6b25b9c03e>
ffffffff8001a8c2: cc                   	int3
ffffffff8001a8c3: cc                   	int3
ffffffff8001a8c4: cc                   	int3
ffffffff8001a8c5: cc                   	int3
ffffffff8001a8c6: cc                   	int3
ffffffff8001a8c7: cc                   	int3
ffffffff8001a8c8: cc                   	int3
ffffffff8001a8c9: cc                   	int3
ffffffff8001a8ca: cc                   	int3
ffffffff8001a8cb: cc                   	int3
ffffffff8001a8cc: cc                   	int3
ffffffff8001a8cd: cc                   	int3
ffffffff8001a8ce: cc                   	int3
ffffffff8001a8cf: cc                   	int3

ffffffff8001a8d0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d>:
ffffffff8001a8d0: 55                   	pushq	%rbp
ffffffff8001a8d1: 41 57                	pushq	%r15
ffffffff8001a8d3: 41 56                	pushq	%r14
ffffffff8001a8d5: 41 55                	pushq	%r13
ffffffff8001a8d7: 41 54                	pushq	%r12
ffffffff8001a8d9: 53                   	pushq	%rbx
ffffffff8001a8da: 48 83 ec 28          	subq	$0x28, %rsp
ffffffff8001a8de: 48 89 34 24          	movq	%rsi, (%rsp)
ffffffff8001a8e2: 49 bd 80 80 80 80 80 80 80 80	movabsq	$-0x7f7f7f7f7f7f7f80, %r13 # imm = 0x8080808080808080
ffffffff8001a8ec: 48 8b 47 10          	movq	0x10(%rdi), %rax
ffffffff8001a8f0: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff8001a8f5: 48 8b 07             	movq	(%rdi), %rax
ffffffff8001a8f8: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff8001a8fd: 48 8b 47 08          	movq	0x8(%rdi), %rax
ffffffff8001a901: 48 89 44 24 10       	movq	%rax, 0x10(%rsp)
ffffffff8001a906: 31 ed                	xorl	%ebp, %ebp
ffffffff8001a908: 45 31 ff             	xorl	%r15d, %r15d
ffffffff8001a90b: 45 31 f6             	xorl	%r14d, %r14d
ffffffff8001a90e: 48 89 54 24 08       	movq	%rdx, 0x8(%rsp)
ffffffff8001a913: eb 47                	jmp	0xffffffff8001a95c <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x8c>
ffffffff8001a915: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff8001a920: 43 80 7c 2b ff 0a    	cmpb	$0xa, -0x1(%r11,%r13)
ffffffff8001a926: 0f 94 c0             	sete	%al
ffffffff8001a929: 4d 29 fd             	subq	%r15, %r13
ffffffff8001a92c: 4d 01 df             	addq	%r11, %r15
ffffffff8001a92f: 48 8b 4c 24 20       	movq	0x20(%rsp), %rcx
ffffffff8001a934: 88 01                	movb	%al, (%rcx)
ffffffff8001a936: 48 8b 7c 24 18       	movq	0x18(%rsp), %rdi
ffffffff8001a93b: 4c 89 fe             	movq	%r15, %rsi
ffffffff8001a93e: 4c 89 ea             	movq	%r13, %rdx
ffffffff8001a941: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff8001a946: ff 50 18             	callq	*0x18(%rax)
ffffffff8001a949: 4d 89 e7             	movq	%r12, %r15
ffffffff8001a94c: 84 c0                	testb	%al, %al
ffffffff8001a94e: 49 89 dd             	movq	%rbx, %r13
ffffffff8001a951: 48 8b 54 24 08       	movq	0x8(%rsp), %rdx
ffffffff8001a956: 0f 85 ca 01 00 00    	jne	0xffffffff8001ab26 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x256>
ffffffff8001a95c: 41 f6 c6 01          	testb	$0x1, %r14b
ffffffff8001a960: 0f 85 bc 01 00 00    	jne	0xffffffff8001ab22 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x252>
ffffffff8001a966: 48 39 d5             	cmpq	%rdx, %rbp
ffffffff8001a969: 76 15                	jbe	0xffffffff8001a980 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0xb0>
ffffffff8001a96b: 49 89 ec             	movq	%rbp, %r12
ffffffff8001a96e: 4c 8b 1c 24          	movq	(%rsp), %r11
ffffffff8001a972: e9 5c 01 00 00       	jmp	0xffffffff8001aad3 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x203>
ffffffff8001a977: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
ffffffff8001a980: 4c 8b 1c 24          	movq	(%rsp), %r11
ffffffff8001a984: 49 be 00 01 01 01 01 01 01 01	movabsq	$0x101010101010100, %r14 # imm = 0x101010101010100
ffffffff8001a98e: eb 0c                	jmp	0xffffffff8001a99c <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0xcc>
ffffffff8001a990: 4c 89 e5             	movq	%r12, %rbp
ffffffff8001a993: 49 39 d4             	cmpq	%rdx, %r12
ffffffff8001a996: 0f 87 37 01 00 00    	ja	0xffffffff8001aad3 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x203>
ffffffff8001a99c: 48 89 d1             	movq	%rdx, %rcx
ffffffff8001a99f: 48 29 e9             	subq	%rbp, %rcx
ffffffff8001a9a2: 49 8d 04 2b          	leaq	(%r11,%rbp), %rax
ffffffff8001a9a6: 48 83 f9 0f          	cmpq	$0xf, %rcx
ffffffff8001a9aa: 77 34                	ja	0xffffffff8001a9e0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x110>
ffffffff8001a9ac: 48 39 ea             	cmpq	%rbp, %rdx
ffffffff8001a9af: 0f 84 1b 01 00 00    	je	0xffffffff8001aad0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x200>
ffffffff8001a9b5: 31 ff                	xorl	%edi, %edi
ffffffff8001a9b7: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
ffffffff8001a9c0: 80 3c 38 0a          	cmpb	$0xa, (%rax,%rdi)
ffffffff8001a9c4: 0f 84 d6 00 00 00    	je	0xffffffff8001aaa0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x1d0>
ffffffff8001a9ca: 48 ff c7             	incq	%rdi
ffffffff8001a9cd: 48 39 f9             	cmpq	%rdi, %rcx
ffffffff8001a9d0: 75 ee                	jne	0xffffffff8001a9c0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0xf0>
ffffffff8001a9d2: e9 f9 00 00 00       	jmp	0xffffffff8001aad0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x200>
ffffffff8001a9d7: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
ffffffff8001a9e0: 48 8d 70 07          	leaq	0x7(%rax), %rsi
ffffffff8001a9e4: 48 83 e6 f8          	andq	$-0x8, %rsi
ffffffff8001a9e8: 48 89 f3             	movq	%rsi, %rbx
ffffffff8001a9eb: 48 29 c3             	subq	%rax, %rbx
ffffffff8001a9ee: 74 2d                	je	0xffffffff8001aa1d <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x14d>
ffffffff8001a9f0: 31 ff                	xorl	%edi, %edi
ffffffff8001a9f2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
ffffffff8001aa00: 80 3c 38 0a          	cmpb	$0xa, (%rax,%rdi)
ffffffff8001aa04: 0f 84 96 00 00 00    	je	0xffffffff8001aaa0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x1d0>
ffffffff8001aa0a: 48 ff c7             	incq	%rdi
ffffffff8001aa0d: 48 39 fb             	cmpq	%rdi, %rbx
ffffffff8001aa10: 75 ee                	jne	0xffffffff8001aa00 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x130>
ffffffff8001aa12: 48 8d 79 f0          	leaq	-0x10(%rcx), %rdi
ffffffff8001aa16: 48 39 fb             	cmpq	%rdi, %rbx
ffffffff8001aa19: 76 06                	jbe	0xffffffff8001aa21 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x151>
ffffffff8001aa1b: eb 5d                	jmp	0xffffffff8001aa7a <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x1aa>
ffffffff8001aa1d: 48 8d 79 f0          	leaq	-0x10(%rcx), %rdi
ffffffff8001aa21: ba 08 00 00 00       	movl	$0x8, %edx
ffffffff8001aa26: 48 01 d6             	addq	%rdx, %rsi
ffffffff8001aa29: 48 ba 0a 0a 0a 0a 0a 0a 0a 0a	movabsq	$0xa0a0a0a0a0a0a0a, %rdx # imm = 0xA0A0A0A0A0A0A0A
ffffffff8001aa33: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
ffffffff8001aa40: 4c 8b 46 f8          	movq	-0x8(%rsi), %r8
ffffffff8001aa44: 4d 89 c1             	movq	%r8, %r9
ffffffff8001aa47: 49 31 d1             	xorq	%rdx, %r9
ffffffff8001aa4a: 4d 89 f2             	movq	%r14, %r10
ffffffff8001aa4d: 4d 29 ca             	subq	%r9, %r10
ffffffff8001aa50: 4d 09 c2             	orq	%r8, %r10
ffffffff8001aa53: 4c 8b 06             	movq	(%rsi), %r8
ffffffff8001aa56: 49 31 d0             	xorq	%rdx, %r8
ffffffff8001aa59: 4d 89 f1             	movq	%r14, %r9
ffffffff8001aa5c: 4d 29 c1             	subq	%r8, %r9
ffffffff8001aa5f: 4d 09 c1             	orq	%r8, %r9
ffffffff8001aa62: 4d 21 ea             	andq	%r13, %r10
ffffffff8001aa65: 4d 21 ca             	andq	%r9, %r10
ffffffff8001aa68: 4d 39 ea             	cmpq	%r13, %r10
ffffffff8001aa6b: 75 0d                	jne	0xffffffff8001aa7a <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x1aa>
ffffffff8001aa6d: 48 83 c3 10          	addq	$0x10, %rbx
ffffffff8001aa71: 48 83 c6 10          	addq	$0x10, %rsi
ffffffff8001aa75: 48 39 fb             	cmpq	%rdi, %rbx
ffffffff8001aa78: 76 c6                	jbe	0xffffffff8001aa40 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x170>
ffffffff8001aa7a: 48 89 df             	movq	%rbx, %rdi
ffffffff8001aa7d: 48 39 cb             	cmpq	%rcx, %rbx
ffffffff8001aa80: 48 8b 54 24 08       	movq	0x8(%rsp), %rdx
ffffffff8001aa85: 74 49                	je	0xffffffff8001aad0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x200>
ffffffff8001aa87: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
ffffffff8001aa90: 80 3c 38 0a          	cmpb	$0xa, (%rax,%rdi)
ffffffff8001aa94: 74 0a                	je	0xffffffff8001aaa0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x1d0>
ffffffff8001aa96: 48 ff c7             	incq	%rdi
ffffffff8001aa99: 48 39 f9             	cmpq	%rdi, %rcx
ffffffff8001aa9c: 75 f2                	jne	0xffffffff8001aa90 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x1c0>
ffffffff8001aa9e: eb 30                	jmp	0xffffffff8001aad0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x200>
ffffffff8001aaa0: 4c 8d 24 2f          	leaq	(%rdi,%rbp), %r12
ffffffff8001aaa4: 49 ff c4             	incq	%r12
ffffffff8001aaa7: 48 01 fd             	addq	%rdi, %rbp
ffffffff8001aaaa: 48 39 d5             	cmpq	%rdx, %rbp
ffffffff8001aaad: 0f 83 dd fe ff ff    	jae	0xffffffff8001a990 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0xc0>
ffffffff8001aab3: 80 3c 38 0a          	cmpb	$0xa, (%rax,%rdi)
ffffffff8001aab7: 0f 85 d3 fe ff ff    	jne	0xffffffff8001a990 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0xc0>
ffffffff8001aabd: 4c 89 eb             	movq	%r13, %rbx
ffffffff8001aac0: 45 31 f6             	xorl	%r14d, %r14d
ffffffff8001aac3: 4c 89 e5             	movq	%r12, %rbp
ffffffff8001aac6: 4d 89 e5             	movq	%r12, %r13
ffffffff8001aac9: eb 1c                	jmp	0xffffffff8001aae7 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x217>
ffffffff8001aacb: 0f 1f 44 00 00       	nopl	(%rax,%rax)
ffffffff8001aad0: 49 89 d4             	movq	%rdx, %r12
ffffffff8001aad3: 4c 89 eb             	movq	%r13, %rbx
ffffffff8001aad6: 41 b6 01             	movb	$0x1, %r14b
ffffffff8001aad9: 4c 89 e5             	movq	%r12, %rbp
ffffffff8001aadc: 4d 89 fc             	movq	%r15, %r12
ffffffff8001aadf: 49 89 d5             	movq	%rdx, %r13
ffffffff8001aae2: 49 39 d7             	cmpq	%rdx, %r15
ffffffff8001aae5: 74 3b                	je	0xffffffff8001ab22 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x252>
ffffffff8001aae7: 48 8b 44 24 20       	movq	0x20(%rsp), %rax
ffffffff8001aaec: 80 38 00             	cmpb	$0x0, (%rax)
ffffffff8001aaef: 74 21                	je	0xffffffff8001ab12 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x242>
ffffffff8001aaf1: ba 04 00 00 00       	movl	$0x4, %edx
ffffffff8001aaf6: 48 8b 7c 24 18       	movq	0x18(%rsp), %rdi
ffffffff8001aafb: 48 c7 c6 70 d0 01 80 	movq	$-0x7ffe2f90, %rsi      # imm = 0x8001D070
ffffffff8001ab02: 48 8b 44 24 10       	movq	0x10(%rsp), %rax
ffffffff8001ab07: ff 50 18             	callq	*0x18(%rax)
ffffffff8001ab0a: 4c 8b 1c 24          	movq	(%rsp), %r11
ffffffff8001ab0e: 84 c0                	testb	%al, %al
ffffffff8001ab10: 75 14                	jne	0xffffffff8001ab26 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x256>
ffffffff8001ab12: 4d 39 fd             	cmpq	%r15, %r13
ffffffff8001ab15: 0f 85 05 fe ff ff    	jne	0xffffffff8001a920 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x50>
ffffffff8001ab1b: 31 c0                	xorl	%eax, %eax
ffffffff8001ab1d: e9 07 fe ff ff       	jmp	0xffffffff8001a929 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x59>
ffffffff8001ab22: 31 c0                	xorl	%eax, %eax
ffffffff8001ab24: eb 02                	jmp	0xffffffff8001ab28 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d+0x258>
ffffffff8001ab26: b0 01                	movb	$0x1, %al
ffffffff8001ab28: 48 83 c4 28          	addq	$0x28, %rsp
ffffffff8001ab2c: 5b                   	popq	%rbx
ffffffff8001ab2d: 41 5c                	popq	%r12
ffffffff8001ab2f: 41 5d                	popq	%r13
ffffffff8001ab31: 41 5e                	popq	%r14
ffffffff8001ab33: 41 5f                	popq	%r15
ffffffff8001ab35: 5d                   	popq	%rbp
ffffffff8001ab36: c3                   	retq
ffffffff8001ab37: cc                   	int3
ffffffff8001ab38: cc                   	int3
ffffffff8001ab39: cc                   	int3
ffffffff8001ab3a: cc                   	int3
ffffffff8001ab3b: cc                   	int3
ffffffff8001ab3c: cc                   	int3
ffffffff8001ab3d: cc                   	int3
ffffffff8001ab3e: cc                   	int3
ffffffff8001ab3f: cc                   	int3

ffffffff8001ab40 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_char::h476504df0e68d853>:
ffffffff8001ab40: 55                   	pushq	%rbp
ffffffff8001ab41: 41 57                	pushq	%r15
ffffffff8001ab43: 41 56                	pushq	%r14
ffffffff8001ab45: 53                   	pushq	%rbx
ffffffff8001ab46: 50                   	pushq	%rax
ffffffff8001ab47: 4c 8b 77 10          	movq	0x10(%rdi), %r14
ffffffff8001ab4b: 48 8b 1f             	movq	(%rdi), %rbx
ffffffff8001ab4e: 4c 8b 7f 08          	movq	0x8(%rdi), %r15
ffffffff8001ab52: 41 80 3e 00          	cmpb	$0x0, (%r14)
ffffffff8001ab56: 74 28                	je	0xffffffff8001ab80 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_char::h476504df0e68d853+0x40>
ffffffff8001ab58: ba 04 00 00 00       	movl	$0x4, %edx
ffffffff8001ab5d: 48 89 df             	movq	%rbx, %rdi
ffffffff8001ab60: 89 f5                	movl	%esi, %ebp
ffffffff8001ab62: 48 c7 c6 70 d0 01 80 	movq	$-0x7ffe2f90, %rsi      # imm = 0x8001D070
ffffffff8001ab69: 41 ff 57 18          	callq	*0x18(%r15)
ffffffff8001ab6d: 89 ee                	movl	%ebp, %esi
ffffffff8001ab6f: 84 c0                	testb	%al, %al
ffffffff8001ab71: 74 0d                	je	0xffffffff8001ab80 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_char::h476504df0e68d853+0x40>
ffffffff8001ab73: b0 01                	movb	$0x1, %al
ffffffff8001ab75: 48 83 c4 08          	addq	$0x8, %rsp
ffffffff8001ab79: 5b                   	popq	%rbx
ffffffff8001ab7a: 41 5e                	popq	%r14
ffffffff8001ab7c: 41 5f                	popq	%r15
ffffffff8001ab7e: 5d                   	popq	%rbp
ffffffff8001ab7f: c3                   	retq
ffffffff8001ab80: 83 fe 0a             	cmpl	$0xa, %esi
ffffffff8001ab83: 41 0f 94 06          	sete	(%r14)
ffffffff8001ab87: 49 8b 47 20          	movq	0x20(%r15), %rax
ffffffff8001ab8b: 48 89 df             	movq	%rbx, %rdi
ffffffff8001ab8e: 48 83 c4 08          	addq	$0x8, %rsp
ffffffff8001ab92: 5b                   	popq	%rbx
ffffffff8001ab93: 41 5e                	popq	%r14
ffffffff8001ab95: 41 5f                	popq	%r15
ffffffff8001ab97: 5d                   	popq	%rbp
ffffffff8001ab98: ff e0                	jmpq	*%rax
ffffffff8001ab9a: cc                   	int3
ffffffff8001ab9b: cc                   	int3
ffffffff8001ab9c: cc                   	int3
ffffffff8001ab9d: cc                   	int3
ffffffff8001ab9e: cc                   	int3
ffffffff8001ab9f: cc                   	int3

ffffffff8001aba0 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5>:
ffffffff8001aba0: 55                   	pushq	%rbp
ffffffff8001aba1: 41 57                	pushq	%r15
ffffffff8001aba3: 41 56                	pushq	%r14
ffffffff8001aba5: 41 55                	pushq	%r13
ffffffff8001aba7: 41 54                	pushq	%r12
ffffffff8001aba9: 53                   	pushq	%rbx
ffffffff8001abaa: 48 83 ec 68          	subq	$0x68, %rsp
ffffffff8001abae: 48 89 fb             	movq	%rdi, %rbx
ffffffff8001abb1: 40 b5 01             	movb	$0x1, %bpl
ffffffff8001abb4: 80 7f 08 00          	cmpb	$0x0, 0x8(%rdi)
ffffffff8001abb8: 0f 85 73 01 00 00    	jne	0xffffffff8001ad31 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5+0x191>
ffffffff8001abbe: 49 89 ce             	movq	%rcx, %r14
ffffffff8001abc1: 4c 89 44 24 08       	movq	%r8, 0x8(%rsp)
ffffffff8001abc6: 4c 8b 3b             	movq	(%rbx), %r15
ffffffff8001abc9: 41 f6 47 24 04       	testb	$0x4, 0x24(%r15)
ffffffff8001abce: 0f b6 43 09          	movzbl	0x9(%rbx), %eax
ffffffff8001abd2: 0f 85 84 00 00 00    	jne	0xffffffff8001ac5c <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5+0xbc>
ffffffff8001abd8: 49 89 f5             	movq	%rsi, %r13
ffffffff8001abdb: 49 89 d4             	movq	%rdx, %r12
ffffffff8001abde: 48 c7 c1 63 3f 02 80 	movq	$-0x7ffdc09d, %rcx      # imm = 0x80023F63
ffffffff8001abe5: 48 c7 c6 60 3f 02 80 	movq	$-0x7ffdc0a0, %rsi      # imm = 0x80023F60
ffffffff8001abec: 84 c0                	testb	%al, %al
ffffffff8001abee: 48 0f 45 f1          	cmovneq	%rcx, %rsi
ffffffff8001abf2: 0f b6 d0             	movzbl	%al, %edx
ffffffff8001abf5: 48 83 f2 03          	xorq	$0x3, %rdx
ffffffff8001abf9: 49 8b 7f 30          	movq	0x30(%r15), %rdi
ffffffff8001abfd: 49 8b 47 38          	movq	0x38(%r15), %rax
ffffffff8001ac01: ff 50 18             	callq	*0x18(%rax)
ffffffff8001ac04: 40 b5 01             	movb	$0x1, %bpl
ffffffff8001ac07: 84 c0                	testb	%al, %al
ffffffff8001ac09: 0f 85 22 01 00 00    	jne	0xffffffff8001ad31 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5+0x191>
ffffffff8001ac0f: 49 8b 7f 30          	movq	0x30(%r15), %rdi
ffffffff8001ac13: 49 8b 47 38          	movq	0x38(%r15), %rax
ffffffff8001ac17: 4c 89 ee             	movq	%r13, %rsi
ffffffff8001ac1a: 4c 89 e2             	movq	%r12, %rdx
ffffffff8001ac1d: ff 50 18             	callq	*0x18(%rax)
ffffffff8001ac20: 84 c0                	testb	%al, %al
ffffffff8001ac22: 0f 85 09 01 00 00    	jne	0xffffffff8001ad31 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5+0x191>
ffffffff8001ac28: 49 8b 7f 30          	movq	0x30(%r15), %rdi
ffffffff8001ac2c: 49 8b 47 38          	movq	0x38(%r15), %rax
ffffffff8001ac30: ba 02 00 00 00       	movl	$0x2, %edx
ffffffff8001ac35: 48 c7 c6 65 3f 02 80 	movq	$-0x7ffdc09b, %rsi      # imm = 0x80023F65
ffffffff8001ac3c: ff 50 18             	callq	*0x18(%rax)
ffffffff8001ac3f: 84 c0                	testb	%al, %al
ffffffff8001ac41: 0f 85 ea 00 00 00    	jne	0xffffffff8001ad31 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5+0x191>
ffffffff8001ac47: 4c 89 f7             	movq	%r14, %rdi
ffffffff8001ac4a: 4c 89 fe             	movq	%r15, %rsi
ffffffff8001ac4d: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff8001ac52: ff 50 18             	callq	*0x18(%rax)
ffffffff8001ac55: 89 c5                	movl	%eax, %ebp
ffffffff8001ac57: e9 d5 00 00 00       	jmp	0xffffffff8001ad31 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5+0x191>
ffffffff8001ac5c: 84 c0                	testb	%al, %al
ffffffff8001ac5e: 75 2e                	jne	0xffffffff8001ac8e <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5+0xee>
ffffffff8001ac60: 49 8b 7f 30          	movq	0x30(%r15), %rdi
ffffffff8001ac64: 49 8b 47 38          	movq	0x38(%r15), %rax
ffffffff8001ac68: 49 89 d4             	movq	%rdx, %r12
ffffffff8001ac6b: ba 03 00 00 00       	movl	$0x3, %edx
ffffffff8001ac70: 49 89 f5             	movq	%rsi, %r13
ffffffff8001ac73: 48 c7 c6 67 3f 02 80 	movq	$-0x7ffdc099, %rsi      # imm = 0x80023F67
ffffffff8001ac7a: ff 50 18             	callq	*0x18(%rax)
ffffffff8001ac7d: 4c 89 ee             	movq	%r13, %rsi
ffffffff8001ac80: 4c 89 e2             	movq	%r12, %rdx
ffffffff8001ac83: 40 b5 01             	movb	$0x1, %bpl
ffffffff8001ac86: 84 c0                	testb	%al, %al
ffffffff8001ac88: 0f 85 a3 00 00 00    	jne	0xffffffff8001ad31 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5+0x191>
ffffffff8001ac8e: c6 44 24 07 01       	movb	$0x1, 0x7(%rsp)
ffffffff8001ac93: 49 8b 47 30          	movq	0x30(%r15), %rax
ffffffff8001ac97: 49 8b 4f 38          	movq	0x38(%r15), %rcx
ffffffff8001ac9b: 48 89 44 24 10       	movq	%rax, 0x10(%rsp)
ffffffff8001aca0: 48 89 4c 24 18       	movq	%rcx, 0x18(%rsp)
ffffffff8001aca5: 48 8d 44 24 07       	leaq	0x7(%rsp), %rax
ffffffff8001acaa: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff8001acaf: 49 8b 07             	movq	(%r15), %rax
ffffffff8001acb2: 49 8b 4f 08          	movq	0x8(%r15), %rcx
ffffffff8001acb6: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff8001acbb: 48 89 4c 24 30       	movq	%rcx, 0x30(%rsp)
ffffffff8001acc0: 49 8b 47 10          	movq	0x10(%r15), %rax
ffffffff8001acc4: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff8001acc9: 49 8b 47 18          	movq	0x18(%r15), %rax
ffffffff8001accd: 48 89 44 24 40       	movq	%rax, 0x40(%rsp)
ffffffff8001acd2: 49 8b 47 20          	movq	0x20(%r15), %rax
ffffffff8001acd6: 48 89 44 24 48       	movq	%rax, 0x48(%rsp)
ffffffff8001acdb: 49 8b 47 28          	movq	0x28(%r15), %rax
ffffffff8001acdf: 48 89 44 24 50       	movq	%rax, 0x50(%rsp)
ffffffff8001ace4: 48 8d 7c 24 10       	leaq	0x10(%rsp), %rdi
ffffffff8001ace9: 48 89 7c 24 58       	movq	%rdi, 0x58(%rsp)
ffffffff8001acee: 48 c7 44 24 60 30 3f 02 80   	movq	$-0x7ffdc0d0, 0x60(%rsp) # imm = 0x80023F30
ffffffff8001acf7: e8 d4 fb ff ff       	callq	0xffffffff8001a8d0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d>
ffffffff8001acfc: 84 c0                	testb	%al, %al
ffffffff8001acfe: 75 2e                	jne	0xffffffff8001ad2e <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5+0x18e>
ffffffff8001ad00: 48 8d 7c 24 10       	leaq	0x10(%rsp), %rdi
ffffffff8001ad05: ba 02 00 00 00       	movl	$0x2, %edx
ffffffff8001ad0a: 48 c7 c6 65 3f 02 80 	movq	$-0x7ffdc09b, %rsi      # imm = 0x80023F65
ffffffff8001ad11: e8 ba fb ff ff       	callq	0xffffffff8001a8d0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hb45212a13a64745d>
ffffffff8001ad16: 84 c0                	testb	%al, %al
ffffffff8001ad18: 75 14                	jne	0xffffffff8001ad2e <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5+0x18e>
ffffffff8001ad1a: 48 8d 74 24 28       	leaq	0x28(%rsp), %rsi
ffffffff8001ad1f: 4c 89 f7             	movq	%r14, %rdi
ffffffff8001ad22: 48 8b 44 24 08       	movq	0x8(%rsp), %rax
ffffffff8001ad27: ff 50 18             	callq	*0x18(%rax)
ffffffff8001ad2a: 84 c0                	testb	%al, %al
ffffffff8001ad2c: 74 1d                	je	0xffffffff8001ad4b <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5+0x1ab>
ffffffff8001ad2e: 40 b5 01             	movb	$0x1, %bpl
ffffffff8001ad31: 40 88 6b 08          	movb	%bpl, 0x8(%rbx)
ffffffff8001ad35: c6 43 09 01          	movb	$0x1, 0x9(%rbx)
ffffffff8001ad39: 48 89 d8             	movq	%rbx, %rax
ffffffff8001ad3c: 48 83 c4 68          	addq	$0x68, %rsp
ffffffff8001ad40: 5b                   	popq	%rbx
ffffffff8001ad41: 41 5c                	popq	%r12
ffffffff8001ad43: 41 5d                	popq	%r13
ffffffff8001ad45: 41 5e                	popq	%r14
ffffffff8001ad47: 41 5f                	popq	%r15
ffffffff8001ad49: 5d                   	popq	%rbp
ffffffff8001ad4a: c3                   	retq
ffffffff8001ad4b: 48 8b 7c 24 58       	movq	0x58(%rsp), %rdi
ffffffff8001ad50: 48 8b 44 24 60       	movq	0x60(%rsp), %rax
ffffffff8001ad55: ba 02 00 00 00       	movl	$0x2, %edx
ffffffff8001ad5a: 48 c7 c6 6a 3f 02 80 	movq	$-0x7ffdc096, %rsi      # imm = 0x80023F6A
ffffffff8001ad61: ff 50 18             	callq	*0x18(%rax)
ffffffff8001ad64: 89 c5                	movl	%eax, %ebp
ffffffff8001ad66: eb c9                	jmp	0xffffffff8001ad31 <core::fmt::builders::DebugStruct::field::hfebfa96da63a4da5+0x191>
ffffffff8001ad68: cc                   	int3
ffffffff8001ad69: cc                   	int3
ffffffff8001ad6a: cc                   	int3
ffffffff8001ad6b: cc                   	int3
ffffffff8001ad6c: cc                   	int3
ffffffff8001ad6d: cc                   	int3
ffffffff8001ad6e: cc                   	int3
ffffffff8001ad6f: cc                   	int3

ffffffff8001ad70 <core::fmt::builders::DebugStruct::finish::h970ac4e7ca3b619d>:
ffffffff8001ad70: 0f b6 47 08          	movzbl	0x8(%rdi), %eax
ffffffff8001ad74: 80 7f 09 00          	cmpb	$0x0, 0x9(%rdi)
ffffffff8001ad78: 74 47                	je	0xffffffff8001adc1 <core::fmt::builders::DebugStruct::finish::h970ac4e7ca3b619d+0x51>
ffffffff8001ad7a: a8 01                	testb	$0x1, %al
ffffffff8001ad7c: b0 01                	movb	$0x1, %al
ffffffff8001ad7e: 75 3e                	jne	0xffffffff8001adbe <core::fmt::builders::DebugStruct::finish::h970ac4e7ca3b619d+0x4e>
ffffffff8001ad80: 53                   	pushq	%rbx
ffffffff8001ad81: 48 89 fb             	movq	%rdi, %rbx
ffffffff8001ad84: 48 8b 07             	movq	(%rdi), %rax
ffffffff8001ad87: f6 40 24 04          	testb	$0x4, 0x24(%rax)
ffffffff8001ad8b: 75 16                	jne	0xffffffff8001ada3 <core::fmt::builders::DebugStruct::finish::h970ac4e7ca3b619d+0x33>
ffffffff8001ad8d: 48 8b 78 30          	movq	0x30(%rax), %rdi
ffffffff8001ad91: 48 8b 40 38          	movq	0x38(%rax), %rax
ffffffff8001ad95: ba 02 00 00 00       	movl	$0x2, %edx
ffffffff8001ad9a: 48 c7 c6 6d 3f 02 80 	movq	$-0x7ffdc093, %rsi      # imm = 0x80023F6D
ffffffff8001ada1: eb 14                	jmp	0xffffffff8001adb7 <core::fmt::builders::DebugStruct::finish::h970ac4e7ca3b619d+0x47>
ffffffff8001ada3: 48 8b 78 30          	movq	0x30(%rax), %rdi
ffffffff8001ada7: 48 8b 40 38          	movq	0x38(%rax), %rax
ffffffff8001adab: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff8001adb0: 48 c7 c6 6c 3f 02 80 	movq	$-0x7ffdc094, %rsi      # imm = 0x80023F6C
ffffffff8001adb7: ff 50 18             	callq	*0x18(%rax)
ffffffff8001adba: 48 89 df             	movq	%rbx, %rdi
ffffffff8001adbd: 5b                   	popq	%rbx
ffffffff8001adbe: 88 47 08             	movb	%al, 0x8(%rdi)
ffffffff8001adc1: 24 01                	andb	$0x1, %al
ffffffff8001adc3: c3                   	retq
ffffffff8001adc4: cc                   	int3
ffffffff8001adc5: cc                   	int3
ffffffff8001adc6: cc                   	int3
ffffffff8001adc7: cc                   	int3
ffffffff8001adc8: cc                   	int3
ffffffff8001adc9: cc                   	int3
ffffffff8001adca: cc                   	int3
ffffffff8001adcb: cc                   	int3
ffffffff8001adcc: cc                   	int3
ffffffff8001adcd: cc                   	int3
ffffffff8001adce: cc                   	int3
ffffffff8001adcf: cc                   	int3

ffffffff8001add0 <core::fmt::builders::DebugTuple::field::hdeca1f40b2eb66f2>:
ffffffff8001add0: 41 57                	pushq	%r15
ffffffff8001add2: 41 56                	pushq	%r14
ffffffff8001add4: 41 55                	pushq	%r13
ffffffff8001add6: 41 54                	pushq	%r12
ffffffff8001add8: 53                   	pushq	%rbx
ffffffff8001add9: 48 83 ec 60          	subq	$0x60, %rsp
ffffffff8001addd: 48 89 fb             	movq	%rdi, %rbx
ffffffff8001ade0: 4c 8b 3f             	movq	(%rdi), %r15
ffffffff8001ade3: b0 01                	movb	$0x1, %al
ffffffff8001ade5: 80 7f 10 00          	cmpb	$0x0, 0x10(%rdi)
ffffffff8001ade9: 74 1a                	je	0xffffffff8001ae05 <core::fmt::builders::DebugTuple::field::hdeca1f40b2eb66f2+0x35>
ffffffff8001adeb: 88 43 10             	movb	%al, 0x10(%rbx)
ffffffff8001adee: 49 ff c7             	incq	%r15
ffffffff8001adf1: 4c 89 3b             	movq	%r15, (%rbx)
ffffffff8001adf4: 48 89 d8             	movq	%rbx, %rax
ffffffff8001adf7: 48 83 c4 60          	addq	$0x60, %rsp
ffffffff8001adfb: 5b                   	popq	%rbx
ffffffff8001adfc: 41 5c                	popq	%r12
ffffffff8001adfe: 41 5d                	popq	%r13
ffffffff8001ae00: 41 5e                	popq	%r14
ffffffff8001ae02: 41 5f                	popq	%r15
ffffffff8001ae04: c3                   	retq
ffffffff8001ae05: 4c 8b 73 08          	movq	0x8(%rbx), %r14
ffffffff8001ae09: 41 f6 46 24 04       	testb	$0x4, 0x24(%r14)
ffffffff8001ae0e: 75 49                	jne	0xffffffff8001ae59 <core::fmt::builders::DebugTuple::field::hdeca1f40b2eb66f2+0x89>
ffffffff8001ae10: 31 c0                	xorl	%eax, %eax
ffffffff8001ae12: 4d 85 ff             	testq	%r15, %r15
ffffffff8001ae15: 48 c7 c7 6f 3f 02 80 	movq	$-0x7ffdc091, %rdi      # imm = 0x80023F6F
ffffffff8001ae1c: 48 c7 c1 63 3f 02 80 	movq	$-0x7ffdc09d, %rcx      # imm = 0x80023F63
ffffffff8001ae23: 48 0f 44 cf          	cmoveq	%rdi, %rcx
ffffffff8001ae27: 0f 95 c0             	setne	%al
ffffffff8001ae2a: 48 ff c0             	incq	%rax
ffffffff8001ae2d: 49 8b 7e 30          	movq	0x30(%r14), %rdi
ffffffff8001ae31: 4d 8b 46 38          	movq	0x38(%r14), %r8
ffffffff8001ae35: 49 89 f4             	movq	%rsi, %r12
ffffffff8001ae38: 48 89 ce             	movq	%rcx, %rsi
ffffffff8001ae3b: 49 89 d5             	movq	%rdx, %r13
ffffffff8001ae3e: 48 89 c2             	movq	%rax, %rdx
ffffffff8001ae41: 41 ff 50 18          	callq	*0x18(%r8)
ffffffff8001ae45: 89 c1                	movl	%eax, %ecx
ffffffff8001ae47: b0 01                	movb	$0x1, %al
ffffffff8001ae49: 84 c9                	testb	%cl, %cl
ffffffff8001ae4b: 75 9e                	jne	0xffffffff8001adeb <core::fmt::builders::DebugTuple::field::hdeca1f40b2eb66f2+0x1b>
ffffffff8001ae4d: 4c 89 e7             	movq	%r12, %rdi
ffffffff8001ae50: 4c 89 f6             	movq	%r14, %rsi
ffffffff8001ae53: 41 ff 55 18          	callq	*0x18(%r13)
ffffffff8001ae57: eb 92                	jmp	0xffffffff8001adeb <core::fmt::builders::DebugTuple::field::hdeca1f40b2eb66f2+0x1b>
ffffffff8001ae59: 4d 85 ff             	testq	%r15, %r15
ffffffff8001ae5c: 75 2f                	jne	0xffffffff8001ae8d <core::fmt::builders::DebugTuple::field::hdeca1f40b2eb66f2+0xbd>
ffffffff8001ae5e: 49 8b 7e 30          	movq	0x30(%r14), %rdi
ffffffff8001ae62: 49 8b 46 38          	movq	0x38(%r14), %rax
ffffffff8001ae66: 49 89 d4             	movq	%rdx, %r12
ffffffff8001ae69: ba 02 00 00 00       	movl	$0x2, %edx
ffffffff8001ae6e: 49 89 f5             	movq	%rsi, %r13
ffffffff8001ae71: 48 c7 c6 70 3f 02 80 	movq	$-0x7ffdc090, %rsi      # imm = 0x80023F70
ffffffff8001ae78: ff 50 18             	callq	*0x18(%rax)
ffffffff8001ae7b: 4c 89 ee             	movq	%r13, %rsi
ffffffff8001ae7e: 4c 89 e2             	movq	%r12, %rdx
ffffffff8001ae81: 89 c1                	movl	%eax, %ecx
ffffffff8001ae83: b0 01                	movb	$0x1, %al
ffffffff8001ae85: 84 c9                	testb	%cl, %cl
ffffffff8001ae87: 0f 85 5e ff ff ff    	jne	0xffffffff8001adeb <core::fmt::builders::DebugTuple::field::hdeca1f40b2eb66f2+0x1b>
ffffffff8001ae8d: c6 44 24 07 01       	movb	$0x1, 0x7(%rsp)
ffffffff8001ae92: 49 8b 46 30          	movq	0x30(%r14), %rax
ffffffff8001ae96: 49 8b 4e 38          	movq	0x38(%r14), %rcx
ffffffff8001ae9a: 48 89 44 24 48       	movq	%rax, 0x48(%rsp)
ffffffff8001ae9f: 48 89 4c 24 50       	movq	%rcx, 0x50(%rsp)
ffffffff8001aea4: 48 8d 44 24 07       	leaq	0x7(%rsp), %rax
ffffffff8001aea9: 48 89 44 24 58       	movq	%rax, 0x58(%rsp)
ffffffff8001aeae: 49 8b 06             	movq	(%r14), %rax
ffffffff8001aeb1: 49 8b 4e 08          	movq	0x8(%r14), %rcx
ffffffff8001aeb5: 48 89 44 24 08       	movq	%rax, 0x8(%rsp)
ffffffff8001aeba: 48 89 4c 24 10       	movq	%rcx, 0x10(%rsp)
ffffffff8001aebf: 49 8b 46 10          	movq	0x10(%r14), %rax
ffffffff8001aec3: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff8001aec8: 49 8b 46 18          	movq	0x18(%r14), %rax
ffffffff8001aecc: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff8001aed1: 49 8b 46 20          	movq	0x20(%r14), %rax
ffffffff8001aed5: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff8001aeda: 49 8b 46 28          	movq	0x28(%r14), %rax
ffffffff8001aede: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff8001aee3: 48 8d 44 24 48       	leaq	0x48(%rsp), %rax
ffffffff8001aee8: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff8001aeed: 48 c7 44 24 40 30 3f 02 80   	movq	$-0x7ffdc0d0, 0x40(%rsp) # imm = 0x80023F30
ffffffff8001aef6: 48 8d 44 24 08       	leaq	0x8(%rsp), %rax
ffffffff8001aefb: 48 89 f7             	movq	%rsi, %rdi
ffffffff8001aefe: 48 89 c6             	movq	%rax, %rsi
ffffffff8001af01: ff 52 18             	callq	*0x18(%rdx)
ffffffff8001af04: 84 c0                	testb	%al, %al
ffffffff8001af06: 74 07                	je	0xffffffff8001af0f <core::fmt::builders::DebugTuple::field::hdeca1f40b2eb66f2+0x13f>
ffffffff8001af08: b0 01                	movb	$0x1, %al
ffffffff8001af0a: e9 dc fe ff ff       	jmp	0xffffffff8001adeb <core::fmt::builders::DebugTuple::field::hdeca1f40b2eb66f2+0x1b>
ffffffff8001af0f: 48 8b 7c 24 38       	movq	0x38(%rsp), %rdi
ffffffff8001af14: 48 8b 44 24 40       	movq	0x40(%rsp), %rax
ffffffff8001af19: ba 02 00 00 00       	movl	$0x2, %edx
ffffffff8001af1e: 48 c7 c6 6a 3f 02 80 	movq	$-0x7ffdc096, %rsi      # imm = 0x80023F6A
ffffffff8001af25: ff 50 18             	callq	*0x18(%rax)
ffffffff8001af28: e9 be fe ff ff       	jmp	0xffffffff8001adeb <core::fmt::builders::DebugTuple::field::hdeca1f40b2eb66f2+0x1b>
ffffffff8001af2d: cc                   	int3
ffffffff8001af2e: cc                   	int3
ffffffff8001af2f: cc                   	int3

ffffffff8001af30 <core::fmt::builders::DebugTuple::finish::hbf12f8561b8a5c16>:
ffffffff8001af30: 48 8b 17             	movq	(%rdi), %rdx
ffffffff8001af33: 0f b6 4f 10          	movzbl	0x10(%rdi), %ecx
ffffffff8001af37: 48 85 d2             	testq	%rdx, %rdx
ffffffff8001af3a: 74 70                	je	0xffffffff8001afac <core::fmt::builders::DebugTuple::finish::hbf12f8561b8a5c16+0x7c>
ffffffff8001af3c: b0 01                	movb	$0x1, %al
ffffffff8001af3e: f6 c1 01             	testb	$0x1, %cl
ffffffff8001af41: 75 64                	jne	0xffffffff8001afa7 <core::fmt::builders::DebugTuple::finish::hbf12f8561b8a5c16+0x77>
ffffffff8001af43: 53                   	pushq	%rbx
ffffffff8001af44: 48 83 fa 01          	cmpq	$0x1, %rdx
ffffffff8001af48: 75 38                	jne	0xffffffff8001af82 <core::fmt::builders::DebugTuple::finish::hbf12f8561b8a5c16+0x52>
ffffffff8001af4a: 80 7f 11 00          	cmpb	$0x0, 0x11(%rdi)
ffffffff8001af4e: 74 32                	je	0xffffffff8001af82 <core::fmt::builders::DebugTuple::finish::hbf12f8561b8a5c16+0x52>
ffffffff8001af50: 48 8b 4f 08          	movq	0x8(%rdi), %rcx
ffffffff8001af54: f6 41 24 04          	testb	$0x4, 0x24(%rcx)
ffffffff8001af58: 75 28                	jne	0xffffffff8001af82 <core::fmt::builders::DebugTuple::finish::hbf12f8561b8a5c16+0x52>
ffffffff8001af5a: 48 8b 41 30          	movq	0x30(%rcx), %rax
ffffffff8001af5e: 48 8b 49 38          	movq	0x38(%rcx), %rcx
ffffffff8001af62: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff8001af67: 48 89 fb             	movq	%rdi, %rbx
ffffffff8001af6a: 48 89 c7             	movq	%rax, %rdi
ffffffff8001af6d: 48 c7 c6 73 3f 02 80 	movq	$-0x7ffdc08d, %rsi      # imm = 0x80023F73
ffffffff8001af74: ff 51 18             	callq	*0x18(%rcx)
ffffffff8001af77: 48 89 df             	movq	%rbx, %rdi
ffffffff8001af7a: 89 c1                	movl	%eax, %ecx
ffffffff8001af7c: b0 01                	movb	$0x1, %al
ffffffff8001af7e: 84 c9                	testb	%cl, %cl
ffffffff8001af80: 75 24                	jne	0xffffffff8001afa6 <core::fmt::builders::DebugTuple::finish::hbf12f8561b8a5c16+0x76>
ffffffff8001af82: 48 8b 4f 08          	movq	0x8(%rdi), %rcx
ffffffff8001af86: 48 8b 41 30          	movq	0x30(%rcx), %rax
ffffffff8001af8a: 48 8b 49 38          	movq	0x38(%rcx), %rcx
ffffffff8001af8e: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff8001af93: 48 89 fb             	movq	%rdi, %rbx
ffffffff8001af96: 48 89 c7             	movq	%rax, %rdi
ffffffff8001af99: 48 c7 c6 72 3f 02 80 	movq	$-0x7ffdc08e, %rsi      # imm = 0x80023F72
ffffffff8001afa0: ff 51 18             	callq	*0x18(%rcx)
ffffffff8001afa3: 48 89 df             	movq	%rbx, %rdi
ffffffff8001afa6: 5b                   	popq	%rbx
ffffffff8001afa7: 88 47 10             	movb	%al, 0x10(%rdi)
ffffffff8001afaa: 89 c1                	movl	%eax, %ecx
ffffffff8001afac: 80 e1 01             	andb	$0x1, %cl
ffffffff8001afaf: 89 c8                	movl	%ecx, %eax
ffffffff8001afb1: c3                   	retq
ffffffff8001afb2: cc                   	int3
ffffffff8001afb3: cc                   	int3
ffffffff8001afb4: cc                   	int3
ffffffff8001afb5: cc                   	int3
ffffffff8001afb6: cc                   	int3
ffffffff8001afb7: cc                   	int3
ffffffff8001afb8: cc                   	int3
ffffffff8001afb9: cc                   	int3
ffffffff8001afba: cc                   	int3
ffffffff8001afbb: cc                   	int3
ffffffff8001afbc: cc                   	int3
ffffffff8001afbd: cc                   	int3
ffffffff8001afbe: cc                   	int3
ffffffff8001afbf: cc                   	int3

ffffffff8001afc0 <core::fmt::Write::write_fmt::h4496ab276a54b47f.llvm.12673182610765218689>:
ffffffff8001afc0: 48 89 f2             	movq	%rsi, %rdx
ffffffff8001afc3: 48 c7 c6 30 3f 02 80 	movq	$-0x7ffdc0d0, %rsi      # imm = 0x80023F30
ffffffff8001afca: e9 b1 e6 ff ff       	jmp	0xffffffff80019680 <core::fmt::write::h1a05140646fc4354>
ffffffff8001afcf: cc                   	int3

ffffffff8001afd0 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915>:
ffffffff8001afd0: 41 57                	pushq	%r15
ffffffff8001afd2: 41 56                	pushq	%r14
ffffffff8001afd4: 53                   	pushq	%rbx
ffffffff8001afd5: 48 85 d2             	testq	%rdx, %rdx
ffffffff8001afd8: 74 70                	je	0xffffffff8001b04a <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0x7a>
ffffffff8001afda: 41 89 fa             	movl	%edi, %r10d
ffffffff8001afdd: 41 c1 ea 08          	shrl	$0x8, %r10d
ffffffff8001afe1: 4c 8d 1c 56          	leaq	(%rsi,%rdx,2), %r11
ffffffff8001afe5: 31 c0                	xorl	%eax, %eax
ffffffff8001afe7: 49 89 f6             	movq	%rsi, %r14
ffffffff8001afea: 0f b6 5e 01          	movzbl	0x1(%rsi), %ebx
ffffffff8001afee: 48 83 c6 02          	addq	$0x2, %rsi
ffffffff8001aff2: 48 8d 14 18          	leaq	(%rax,%rbx), %rdx
ffffffff8001aff6: 45 38 16             	cmpb	%r10b, (%r14)
ffffffff8001aff9: 75 45                	jne	0xffffffff8001b040 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0x70>
ffffffff8001affb: 48 39 c2             	cmpq	%rax, %rdx
ffffffff8001affe: 0f 82 ad 00 00 00    	jb	0xffffffff8001b0b1 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0xe1>
ffffffff8001b004: 4c 39 c2             	cmpq	%r8, %rdx
ffffffff8001b007: 0f 87 b6 00 00 00    	ja	0xffffffff8001b0c3 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0xf3>
ffffffff8001b00d: 48 01 c8             	addq	%rcx, %rax
ffffffff8001b010: 45 31 f6             	xorl	%r14d, %r14d
ffffffff8001b013: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
ffffffff8001b020: 4c 39 f3             	cmpq	%r14, %rbx
ffffffff8001b023: 74 1d                	je	0xffffffff8001b042 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0x72>
ffffffff8001b025: 4d 8d 7e 01          	leaq	0x1(%r14), %r15
ffffffff8001b029: 42 38 3c 30          	cmpb	%dil, (%rax,%r14)
ffffffff8001b02d: 4d 89 fe             	movq	%r15, %r14
ffffffff8001b030: 75 ee                	jne	0xffffffff8001b020 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0x50>
ffffffff8001b032: eb 6f                	jmp	0xffffffff8001b0a3 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0xd3>
ffffffff8001b034: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
ffffffff8001b040: 77 08                	ja	0xffffffff8001b04a <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0x7a>
ffffffff8001b042: 48 89 d0             	movq	%rdx, %rax
ffffffff8001b045: 4c 39 de             	cmpq	%r11, %rsi
ffffffff8001b048: 75 9d                	jne	0xffffffff8001afe7 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0x17>
ffffffff8001b04a: 48 8b 4c 24 20       	movq	0x20(%rsp), %rcx
ffffffff8001b04f: 48 85 c9             	testq	%rcx, %rcx
ffffffff8001b052: 74 53                	je	0xffffffff8001b0a7 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0xd7>
ffffffff8001b054: 4c 01 c9             	addq	%r9, %rcx
ffffffff8001b057: 0f b7 d7             	movzwl	%di, %edx
ffffffff8001b05a: b0 01                	movb	$0x1, %al
ffffffff8001b05c: 0f 1f 40 00          	nopl	(%rax)
ffffffff8001b060: 49 8d 79 01          	leaq	0x1(%r9), %rdi
ffffffff8001b064: 41 0f be 31          	movsbl	(%r9), %esi
ffffffff8001b068: 85 f6                	testl	%esi, %esi
ffffffff8001b06a: 78 14                	js	0xffffffff8001b080 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0xb0>
ffffffff8001b06c: 49 89 f9             	movq	%rdi, %r9
ffffffff8001b06f: 29 f2                	subl	%esi, %edx
ffffffff8001b071: 79 27                	jns	0xffffffff8001b09a <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0xca>
ffffffff8001b073: eb 34                	jmp	0xffffffff8001b0a9 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0xd9>
ffffffff8001b075: 66 66 2e 0f 1f 84 00 00 00 00 00     	nopw	%cs:(%rax,%rax)
ffffffff8001b080: 48 39 cf             	cmpq	%rcx, %rdi
ffffffff8001b083: 74 50                	je	0xffffffff8001b0d5 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0x105>
ffffffff8001b085: 41 0f b6 79 01       	movzbl	0x1(%r9), %edi
ffffffff8001b08a: 49 83 c1 02          	addq	$0x2, %r9
ffffffff8001b08e: 83 e6 7f             	andl	$0x7f, %esi
ffffffff8001b091: c1 e6 08             	shll	$0x8, %esi
ffffffff8001b094: 09 fe                	orl	%edi, %esi
ffffffff8001b096: 29 f2                	subl	%esi, %edx
ffffffff8001b098: 78 0f                	js	0xffffffff8001b0a9 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0xd9>
ffffffff8001b09a: 34 01                	xorb	$0x1, %al
ffffffff8001b09c: 49 39 c9             	cmpq	%rcx, %r9
ffffffff8001b09f: 75 bf                	jne	0xffffffff8001b060 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0x90>
ffffffff8001b0a1: eb 06                	jmp	0xffffffff8001b0a9 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0xd9>
ffffffff8001b0a3: 31 c0                	xorl	%eax, %eax
ffffffff8001b0a5: eb 02                	jmp	0xffffffff8001b0a9 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915+0xd9>
ffffffff8001b0a7: b0 01                	movb	$0x1, %al
ffffffff8001b0a9: 24 01                	andb	$0x1, %al
ffffffff8001b0ab: 5b                   	popq	%rbx
ffffffff8001b0ac: 41 5e                	popq	%r14
ffffffff8001b0ae: 41 5f                	popq	%r15
ffffffff8001b0b0: c3                   	retq
ffffffff8001b0b1: 48 89 c7             	movq	%rax, %rdi
ffffffff8001b0b4: 48 89 d6             	movq	%rdx, %rsi
ffffffff8001b0b7: 48 c7 c2 10 40 02 80 	movq	$-0x7ffdbff0, %rdx      # imm = 0x80024010
ffffffff8001b0be: e8 cd 0e 00 00       	callq	0xffffffff8001bf90 <core::slice::index::slice_index_order_fail::h1a167d6bc7fac2e8>
ffffffff8001b0c3: 48 89 d7             	movq	%rdx, %rdi
ffffffff8001b0c6: 4c 89 c6             	movq	%r8, %rsi
ffffffff8001b0c9: 48 c7 c2 10 40 02 80 	movq	$-0x7ffdbff0, %rdx      # imm = 0x80024010
ffffffff8001b0d0: e8 ab 0e 00 00       	callq	0xffffffff8001bf80 <core::slice::index::slice_end_index_len_fail::h34b67e5519833f02>
ffffffff8001b0d5: 48 c7 c7 f8 3f 02 80 	movq	$-0x7ffdc008, %rdi      # imm = 0x80023FF8
ffffffff8001b0dc: e8 8f 18 00 00       	callq	0xffffffff8001c970 <core::option::unwrap_failed::hd8ef34c781aa10a4>
ffffffff8001b0e1: cc                   	int3
ffffffff8001b0e2: cc                   	int3
ffffffff8001b0e3: cc                   	int3
ffffffff8001b0e4: cc                   	int3
ffffffff8001b0e5: cc                   	int3
ffffffff8001b0e6: cc                   	int3
ffffffff8001b0e7: cc                   	int3
ffffffff8001b0e8: cc                   	int3
ffffffff8001b0e9: cc                   	int3
ffffffff8001b0ea: cc                   	int3
ffffffff8001b0eb: cc                   	int3
ffffffff8001b0ec: cc                   	int3
ffffffff8001b0ed: cc                   	int3
ffffffff8001b0ee: cc                   	int3
ffffffff8001b0ef: cc                   	int3

ffffffff8001b0f0 <core::unicode::printable::is_printable::hdd600e6e9a348a8e>:
ffffffff8001b0f0: 50                   	pushq	%rax
ffffffff8001b0f1: 83 ff 20             	cmpl	$0x20, %edi
ffffffff8001b0f4: 73 04                	jae	0xffffffff8001b0fa <core::unicode::printable::is_printable::hdd600e6e9a348a8e+0xa>
ffffffff8001b0f6: 31 c0                	xorl	%eax, %eax
ffffffff8001b0f8: 59                   	popq	%rcx
ffffffff8001b0f9: c3                   	retq
ffffffff8001b0fa: b0 01                	movb	$0x1, %al
ffffffff8001b0fc: 83 ff 7f             	cmpl	$0x7f, %edi
ffffffff8001b0ff: 73 02                	jae	0xffffffff8001b103 <core::unicode::printable::is_printable::hdd600e6e9a348a8e+0x13>
ffffffff8001b101: 59                   	popq	%rcx
ffffffff8001b102: c3                   	retq
ffffffff8001b103: 81 ff 00 00 01 00    	cmpl	$0x10000, %edi          # imm = 0x10000
ffffffff8001b109: 73 2f                	jae	0xffffffff8001b13a <core::unicode::printable::is_printable::hdd600e6e9a348a8e+0x4a>
ffffffff8001b10b: 48 c7 04 24 29 01 00 00      	movq	$0x129, (%rsp)  # imm = 0x129
ffffffff8001b113: ba 28 00 00 00       	movl	$0x28, %edx
ffffffff8001b118: 41 b8 22 01 00 00    	movl	$0x122, %r8d            # imm = 0x122
ffffffff8001b11e: 48 c7 c6 36 43 02 80 	movq	$-0x7ffdbcca, %rsi      # imm = 0x80024336
ffffffff8001b125: 48 c7 c1 86 43 02 80 	movq	$-0x7ffdbc7a, %rcx      # imm = 0x80024386
ffffffff8001b12c: 49 c7 c1 a8 44 02 80 	movq	$-0x7ffdbb58, %r9       # imm = 0x800244A8
ffffffff8001b133: e8 98 fe ff ff       	callq	0xffffffff8001afd0 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915>
ffffffff8001b138: 59                   	popq	%rcx
ffffffff8001b139: c3                   	retq
ffffffff8001b13a: 81 ff 00 00 02 00    	cmpl	$0x20000, %edi          # imm = 0x20000
ffffffff8001b140: 73 2f                	jae	0xffffffff8001b171 <core::unicode::printable::is_printable::hdd600e6e9a348a8e+0x81>
ffffffff8001b142: 48 c7 04 24 e6 01 00 00      	movq	$0x1e6, (%rsp)  # imm = 0x1E6
ffffffff8001b14a: ba 2c 00 00 00       	movl	$0x2c, %edx
ffffffff8001b14f: 41 b8 d0 00 00 00    	movl	$0xd0, %r8d
ffffffff8001b155: 48 c7 c6 28 40 02 80 	movq	$-0x7ffdbfd8, %rsi      # imm = 0x80024028
ffffffff8001b15c: 48 c7 c1 80 40 02 80 	movq	$-0x7ffdbf80, %rcx      # imm = 0x80024080
ffffffff8001b163: 49 c7 c1 50 41 02 80 	movq	$-0x7ffdbeb0, %r9       # imm = 0x80024150
ffffffff8001b16a: e8 61 fe ff ff       	callq	0xffffffff8001afd0 <core::unicode::printable::check::h2e730479e699062b.llvm.8603369270655970915>
ffffffff8001b16f: 59                   	popq	%rcx
ffffffff8001b170: c3                   	retq
ffffffff8001b171: 89 f8                	movl	%edi, %eax
ffffffff8001b173: 25 e0 ff 1f 00       	andl	$0x1fffe0, %eax         # imm = 0x1FFFE0
ffffffff8001b178: 3d e0 a6 02 00       	cmpl	$0x2a6e0, %eax          # imm = 0x2A6E0
ffffffff8001b17d: 0f 95 c0             	setne	%al
ffffffff8001b180: 8d 8f c0 48 fd ff    	leal	-0x2b740(%rdi), %ecx
ffffffff8001b186: 83 f9 fa             	cmpl	$-0x6, %ecx
ffffffff8001b189: 0f 92 c1             	setb	%cl
ffffffff8001b18c: 89 fa                	movl	%edi, %edx
ffffffff8001b18e: 81 e2 fe ff 1f 00    	andl	$0x1ffffe, %edx         # imm = 0x1FFFFE
ffffffff8001b194: 81 fa 1e b8 02 00    	cmpl	$0x2b81e, %edx          # imm = 0x2B81E
ffffffff8001b19a: 0f 95 c2             	setne	%dl
ffffffff8001b19d: 20 c2                	andb	%al, %dl
ffffffff8001b19f: 8d 87 50 31 fd ff    	leal	-0x2ceb0(%rdi), %eax
ffffffff8001b1a5: 83 f8 f2             	cmpl	$-0xe, %eax
ffffffff8001b1a8: 0f 92 c0             	setb	%al
ffffffff8001b1ab: 20 c8                	andb	%cl, %al
ffffffff8001b1ad: 20 d0                	andb	%dl, %al
ffffffff8001b1af: 8d 8f 10 14 fd ff    	leal	-0x2ebf0(%rdi), %ecx
ffffffff8001b1b5: 83 f9 f1             	cmpl	$-0xf, %ecx
ffffffff8001b1b8: 0f 92 c1             	setb	%cl
ffffffff8001b1bb: 8d 97 00 08 fd ff    	leal	-0x2f800(%rdi), %edx
ffffffff8001b1c1: 81 fa 5e f6 ff ff    	cmpl	$0xfffff65e, %edx       # imm = 0xFFFFF65E
ffffffff8001b1c7: 0f 92 c2             	setb	%dl
ffffffff8001b1ca: 20 ca                	andb	%cl, %dl
ffffffff8001b1cc: 8d 8f 00 00 fd ff    	leal	-0x30000(%rdi), %ecx
ffffffff8001b1d2: 81 f9 1e fa ff ff    	cmpl	$0xfffffa1e, %ecx       # imm = 0xFFFFFA1E
ffffffff8001b1d8: 0f 92 c1             	setb	%cl
ffffffff8001b1db: 20 d1                	andb	%dl, %cl
ffffffff8001b1dd: 20 c1                	andb	%al, %cl
ffffffff8001b1df: 8d 87 b0 ec fc ff    	leal	-0x31350(%rdi), %eax
ffffffff8001b1e5: 83 f8 fb             	cmpl	$-0x5, %eax
ffffffff8001b1e8: 0f 92 c0             	setb	%al
ffffffff8001b1eb: 8d 97 00 ff f1 ff    	leal	-0xe0100(%rdi), %edx
ffffffff8001b1f1: 81 fa b0 22 f5 ff    	cmpl	$0xfff522b0, %edx       # imm = 0xFFF522B0
ffffffff8001b1f7: 0f 92 c2             	setb	%dl
ffffffff8001b1fa: 20 c2                	andb	%al, %dl
ffffffff8001b1fc: 81 ff f0 01 0e 00    	cmpl	$0xe01f0, %edi          # imm = 0xE01F0
ffffffff8001b202: 0f 92 c0             	setb	%al
ffffffff8001b205: 20 d0                	andb	%dl, %al
ffffffff8001b207: 20 c8                	andb	%cl, %al
ffffffff8001b209: 59                   	popq	%rcx
ffffffff8001b20a: c3                   	retq
ffffffff8001b20b: cc                   	int3
ffffffff8001b20c: cc                   	int3
ffffffff8001b20d: cc                   	int3
ffffffff8001b20e: cc                   	int3
ffffffff8001b20f: cc                   	int3

ffffffff8001b210 <core::panicking::panic_const::panic_const_div_by_zero::h64ab67691243fe14>:
ffffffff8001b210: 48 83 ec 38          	subq	$0x38, %rsp
ffffffff8001b214: 48 89 fe             	movq	%rdi, %rsi
ffffffff8001b217: 48 c7 44 24 08 f0 45 02 80   	movq	$-0x7ffdba10, 0x8(%rsp) # imm = 0x800245F0
ffffffff8001b220: 48 c7 44 24 10 01 00 00 00   	movq	$0x1, 0x10(%rsp)
ffffffff8001b229: 48 c7 44 24 28 00 00 00 00   	movq	$0x0, 0x28(%rsp)
ffffffff8001b232: 48 c7 44 24 18 08 00 00 00   	movq	$0x8, 0x18(%rsp)
ffffffff8001b23b: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff8001b244: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff8001b249: e8 a2 11 00 00       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8001b24e: cc                   	int3
ffffffff8001b24f: cc                   	int3

ffffffff8001b250 <core::panicking::panic_const::panic_const_async_fn_resumed::hdbc599b673c0925f>:
ffffffff8001b250: 48 83 ec 38          	subq	$0x38, %rsp
ffffffff8001b254: 48 89 fe             	movq	%rdi, %rsi
ffffffff8001b257: 48 c7 44 24 08 28 46 02 80   	movq	$-0x7ffdb9d8, 0x8(%rsp) # imm = 0x80024628
ffffffff8001b260: 48 c7 44 24 10 01 00 00 00   	movq	$0x1, 0x10(%rsp)
ffffffff8001b269: 48 c7 44 24 28 00 00 00 00   	movq	$0x0, 0x28(%rsp)
ffffffff8001b272: 48 c7 44 24 18 08 00 00 00   	movq	$0x8, 0x18(%rsp)
ffffffff8001b27b: 48 c7 44 24 20 00 00 00 00   	movq	$0x0, 0x20(%rsp)
ffffffff8001b284: 48 8d 7c 24 08       	leaq	0x8(%rsp), %rdi
ffffffff8001b289: e8 62 11 00 00       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8001b28e: cc                   	int3
ffffffff8001b28f: cc                   	int3

ffffffff8001b290 <core::str::count::do_count_chars::h06cfda6302d02fdc>:
ffffffff8001b290: 4c 8d 4f 07          	leaq	0x7(%rdi), %r9
ffffffff8001b294: 49 83 e1 f8          	andq	$-0x8, %r9
ffffffff8001b298: 4c 89 c8             	movq	%r9, %rax
ffffffff8001b29b: 48 29 f8             	subq	%rdi, %rax
ffffffff8001b29e: 48 89 f1             	movq	%rsi, %rcx
ffffffff8001b2a1: 48 29 c1             	subq	%rax, %rcx
ffffffff8001b2a4: 73 19                	jae	0xffffffff8001b2bf <core::str::count::do_count_chars::h06cfda6302d02fdc+0x2f>
ffffffff8001b2a6: 48 85 f6             	testq	%rsi, %rsi
ffffffff8001b2a9: 74 55                	je	0xffffffff8001b300 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x70>
ffffffff8001b2ab: 89 f1                	movl	%esi, %ecx
ffffffff8001b2ad: 83 e1 03             	andl	$0x3, %ecx
ffffffff8001b2b0: 48 83 fe 04          	cmpq	$0x4, %rsi
ffffffff8001b2b4: 73 4d                	jae	0xffffffff8001b303 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x73>
ffffffff8001b2b6: 31 c0                	xorl	%eax, %eax
ffffffff8001b2b8: 31 d2                	xorl	%edx, %edx
ffffffff8001b2ba: e9 91 00 00 00       	jmp	0xffffffff8001b350 <core::str::count::do_count_chars::h06cfda6302d02fdc+0xc0>
ffffffff8001b2bf: 48 83 f9 08          	cmpq	$0x8, %rcx
ffffffff8001b2c3: 72 e1                	jb	0xffffffff8001b2a6 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x16>
ffffffff8001b2c5: 41 57                	pushq	%r15
ffffffff8001b2c7: 41 56                	pushq	%r14
ffffffff8001b2c9: 41 55                	pushq	%r13
ffffffff8001b2cb: 41 54                	pushq	%r12
ffffffff8001b2cd: 53                   	pushq	%rbx
ffffffff8001b2ce: 89 ca                	movl	%ecx, %edx
ffffffff8001b2d0: 83 e2 07             	andl	$0x7, %edx
ffffffff8001b2d3: 49 39 f9             	cmpq	%rdi, %r9
ffffffff8001b2d6: 75 07                	jne	0xffffffff8001b2df <core::str::count::do_count_chars::h06cfda6302d02fdc+0x4f>
ffffffff8001b2d8: 31 f6                	xorl	%esi, %esi
ffffffff8001b2da: e9 18 01 00 00       	jmp	0xffffffff8001b3f7 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x167>
ffffffff8001b2df: 41 89 c0             	movl	%eax, %r8d
ffffffff8001b2e2: 41 83 e0 03          	andl	$0x3, %r8d
ffffffff8001b2e6: 48 89 fe             	movq	%rdi, %rsi
ffffffff8001b2e9: 4c 29 ce             	subq	%r9, %rsi
ffffffff8001b2ec: 48 83 fe fc          	cmpq	$-0x4, %rsi
ffffffff8001b2f0: 0f 86 80 00 00 00    	jbe	0xffffffff8001b376 <core::str::count::do_count_chars::h06cfda6302d02fdc+0xe6>
ffffffff8001b2f6: 31 f6                	xorl	%esi, %esi
ffffffff8001b2f8: 45 31 c9             	xorl	%r9d, %r9d
ffffffff8001b2fb: e9 d4 00 00 00       	jmp	0xffffffff8001b3d4 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x144>
ffffffff8001b300: 31 c0                	xorl	%eax, %eax
ffffffff8001b302: c3                   	retq
ffffffff8001b303: 48 83 e6 fc          	andq	$-0x4, %rsi
ffffffff8001b307: 31 c0                	xorl	%eax, %eax
ffffffff8001b309: 31 d2                	xorl	%edx, %edx
ffffffff8001b30b: 0f 1f 44 00 00       	nopl	(%rax,%rax)
ffffffff8001b310: 45 31 c0             	xorl	%r8d, %r8d
ffffffff8001b313: 80 3c 17 c0          	cmpb	$-0x40, (%rdi,%rdx)
ffffffff8001b317: 41 0f 9d c0          	setge	%r8b
ffffffff8001b31b: 49 01 c0             	addq	%rax, %r8
ffffffff8001b31e: 31 c0                	xorl	%eax, %eax
ffffffff8001b320: 80 7c 17 01 c0       	cmpb	$-0x40, 0x1(%rdi,%rdx)
ffffffff8001b325: 0f 9d c0             	setge	%al
ffffffff8001b328: 45 31 c9             	xorl	%r9d, %r9d
ffffffff8001b32b: 80 7c 17 02 c0       	cmpb	$-0x40, 0x2(%rdi,%rdx)
ffffffff8001b330: 41 0f 9d c1          	setge	%r9b
ffffffff8001b334: 49 01 c1             	addq	%rax, %r9
ffffffff8001b337: 4d 01 c1             	addq	%r8, %r9
ffffffff8001b33a: 31 c0                	xorl	%eax, %eax
ffffffff8001b33c: 80 7c 17 03 c0       	cmpb	$-0x40, 0x3(%rdi,%rdx)
ffffffff8001b341: 0f 9d c0             	setge	%al
ffffffff8001b344: 4c 01 c8             	addq	%r9, %rax
ffffffff8001b347: 48 83 c2 04          	addq	$0x4, %rdx
ffffffff8001b34b: 48 39 d6             	cmpq	%rdx, %rsi
ffffffff8001b34e: 75 c0                	jne	0xffffffff8001b310 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x80>
ffffffff8001b350: 48 85 c9             	testq	%rcx, %rcx
ffffffff8001b353: 74 20                	je	0xffffffff8001b375 <core::str::count::do_count_chars::h06cfda6302d02fdc+0xe5>
ffffffff8001b355: 48 01 d7             	addq	%rdx, %rdi
ffffffff8001b358: 31 d2                	xorl	%edx, %edx
ffffffff8001b35a: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff8001b360: 31 f6                	xorl	%esi, %esi
ffffffff8001b362: 80 3c 17 c0          	cmpb	$-0x40, (%rdi,%rdx)
ffffffff8001b366: 40 0f 9d c6          	setge	%sil
ffffffff8001b36a: 48 01 f0             	addq	%rsi, %rax
ffffffff8001b36d: 48 ff c2             	incq	%rdx
ffffffff8001b370: 48 39 d1             	cmpq	%rdx, %rcx
ffffffff8001b373: 75 eb                	jne	0xffffffff8001b360 <core::str::count::do_count_chars::h06cfda6302d02fdc+0xd0>
ffffffff8001b375: c3                   	retq
ffffffff8001b376: 41 89 c2             	movl	%eax, %r10d
ffffffff8001b379: 41 83 e2 04          	andl	$0x4, %r10d
ffffffff8001b37d: 31 f6                	xorl	%esi, %esi
ffffffff8001b37f: 45 31 c9             	xorl	%r9d, %r9d
ffffffff8001b382: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
ffffffff8001b390: 45 31 db             	xorl	%r11d, %r11d
ffffffff8001b393: 42 80 3c 0f c0       	cmpb	$-0x40, (%rdi,%r9)
ffffffff8001b398: 41 0f 9d c3          	setge	%r11b
ffffffff8001b39c: 49 01 f3             	addq	%rsi, %r11
ffffffff8001b39f: 31 f6                	xorl	%esi, %esi
ffffffff8001b3a1: 42 80 7c 0f 01 c0    	cmpb	$-0x40, 0x1(%rdi,%r9)
ffffffff8001b3a7: 40 0f 9d c6          	setge	%sil
ffffffff8001b3ab: 31 db                	xorl	%ebx, %ebx
ffffffff8001b3ad: 42 80 7c 0f 02 c0    	cmpb	$-0x40, 0x2(%rdi,%r9)
ffffffff8001b3b3: 0f 9d c3             	setge	%bl
ffffffff8001b3b6: 48 01 f3             	addq	%rsi, %rbx
ffffffff8001b3b9: 4c 01 db             	addq	%r11, %rbx
ffffffff8001b3bc: 31 f6                	xorl	%esi, %esi
ffffffff8001b3be: 42 80 7c 0f 03 c0    	cmpb	$-0x40, 0x3(%rdi,%r9)
ffffffff8001b3c4: 40 0f 9d c6          	setge	%sil
ffffffff8001b3c8: 48 01 de             	addq	%rbx, %rsi
ffffffff8001b3cb: 49 83 c1 04          	addq	$0x4, %r9
ffffffff8001b3cf: 4d 39 ca             	cmpq	%r9, %r10
ffffffff8001b3d2: 75 bc                	jne	0xffffffff8001b390 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x100>
ffffffff8001b3d4: 4d 85 c0             	testq	%r8, %r8
ffffffff8001b3d7: 74 1e                	je	0xffffffff8001b3f7 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x167>
ffffffff8001b3d9: 49 01 f9             	addq	%rdi, %r9
ffffffff8001b3dc: 45 31 d2             	xorl	%r10d, %r10d
ffffffff8001b3df: 90                   	nop
ffffffff8001b3e0: 45 31 db             	xorl	%r11d, %r11d
ffffffff8001b3e3: 43 80 3c 11 c0       	cmpb	$-0x40, (%r9,%r10)
ffffffff8001b3e8: 41 0f 9d c3          	setge	%r11b
ffffffff8001b3ec: 4c 01 de             	addq	%r11, %rsi
ffffffff8001b3ef: 49 ff c2             	incq	%r10
ffffffff8001b3f2: 4d 39 d0             	cmpq	%r10, %r8
ffffffff8001b3f5: 75 e9                	jne	0xffffffff8001b3e0 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x150>
ffffffff8001b3f7: 48 01 c7             	addq	%rax, %rdi
ffffffff8001b3fa: 48 85 d2             	testq	%rdx, %rdx
ffffffff8001b3fd: 0f 84 8f 00 00 00    	je	0xffffffff8001b492 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x202>
ffffffff8001b403: 49 89 c8             	movq	%rcx, %r8
ffffffff8001b406: 49 83 e0 f8          	andq	$-0x8, %r8
ffffffff8001b40a: 31 c0                	xorl	%eax, %eax
ffffffff8001b40c: 42 80 3c 07 c0       	cmpb	$-0x40, (%rdi,%r8)
ffffffff8001b411: 0f 9d c0             	setge	%al
ffffffff8001b414: 83 fa 01             	cmpl	$0x1, %edx
ffffffff8001b417: 74 7b                	je	0xffffffff8001b494 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x204>
ffffffff8001b419: 45 31 c9             	xorl	%r9d, %r9d
ffffffff8001b41c: 42 80 7c 07 01 c0    	cmpb	$-0x40, 0x1(%rdi,%r8)
ffffffff8001b422: 41 0f 9d c1          	setge	%r9b
ffffffff8001b426: 4c 01 c8             	addq	%r9, %rax
ffffffff8001b429: 83 fa 02             	cmpl	$0x2, %edx
ffffffff8001b42c: 74 66                	je	0xffffffff8001b494 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x204>
ffffffff8001b42e: 45 31 c9             	xorl	%r9d, %r9d
ffffffff8001b431: 42 80 7c 07 02 c0    	cmpb	$-0x40, 0x2(%rdi,%r8)
ffffffff8001b437: 41 0f 9d c1          	setge	%r9b
ffffffff8001b43b: 4c 01 c8             	addq	%r9, %rax
ffffffff8001b43e: 83 fa 03             	cmpl	$0x3, %edx
ffffffff8001b441: 74 51                	je	0xffffffff8001b494 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x204>
ffffffff8001b443: 45 31 c9             	xorl	%r9d, %r9d
ffffffff8001b446: 42 80 7c 07 03 c0    	cmpb	$-0x40, 0x3(%rdi,%r8)
ffffffff8001b44c: 41 0f 9d c1          	setge	%r9b
ffffffff8001b450: 4c 01 c8             	addq	%r9, %rax
ffffffff8001b453: 83 fa 04             	cmpl	$0x4, %edx
ffffffff8001b456: 74 3c                	je	0xffffffff8001b494 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x204>
ffffffff8001b458: 45 31 c9             	xorl	%r9d, %r9d
ffffffff8001b45b: 42 80 7c 07 04 c0    	cmpb	$-0x40, 0x4(%rdi,%r8)
ffffffff8001b461: 41 0f 9d c1          	setge	%r9b
ffffffff8001b465: 4c 01 c8             	addq	%r9, %rax
ffffffff8001b468: 83 fa 05             	cmpl	$0x5, %edx
ffffffff8001b46b: 74 27                	je	0xffffffff8001b494 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x204>
ffffffff8001b46d: 45 31 c9             	xorl	%r9d, %r9d
ffffffff8001b470: 42 80 7c 07 05 c0    	cmpb	$-0x40, 0x5(%rdi,%r8)
ffffffff8001b476: 41 0f 9d c1          	setge	%r9b
ffffffff8001b47a: 4c 01 c8             	addq	%r9, %rax
ffffffff8001b47d: 83 fa 06             	cmpl	$0x6, %edx
ffffffff8001b480: 74 12                	je	0xffffffff8001b494 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x204>
ffffffff8001b482: 31 d2                	xorl	%edx, %edx
ffffffff8001b484: 42 80 7c 07 06 c0    	cmpb	$-0x40, 0x6(%rdi,%r8)
ffffffff8001b48a: 0f 9d c2             	setge	%dl
ffffffff8001b48d: 48 01 d0             	addq	%rdx, %rax
ffffffff8001b490: eb 02                	jmp	0xffffffff8001b494 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x204>
ffffffff8001b492: 31 c0                	xorl	%eax, %eax
ffffffff8001b494: 48 01 f0             	addq	%rsi, %rax
ffffffff8001b497: 48 c1 e9 03          	shrq	$0x3, %rcx
ffffffff8001b49b: 49 b8 01 01 01 01 01 01 01 01	movabsq	$0x101010101010101, %r8 # imm = 0x101010101010101
ffffffff8001b4a5: 48 be ff 00 ff 00 ff 00 ff 00	movabsq	$0xff00ff00ff00ff, %rsi # imm = 0xFF00FF00FF00FF
ffffffff8001b4af: 48 ba 01 00 01 00 01 00 01 00	movabsq	$0x1000100010001, %rdx # imm = 0x1000100010001
ffffffff8001b4b9: eb 38                	jmp	0xffffffff8001b4f3 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x263>
ffffffff8001b4bb: 0f 1f 44 00 00       	nopl	(%rax,%rax)
ffffffff8001b4c0: 31 db                	xorl	%ebx, %ebx
ffffffff8001b4c2: 4c 01 cf             	addq	%r9, %rdi
ffffffff8001b4c5: 4c 29 d1             	subq	%r10, %rcx
ffffffff8001b4c8: 45 89 d3             	movl	%r10d, %r11d
ffffffff8001b4cb: 41 83 e3 03          	andl	$0x3, %r11d
ffffffff8001b4cf: 49 89 de             	movq	%rbx, %r14
ffffffff8001b4d2: 49 21 f6             	andq	%rsi, %r14
ffffffff8001b4d5: 48 c1 eb 08          	shrq	$0x8, %rbx
ffffffff8001b4d9: 48 21 f3             	andq	%rsi, %rbx
ffffffff8001b4dc: 4c 01 f3             	addq	%r14, %rbx
ffffffff8001b4df: 48 0f af da          	imulq	%rdx, %rbx
ffffffff8001b4e3: 48 c1 eb 30          	shrq	$0x30, %rbx
ffffffff8001b4e7: 48 01 d8             	addq	%rbx, %rax
ffffffff8001b4ea: 4d 85 db             	testq	%r11, %r11
ffffffff8001b4ed: 0f 85 b6 00 00 00    	jne	0xffffffff8001b5a9 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x319>
ffffffff8001b4f3: 48 85 c9             	testq	%rcx, %rcx
ffffffff8001b4f6: 0f 84 2e 01 00 00    	je	0xffffffff8001b62a <core::str::count::do_count_chars::h06cfda6302d02fdc+0x39a>
ffffffff8001b4fc: 49 89 f9             	movq	%rdi, %r9
ffffffff8001b4ff: 48 81 f9 c0 00 00 00 	cmpq	$0xc0, %rcx
ffffffff8001b506: 41 ba c0 00 00 00    	movl	$0xc0, %r10d
ffffffff8001b50c: 4c 0f 42 d1          	cmovbq	%rcx, %r10
ffffffff8001b510: 42 8d 3c d5 00 00 00 00      	leal	(,%r10,8), %edi
ffffffff8001b518: 48 83 f9 04          	cmpq	$0x4, %rcx
ffffffff8001b51c: 72 a2                	jb	0xffffffff8001b4c0 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x230>
ffffffff8001b51e: 41 89 fb             	movl	%edi, %r11d
ffffffff8001b521: 41 81 e3 e0 07 00 00 	andl	$0x7e0, %r11d           # imm = 0x7E0
ffffffff8001b528: 4d 01 cb             	addq	%r9, %r11
ffffffff8001b52b: 31 db                	xorl	%ebx, %ebx
ffffffff8001b52d: 4d 89 ce             	movq	%r9, %r14
ffffffff8001b530: 4d 8b 3e             	movq	(%r14), %r15
ffffffff8001b533: 4d 8b 66 08          	movq	0x8(%r14), %r12
ffffffff8001b537: 4d 89 fd             	movq	%r15, %r13
ffffffff8001b53a: 49 f7 d5             	notq	%r13
ffffffff8001b53d: 49 c1 ed 07          	shrq	$0x7, %r13
ffffffff8001b541: 49 c1 ef 06          	shrq	$0x6, %r15
ffffffff8001b545: 4d 09 ef             	orq	%r13, %r15
ffffffff8001b548: 4d 21 c7             	andq	%r8, %r15
ffffffff8001b54b: 49 01 df             	addq	%rbx, %r15
ffffffff8001b54e: 4c 89 e3             	movq	%r12, %rbx
ffffffff8001b551: 48 f7 d3             	notq	%rbx
ffffffff8001b554: 48 c1 eb 07          	shrq	$0x7, %rbx
ffffffff8001b558: 49 c1 ec 06          	shrq	$0x6, %r12
ffffffff8001b55c: 49 09 dc             	orq	%rbx, %r12
ffffffff8001b55f: 4d 21 c4             	andq	%r8, %r12
ffffffff8001b562: 4d 8b 6e 10          	movq	0x10(%r14), %r13
ffffffff8001b566: 4c 89 eb             	movq	%r13, %rbx
ffffffff8001b569: 48 f7 d3             	notq	%rbx
ffffffff8001b56c: 48 c1 eb 07          	shrq	$0x7, %rbx
ffffffff8001b570: 49 c1 ed 06          	shrq	$0x6, %r13
ffffffff8001b574: 49 09 dd             	orq	%rbx, %r13
ffffffff8001b577: 4d 21 c5             	andq	%r8, %r13
ffffffff8001b57a: 4d 01 e5             	addq	%r12, %r13
ffffffff8001b57d: 4d 01 fd             	addq	%r15, %r13
ffffffff8001b580: 49 8b 5e 18          	movq	0x18(%r14), %rbx
ffffffff8001b584: 49 89 df             	movq	%rbx, %r15
ffffffff8001b587: 49 f7 d7             	notq	%r15
ffffffff8001b58a: 49 c1 ef 07          	shrq	$0x7, %r15
ffffffff8001b58e: 48 c1 eb 06          	shrq	$0x6, %rbx
ffffffff8001b592: 4c 09 fb             	orq	%r15, %rbx
ffffffff8001b595: 4c 21 c3             	andq	%r8, %rbx
ffffffff8001b598: 4c 01 eb             	addq	%r13, %rbx
ffffffff8001b59b: 49 83 c6 20          	addq	$0x20, %r14
ffffffff8001b59f: 4d 39 de             	cmpq	%r11, %r14
ffffffff8001b5a2: 75 8c                	jne	0xffffffff8001b530 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x2a0>
ffffffff8001b5a4: e9 19 ff ff ff       	jmp	0xffffffff8001b4c2 <core::str::count::do_count_chars::h06cfda6302d02fdc+0x232>
ffffffff8001b5a9: 41 81 e2 fc 00 00 00 	andl	$0xfc, %r10d
ffffffff8001b5b0: 44 89 d1             	movl	%r10d, %ecx
ffffffff8001b5b3: 49 8b 0c c9          	movq	(%r9,%rcx,8), %rcx
ffffffff8001b5b7: 48 89 cf             	movq	%rcx, %rdi
ffffffff8001b5ba: 48 f7 d7             	notq	%rdi
ffffffff8001b5bd: 48 c1 ef 07          	shrq	$0x7, %rdi
ffffffff8001b5c1: 48 c1 e9 06          	shrq	$0x6, %rcx
ffffffff8001b5c5: 48 09 f9             	orq	%rdi, %rcx
ffffffff8001b5c8: 4c 21 c1             	andq	%r8, %rcx
ffffffff8001b5cb: 41 83 fb 01          	cmpl	$0x1, %r11d
ffffffff8001b5cf: 74 3e                	je	0xffffffff8001b60f <core::str::count::do_count_chars::h06cfda6302d02fdc+0x37f>
ffffffff8001b5d1: 4b 8b 7c d1 08       	movq	0x8(%r9,%r10,8), %rdi
ffffffff8001b5d6: 48 89 fb             	movq	%rdi, %rbx
ffffffff8001b5d9: 48 f7 d3             	notq	%rbx
ffffffff8001b5dc: 48 c1 eb 07          	shrq	$0x7, %rbx
ffffffff8001b5e0: 48 c1 ef 06          	shrq	$0x6, %rdi
ffffffff8001b5e4: 48 09 df             	orq	%rbx, %rdi
ffffffff8001b5e7: 4c 21 c7             	andq	%r8, %rdi
ffffffff8001b5ea: 48 01 f9             	addq	%rdi, %rcx
ffffffff8001b5ed: 41 83 fb 02          	cmpl	$0x2, %r11d
ffffffff8001b5f1: 74 1c                	je	0xffffffff8001b60f <core::str::count::do_count_chars::h06cfda6302d02fdc+0x37f>
ffffffff8001b5f3: 4b 8b 7c d1 10       	movq	0x10(%r9,%r10,8), %rdi
ffffffff8001b5f8: 49 89 f9             	movq	%rdi, %r9
ffffffff8001b5fb: 49 f7 d1             	notq	%r9
ffffffff8001b5fe: 49 c1 e9 07          	shrq	$0x7, %r9
ffffffff8001b602: 48 c1 ef 06          	shrq	$0x6, %rdi
ffffffff8001b606: 4c 09 cf             	orq	%r9, %rdi
ffffffff8001b609: 4c 21 c7             	andq	%r8, %rdi
ffffffff8001b60c: 48 01 f9             	addq	%rdi, %rcx
ffffffff8001b60f: 48 89 cf             	movq	%rcx, %rdi
ffffffff8001b612: 48 21 f7             	andq	%rsi, %rdi
ffffffff8001b615: 48 c1 e9 08          	shrq	$0x8, %rcx
ffffffff8001b619: 48 21 f1             	andq	%rsi, %rcx
ffffffff8001b61c: 48 01 f9             	addq	%rdi, %rcx
ffffffff8001b61f: 48 0f af ca          	imulq	%rdx, %rcx
ffffffff8001b623: 48 c1 e9 30          	shrq	$0x30, %rcx
ffffffff8001b627: 48 01 c8             	addq	%rcx, %rax
ffffffff8001b62a: 5b                   	popq	%rbx
ffffffff8001b62b: 41 5c                	popq	%r12
ffffffff8001b62d: 41 5d                	popq	%r13
ffffffff8001b62f: 41 5e                	popq	%r14
ffffffff8001b631: 41 5f                	popq	%r15
ffffffff8001b633: c3                   	retq
ffffffff8001b634: cc                   	int3
ffffffff8001b635: cc                   	int3
ffffffff8001b636: cc                   	int3
ffffffff8001b637: cc                   	int3
ffffffff8001b638: cc                   	int3
ffffffff8001b639: cc                   	int3
ffffffff8001b63a: cc                   	int3
ffffffff8001b63b: cc                   	int3
ffffffff8001b63c: cc                   	int3
ffffffff8001b63d: cc                   	int3
ffffffff8001b63e: cc                   	int3
ffffffff8001b63f: cc                   	int3

ffffffff8001b640 <core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt::h2a0afb799489a89b>:
ffffffff8001b640: 50                   	pushq	%rax
ffffffff8001b641: 0f b6 07             	movzbl	(%rdi), %eax
ffffffff8001b644: 48 83 f8 64          	cmpq	$0x64, %rax
ffffffff8001b648: 72 28                	jb	0xffffffff8001b672 <core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt::h2a0afb799489a89b+0x32>
ffffffff8001b64a: 0f b6 c8             	movzbl	%al, %ecx
ffffffff8001b64d: 8d 14 89             	leal	(%rcx,%rcx,4), %edx
ffffffff8001b650: 8d 0c d1             	leal	(%rcx,%rdx,8), %ecx
ffffffff8001b653: c1 e9 0c             	shrl	$0xc, %ecx
ffffffff8001b656: 6b d1 64             	imull	$0x64, %ecx, %edx
ffffffff8001b659: 28 d0                	subb	%dl, %al
ffffffff8001b65b: 0f b6 c0             	movzbl	%al, %eax
ffffffff8001b65e: 0f b7 84 00 7a 3c 02 80      	movzwl	-0x7ffdc386(%rax,%rax), %eax
ffffffff8001b666: 66 89 44 24 06       	movw	%ax, 0x6(%rsp)
ffffffff8001b66b: 45 31 c9             	xorl	%r9d, %r9d
ffffffff8001b66e: 89 c8                	movl	%ecx, %eax
ffffffff8001b670: eb 0a                	jmp	0xffffffff8001b67c <core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt::h2a0afb799489a89b+0x3c>
ffffffff8001b672: 41 b9 02 00 00 00    	movl	$0x2, %r9d
ffffffff8001b678: 3c 0a                	cmpb	$0xa, %al
ffffffff8001b67a: 73 09                	jae	0xffffffff8001b685 <core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt::h2a0afb799489a89b+0x45>
ffffffff8001b67c: 0c 30                	orb	$0x30, %al
ffffffff8001b67e: 42 88 44 0c 05       	movb	%al, 0x5(%rsp,%r9)
ffffffff8001b683: eb 13                	jmp	0xffffffff8001b698 <core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt::h2a0afb799489a89b+0x58>
ffffffff8001b685: 0f b7 84 00 7a 3c 02 80      	movzwl	-0x7ffdc386(%rax,%rax), %eax
ffffffff8001b68d: 66 89 44 24 06       	movw	%ax, 0x6(%rsp)
ffffffff8001b692: 41 b9 01 00 00 00    	movl	$0x1, %r9d
ffffffff8001b698: 4e 8d 04 0c          	leaq	(%rsp,%r9), %r8
ffffffff8001b69c: 49 83 c0 05          	addq	$0x5, %r8
ffffffff8001b6a0: 49 83 f1 03          	xorq	$0x3, %r9
ffffffff8001b6a4: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff8001b6a9: 48 89 f7             	movq	%rsi, %rdi
ffffffff8001b6ac: be 01 00 00 00       	movl	$0x1, %esi
ffffffff8001b6b1: 31 c9                	xorl	%ecx, %ecx
ffffffff8001b6b3: e8 e8 e1 ff ff       	callq	0xffffffff800198a0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb>
ffffffff8001b6b8: 59                   	popq	%rcx
ffffffff8001b6b9: c3                   	retq
ffffffff8001b6ba: cc                   	int3
ffffffff8001b6bb: cc                   	int3
ffffffff8001b6bc: cc                   	int3
ffffffff8001b6bd: cc                   	int3
ffffffff8001b6be: cc                   	int3
ffffffff8001b6bf: cc                   	int3

ffffffff8001b6c0 <core::fmt::num::imp::<impl core::fmt::Display for u16>::fmt::hd79ce5bcb02fb002>:
ffffffff8001b6c0: 50                   	pushq	%rax
ffffffff8001b6c1: 0f b7 07             	movzwl	(%rdi), %eax
ffffffff8001b6c4: 3d 10 27 00 00       	cmpl	$0x2710, %eax           # imm = 0x2710
ffffffff8001b6c9: 72 51                	jb	0xffffffff8001b71c <core::fmt::num::imp::<impl core::fmt::Display for u16>::fmt::hd79ce5bcb02fb002+0x5c>
ffffffff8001b6cb: 0f b7 c8             	movzwl	%ax, %ecx
ffffffff8001b6ce: c1 e9 04             	shrl	$0x4, %ecx
ffffffff8001b6d1: 69 d1 47 03 00 00    	imull	$0x347, %ecx, %edx      # imm = 0x347
ffffffff8001b6d7: c1 ea 13             	shrl	$0x13, %edx
ffffffff8001b6da: 69 ca 10 27 00 00    	imull	$0x2710, %edx, %ecx     # imm = 0x2710
ffffffff8001b6e0: 29 c8                	subl	%ecx, %eax
ffffffff8001b6e2: 0f b7 c8             	movzwl	%ax, %ecx
ffffffff8001b6e5: c1 e9 02             	shrl	$0x2, %ecx
ffffffff8001b6e8: 69 c9 7b 14 00 00    	imull	$0x147b, %ecx, %ecx     # imm = 0x147B
ffffffff8001b6ee: c1 e9 11             	shrl	$0x11, %ecx
ffffffff8001b6f1: 6b f9 64             	imull	$0x64, %ecx, %edi
ffffffff8001b6f4: 29 f8                	subl	%edi, %eax
ffffffff8001b6f6: 0f b7 c0             	movzwl	%ax, %eax
ffffffff8001b6f9: 0f b7 8c 09 7a 3c 02 80      	movzwl	-0x7ffdc386(%rcx,%rcx), %ecx
ffffffff8001b701: 66 89 4c 24 04       	movw	%cx, 0x4(%rsp)
ffffffff8001b706: 0f b7 84 00 7a 3c 02 80      	movzwl	-0x7ffdc386(%rax,%rax), %eax
ffffffff8001b70e: 66 89 44 24 06       	movw	%ax, 0x6(%rsp)
ffffffff8001b713: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff8001b718: 89 d0                	movl	%edx, %eax
ffffffff8001b71a: eb 3c                	jmp	0xffffffff8001b758 <core::fmt::num::imp::<impl core::fmt::Display for u16>::fmt::hd79ce5bcb02fb002+0x98>
ffffffff8001b71c: b9 05 00 00 00       	movl	$0x5, %ecx
ffffffff8001b721: 66 83 f8 64          	cmpw	$0x64, %ax
ffffffff8001b725: 72 2b                	jb	0xffffffff8001b752 <core::fmt::num::imp::<impl core::fmt::Display for u16>::fmt::hd79ce5bcb02fb002+0x92>
ffffffff8001b727: 0f b7 c8             	movzwl	%ax, %ecx
ffffffff8001b72a: c1 e9 02             	shrl	$0x2, %ecx
ffffffff8001b72d: 69 d1 7b 14 00 00    	imull	$0x147b, %ecx, %edx     # imm = 0x147B
ffffffff8001b733: c1 ea 11             	shrl	$0x11, %edx
ffffffff8001b736: 6b ca 64             	imull	$0x64, %edx, %ecx
ffffffff8001b739: 29 c8                	subl	%ecx, %eax
ffffffff8001b73b: 0f b7 c0             	movzwl	%ax, %eax
ffffffff8001b73e: 0f b7 84 00 7a 3c 02 80      	movzwl	-0x7ffdc386(%rax,%rax), %eax
ffffffff8001b746: 66 89 44 24 06       	movw	%ax, 0x6(%rsp)
ffffffff8001b74b: b9 03 00 00 00       	movl	$0x3, %ecx
ffffffff8001b750: 89 d0                	movl	%edx, %eax
ffffffff8001b752: 66 83 f8 0a          	cmpw	$0xa, %ax
ffffffff8001b756: 73 0b                	jae	0xffffffff8001b763 <core::fmt::num::imp::<impl core::fmt::Display for u16>::fmt::hd79ce5bcb02fb002+0xa3>
ffffffff8001b758: 0c 30                	orb	$0x30, %al
ffffffff8001b75a: 88 44 0c 02          	movb	%al, 0x2(%rsp,%rcx)
ffffffff8001b75e: 48 ff c9             	decq	%rcx
ffffffff8001b761: eb 14                	jmp	0xffffffff8001b777 <core::fmt::num::imp::<impl core::fmt::Display for u16>::fmt::hd79ce5bcb02fb002+0xb7>
ffffffff8001b763: 0f b7 c0             	movzwl	%ax, %eax
ffffffff8001b766: 0f b7 84 00 7a 3c 02 80      	movzwl	-0x7ffdc386(%rax,%rax), %eax
ffffffff8001b76e: 66 89 44 0c 01       	movw	%ax, 0x1(%rsp,%rcx)
ffffffff8001b773: 48 83 c1 fe          	addq	$-0x2, %rcx
ffffffff8001b777: 4c 8d 04 0c          	leaq	(%rsp,%rcx), %r8
ffffffff8001b77b: 49 83 c0 03          	addq	$0x3, %r8
ffffffff8001b77f: 41 b9 05 00 00 00    	movl	$0x5, %r9d
ffffffff8001b785: 49 29 c9             	subq	%rcx, %r9
ffffffff8001b788: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff8001b78d: 48 89 f7             	movq	%rsi, %rdi
ffffffff8001b790: be 01 00 00 00       	movl	$0x1, %esi
ffffffff8001b795: 31 c9                	xorl	%ecx, %ecx
ffffffff8001b797: e8 04 e1 ff ff       	callq	0xffffffff800198a0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb>
ffffffff8001b79c: 59                   	popq	%rcx
ffffffff8001b79d: c3                   	retq
ffffffff8001b79e: cc                   	int3
ffffffff8001b79f: cc                   	int3

ffffffff8001b7a0 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hce0e89df109fd7be>:
ffffffff8001b7a0: 48 83 ec 18          	subq	$0x18, %rsp
ffffffff8001b7a4: 8b 0f                	movl	(%rdi), %ecx
ffffffff8001b7a6: b8 0a 00 00 00       	movl	$0xa, %eax
ffffffff8001b7ab: 81 f9 10 27 00 00    	cmpl	$0x2710, %ecx           # imm = 0x2710
ffffffff8001b7b1: 0f 82 b7 00 00 00    	jb	0xffffffff8001b86e <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hce0e89df109fd7be+0xce>
ffffffff8001b7b7: 41 b8 0a 00 00 00    	movl	$0xa, %r8d
ffffffff8001b7bd: ba 59 17 b7 d1       	movl	$0xd1b71759, %edx       # imm = 0xD1B71759
ffffffff8001b7c2: 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    	nopw	%cs:(%rax,%rax)
ffffffff8001b7d0: 89 cf                	movl	%ecx, %edi
ffffffff8001b7d2: 48 0f af fa          	imulq	%rdx, %rdi
ffffffff8001b7d6: 48 c1 ef 2d          	shrq	$0x2d, %rdi
ffffffff8001b7da: 69 c7 10 27 00 00    	imull	$0x2710, %edi, %eax     # imm = 0x2710
ffffffff8001b7e0: 41 89 c9             	movl	%ecx, %r9d
ffffffff8001b7e3: 41 29 c1             	subl	%eax, %r9d
ffffffff8001b7e6: 45 69 d1 7b 14 00 00 	imull	$0x147b, %r9d, %r10d    # imm = 0x147B
ffffffff8001b7ed: 41 c1 ea 13          	shrl	$0x13, %r10d
ffffffff8001b7f1: 41 6b c2 64          	imull	$0x64, %r10d, %eax
ffffffff8001b7f5: 41 29 c1             	subl	%eax, %r9d
ffffffff8001b7f8: 45 0f b7 c9          	movzwl	%r9w, %r9d
ffffffff8001b7fc: 49 8d 40 fc          	leaq	-0x4(%r8), %rax
ffffffff8001b800: 47 0f b7 94 12 7a 3c 02 80   	movzwl	-0x7ffdc386(%r10,%r10), %r10d
ffffffff8001b809: 66 46 89 54 04 0a    	movw	%r10w, 0xa(%rsp,%r8)
ffffffff8001b80f: 47 0f b7 8c 09 7a 3c 02 80   	movzwl	-0x7ffdc386(%r9,%r9), %r9d
ffffffff8001b818: 66 46 89 4c 04 0c    	movw	%r9w, 0xc(%rsp,%r8)
ffffffff8001b81e: 49 89 c0             	movq	%rax, %r8
ffffffff8001b821: 81 f9 ff e0 f5 05    	cmpl	$0x5f5e0ff, %ecx        # imm = 0x5F5E0FF
ffffffff8001b827: 89 f9                	movl	%edi, %ecx
ffffffff8001b829: 77 a5                	ja	0xffffffff8001b7d0 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hce0e89df109fd7be+0x30>
ffffffff8001b82b: 89 f9                	movl	%edi, %ecx
ffffffff8001b82d: 83 ff 63             	cmpl	$0x63, %edi
ffffffff8001b830: 76 2b                	jbe	0xffffffff8001b85d <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hce0e89df109fd7be+0xbd>
ffffffff8001b832: 0f b7 d1             	movzwl	%cx, %edx
ffffffff8001b835: c1 ea 02             	shrl	$0x2, %edx
ffffffff8001b838: 69 d2 7b 14 00 00    	imull	$0x147b, %edx, %edx     # imm = 0x147B
ffffffff8001b83e: c1 ea 11             	shrl	$0x11, %edx
ffffffff8001b841: 6b fa 64             	imull	$0x64, %edx, %edi
ffffffff8001b844: 29 f9                	subl	%edi, %ecx
ffffffff8001b846: 0f b7 c9             	movzwl	%cx, %ecx
ffffffff8001b849: 0f b7 8c 09 7a 3c 02 80      	movzwl	-0x7ffdc386(%rcx,%rcx), %ecx
ffffffff8001b851: 66 89 4c 04 0c       	movw	%cx, 0xc(%rsp,%rax)
ffffffff8001b856: 48 83 c0 fe          	addq	$-0x2, %rax
ffffffff8001b85a: 48 89 d1             	movq	%rdx, %rcx
ffffffff8001b85d: 83 f9 0a             	cmpl	$0xa, %ecx
ffffffff8001b860: 73 17                	jae	0xffffffff8001b879 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hce0e89df109fd7be+0xd9>
ffffffff8001b862: 80 c9 30             	orb	$0x30, %cl
ffffffff8001b865: 88 4c 04 0d          	movb	%cl, 0xd(%rsp,%rax)
ffffffff8001b869: 48 ff c8             	decq	%rax
ffffffff8001b86c: eb 1c                	jmp	0xffffffff8001b88a <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hce0e89df109fd7be+0xea>
ffffffff8001b86e: 89 cf                	movl	%ecx, %edi
ffffffff8001b870: 89 f9                	movl	%edi, %ecx
ffffffff8001b872: 83 ff 63             	cmpl	$0x63, %edi
ffffffff8001b875: 77 bb                	ja	0xffffffff8001b832 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hce0e89df109fd7be+0x92>
ffffffff8001b877: eb e4                	jmp	0xffffffff8001b85d <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hce0e89df109fd7be+0xbd>
ffffffff8001b879: 0f b7 8c 09 7a 3c 02 80      	movzwl	-0x7ffdc386(%rcx,%rcx), %ecx
ffffffff8001b881: 66 89 4c 04 0c       	movw	%cx, 0xc(%rsp,%rax)
ffffffff8001b886: 48 83 c0 fe          	addq	$-0x2, %rax
ffffffff8001b88a: 4c 8d 04 04          	leaq	(%rsp,%rax), %r8
ffffffff8001b88e: 49 83 c0 0e          	addq	$0xe, %r8
ffffffff8001b892: 41 b9 0a 00 00 00    	movl	$0xa, %r9d
ffffffff8001b898: 49 29 c1             	subq	%rax, %r9
ffffffff8001b89b: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff8001b8a0: 48 89 f7             	movq	%rsi, %rdi
ffffffff8001b8a3: be 01 00 00 00       	movl	$0x1, %esi
ffffffff8001b8a8: 31 c9                	xorl	%ecx, %ecx
ffffffff8001b8aa: e8 f1 df ff ff       	callq	0xffffffff800198a0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb>
ffffffff8001b8af: 48 83 c4 18          	addq	$0x18, %rsp
ffffffff8001b8b3: c3                   	retq
ffffffff8001b8b4: cc                   	int3
ffffffff8001b8b5: cc                   	int3
ffffffff8001b8b6: cc                   	int3
ffffffff8001b8b7: cc                   	int3
ffffffff8001b8b8: cc                   	int3
ffffffff8001b8b9: cc                   	int3
ffffffff8001b8ba: cc                   	int3
ffffffff8001b8bb: cc                   	int3
ffffffff8001b8bc: cc                   	int3
ffffffff8001b8bd: cc                   	int3
ffffffff8001b8be: cc                   	int3
ffffffff8001b8bf: cc                   	int3

ffffffff8001b8c0 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f>:
ffffffff8001b8c0: 48 83 ec 18          	subq	$0x18, %rsp
ffffffff8001b8c4: 48 8b 0f             	movq	(%rdi), %rcx
ffffffff8001b8c7: b8 14 00 00 00       	movl	$0x14, %eax
ffffffff8001b8cc: 48 81 f9 10 27 00 00 	cmpq	$0x2710, %rcx           # imm = 0x2710
ffffffff8001b8d3: 0f 82 b6 00 00 00    	jb	0xffffffff8001b98f <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f+0xcf>
ffffffff8001b8d9: 41 b8 14 00 00 00    	movl	$0x14, %r8d
ffffffff8001b8df: 48 bf 4b 59 86 38 d6 c5 6d 34	movabsq	$0x346dc5d63886594b, %rdi # imm = 0x346DC5D63886594B
ffffffff8001b8e9: 0f 1f 80 00 00 00 00 	nopl	(%rax)
ffffffff8001b8f0: 48 89 c8             	movq	%rcx, %rax
ffffffff8001b8f3: 48 f7 e7             	mulq	%rdi
ffffffff8001b8f6: 48 c1 ea 0b          	shrq	$0xb, %rdx
ffffffff8001b8fa: 69 c2 10 27 00 00    	imull	$0x2710, %edx, %eax     # imm = 0x2710
ffffffff8001b900: 41 89 c9             	movl	%ecx, %r9d
ffffffff8001b903: 41 29 c1             	subl	%eax, %r9d
ffffffff8001b906: 45 69 d1 7b 14 00 00 	imull	$0x147b, %r9d, %r10d    # imm = 0x147B
ffffffff8001b90d: 41 c1 ea 13          	shrl	$0x13, %r10d
ffffffff8001b911: 41 6b c2 64          	imull	$0x64, %r10d, %eax
ffffffff8001b915: 41 29 c1             	subl	%eax, %r9d
ffffffff8001b918: 45 0f b7 c9          	movzwl	%r9w, %r9d
ffffffff8001b91c: 49 8d 40 fc          	leaq	-0x4(%r8), %rax
ffffffff8001b920: 47 0f b7 94 12 7a 3c 02 80   	movzwl	-0x7ffdc386(%r10,%r10), %r10d
ffffffff8001b929: 66 46 89 14 04       	movw	%r10w, (%rsp,%r8)
ffffffff8001b92e: 47 0f b7 8c 09 7a 3c 02 80   	movzwl	-0x7ffdc386(%r9,%r9), %r9d
ffffffff8001b937: 66 46 89 4c 04 02    	movw	%r9w, 0x2(%rsp,%r8)
ffffffff8001b93d: 49 89 c0             	movq	%rax, %r8
ffffffff8001b940: 48 81 f9 ff e0 f5 05 	cmpq	$0x5f5e0ff, %rcx        # imm = 0x5F5E0FF
ffffffff8001b947: 48 89 d1             	movq	%rdx, %rcx
ffffffff8001b94a: 77 a4                	ja	0xffffffff8001b8f0 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f+0x30>
ffffffff8001b94c: 48 83 fa 63          	cmpq	$0x63, %rdx
ffffffff8001b950: 76 2b                	jbe	0xffffffff8001b97d <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f+0xbd>
ffffffff8001b952: 0f b7 ca             	movzwl	%dx, %ecx
ffffffff8001b955: c1 e9 02             	shrl	$0x2, %ecx
ffffffff8001b958: 69 c9 7b 14 00 00    	imull	$0x147b, %ecx, %ecx     # imm = 0x147B
ffffffff8001b95e: c1 e9 11             	shrl	$0x11, %ecx
ffffffff8001b961: 6b f9 64             	imull	$0x64, %ecx, %edi
ffffffff8001b964: 29 fa                	subl	%edi, %edx
ffffffff8001b966: 0f b7 d2             	movzwl	%dx, %edx
ffffffff8001b969: 0f b7 94 12 7a 3c 02 80      	movzwl	-0x7ffdc386(%rdx,%rdx), %edx
ffffffff8001b971: 66 89 54 04 02       	movw	%dx, 0x2(%rsp,%rax)
ffffffff8001b976: 48 83 c0 fe          	addq	$-0x2, %rax
ffffffff8001b97a: 48 89 ca             	movq	%rcx, %rdx
ffffffff8001b97d: 48 83 fa 0a          	cmpq	$0xa, %rdx
ffffffff8001b981: 73 17                	jae	0xffffffff8001b99a <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f+0xda>
ffffffff8001b983: 80 ca 30             	orb	$0x30, %dl
ffffffff8001b986: 88 54 04 03          	movb	%dl, 0x3(%rsp,%rax)
ffffffff8001b98a: 48 ff c8             	decq	%rax
ffffffff8001b98d: eb 1c                	jmp	0xffffffff8001b9ab <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f+0xeb>
ffffffff8001b98f: 48 89 ca             	movq	%rcx, %rdx
ffffffff8001b992: 48 83 fa 63          	cmpq	$0x63, %rdx
ffffffff8001b996: 77 ba                	ja	0xffffffff8001b952 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f+0x92>
ffffffff8001b998: eb e3                	jmp	0xffffffff8001b97d <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h9a3ce72334ef570f+0xbd>
ffffffff8001b99a: 0f b7 8c 12 7a 3c 02 80      	movzwl	-0x7ffdc386(%rdx,%rdx), %ecx
ffffffff8001b9a2: 66 89 4c 04 02       	movw	%cx, 0x2(%rsp,%rax)
ffffffff8001b9a7: 48 83 c0 fe          	addq	$-0x2, %rax
ffffffff8001b9ab: 4c 8d 04 04          	leaq	(%rsp,%rax), %r8
ffffffff8001b9af: 49 83 c0 04          	addq	$0x4, %r8
ffffffff8001b9b3: 41 b9 14 00 00 00    	movl	$0x14, %r9d
ffffffff8001b9b9: 49 29 c1             	subq	%rax, %r9
ffffffff8001b9bc: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff8001b9c1: 48 89 f7             	movq	%rsi, %rdi
ffffffff8001b9c4: be 01 00 00 00       	movl	$0x1, %esi
ffffffff8001b9c9: 31 c9                	xorl	%ecx, %ecx
ffffffff8001b9cb: e8 d0 de ff ff       	callq	0xffffffff800198a0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb>
ffffffff8001b9d0: 48 83 c4 18          	addq	$0x18, %rsp
ffffffff8001b9d4: c3                   	retq
ffffffff8001b9d5: cc                   	int3
ffffffff8001b9d6: cc                   	int3
ffffffff8001b9d7: cc                   	int3
ffffffff8001b9d8: cc                   	int3
ffffffff8001b9d9: cc                   	int3
ffffffff8001b9da: cc                   	int3
ffffffff8001b9db: cc                   	int3
ffffffff8001b9dc: cc                   	int3
ffffffff8001b9dd: cc                   	int3
ffffffff8001b9de: cc                   	int3
ffffffff8001b9df: cc                   	int3

ffffffff8001b9e0 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d>:
ffffffff8001b9e0: 41 56                	pushq	%r14
ffffffff8001b9e2: 53                   	pushq	%rbx
ffffffff8001b9e3: 48 81 ec 88 00 00 00 	subq	$0x88, %rsp
ffffffff8001b9ea: 48 89 f3             	movq	%rsi, %rbx
ffffffff8001b9ed: 49 89 fe             	movq	%rdi, %r14
ffffffff8001b9f0: 8b 46 24             	movl	0x24(%rsi), %eax
ffffffff8001b9f3: a8 10                	testb	$0x10, %al
ffffffff8001b9f5: 0f 85 dc 00 00 00    	jne	0xffffffff8001bad7 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0xf7>
ffffffff8001b9fb: a8 20                	testb	$0x20, %al
ffffffff8001b9fd: 0f 85 10 01 00 00    	jne	0xffffffff8001bb13 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x133>
ffffffff8001ba03: 49 8b 0e             	movq	(%r14), %rcx
ffffffff8001ba06: b8 14 00 00 00       	movl	$0x14, %eax
ffffffff8001ba0b: 48 81 f9 10 27 00 00 	cmpq	$0x2710, %rcx           # imm = 0x2710
ffffffff8001ba12: 0f 82 5d 01 00 00    	jb	0xffffffff8001bb75 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x195>
ffffffff8001ba18: bf 14 00 00 00       	movl	$0x14, %edi
ffffffff8001ba1d: 48 be 4b 59 86 38 d6 c5 6d 34	movabsq	$0x346dc5d63886594b, %rsi # imm = 0x346DC5D63886594B
ffffffff8001ba27: 66 0f 1f 84 00 00 00 00 00   	nopw	(%rax,%rax)
ffffffff8001ba30: 48 89 c8             	movq	%rcx, %rax
ffffffff8001ba33: 48 f7 e6             	mulq	%rsi
ffffffff8001ba36: 48 c1 ea 0b          	shrq	$0xb, %rdx
ffffffff8001ba3a: 69 c2 10 27 00 00    	imull	$0x2710, %edx, %eax     # imm = 0x2710
ffffffff8001ba40: 41 89 c8             	movl	%ecx, %r8d
ffffffff8001ba43: 41 29 c0             	subl	%eax, %r8d
ffffffff8001ba46: 45 69 c8 7b 14 00 00 	imull	$0x147b, %r8d, %r9d     # imm = 0x147B
ffffffff8001ba4d: 41 c1 e9 13          	shrl	$0x13, %r9d
ffffffff8001ba51: 41 6b c1 64          	imull	$0x64, %r9d, %eax
ffffffff8001ba55: 41 29 c0             	subl	%eax, %r8d
ffffffff8001ba58: 45 0f b7 c0          	movzwl	%r8w, %r8d
ffffffff8001ba5c: 48 8d 47 fc          	leaq	-0x4(%rdi), %rax
ffffffff8001ba60: 47 0f b7 8c 09 7a 3c 02 80   	movzwl	-0x7ffdc386(%r9,%r9), %r9d
ffffffff8001ba69: 66 44 89 4c 3c 04    	movw	%r9w, 0x4(%rsp,%rdi)
ffffffff8001ba6f: 47 0f b7 84 00 7a 3c 02 80   	movzwl	-0x7ffdc386(%r8,%r8), %r8d
ffffffff8001ba78: 66 44 89 44 3c 06    	movw	%r8w, 0x6(%rsp,%rdi)
ffffffff8001ba7e: 48 89 c7             	movq	%rax, %rdi
ffffffff8001ba81: 48 81 f9 ff e0 f5 05 	cmpq	$0x5f5e0ff, %rcx        # imm = 0x5F5E0FF
ffffffff8001ba88: 48 89 d1             	movq	%rdx, %rcx
ffffffff8001ba8b: 77 a3                	ja	0xffffffff8001ba30 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x50>
ffffffff8001ba8d: 48 83 fa 63          	cmpq	$0x63, %rdx
ffffffff8001ba91: 76 2b                	jbe	0xffffffff8001babe <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0xde>
ffffffff8001ba93: 0f b7 ca             	movzwl	%dx, %ecx
ffffffff8001ba96: c1 e9 02             	shrl	$0x2, %ecx
ffffffff8001ba99: 69 c9 7b 14 00 00    	imull	$0x147b, %ecx, %ecx     # imm = 0x147B
ffffffff8001ba9f: c1 e9 11             	shrl	$0x11, %ecx
ffffffff8001baa2: 6b f1 64             	imull	$0x64, %ecx, %esi
ffffffff8001baa5: 29 f2                	subl	%esi, %edx
ffffffff8001baa7: 0f b7 d2             	movzwl	%dx, %edx
ffffffff8001baaa: 0f b7 94 12 7a 3c 02 80      	movzwl	-0x7ffdc386(%rdx,%rdx), %edx
ffffffff8001bab2: 66 89 54 04 06       	movw	%dx, 0x6(%rsp,%rax)
ffffffff8001bab7: 48 83 c0 fe          	addq	$-0x2, %rax
ffffffff8001babb: 48 89 ca             	movq	%rcx, %rdx
ffffffff8001babe: 48 83 fa 0a          	cmpq	$0xa, %rdx
ffffffff8001bac2: 0f 83 bf 00 00 00    	jae	0xffffffff8001bb87 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x1a7>
ffffffff8001bac8: 80 ca 30             	orb	$0x30, %dl
ffffffff8001bacb: 88 54 04 07          	movb	%dl, 0x7(%rsp,%rax)
ffffffff8001bacf: 48 ff c8             	decq	%rax
ffffffff8001bad2: e9 c1 00 00 00       	jmp	0xffffffff8001bb98 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x1b8>
ffffffff8001bad7: 49 8b 06             	movq	(%r14), %rax
ffffffff8001bada: 45 31 c9             	xorl	%r9d, %r9d
ffffffff8001badd: 48 89 c1             	movq	%rax, %rcx
ffffffff8001bae0: 48 c1 e9 04          	shrq	$0x4, %rcx
ffffffff8001bae4: 89 c2                	movl	%eax, %edx
ffffffff8001bae6: 80 e2 0f             	andb	$0xf, %dl
ffffffff8001bae9: 8d 72 30             	leal	0x30(%rdx), %esi
ffffffff8001baec: 8d 7a 57             	leal	0x57(%rdx), %edi
ffffffff8001baef: 80 fa 0a             	cmpb	$0xa, %dl
ffffffff8001baf2: 40 0f b6 d6          	movzbl	%sil, %edx
ffffffff8001baf6: 40 0f b6 f7          	movzbl	%dil, %esi
ffffffff8001bafa: 0f 42 f2             	cmovbl	%edx, %esi
ffffffff8001bafd: 42 88 b4 0c 87 00 00 00      	movb	%sil, 0x87(%rsp,%r9)
ffffffff8001bb05: 49 ff c9             	decq	%r9
ffffffff8001bb08: 48 83 f8 0f          	cmpq	$0xf, %rax
ffffffff8001bb0c: 48 89 c8             	movq	%rcx, %rax
ffffffff8001bb0f: 77 cf                	ja	0xffffffff8001bae0 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x100>
ffffffff8001bb11: eb 3e                	jmp	0xffffffff8001bb51 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x171>
ffffffff8001bb13: 49 8b 06             	movq	(%r14), %rax
ffffffff8001bb16: 45 31 c9             	xorl	%r9d, %r9d
ffffffff8001bb19: 48 89 c1             	movq	%rax, %rcx
ffffffff8001bb1c: 0f 1f 40 00          	nopl	(%rax)
ffffffff8001bb20: 48 c1 e9 04          	shrq	$0x4, %rcx
ffffffff8001bb24: 89 c2                	movl	%eax, %edx
ffffffff8001bb26: 80 e2 0f             	andb	$0xf, %dl
ffffffff8001bb29: 8d 72 30             	leal	0x30(%rdx), %esi
ffffffff8001bb2c: 8d 7a 37             	leal	0x37(%rdx), %edi
ffffffff8001bb2f: 80 fa 0a             	cmpb	$0xa, %dl
ffffffff8001bb32: 40 0f b6 d6          	movzbl	%sil, %edx
ffffffff8001bb36: 40 0f b6 f7          	movzbl	%dil, %esi
ffffffff8001bb3a: 0f 42 f2             	cmovbl	%edx, %esi
ffffffff8001bb3d: 42 88 b4 0c 87 00 00 00      	movb	%sil, 0x87(%rsp,%r9)
ffffffff8001bb45: 49 ff c9             	decq	%r9
ffffffff8001bb48: 48 83 f8 0f          	cmpq	$0xf, %rax
ffffffff8001bb4c: 48 89 c8             	movq	%rcx, %rax
ffffffff8001bb4f: 77 cf                	ja	0xffffffff8001bb20 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x140>
ffffffff8001bb51: 4e 8d 04 0c          	leaq	(%rsp,%r9), %r8
ffffffff8001bb55: 49 81 c0 88 00 00 00 	addq	$0x88, %r8
ffffffff8001bb5c: 49 f7 d9             	negq	%r9
ffffffff8001bb5f: b9 02 00 00 00       	movl	$0x2, %ecx
ffffffff8001bb64: 48 89 df             	movq	%rbx, %rdi
ffffffff8001bb67: be 01 00 00 00       	movl	$0x1, %esi
ffffffff8001bb6c: 48 c7 c2 78 3c 02 80 	movq	$-0x7ffdc388, %rdx      # imm = 0x80023C78
ffffffff8001bb73: eb 43                	jmp	0xffffffff8001bbb8 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x1d8>
ffffffff8001bb75: 48 89 ca             	movq	%rcx, %rdx
ffffffff8001bb78: 48 83 fa 63          	cmpq	$0x63, %rdx
ffffffff8001bb7c: 0f 87 11 ff ff ff    	ja	0xffffffff8001ba93 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0xb3>
ffffffff8001bb82: e9 37 ff ff ff       	jmp	0xffffffff8001babe <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0xde>
ffffffff8001bb87: 0f b7 8c 12 7a 3c 02 80      	movzwl	-0x7ffdc386(%rdx,%rdx), %ecx
ffffffff8001bb8f: 66 89 4c 04 06       	movw	%cx, 0x6(%rsp,%rax)
ffffffff8001bb94: 48 83 c0 fe          	addq	$-0x2, %rax
ffffffff8001bb98: 4c 8d 04 04          	leaq	(%rsp,%rax), %r8
ffffffff8001bb9c: 49 83 c0 08          	addq	$0x8, %r8
ffffffff8001bba0: 41 b9 14 00 00 00    	movl	$0x14, %r9d
ffffffff8001bba6: 49 29 c1             	subq	%rax, %r9
ffffffff8001bba9: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff8001bbae: 48 89 df             	movq	%rbx, %rdi
ffffffff8001bbb1: be 01 00 00 00       	movl	$0x1, %esi
ffffffff8001bbb6: 31 c9                	xorl	%ecx, %ecx
ffffffff8001bbb8: e8 e3 dc ff ff       	callq	0xffffffff800198a0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb>
ffffffff8001bbbd: 89 c1                	movl	%eax, %ecx
ffffffff8001bbbf: b0 01                	movb	$0x1, %al
ffffffff8001bbc1: 84 c9                	testb	%cl, %cl
ffffffff8001bbc3: 0f 85 e8 01 00 00    	jne	0xffffffff8001bdb1 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x3d1>
ffffffff8001bbc9: 48 8b 7b 30          	movq	0x30(%rbx), %rdi
ffffffff8001bbcd: 48 8b 43 38          	movq	0x38(%rbx), %rax
ffffffff8001bbd1: ba 02 00 00 00       	movl	$0x2, %edx
ffffffff8001bbd6: 48 c7 c6 38 46 02 80 	movq	$-0x7ffdb9c8, %rsi      # imm = 0x80024638
ffffffff8001bbdd: ff 50 18             	callq	*0x18(%rax)
ffffffff8001bbe0: 89 c1                	movl	%eax, %ecx
ffffffff8001bbe2: b0 01                	movb	$0x1, %al
ffffffff8001bbe4: 84 c9                	testb	%cl, %cl
ffffffff8001bbe6: 0f 85 c5 01 00 00    	jne	0xffffffff8001bdb1 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x3d1>
ffffffff8001bbec: 8b 43 24             	movl	0x24(%rbx), %eax
ffffffff8001bbef: a8 10                	testb	$0x10, %al
ffffffff8001bbf1: 0f 85 9b 00 00 00    	jne	0xffffffff8001bc92 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x2b2>
ffffffff8001bbf7: a8 20                	testb	$0x20, %al
ffffffff8001bbf9: 0f 85 d4 00 00 00    	jne	0xffffffff8001bcd3 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x2f3>
ffffffff8001bbff: 49 8b 4e 08          	movq	0x8(%r14), %rcx
ffffffff8001bc03: b8 14 00 00 00       	movl	$0x14, %eax
ffffffff8001bc08: 48 81 f9 10 27 00 00 	cmpq	$0x2710, %rcx           # imm = 0x2710
ffffffff8001bc0f: 0f 82 20 01 00 00    	jb	0xffffffff8001bd35 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x355>
ffffffff8001bc15: bf 14 00 00 00       	movl	$0x14, %edi
ffffffff8001bc1a: 48 be 4b 59 86 38 d6 c5 6d 34	movabsq	$0x346dc5d63886594b, %rsi # imm = 0x346DC5D63886594B
ffffffff8001bc24: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
ffffffff8001bc30: 48 89 c8             	movq	%rcx, %rax
ffffffff8001bc33: 48 f7 e6             	mulq	%rsi
ffffffff8001bc36: 48 c1 ea 0b          	shrq	$0xb, %rdx
ffffffff8001bc3a: 69 c2 10 27 00 00    	imull	$0x2710, %edx, %eax     # imm = 0x2710
ffffffff8001bc40: 41 89 c8             	movl	%ecx, %r8d
ffffffff8001bc43: 41 29 c0             	subl	%eax, %r8d
ffffffff8001bc46: 45 69 c8 7b 14 00 00 	imull	$0x147b, %r8d, %r9d     # imm = 0x147B
ffffffff8001bc4d: 41 c1 e9 13          	shrl	$0x13, %r9d
ffffffff8001bc51: 41 6b c1 64          	imull	$0x64, %r9d, %eax
ffffffff8001bc55: 41 29 c0             	subl	%eax, %r8d
ffffffff8001bc58: 45 0f b7 c0          	movzwl	%r8w, %r8d
ffffffff8001bc5c: 48 8d 47 fc          	leaq	-0x4(%rdi), %rax
ffffffff8001bc60: 47 0f b7 8c 09 7a 3c 02 80   	movzwl	-0x7ffdc386(%r9,%r9), %r9d
ffffffff8001bc69: 66 44 89 4c 3c 04    	movw	%r9w, 0x4(%rsp,%rdi)
ffffffff8001bc6f: 47 0f b7 84 00 7a 3c 02 80   	movzwl	-0x7ffdc386(%r8,%r8), %r8d
ffffffff8001bc78: 66 44 89 44 3c 06    	movw	%r8w, 0x6(%rsp,%rdi)
ffffffff8001bc7e: 48 89 c7             	movq	%rax, %rdi
ffffffff8001bc81: 48 81 f9 ff e0 f5 05 	cmpq	$0x5f5e0ff, %rcx        # imm = 0x5F5E0FF
ffffffff8001bc88: 48 89 d1             	movq	%rdx, %rcx
ffffffff8001bc8b: 77 a3                	ja	0xffffffff8001bc30 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x250>
ffffffff8001bc8d: e9 a6 00 00 00       	jmp	0xffffffff8001bd38 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x358>
ffffffff8001bc92: 49 8b 46 08          	movq	0x8(%r14), %rax
ffffffff8001bc96: 45 31 c9             	xorl	%r9d, %r9d
ffffffff8001bc99: 48 89 c1             	movq	%rax, %rcx
ffffffff8001bc9c: 0f 1f 40 00          	nopl	(%rax)
ffffffff8001bca0: 48 c1 e9 04          	shrq	$0x4, %rcx
ffffffff8001bca4: 89 c2                	movl	%eax, %edx
ffffffff8001bca6: 80 e2 0f             	andb	$0xf, %dl
ffffffff8001bca9: 8d 72 30             	leal	0x30(%rdx), %esi
ffffffff8001bcac: 8d 7a 57             	leal	0x57(%rdx), %edi
ffffffff8001bcaf: 80 fa 0a             	cmpb	$0xa, %dl
ffffffff8001bcb2: 40 0f b6 d6          	movzbl	%sil, %edx
ffffffff8001bcb6: 40 0f b6 f7          	movzbl	%dil, %esi
ffffffff8001bcba: 0f 42 f2             	cmovbl	%edx, %esi
ffffffff8001bcbd: 42 88 b4 0c 87 00 00 00      	movb	%sil, 0x87(%rsp,%r9)
ffffffff8001bcc5: 49 ff c9             	decq	%r9
ffffffff8001bcc8: 48 83 f8 0f          	cmpq	$0xf, %rax
ffffffff8001bccc: 48 89 c8             	movq	%rcx, %rax
ffffffff8001bccf: 77 cf                	ja	0xffffffff8001bca0 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x2c0>
ffffffff8001bcd1: eb 3e                	jmp	0xffffffff8001bd11 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x331>
ffffffff8001bcd3: 49 8b 46 08          	movq	0x8(%r14), %rax
ffffffff8001bcd7: 45 31 c9             	xorl	%r9d, %r9d
ffffffff8001bcda: 48 89 c1             	movq	%rax, %rcx
ffffffff8001bcdd: 0f 1f 00             	nopl	(%rax)
ffffffff8001bce0: 48 c1 e9 04          	shrq	$0x4, %rcx
ffffffff8001bce4: 89 c2                	movl	%eax, %edx
ffffffff8001bce6: 80 e2 0f             	andb	$0xf, %dl
ffffffff8001bce9: 8d 72 30             	leal	0x30(%rdx), %esi
ffffffff8001bcec: 8d 7a 37             	leal	0x37(%rdx), %edi
ffffffff8001bcef: 80 fa 0a             	cmpb	$0xa, %dl
ffffffff8001bcf2: 40 0f b6 d6          	movzbl	%sil, %edx
ffffffff8001bcf6: 40 0f b6 f7          	movzbl	%dil, %esi
ffffffff8001bcfa: 0f 42 f2             	cmovbl	%edx, %esi
ffffffff8001bcfd: 42 88 b4 0c 87 00 00 00      	movb	%sil, 0x87(%rsp,%r9)
ffffffff8001bd05: 49 ff c9             	decq	%r9
ffffffff8001bd08: 48 83 f8 0f          	cmpq	$0xf, %rax
ffffffff8001bd0c: 48 89 c8             	movq	%rcx, %rax
ffffffff8001bd0f: 77 cf                	ja	0xffffffff8001bce0 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x300>
ffffffff8001bd11: 4e 8d 04 0c          	leaq	(%rsp,%r9), %r8
ffffffff8001bd15: 49 81 c0 88 00 00 00 	addq	$0x88, %r8
ffffffff8001bd1c: 49 f7 d9             	negq	%r9
ffffffff8001bd1f: b9 02 00 00 00       	movl	$0x2, %ecx
ffffffff8001bd24: 48 89 df             	movq	%rbx, %rdi
ffffffff8001bd27: be 01 00 00 00       	movl	$0x1, %esi
ffffffff8001bd2c: 48 c7 c2 78 3c 02 80 	movq	$-0x7ffdc388, %rdx      # imm = 0x80023C78
ffffffff8001bd33: eb 77                	jmp	0xffffffff8001bdac <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x3cc>
ffffffff8001bd35: 48 89 ca             	movq	%rcx, %rdx
ffffffff8001bd38: 48 83 fa 63          	cmpq	$0x63, %rdx
ffffffff8001bd3c: 76 2b                	jbe	0xffffffff8001bd69 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x389>
ffffffff8001bd3e: 0f b7 ca             	movzwl	%dx, %ecx
ffffffff8001bd41: c1 e9 02             	shrl	$0x2, %ecx
ffffffff8001bd44: 69 c9 7b 14 00 00    	imull	$0x147b, %ecx, %ecx     # imm = 0x147B
ffffffff8001bd4a: c1 e9 11             	shrl	$0x11, %ecx
ffffffff8001bd4d: 6b f1 64             	imull	$0x64, %ecx, %esi
ffffffff8001bd50: 29 f2                	subl	%esi, %edx
ffffffff8001bd52: 0f b7 d2             	movzwl	%dx, %edx
ffffffff8001bd55: 0f b7 94 12 7a 3c 02 80      	movzwl	-0x7ffdc386(%rdx,%rdx), %edx
ffffffff8001bd5d: 66 89 54 04 06       	movw	%dx, 0x6(%rsp,%rax)
ffffffff8001bd62: 48 83 c0 fe          	addq	$-0x2, %rax
ffffffff8001bd66: 48 89 ca             	movq	%rcx, %rdx
ffffffff8001bd69: 48 83 fa 0a          	cmpq	$0xa, %rdx
ffffffff8001bd6d: 73 0c                	jae	0xffffffff8001bd7b <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x39b>
ffffffff8001bd6f: 80 ca 30             	orb	$0x30, %dl
ffffffff8001bd72: 88 54 04 07          	movb	%dl, 0x7(%rsp,%rax)
ffffffff8001bd76: 48 ff c8             	decq	%rax
ffffffff8001bd79: eb 11                	jmp	0xffffffff8001bd8c <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h2c8996c5af84f70d+0x3ac>
ffffffff8001bd7b: 0f b7 8c 12 7a 3c 02 80      	movzwl	-0x7ffdc386(%rdx,%rdx), %ecx
ffffffff8001bd83: 66 89 4c 04 06       	movw	%cx, 0x6(%rsp,%rax)
ffffffff8001bd88: 48 83 c0 fe          	addq	$-0x2, %rax
ffffffff8001bd8c: 4c 8d 04 04          	leaq	(%rsp,%rax), %r8
ffffffff8001bd90: 49 83 c0 08          	addq	$0x8, %r8
ffffffff8001bd94: 41 b9 14 00 00 00    	movl	$0x14, %r9d
ffffffff8001bd9a: 49 29 c1             	subq	%rax, %r9
ffffffff8001bd9d: ba 01 00 00 00       	movl	$0x1, %edx
ffffffff8001bda2: 48 89 df             	movq	%rbx, %rdi
ffffffff8001bda5: be 01 00 00 00       	movl	$0x1, %esi
ffffffff8001bdaa: 31 c9                	xorl	%ecx, %ecx
ffffffff8001bdac: e8 ef da ff ff       	callq	0xffffffff800198a0 <core::fmt::Formatter::pad_integral::h70f9a2bca12e9feb>
ffffffff8001bdb1: 48 81 c4 88 00 00 00 	addq	$0x88, %rsp
ffffffff8001bdb8: 5b                   	popq	%rbx
ffffffff8001bdb9: 41 5e                	popq	%r14
ffffffff8001bdbb: c3                   	retq
ffffffff8001bdbc: cc                   	int3
ffffffff8001bdbd: cc                   	int3
ffffffff8001bdbe: cc                   	int3
ffffffff8001bdbf: cc                   	int3

ffffffff8001bdc0 <<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h1d3e5ed404e3eb74>:
ffffffff8001bdc0: 55                   	pushq	%rbp
ffffffff8001bdc1: 41 57                	pushq	%r15
ffffffff8001bdc3: 41 56                	pushq	%r14
ffffffff8001bdc5: 41 54                	pushq	%r12
ffffffff8001bdc7: 53                   	pushq	%rbx
ffffffff8001bdc8: 48 83 ec 60          	subq	$0x60, %rsp
ffffffff8001bdcc: 49 89 ff             	movq	%rdi, %r15
ffffffff8001bdcf: 48 8b 5e 30          	movq	0x30(%rsi), %rbx
ffffffff8001bdd3: 4c 8b 76 38          	movq	0x38(%rsi), %r14
ffffffff8001bdd7: 4d 8b 66 18          	movq	0x18(%r14), %r12
ffffffff8001bddb: ba 0c 00 00 00       	movl	$0xc, %edx
ffffffff8001bde0: 48 89 df             	movq	%rbx, %rdi
ffffffff8001bde3: 48 c7 c6 70 46 02 80 	movq	$-0x7ffdb990, %rsi      # imm = 0x80024670
ffffffff8001bdea: 41 ff d4             	callq	*%r12
ffffffff8001bded: 40 b5 01             	movb	$0x1, %bpl
ffffffff8001bdf0: 84 c0                	testb	%al, %al
ffffffff8001bdf2: 0f 85 d2 00 00 00    	jne	0xffffffff8001beca <<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h1d3e5ed404e3eb74+0x10a>
ffffffff8001bdf8: 49 8b 47 08          	movq	0x8(%r15), %rax
ffffffff8001bdfc: 48 8d 48 10          	leaq	0x10(%rax), %rcx
ffffffff8001be00: 48 89 04 24          	movq	%rax, (%rsp)
ffffffff8001be04: 48 83 c0 14          	addq	$0x14, %rax
ffffffff8001be08: 48 c7 44 24 08 b0 a8 01 80   	movq	$-0x7ffe5750, 0x8(%rsp) # imm = 0x8001A8B0
ffffffff8001be11: 48 89 4c 24 10       	movq	%rcx, 0x10(%rsp)
ffffffff8001be16: 48 c7 44 24 18 a0 b7 01 80   	movq	$-0x7ffe4860, 0x18(%rsp) # imm = 0x8001B7A0
ffffffff8001be1f: 48 89 44 24 20       	movq	%rax, 0x20(%rsp)
ffffffff8001be24: 48 c7 44 24 28 a0 b7 01 80   	movq	$-0x7ffe4860, 0x28(%rsp) # imm = 0x8001B7A0
ffffffff8001be2d: 48 c7 44 24 30 40 46 02 80   	movq	$-0x7ffdb9c0, 0x30(%rsp) # imm = 0x80024640
ffffffff8001be36: 48 c7 44 24 38 03 00 00 00   	movq	$0x3, 0x38(%rsp)
ffffffff8001be3f: 48 c7 44 24 50 00 00 00 00   	movq	$0x0, 0x50(%rsp)
ffffffff8001be48: 48 89 e0             	movq	%rsp, %rax
ffffffff8001be4b: 48 89 44 24 40       	movq	%rax, 0x40(%rsp)
ffffffff8001be50: 48 c7 44 24 48 03 00 00 00   	movq	$0x3, 0x48(%rsp)
ffffffff8001be59: 48 8d 54 24 30       	leaq	0x30(%rsp), %rdx
ffffffff8001be5e: 48 89 df             	movq	%rbx, %rdi
ffffffff8001be61: 4c 89 f6             	movq	%r14, %rsi
ffffffff8001be64: e8 17 d8 ff ff       	callq	0xffffffff80019680 <core::fmt::write::h1a05140646fc4354>
ffffffff8001be69: 84 c0                	testb	%al, %al
ffffffff8001be6b: 75 5d                	jne	0xffffffff8001beca <<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h1d3e5ed404e3eb74+0x10a>
ffffffff8001be6d: ba 02 00 00 00       	movl	$0x2, %edx
ffffffff8001be72: 48 89 df             	movq	%rbx, %rdi
ffffffff8001be75: 48 c7 c6 7c 46 02 80 	movq	$-0x7ffdb984, %rsi      # imm = 0x8002467C
ffffffff8001be7c: 41 ff d4             	callq	*%r12
ffffffff8001be7f: 84 c0                	testb	%al, %al
ffffffff8001be81: 75 47                	jne	0xffffffff8001beca <<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h1d3e5ed404e3eb74+0x10a>
ffffffff8001be83: 49 8b 07             	movq	(%r15), %rax
ffffffff8001be86: 48 8b 48 28          	movq	0x28(%rax), %rcx
ffffffff8001be8a: 48 89 4c 24 28       	movq	%rcx, 0x28(%rsp)
ffffffff8001be8f: 48 8b 48 20          	movq	0x20(%rax), %rcx
ffffffff8001be93: 48 89 4c 24 20       	movq	%rcx, 0x20(%rsp)
ffffffff8001be98: 48 8b 48 18          	movq	0x18(%rax), %rcx
ffffffff8001be9c: 48 89 4c 24 18       	movq	%rcx, 0x18(%rsp)
ffffffff8001bea1: 48 8b 48 10          	movq	0x10(%rax), %rcx
ffffffff8001bea5: 48 89 4c 24 10       	movq	%rcx, 0x10(%rsp)
ffffffff8001beaa: 48 8b 08             	movq	(%rax), %rcx
ffffffff8001bead: 48 8b 40 08          	movq	0x8(%rax), %rax
ffffffff8001beb1: 48 89 44 24 08       	movq	%rax, 0x8(%rsp)
ffffffff8001beb6: 48 89 0c 24          	movq	%rcx, (%rsp)
ffffffff8001beba: 48 89 e2             	movq	%rsp, %rdx
ffffffff8001bebd: 48 89 df             	movq	%rbx, %rdi
ffffffff8001bec0: 4c 89 f6             	movq	%r14, %rsi
ffffffff8001bec3: e8 b8 d7 ff ff       	callq	0xffffffff80019680 <core::fmt::write::h1a05140646fc4354>
ffffffff8001bec8: 89 c5                	movl	%eax, %ebp
ffffffff8001beca: 89 e8                	movl	%ebp, %eax
ffffffff8001becc: 48 83 c4 60          	addq	$0x60, %rsp
ffffffff8001bed0: 5b                   	popq	%rbx
ffffffff8001bed1: 41 5c                	popq	%r12
ffffffff8001bed3: 41 5e                	popq	%r14
ffffffff8001bed5: 41 5f                	popq	%r15
ffffffff8001bed7: 5d                   	popq	%rbp
ffffffff8001bed8: c3                   	retq
ffffffff8001bed9: cc                   	int3
ffffffff8001beda: cc                   	int3
ffffffff8001bedb: cc                   	int3
ffffffff8001bedc: cc                   	int3
ffffffff8001bedd: cc                   	int3
ffffffff8001bede: cc                   	int3
ffffffff8001bedf: cc                   	int3

ffffffff8001bee0 <core::result::unwrap_failed::hf66f866f6b418554>:
ffffffff8001bee0: 48 83 ec 78          	subq	$0x78, %rsp
ffffffff8001bee4: 48 89 7c 24 08       	movq	%rdi, 0x8(%rsp)
ffffffff8001bee9: 48 89 74 24 10       	movq	%rsi, 0x10(%rsp)
ffffffff8001beee: 48 89 54 24 18       	movq	%rdx, 0x18(%rsp)
ffffffff8001bef3: 48 89 4c 24 20       	movq	%rcx, 0x20(%rsp)
ffffffff8001bef8: 48 8d 44 24 08       	leaq	0x8(%rsp), %rax
ffffffff8001befd: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff8001bf02: 48 c7 44 24 30 b0 a8 01 80   	movq	$-0x7ffe5750, 0x30(%rsp) # imm = 0x8001A8B0
ffffffff8001bf0b: 48 8d 44 24 18       	leaq	0x18(%rsp), %rax
ffffffff8001bf10: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff8001bf15: 48 c7 44 24 40 a0 a8 01 80   	movq	$-0x7ffe5760, 0x40(%rsp) # imm = 0x8001A8A0
ffffffff8001bf1e: 48 c7 44 24 48 80 46 02 80   	movq	$-0x7ffdb980, 0x48(%rsp) # imm = 0x80024680
ffffffff8001bf27: 48 c7 44 24 50 02 00 00 00   	movq	$0x2, 0x50(%rsp)
ffffffff8001bf30: 48 c7 44 24 68 00 00 00 00   	movq	$0x0, 0x68(%rsp)
ffffffff8001bf39: 48 8d 44 24 28       	leaq	0x28(%rsp), %rax
ffffffff8001bf3e: 48 89 44 24 58       	movq	%rax, 0x58(%rsp)
ffffffff8001bf43: 48 c7 44 24 60 02 00 00 00   	movq	$0x2, 0x60(%rsp)
ffffffff8001bf4c: 48 8d 7c 24 48       	leaq	0x48(%rsp), %rdi
ffffffff8001bf51: 4c 89 c6             	movq	%r8, %rsi
ffffffff8001bf54: e8 97 04 00 00       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8001bf59: cc                   	int3
ffffffff8001bf5a: cc                   	int3
ffffffff8001bf5b: cc                   	int3
ffffffff8001bf5c: cc                   	int3
ffffffff8001bf5d: cc                   	int3
ffffffff8001bf5e: cc                   	int3
ffffffff8001bf5f: cc                   	int3

ffffffff8001bf60 <core::ffi::c_str::CStr::to_str::hb93d7efd1cbb2ca0>:
ffffffff8001bf60: 53                   	pushq	%rbx
ffffffff8001bf61: 48 89 fb             	movq	%rdi, %rbx
ffffffff8001bf64: 48 ff ca             	decq	%rdx
ffffffff8001bf67: e8 34 00 00 00       	callq	0xffffffff8001bfa0 <core::str::converts::from_utf8::h68e3eef28d6cf63d>
ffffffff8001bf6c: 48 89 d8             	movq	%rbx, %rax
ffffffff8001bf6f: 5b                   	popq	%rbx
ffffffff8001bf70: c3                   	retq
ffffffff8001bf71: cc                   	int3
ffffffff8001bf72: cc                   	int3
ffffffff8001bf73: cc                   	int3
ffffffff8001bf74: cc                   	int3
ffffffff8001bf75: cc                   	int3
ffffffff8001bf76: cc                   	int3
ffffffff8001bf77: cc                   	int3
ffffffff8001bf78: cc                   	int3
ffffffff8001bf79: cc                   	int3
ffffffff8001bf7a: cc                   	int3
ffffffff8001bf7b: cc                   	int3
ffffffff8001bf7c: cc                   	int3
ffffffff8001bf7d: cc                   	int3
ffffffff8001bf7e: cc                   	int3
ffffffff8001bf7f: cc                   	int3

ffffffff8001bf80 <core::slice::index::slice_end_index_len_fail::h34b67e5519833f02>:
ffffffff8001bf80: 50                   	pushq	%rax
ffffffff8001bf81: e8 1a 02 00 00       	callq	0xffffffff8001c1a0 <core::slice::index::slice_end_index_len_fail::do_panic::runtime::hf422cc9558ab796f>
ffffffff8001bf86: cc                   	int3
ffffffff8001bf87: cc                   	int3
ffffffff8001bf88: cc                   	int3
ffffffff8001bf89: cc                   	int3
ffffffff8001bf8a: cc                   	int3
ffffffff8001bf8b: cc                   	int3
ffffffff8001bf8c: cc                   	int3
ffffffff8001bf8d: cc                   	int3
ffffffff8001bf8e: cc                   	int3
ffffffff8001bf8f: cc                   	int3

ffffffff8001bf90 <core::slice::index::slice_index_order_fail::h1a167d6bc7fac2e8>:
ffffffff8001bf90: 50                   	pushq	%rax
ffffffff8001bf91: e8 7a 02 00 00       	callq	0xffffffff8001c210 <core::slice::index::slice_index_order_fail::do_panic::runtime::h5dcd4177f85ee9e4>
ffffffff8001bf96: cc                   	int3
ffffffff8001bf97: cc                   	int3
ffffffff8001bf98: cc                   	int3
ffffffff8001bf99: cc                   	int3
ffffffff8001bf9a: cc                   	int3
ffffffff8001bf9b: cc                   	int3
ffffffff8001bf9c: cc                   	int3
ffffffff8001bf9d: cc                   	int3
ffffffff8001bf9e: cc                   	int3
ffffffff8001bf9f: cc                   	int3

ffffffff8001bfa0 <core::str::converts::from_utf8::h68e3eef28d6cf63d>:
ffffffff8001bfa0: 55                   	pushq	%rbp
ffffffff8001bfa1: 53                   	pushq	%rbx
ffffffff8001bfa2: 48 89 f8             	movq	%rdi, %rax
ffffffff8001bfa5: 31 ff                	xorl	%edi, %edi
ffffffff8001bfa7: 48 89 d1             	movq	%rdx, %rcx
ffffffff8001bfaa: 48 83 e9 0f          	subq	$0xf, %rcx
ffffffff8001bfae: 48 0f 43 f9          	cmovaeq	%rcx, %rdi
ffffffff8001bfb2: 48 85 d2             	testq	%rdx, %rdx
ffffffff8001bfb5: 0f 84 a8 01 00 00    	je	0xffffffff8001c163 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1c3>
ffffffff8001bfbb: 4c 8d 46 07          	leaq	0x7(%rsi), %r8
ffffffff8001bfbf: 49 83 e0 f8          	andq	$-0x8, %r8
ffffffff8001bfc3: 49 29 f0             	subq	%rsi, %r8
ffffffff8001bfc6: 31 c9                	xorl	%ecx, %ecx
ffffffff8001bfc8: 49 ba 80 80 80 80 80 80 80 80	movabsq	$-0x7f7f7f7f7f7f7f80, %r10 # imm = 0x8080808080808080
ffffffff8001bfd2: eb 1b                	jmp	0xffffffff8001bfef <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x4f>
ffffffff8001bfd4: 66 66 66 2e 0f 1f 84 00 00 00 00 00  	nopw	%cs:(%rax,%rax)
ffffffff8001bfe0: 48 ff c3             	incq	%rbx
ffffffff8001bfe3: 48 89 d9             	movq	%rbx, %rcx
ffffffff8001bfe6: 48 39 d1             	cmpq	%rdx, %rcx
ffffffff8001bfe9: 0f 83 74 01 00 00    	jae	0xffffffff8001c163 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1c3>
ffffffff8001bfef: 44 0f b6 1c 0e       	movzbl	(%rsi,%rcx), %r11d
ffffffff8001bff4: 45 84 db             	testb	%r11b, %r11b
ffffffff8001bff7: 78 57                	js	0xffffffff8001c050 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0xb0>
ffffffff8001bff9: 45 89 c1             	movl	%r8d, %r9d
ffffffff8001bffc: 41 29 c9             	subl	%ecx, %r9d
ffffffff8001bfff: 41 f6 c1 07          	testb	$0x7, %r9b
ffffffff8001c003: 74 0f                	je	0xffffffff8001c014 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x74>
ffffffff8001c005: 48 ff c1             	incq	%rcx
ffffffff8001c008: eb dc                	jmp	0xffffffff8001bfe6 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x46>
ffffffff8001c00a: 66 0f 1f 44 00 00    	nopw	(%rax,%rax)
ffffffff8001c010: 48 83 c1 10          	addq	$0x10, %rcx
ffffffff8001c014: 48 39 f9             	cmpq	%rdi, %rcx
ffffffff8001c017: 73 0e                	jae	0xffffffff8001c027 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x87>
ffffffff8001c019: 4c 8b 4c 0e 08       	movq	0x8(%rsi,%rcx), %r9
ffffffff8001c01e: 4c 0b 0c 0e          	orq	(%rsi,%rcx), %r9
ffffffff8001c022: 4d 85 d1             	testq	%r10, %r9
ffffffff8001c025: 74 e9                	je	0xffffffff8001c010 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x70>
ffffffff8001c027: 48 39 d1             	cmpq	%rdx, %rcx
ffffffff8001c02a: 73 ba                	jae	0xffffffff8001bfe6 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x46>
ffffffff8001c02c: 0f 1f 40 00          	nopl	(%rax)
ffffffff8001c030: 80 3c 0e 00          	cmpb	$0x0, (%rsi,%rcx)
ffffffff8001c034: 78 b0                	js	0xffffffff8001bfe6 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x46>
ffffffff8001c036: 48 ff c1             	incq	%rcx
ffffffff8001c039: 48 39 ca             	cmpq	%rcx, %rdx
ffffffff8001c03c: 75 f2                	jne	0xffffffff8001c030 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x90>
ffffffff8001c03e: e9 20 01 00 00       	jmp	0xffffffff8001c163 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1c3>
ffffffff8001c043: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
ffffffff8001c050: 41 0f b6 9b a0 46 02 80      	movzbl	-0x7ffdb960(%r11), %ebx
ffffffff8001c058: 41 b1 01             	movb	$0x1, %r9b
ffffffff8001c05b: 83 fb 04             	cmpl	$0x4, %ebx
ffffffff8001c05e: 74 5a                	je	0xffffffff8001c0ba <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x11a>
ffffffff8001c060: 83 fb 03             	cmpl	$0x3, %ebx
ffffffff8001c063: 74 28                	je	0xffffffff8001c08d <core::str::converts::from_utf8::h68e3eef28d6cf63d+0xed>
ffffffff8001c065: 83 fb 02             	cmpl	$0x2, %ebx
ffffffff8001c068: 0f 85 0a 01 00 00    	jne	0xffffffff8001c178 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1d8>
ffffffff8001c06e: 48 8d 59 01          	leaq	0x1(%rcx), %rbx
ffffffff8001c072: 48 39 d3             	cmpq	%rdx, %rbx
ffffffff8001c075: 0f 83 f8 00 00 00    	jae	0xffffffff8001c173 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1d3>
ffffffff8001c07b: 80 3c 1e bf          	cmpb	$-0x41, (%rsi,%rbx)
ffffffff8001c07f: 41 b3 01             	movb	$0x1, %r11b
ffffffff8001c082: 0f 8e 58 ff ff ff    	jle	0xffffffff8001bfe0 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x40>
ffffffff8001c088: e9 f3 00 00 00       	jmp	0xffffffff8001c180 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1e0>
ffffffff8001c08d: 48 8d 59 01          	leaq	0x1(%rcx), %rbx
ffffffff8001c091: 48 39 d3             	cmpq	%rdx, %rbx
ffffffff8001c094: 0f 83 d9 00 00 00    	jae	0xffffffff8001c173 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1d3>
ffffffff8001c09a: 0f b6 1c 1e          	movzbl	(%rsi,%rbx), %ebx
ffffffff8001c09e: 49 81 fb e0 00 00 00 	cmpq	$0xe0, %r11
ffffffff8001c0a5: 74 40                	je	0xffffffff8001c0e7 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x147>
ffffffff8001c0a7: 41 81 fb ed 00 00 00 	cmpl	$0xed, %r11d
ffffffff8001c0ae: 75 4e                	jne	0xffffffff8001c0fe <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x15e>
ffffffff8001c0b0: 80 fb 9f             	cmpb	$-0x61, %bl
ffffffff8001c0b3: 7e 62                	jle	0xffffffff8001c117 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x177>
ffffffff8001c0b5: e9 be 00 00 00       	jmp	0xffffffff8001c178 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1d8>
ffffffff8001c0ba: 48 8d 59 01          	leaq	0x1(%rcx), %rbx
ffffffff8001c0be: 48 39 d3             	cmpq	%rdx, %rbx
ffffffff8001c0c1: 0f 83 ac 00 00 00    	jae	0xffffffff8001c173 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1d3>
ffffffff8001c0c7: 0f b6 1c 1e          	movzbl	(%rsi,%rbx), %ebx
ffffffff8001c0cb: 49 81 fb f0 00 00 00 	cmpq	$0xf0, %r11
ffffffff8001c0d2: 74 20                	je	0xffffffff8001c0f4 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x154>
ffffffff8001c0d4: 41 81 fb f4 00 00 00 	cmpl	$0xf4, %r11d
ffffffff8001c0db: 75 4f                	jne	0xffffffff8001c12c <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x18c>
ffffffff8001c0dd: 80 fb 8f             	cmpb	$-0x71, %bl
ffffffff8001c0e0: 7e 59                	jle	0xffffffff8001c13b <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x19b>
ffffffff8001c0e2: e9 91 00 00 00       	jmp	0xffffffff8001c178 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1d8>
ffffffff8001c0e7: 80 e3 e0             	andb	$-0x20, %bl
ffffffff8001c0ea: 80 fb a0             	cmpb	$-0x60, %bl
ffffffff8001c0ed: 74 28                	je	0xffffffff8001c117 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x177>
ffffffff8001c0ef: e9 84 00 00 00       	jmp	0xffffffff8001c178 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1d8>
ffffffff8001c0f4: 80 c3 70             	addb	$0x70, %bl
ffffffff8001c0f7: 80 fb 30             	cmpb	$0x30, %bl
ffffffff8001c0fa: 72 3f                	jb	0xffffffff8001c13b <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x19b>
ffffffff8001c0fc: eb 7a                	jmp	0xffffffff8001c178 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1d8>
ffffffff8001c0fe: 41 8d 6b 1f          	leal	0x1f(%r11), %ebp
ffffffff8001c102: 40 80 fd 0c          	cmpb	$0xc, %bpl
ffffffff8001c106: 72 0a                	jb	0xffffffff8001c112 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x172>
ffffffff8001c108: 41 80 e3 fe          	andb	$-0x2, %r11b
ffffffff8001c10c: 41 80 fb ee          	cmpb	$-0x12, %r11b
ffffffff8001c110: 75 66                	jne	0xffffffff8001c178 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1d8>
ffffffff8001c112: 80 fb c0             	cmpb	$-0x40, %bl
ffffffff8001c115: 7d 61                	jge	0xffffffff8001c178 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1d8>
ffffffff8001c117: 48 8d 59 02          	leaq	0x2(%rcx), %rbx
ffffffff8001c11b: 48 39 d3             	cmpq	%rdx, %rbx
ffffffff8001c11e: 73 53                	jae	0xffffffff8001c173 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1d3>
ffffffff8001c120: 80 3c 1e bf          	cmpb	$-0x41, (%rsi,%rbx)
ffffffff8001c124: 0f 8e b6 fe ff ff    	jle	0xffffffff8001bfe0 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x40>
ffffffff8001c12a: eb 51                	jmp	0xffffffff8001c17d <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1dd>
ffffffff8001c12c: 41 80 c3 0f          	addb	$0xf, %r11b
ffffffff8001c130: 41 80 fb 02          	cmpb	$0x2, %r11b
ffffffff8001c134: 77 42                	ja	0xffffffff8001c178 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1d8>
ffffffff8001c136: 80 fb c0             	cmpb	$-0x40, %bl
ffffffff8001c139: 7d 3d                	jge	0xffffffff8001c178 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1d8>
ffffffff8001c13b: 4c 8d 59 02          	leaq	0x2(%rcx), %r11
ffffffff8001c13f: 49 39 d3             	cmpq	%rdx, %r11
ffffffff8001c142: 73 2f                	jae	0xffffffff8001c173 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1d3>
ffffffff8001c144: 42 80 3c 1e bf       	cmpb	$-0x41, (%rsi,%r11)
ffffffff8001c149: 7f 32                	jg	0xffffffff8001c17d <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1dd>
ffffffff8001c14b: 48 8d 59 03          	leaq	0x3(%rcx), %rbx
ffffffff8001c14f: 48 39 d3             	cmpq	%rdx, %rbx
ffffffff8001c152: 73 1f                	jae	0xffffffff8001c173 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1d3>
ffffffff8001c154: 80 3c 1e bf          	cmpb	$-0x41, (%rsi,%rbx)
ffffffff8001c158: 0f 8e 82 fe ff ff    	jle	0xffffffff8001bfe0 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x40>
ffffffff8001c15e: 41 b3 03             	movb	$0x3, %r11b
ffffffff8001c161: eb 1d                	jmp	0xffffffff8001c180 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1e0>
ffffffff8001c163: 48 89 70 08          	movq	%rsi, 0x8(%rax)
ffffffff8001c167: 48 89 50 10          	movq	%rdx, 0x10(%rax)
ffffffff8001c16b: 31 c9                	xorl	%ecx, %ecx
ffffffff8001c16d: 48 89 08             	movq	%rcx, (%rax)
ffffffff8001c170: 5b                   	popq	%rbx
ffffffff8001c171: 5d                   	popq	%rbp
ffffffff8001c172: c3                   	retq
ffffffff8001c173: 45 31 c9             	xorl	%r9d, %r9d
ffffffff8001c176: eb 08                	jmp	0xffffffff8001c180 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1e0>
ffffffff8001c178: 41 b3 01             	movb	$0x1, %r11b
ffffffff8001c17b: eb 03                	jmp	0xffffffff8001c180 <core::str::converts::from_utf8::h68e3eef28d6cf63d+0x1e0>
ffffffff8001c17d: 41 b3 02             	movb	$0x2, %r11b
ffffffff8001c180: 48 89 48 08          	movq	%rcx, 0x8(%rax)
ffffffff8001c184: 44 88 48 10          	movb	%r9b, 0x10(%rax)
ffffffff8001c188: 44 88 58 11          	movb	%r11b, 0x11(%rax)
ffffffff8001c18c: b9 01 00 00 00       	movl	$0x1, %ecx
ffffffff8001c191: 48 89 08             	movq	%rcx, (%rax)
ffffffff8001c194: 5b                   	popq	%rbx
ffffffff8001c195: 5d                   	popq	%rbp
ffffffff8001c196: c3                   	retq
ffffffff8001c197: cc                   	int3
ffffffff8001c198: cc                   	int3
ffffffff8001c199: cc                   	int3
ffffffff8001c19a: cc                   	int3
ffffffff8001c19b: cc                   	int3
ffffffff8001c19c: cc                   	int3
ffffffff8001c19d: cc                   	int3
ffffffff8001c19e: cc                   	int3
ffffffff8001c19f: cc                   	int3

ffffffff8001c1a0 <core::slice::index::slice_end_index_len_fail::do_panic::runtime::hf422cc9558ab796f>:
ffffffff8001c1a0: 48 83 ec 68          	subq	$0x68, %rsp
ffffffff8001c1a4: 48 89 7c 24 08       	movq	%rdi, 0x8(%rsp)
ffffffff8001c1a9: 48 89 74 24 10       	movq	%rsi, 0x10(%rsp)
ffffffff8001c1ae: 48 8d 44 24 08       	leaq	0x8(%rsp), %rax
ffffffff8001c1b3: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff8001c1b8: 48 c7 44 24 20 c0 b8 01 80   	movq	$-0x7ffe4740, 0x20(%rsp) # imm = 0x8001B8C0
ffffffff8001c1c1: 48 8d 44 24 10       	leaq	0x10(%rsp), %rax
ffffffff8001c1c6: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff8001c1cb: 48 c7 44 24 30 c0 b8 01 80   	movq	$-0x7ffe4740, 0x30(%rsp) # imm = 0x8001B8C0
ffffffff8001c1d4: 48 c7 44 24 38 c8 47 02 80   	movq	$-0x7ffdb838, 0x38(%rsp) # imm = 0x800247C8
ffffffff8001c1dd: 48 c7 44 24 40 02 00 00 00   	movq	$0x2, 0x40(%rsp)
ffffffff8001c1e6: 48 c7 44 24 58 00 00 00 00   	movq	$0x0, 0x58(%rsp)
ffffffff8001c1ef: 48 8d 44 24 18       	leaq	0x18(%rsp), %rax
ffffffff8001c1f4: 48 89 44 24 48       	movq	%rax, 0x48(%rsp)
ffffffff8001c1f9: 48 c7 44 24 50 02 00 00 00   	movq	$0x2, 0x50(%rsp)
ffffffff8001c202: 48 8d 7c 24 38       	leaq	0x38(%rsp), %rdi
ffffffff8001c207: 48 89 d6             	movq	%rdx, %rsi
ffffffff8001c20a: e8 e1 01 00 00       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8001c20f: cc                   	int3

ffffffff8001c210 <core::slice::index::slice_index_order_fail::do_panic::runtime::h5dcd4177f85ee9e4>:
ffffffff8001c210: 48 83 ec 68          	subq	$0x68, %rsp
ffffffff8001c214: 48 89 7c 24 08       	movq	%rdi, 0x8(%rsp)
ffffffff8001c219: 48 89 74 24 10       	movq	%rsi, 0x10(%rsp)
ffffffff8001c21e: 48 8d 44 24 08       	leaq	0x8(%rsp), %rax
ffffffff8001c223: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff8001c228: 48 c7 44 24 20 c0 b8 01 80   	movq	$-0x7ffe4740, 0x20(%rsp) # imm = 0x8001B8C0
ffffffff8001c231: 48 8d 44 24 10       	leaq	0x10(%rsp), %rax
ffffffff8001c236: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff8001c23b: 48 c7 44 24 30 c0 b8 01 80   	movq	$-0x7ffe4740, 0x30(%rsp) # imm = 0x8001B8C0
ffffffff8001c244: 48 c7 44 24 38 10 48 02 80   	movq	$-0x7ffdb7f0, 0x38(%rsp) # imm = 0x80024810
ffffffff8001c24d: 48 c7 44 24 40 02 00 00 00   	movq	$0x2, 0x40(%rsp)
ffffffff8001c256: 48 c7 44 24 58 00 00 00 00   	movq	$0x0, 0x58(%rsp)
ffffffff8001c25f: 48 8d 44 24 18       	leaq	0x18(%rsp), %rax
ffffffff8001c264: 48 89 44 24 48       	movq	%rax, 0x48(%rsp)
ffffffff8001c269: 48 c7 44 24 50 02 00 00 00   	movq	$0x2, 0x50(%rsp)
ffffffff8001c272: 48 8d 7c 24 38       	leaq	0x38(%rsp), %rdi
ffffffff8001c277: 48 89 d6             	movq	%rdx, %rsi
ffffffff8001c27a: e8 71 01 00 00       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8001c27f: cc                   	int3

ffffffff8001c280 <core::unicode::unicode_data::grapheme_extend::lookup_slow::hc5758a9b91ef4cfb>:
ffffffff8001c280: 50                   	pushq	%rax
ffffffff8001c281: 89 f8                	movl	%edi, %eax
ffffffff8001c283: c1 e0 0b             	shll	$0xb, %eax
ffffffff8001c286: 31 c9                	xorl	%ecx, %ecx
ffffffff8001c288: 81 ff 2f 18 01 00    	cmpl	$0x1182f, %edi          # imm = 0x1182F
ffffffff8001c28e: ba 11 00 00 00       	movl	$0x11, %edx
ffffffff8001c293: 48 0f 42 d1          	cmovbq	%rcx, %rdx
ffffffff8001c297: 48 8d 4a 08          	leaq	0x8(%rdx), %rcx
ffffffff8001c29b: 8b 34 95 00 49 02 80 	movl	-0x7ffdb700(,%rdx,4), %esi
ffffffff8001c2a2: c1 e6 0b             	shll	$0xb, %esi
ffffffff8001c2a5: 39 c6                	cmpl	%eax, %esi
ffffffff8001c2a7: 48 0f 47 ca          	cmovaq	%rdx, %rcx
ffffffff8001c2ab: 48 8d 51 04          	leaq	0x4(%rcx), %rdx
ffffffff8001c2af: 8b 34 8d f0 48 02 80 	movl	-0x7ffdb710(,%rcx,4), %esi
ffffffff8001c2b6: c1 e6 0b             	shll	$0xb, %esi
ffffffff8001c2b9: 39 c6                	cmpl	%eax, %esi
ffffffff8001c2bb: 48 0f 47 d1          	cmovaq	%rcx, %rdx
ffffffff8001c2bf: 48 8d 4a 02          	leaq	0x2(%rdx), %rcx
ffffffff8001c2c3: 8b 34 95 e8 48 02 80 	movl	-0x7ffdb718(,%rdx,4), %esi
ffffffff8001c2ca: c1 e6 0b             	shll	$0xb, %esi
ffffffff8001c2cd: 39 c6                	cmpl	%eax, %esi
ffffffff8001c2cf: 48 0f 47 ca          	cmovaq	%rdx, %rcx
ffffffff8001c2d3: 48 8d 51 01          	leaq	0x1(%rcx), %rdx
ffffffff8001c2d7: 8b 34 8d e4 48 02 80 	movl	-0x7ffdb71c(,%rcx,4), %esi
ffffffff8001c2de: c1 e6 0b             	shll	$0xb, %esi
ffffffff8001c2e1: 39 c6                	cmpl	%eax, %esi
ffffffff8001c2e3: 48 0f 47 d1          	cmovaq	%rcx, %rdx
ffffffff8001c2e7: 48 8d 72 01          	leaq	0x1(%rdx), %rsi
ffffffff8001c2eb: 8b 0c 95 e4 48 02 80 	movl	-0x7ffdb71c(,%rdx,4), %ecx
ffffffff8001c2f2: c1 e1 0b             	shll	$0xb, %ecx
ffffffff8001c2f5: 39 c1                	cmpl	%eax, %ecx
ffffffff8001c2f7: 48 0f 47 f2          	cmovaq	%rdx, %rsi
ffffffff8001c2fb: 8b 14 b5 e0 48 02 80 	movl	-0x7ffdb720(,%rsi,4), %edx
ffffffff8001c302: c1 e2 0b             	shll	$0xb, %edx
ffffffff8001c305: 31 c9                	xorl	%ecx, %ecx
ffffffff8001c307: 39 c2                	cmpl	%eax, %edx
ffffffff8001c309: 0f 94 c1             	sete	%cl
ffffffff8001c30c: 48 11 f1             	adcq	%rsi, %rcx
ffffffff8001c30f: 48 83 f9 21          	cmpq	$0x21, %rcx
ffffffff8001c313: 0f 87 b4 00 00 00    	ja	0xffffffff8001c3cd <core::unicode::unicode_data::grapheme_extend::lookup_slow::hc5758a9b91ef4cfb+0x14d>
ffffffff8001c319: 8b 04 8d e0 48 02 80 	movl	-0x7ffdb720(,%rcx,4), %eax
ffffffff8001c320: c1 e8 15             	shrl	$0x15, %eax
ffffffff8001c323: ba ef 02 00 00       	movl	$0x2ef, %edx            # imm = 0x2EF
ffffffff8001c328: 48 83 f9 21          	cmpq	$0x21, %rcx
ffffffff8001c32c: 74 0f                	je	0xffffffff8001c33d <core::unicode::unicode_data::grapheme_extend::lookup_slow::hc5758a9b91ef4cfb+0xbd>
ffffffff8001c32e: 8b 14 8d e4 48 02 80 	movl	-0x7ffdb71c(,%rcx,4), %edx
ffffffff8001c335: c1 ea 15             	shrl	$0x15, %edx
ffffffff8001c338: 48 85 c9             	testq	%rcx, %rcx
ffffffff8001c33b: 74 61                	je	0xffffffff8001c39e <core::unicode::unicode_data::grapheme_extend::lookup_slow::hc5758a9b91ef4cfb+0x11e>
ffffffff8001c33d: 49 c7 c0 fc ff ff ff 	movq	$-0x4, %r8
ffffffff8001c344: be ff ff 1f 00       	movl	$0x1fffff, %esi         # imm = 0x1FFFFF
ffffffff8001c349: 41 23 b4 88 e0 48 02 80      	andl	-0x7ffdb720(%r8,%rcx,4), %esi
ffffffff8001c351: 48 89 c1             	movq	%rax, %rcx
ffffffff8001c354: 48 f7 d1             	notq	%rcx
ffffffff8001c357: 48 01 d1             	addq	%rdx, %rcx
ffffffff8001c35a: 74 37                	je	0xffffffff8001c393 <core::unicode::unicode_data::grapheme_extend::lookup_slow::hc5758a9b91ef4cfb+0x113>
ffffffff8001c35c: 29 f7                	subl	%esi, %edi
ffffffff8001c35e: 48 ff ca             	decq	%rdx
ffffffff8001c361: 31 c9                	xorl	%ecx, %ecx
ffffffff8001c363: 48 89 c6             	movq	%rax, %rsi
ffffffff8001c366: 66 2e 0f 1f 84 00 00 00 00 00	nopw	%cs:(%rax,%rax)
ffffffff8001c370: 48 81 fe ee 02 00 00 	cmpq	$0x2ee, %rsi            # imm = 0x2EE
ffffffff8001c377: 77 34                	ja	0xffffffff8001c3ad <core::unicode::unicode_data::grapheme_extend::lookup_slow::hc5758a9b91ef4cfb+0x12d>
ffffffff8001c379: 44 0f b6 86 68 49 02 80      	movzbl	-0x7ffdb698(%rsi), %r8d
ffffffff8001c381: 44 01 c1             	addl	%r8d, %ecx
ffffffff8001c384: 39 f9                	cmpl	%edi, %ecx
ffffffff8001c386: 77 0f                	ja	0xffffffff8001c397 <core::unicode::unicode_data::grapheme_extend::lookup_slow::hc5758a9b91ef4cfb+0x117>
ffffffff8001c388: 48 ff c6             	incq	%rsi
ffffffff8001c38b: 48 39 f2             	cmpq	%rsi, %rdx
ffffffff8001c38e: 75 e0                	jne	0xffffffff8001c370 <core::unicode::unicode_data::grapheme_extend::lookup_slow::hc5758a9b91ef4cfb+0xf0>
ffffffff8001c390: 48 89 d0             	movq	%rdx, %rax
ffffffff8001c393: 24 01                	andb	$0x1, %al
ffffffff8001c395: 59                   	popq	%rcx
ffffffff8001c396: c3                   	retq
ffffffff8001c397: 48 89 f0             	movq	%rsi, %rax
ffffffff8001c39a: 24 01                	andb	$0x1, %al
ffffffff8001c39c: 59                   	popq	%rcx
ffffffff8001c39d: c3                   	retq
ffffffff8001c39e: 31 f6                	xorl	%esi, %esi
ffffffff8001c3a0: 48 89 c1             	movq	%rax, %rcx
ffffffff8001c3a3: 48 f7 d1             	notq	%rcx
ffffffff8001c3a6: 48 01 d1             	addq	%rdx, %rcx
ffffffff8001c3a9: 75 b1                	jne	0xffffffff8001c35c <core::unicode::unicode_data::grapheme_extend::lookup_slow::hc5758a9b91ef4cfb+0xdc>
ffffffff8001c3ab: eb e6                	jmp	0xffffffff8001c393 <core::unicode::unicode_data::grapheme_extend::lookup_slow::hc5758a9b91ef4cfb+0x113>
ffffffff8001c3ad: 48 3d f0 02 00 00    	cmpq	$0x2f0, %rax            # imm = 0x2F0
ffffffff8001c3b3: bf ef 02 00 00       	movl	$0x2ef, %edi            # imm = 0x2EF
ffffffff8001c3b8: 48 0f 43 f8          	cmovaeq	%rax, %rdi
ffffffff8001c3bc: be ef 02 00 00       	movl	$0x2ef, %esi            # imm = 0x2EF
ffffffff8001c3c1: 48 c7 c2 c8 48 02 80 	movq	$-0x7ffdb738, %rdx      # imm = 0x800248C8
ffffffff8001c3c8: e8 ec 00 00 00       	callq	0xffffffff8001c4b9 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff8001c3cd: be 22 00 00 00       	movl	$0x22, %esi
ffffffff8001c3d2: 48 89 cf             	movq	%rcx, %rdi
ffffffff8001c3d5: 48 c7 c2 b0 48 02 80 	movq	$-0x7ffdb750, %rdx      # imm = 0x800248B0
ffffffff8001c3dc: e8 d8 00 00 00       	callq	0xffffffff8001c4b9 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>
ffffffff8001c3e1: cc                   	int3
ffffffff8001c3e2: cc                   	int3
ffffffff8001c3e3: cc                   	int3
ffffffff8001c3e4: cc                   	int3
ffffffff8001c3e5: cc                   	int3
ffffffff8001c3e6: cc                   	int3
ffffffff8001c3e7: cc                   	int3
ffffffff8001c3e8: cc                   	int3
ffffffff8001c3e9: cc                   	int3
ffffffff8001c3ea: cc                   	int3
ffffffff8001c3eb: cc                   	int3
ffffffff8001c3ec: cc                   	int3
ffffffff8001c3ed: cc                   	int3
ffffffff8001c3ee: cc                   	int3
ffffffff8001c3ef: cc                   	int3

ffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>:
ffffffff8001c3f0: 48 83 ec 18          	subq	$0x18, %rsp
ffffffff8001c3f4: 48 89 3c 24          	movq	%rdi, (%rsp)
ffffffff8001c3f8: 48 89 74 24 08       	movq	%rsi, 0x8(%rsp)
ffffffff8001c3fd: 66 c7 44 24 10 01 00 	movw	$0x1, 0x10(%rsp)
ffffffff8001c404: 48 89 e7             	movq	%rsp, %rdi
ffffffff8001c407: e8 a4 3c fe ff       	callq	0xffffffff800000b0 <rust_begin_unwind>
ffffffff8001c40c: cc                   	int3
ffffffff8001c40d: cc                   	int3
ffffffff8001c40e: cc                   	int3
ffffffff8001c40f: cc                   	int3

ffffffff8001c410 <core::panicking::panic_nounwind_fmt::hfff70d18e33a2d27>:
ffffffff8001c410: 48 83 ec 48          	subq	$0x48, %rsp
ffffffff8001c414: 48 8b 47 28          	movq	0x28(%rdi), %rax
ffffffff8001c418: 48 89 44 24 40       	movq	%rax, 0x40(%rsp)
ffffffff8001c41d: 48 8b 47 20          	movq	0x20(%rdi), %rax
ffffffff8001c421: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff8001c426: 48 8b 47 18          	movq	0x18(%rdi), %rax
ffffffff8001c42a: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff8001c42f: 48 8b 47 10          	movq	0x10(%rdi), %rax
ffffffff8001c433: 48 89 44 24 28       	movq	%rax, 0x28(%rsp)
ffffffff8001c438: 48 8b 07             	movq	(%rdi), %rax
ffffffff8001c43b: 48 8b 4f 08          	movq	0x8(%rdi), %rcx
ffffffff8001c43f: 48 89 4c 24 20       	movq	%rcx, 0x20(%rsp)
ffffffff8001c444: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff8001c449: 48 8d 44 24 18       	leaq	0x18(%rsp), %rax
ffffffff8001c44e: 48 89 04 24          	movq	%rax, (%rsp)
ffffffff8001c452: 48 89 54 24 08       	movq	%rdx, 0x8(%rsp)
ffffffff8001c457: c6 44 24 10 00       	movb	$0x0, 0x10(%rsp)
ffffffff8001c45c: 40 88 74 24 11       	movb	%sil, 0x11(%rsp)
ffffffff8001c461: 48 89 e7             	movq	%rsp, %rdi
ffffffff8001c464: e8 47 3c fe ff       	callq	0xffffffff800000b0 <rust_begin_unwind>
ffffffff8001c469: cc                   	int3
ffffffff8001c46a: cc                   	int3
ffffffff8001c46b: cc                   	int3
ffffffff8001c46c: cc                   	int3
ffffffff8001c46d: cc                   	int3
ffffffff8001c46e: cc                   	int3
ffffffff8001c46f: cc                   	int3

ffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>:
ffffffff8001c470: 48 83 ec 48          	subq	$0x48, %rsp
ffffffff8001c474: 48 89 7c 24 08       	movq	%rdi, 0x8(%rsp)
ffffffff8001c479: 48 89 74 24 10       	movq	%rsi, 0x10(%rsp)
ffffffff8001c47e: 48 8d 44 24 08       	leaq	0x8(%rsp), %rax
ffffffff8001c483: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff8001c488: 48 c7 44 24 20 01 00 00 00   	movq	$0x1, 0x20(%rsp)
ffffffff8001c491: 48 c7 44 24 38 00 00 00 00   	movq	$0x0, 0x38(%rsp)
ffffffff8001c49a: 48 c7 44 24 28 08 00 00 00   	movq	$0x8, 0x28(%rsp)
ffffffff8001c4a3: 48 c7 44 24 30 00 00 00 00   	movq	$0x0, 0x30(%rsp)
ffffffff8001c4ac: 48 8d 7c 24 18       	leaq	0x18(%rsp), %rdi
ffffffff8001c4b1: 48 89 d6             	movq	%rdx, %rsi
ffffffff8001c4b4: e8 37 ff ff ff       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>

ffffffff8001c4b9 <core::panicking::panic_bounds_check::h28a7c6f039565f9f>:
ffffffff8001c4b9: 48 83 ec 68          	subq	$0x68, %rsp
ffffffff8001c4bd: 48 8d 44 24 08       	leaq	0x8(%rsp), %rax
ffffffff8001c4c2: 48 89 38             	movq	%rdi, (%rax)
ffffffff8001c4c5: 48 8d 4c 24 10       	leaq	0x10(%rsp), %rcx
ffffffff8001c4ca: 48 89 31             	movq	%rsi, (%rcx)
ffffffff8001c4cd: 48 8d 74 24 18       	leaq	0x18(%rsp), %rsi
ffffffff8001c4d2: 48 89 0e             	movq	%rcx, (%rsi)
ffffffff8001c4d5: 48 c7 46 08 c0 b8 01 80      	movq	$-0x7ffe4740, 0x8(%rsi) # imm = 0x8001B8C0
ffffffff8001c4dd: 48 8d 7c 24 38       	leaq	0x38(%rsp), %rdi
ffffffff8001c4e2: 48 c7 07 70 4c 02 80 	movq	$-0x7ffdb390, (%rdi)    # imm = 0x80024C70
ffffffff8001c4e9: 6a 02                	pushq	$0x2
ffffffff8001c4eb: 59                   	popq	%rcx
ffffffff8001c4ec: 48 89 4f 08          	movq	%rcx, 0x8(%rdi)
ffffffff8001c4f0: 48 83 67 20 00       	andq	$0x0, 0x20(%rdi)
ffffffff8001c4f5: 48 89 46 10          	movq	%rax, 0x10(%rsi)
ffffffff8001c4f9: 48 c7 46 18 c0 b8 01 80      	movq	$-0x7ffe4740, 0x18(%rsi) # imm = 0x8001B8C0
ffffffff8001c501: 48 89 77 10          	movq	%rsi, 0x10(%rdi)
ffffffff8001c505: 48 89 4f 18          	movq	%rcx, 0x18(%rdi)
ffffffff8001c509: 48 89 d6             	movq	%rdx, %rsi
ffffffff8001c50c: e8 df fe ff ff       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8001c511: cc                   	int3
ffffffff8001c512: cc                   	int3
ffffffff8001c513: cc                   	int3
ffffffff8001c514: cc                   	int3
ffffffff8001c515: cc                   	int3
ffffffff8001c516: cc                   	int3
ffffffff8001c517: cc                   	int3
ffffffff8001c518: cc                   	int3
ffffffff8001c519: cc                   	int3
ffffffff8001c51a: cc                   	int3
ffffffff8001c51b: cc                   	int3
ffffffff8001c51c: cc                   	int3
ffffffff8001c51d: cc                   	int3
ffffffff8001c51e: cc                   	int3
ffffffff8001c51f: cc                   	int3

ffffffff8001c520 <core::str::slice_error_fail::h119858e2b5d21404>:
ffffffff8001c520: 50                   	pushq	%rax
ffffffff8001c521: e8 0a 00 00 00       	callq	0xffffffff8001c530 <core::str::slice_error_fail_rt::h16b33285e184e925>
ffffffff8001c526: cc                   	int3
ffffffff8001c527: cc                   	int3
ffffffff8001c528: cc                   	int3
ffffffff8001c529: cc                   	int3
ffffffff8001c52a: cc                   	int3
ffffffff8001c52b: cc                   	int3
ffffffff8001c52c: cc                   	int3
ffffffff8001c52d: cc                   	int3
ffffffff8001c52e: cc                   	int3
ffffffff8001c52f: cc                   	int3

ffffffff8001c530 <core::str::slice_error_fail_rt::h16b33285e184e925>:
ffffffff8001c530: 48 81 ec d8 00 00 00 	subq	$0xd8, %rsp
ffffffff8001c537: 48 89 94 24 c0 00 00 00      	movq	%rdx, 0xc0(%rsp)
ffffffff8001c53f: 48 89 8c 24 c8 00 00 00      	movq	%rcx, 0xc8(%rsp)
ffffffff8001c547: 48 81 fe 01 01 00 00 	cmpq	$0x101, %rsi            # imm = 0x101
ffffffff8001c54e: 72 5a                	jb	0xffffffff8001c5aa <core::str::slice_error_fail_rt::h16b33285e184e925+0x7a>
ffffffff8001c550: 41 b9 03 00 00 00    	movl	$0x3, %r9d
ffffffff8001c556: 80 bf 00 01 00 00 bf 	cmpb	$-0x41, 0x100(%rdi)
ffffffff8001c55d: 7f 1d                	jg	0xffffffff8001c57c <core::str::slice_error_fail_rt::h16b33285e184e925+0x4c>
ffffffff8001c55f: 41 b9 02 00 00 00    	movl	$0x2, %r9d
ffffffff8001c565: 80 bf ff 00 00 00 bf 	cmpb	$-0x41, 0xff(%rdi)
ffffffff8001c56c: 7f 0e                	jg	0xffffffff8001c57c <core::str::slice_error_fail_rt::h16b33285e184e925+0x4c>
ffffffff8001c56e: 45 31 c9             	xorl	%r9d, %r9d
ffffffff8001c571: 80 bf fe 00 00 00 c0 	cmpb	$-0x40, 0xfe(%rdi)
ffffffff8001c578: 41 0f 9d c1          	setge	%r9b
ffffffff8001c57c: 49 8d 81 fd 00 00 00 	leaq	0xfd(%r9), %rax
ffffffff8001c583: 42 80 bc 0f fd 00 00 00 bf   	cmpb	$-0x41, 0xfd(%rdi,%r9)
ffffffff8001c58c: 0f 8e b0 00 00 00    	jle	0xffffffff8001c642 <core::str::slice_error_fail_rt::h16b33285e184e925+0x112>
ffffffff8001c592: 48 89 7c 24 10       	movq	%rdi, 0x10(%rsp)
ffffffff8001c597: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff8001c59c: b8 05 00 00 00       	movl	$0x5, %eax
ffffffff8001c5a1: 49 c7 c1 03 4d 02 80 	movq	$-0x7ffdb2fd, %r9       # imm = 0x80024D03
ffffffff8001c5a8: eb 12                	jmp	0xffffffff8001c5bc <core::str::slice_error_fail_rt::h16b33285e184e925+0x8c>
ffffffff8001c5aa: 48 89 7c 24 10       	movq	%rdi, 0x10(%rsp)
ffffffff8001c5af: 48 89 74 24 18       	movq	%rsi, 0x18(%rsp)
ffffffff8001c5b4: 41 b9 01 00 00 00    	movl	$0x1, %r9d
ffffffff8001c5ba: 31 c0                	xorl	%eax, %eax
ffffffff8001c5bc: 4c 89 8c 24 a0 00 00 00      	movq	%r9, 0xa0(%rsp)
ffffffff8001c5c4: 48 89 84 24 a8 00 00 00      	movq	%rax, 0xa8(%rsp)
ffffffff8001c5cc: 48 39 f2             	cmpq	%rsi, %rdx
ffffffff8001c5cf: 0f 87 63 02 00 00    	ja	0xffffffff8001c838 <core::str::slice_error_fail_rt::h16b33285e184e925+0x308>
ffffffff8001c5d5: 48 39 f1             	cmpq	%rsi, %rcx
ffffffff8001c5d8: 0f 87 5a 02 00 00    	ja	0xffffffff8001c838 <core::str::slice_error_fail_rt::h16b33285e184e925+0x308>
ffffffff8001c5de: 48 39 ca             	cmpq	%rcx, %rdx
ffffffff8001c5e1: 0f 87 da 02 00 00    	ja	0xffffffff8001c8c1 <core::str::slice_error_fail_rt::h16b33285e184e925+0x391>
ffffffff8001c5e7: 48 85 d2             	testq	%rdx, %rdx
ffffffff8001c5ea: 0f 94 c0             	sete	%al
ffffffff8001c5ed: 48 39 f2             	cmpq	%rsi, %rdx
ffffffff8001c5f0: 41 0f 93 c1          	setae	%r9b
ffffffff8001c5f4: 41 08 c1             	orb	%al, %r9b
ffffffff8001c5f7: 75 08                	jne	0xffffffff8001c601 <core::str::slice_error_fail_rt::h16b33285e184e925+0xd1>
ffffffff8001c5f9: 80 3c 17 c0          	cmpb	$-0x40, (%rdi,%rdx)
ffffffff8001c5fd: 48 0f 4c ca          	cmovlq	%rdx, %rcx
ffffffff8001c601: 48 89 8c 24 d0 00 00 00      	movq	%rcx, 0xd0(%rsp)
ffffffff8001c609: 48 89 f2             	movq	%rsi, %rdx
ffffffff8001c60c: 48 39 f1             	cmpq	%rsi, %rcx
ffffffff8001c60f: 0f 83 8c 00 00 00    	jae	0xffffffff8001c6a1 <core::str::slice_error_fail_rt::h16b33285e184e925+0x171>
ffffffff8001c615: 31 c0                	xorl	%eax, %eax
ffffffff8001c617: 48 89 ca             	movq	%rcx, %rdx
ffffffff8001c61a: 48 83 ea 03          	subq	$0x3, %rdx
ffffffff8001c61e: 48 0f 43 c2          	cmovaeq	%rdx, %rax
ffffffff8001c622: 4c 8d 49 01          	leaq	0x1(%rcx), %r9
ffffffff8001c626: 49 39 c1             	cmpq	%rax, %r9
ffffffff8001c629: 0f 82 28 03 00 00    	jb	0xffffffff8001c957 <core::str::slice_error_fail_rt::h16b33285e184e925+0x427>
ffffffff8001c62f: 4c 89 ca             	movq	%r9, %rdx
ffffffff8001c632: 48 29 c2             	subq	%rax, %rdx
ffffffff8001c635: 74 67                	je	0xffffffff8001c69e <core::str::slice_error_fail_rt::h16b33285e184e925+0x16e>
ffffffff8001c637: 80 3c 0f bf          	cmpb	$-0x41, (%rdi,%rcx)
ffffffff8001c63b: 7e 0f                	jle	0xffffffff8001c64c <core::str::slice_error_fail_rt::h16b33285e184e925+0x11c>
ffffffff8001c63d: 48 ff ca             	decq	%rdx
ffffffff8001c640: eb 5c                	jmp	0xffffffff8001c69e <core::str::slice_error_fail_rt::h16b33285e184e925+0x16e>
ffffffff8001c642: 31 d2                	xorl	%edx, %edx
ffffffff8001c644: 48 89 c1             	movq	%rax, %rcx
ffffffff8001c647: e8 d4 fe ff ff       	callq	0xffffffff8001c520 <core::str::slice_error_fail::h119858e2b5d21404>
ffffffff8001c64c: 48 39 c8             	cmpq	%rcx, %rax
ffffffff8001c64f: 74 4d                	je	0xffffffff8001c69e <core::str::slice_error_fail_rt::h16b33285e184e925+0x16e>
ffffffff8001c651: 49 01 f9             	addq	%rdi, %r9
ffffffff8001c654: 41 80 79 fe bf       	cmpb	$-0x41, -0x2(%r9)
ffffffff8001c659: 7e 06                	jle	0xffffffff8001c661 <core::str::slice_error_fail_rt::h16b33285e184e925+0x131>
ffffffff8001c65b: 48 83 c2 fe          	addq	$-0x2, %rdx
ffffffff8001c65f: eb 3d                	jmp	0xffffffff8001c69e <core::str::slice_error_fail_rt::h16b33285e184e925+0x16e>
ffffffff8001c661: 48 8d 0c 07          	leaq	(%rdi,%rax), %rcx
ffffffff8001c665: 4d 8d 51 fe          	leaq	-0x2(%r9), %r10
ffffffff8001c669: 4c 39 d1             	cmpq	%r10, %rcx
ffffffff8001c66c: 74 30                	je	0xffffffff8001c69e <core::str::slice_error_fail_rt::h16b33285e184e925+0x16e>
ffffffff8001c66e: 41 80 79 fd bf       	cmpb	$-0x41, -0x3(%r9)
ffffffff8001c673: 7e 06                	jle	0xffffffff8001c67b <core::str::slice_error_fail_rt::h16b33285e184e925+0x14b>
ffffffff8001c675: 48 83 c2 fd          	addq	$-0x3, %rdx
ffffffff8001c679: eb 23                	jmp	0xffffffff8001c69e <core::str::slice_error_fail_rt::h16b33285e184e925+0x16e>
ffffffff8001c67b: 4d 8d 51 fd          	leaq	-0x3(%r9), %r10
ffffffff8001c67f: 4c 39 d1             	cmpq	%r10, %rcx
ffffffff8001c682: 74 1a                	je	0xffffffff8001c69e <core::str::slice_error_fail_rt::h16b33285e184e925+0x16e>
ffffffff8001c684: 41 80 79 fc bf       	cmpb	$-0x41, -0x4(%r9)
ffffffff8001c689: 7e 06                	jle	0xffffffff8001c691 <core::str::slice_error_fail_rt::h16b33285e184e925+0x161>
ffffffff8001c68b: 48 83 c2 fc          	addq	$-0x4, %rdx
ffffffff8001c68f: eb 0d                	jmp	0xffffffff8001c69e <core::str::slice_error_fail_rt::h16b33285e184e925+0x16e>
ffffffff8001c691: 49 83 c1 fc          	addq	$-0x4, %r9
ffffffff8001c695: 4c 39 c9             	cmpq	%r9, %rcx
ffffffff8001c698: 74 04                	je	0xffffffff8001c69e <core::str::slice_error_fail_rt::h16b33285e184e925+0x16e>
ffffffff8001c69a: 48 83 c2 fb          	addq	$-0x5, %rdx
ffffffff8001c69e: 48 01 c2             	addq	%rax, %rdx
ffffffff8001c6a1: 48 85 d2             	testq	%rdx, %rdx
ffffffff8001c6a4: 75 0d                	jne	0xffffffff8001c6b3 <core::str::slice_error_fail_rt::h16b33285e184e925+0x183>
ffffffff8001c6a6: 48 39 f2             	cmpq	%rsi, %rdx
ffffffff8001c6a9: 75 15                	jne	0xffffffff8001c6c0 <core::str::slice_error_fail_rt::h16b33285e184e925+0x190>
ffffffff8001c6ab: 4c 89 c7             	movq	%r8, %rdi
ffffffff8001c6ae: e8 bd 02 00 00       	callq	0xffffffff8001c970 <core::option::unwrap_failed::hd8ef34c781aa10a4>
ffffffff8001c6b3: 48 39 f2             	cmpq	%rsi, %rdx
ffffffff8001c6b6: 73 1e                	jae	0xffffffff8001c6d6 <core::str::slice_error_fail_rt::h16b33285e184e925+0x1a6>
ffffffff8001c6b8: 80 3c 17 bf          	cmpb	$-0x41, (%rdi,%rdx)
ffffffff8001c6bc: 7f e8                	jg	0xffffffff8001c6a6 <core::str::slice_error_fail_rt::h16b33285e184e925+0x176>
ffffffff8001c6be: eb 18                	jmp	0xffffffff8001c6d8 <core::str::slice_error_fail_rt::h16b33285e184e925+0x1a8>
ffffffff8001c6c0: 0f b6 0c 17          	movzbl	(%rdi,%rdx), %ecx
ffffffff8001c6c4: 84 c9                	testb	%cl, %cl
ffffffff8001c6c6: 78 18                	js	0xffffffff8001c6e0 <core::str::slice_error_fail_rt::h16b33285e184e925+0x1b0>
ffffffff8001c6c8: 89 4c 24 0c          	movl	%ecx, 0xc(%rsp)
ffffffff8001c6cc: b8 01 00 00 00       	movl	$0x1, %eax
ffffffff8001c6d1: e9 a0 00 00 00       	jmp	0xffffffff8001c776 <core::str::slice_error_fail_rt::h16b33285e184e925+0x246>
ffffffff8001c6d6: 74 ce                	je	0xffffffff8001c6a6 <core::str::slice_error_fail_rt::h16b33285e184e925+0x176>
ffffffff8001c6d8: 48 89 f1             	movq	%rsi, %rcx
ffffffff8001c6db: e8 40 fe ff ff       	callq	0xffffffff8001c520 <core::str::slice_error_fail::h119858e2b5d21404>
ffffffff8001c6e0: 89 c8                	movl	%ecx, %eax
ffffffff8001c6e2: 83 e0 1f             	andl	$0x1f, %eax
ffffffff8001c6e5: 44 0f b6 4c 17 01    	movzbl	0x1(%rdi,%rdx), %r9d
ffffffff8001c6eb: 41 83 e1 3f          	andl	$0x3f, %r9d
ffffffff8001c6ef: 80 f9 df             	cmpb	$-0x21, %cl
ffffffff8001c6f2: 76 33                	jbe	0xffffffff8001c727 <core::str::slice_error_fail_rt::h16b33285e184e925+0x1f7>
ffffffff8001c6f4: 0f b6 74 17 02       	movzbl	0x2(%rdi,%rdx), %esi
ffffffff8001c6f9: 41 c1 e1 06          	shll	$0x6, %r9d
ffffffff8001c6fd: 83 e6 3f             	andl	$0x3f, %esi
ffffffff8001c700: 44 09 ce             	orl	%r9d, %esi
ffffffff8001c703: 80 f9 f0             	cmpb	$-0x10, %cl
ffffffff8001c706: 72 3a                	jb	0xffffffff8001c742 <core::str::slice_error_fail_rt::h16b33285e184e925+0x212>
ffffffff8001c708: 0f b6 4c 17 03       	movzbl	0x3(%rdi,%rdx), %ecx
ffffffff8001c70d: 83 e0 07             	andl	$0x7, %eax
ffffffff8001c710: c1 e0 12             	shll	$0x12, %eax
ffffffff8001c713: c1 e6 06             	shll	$0x6, %esi
ffffffff8001c716: 83 e1 3f             	andl	$0x3f, %ecx
ffffffff8001c719: 09 f1                	orl	%esi, %ecx
ffffffff8001c71b: 09 c1                	orl	%eax, %ecx
ffffffff8001c71d: 81 f9 00 00 11 00    	cmpl	$0x110000, %ecx         # imm = 0x110000
ffffffff8001c723: 74 86                	je	0xffffffff8001c6ab <core::str::slice_error_fail_rt::h16b33285e184e925+0x17b>
ffffffff8001c725: eb 08                	jmp	0xffffffff8001c72f <core::str::slice_error_fail_rt::h16b33285e184e925+0x1ff>
ffffffff8001c727: c1 e0 06             	shll	$0x6, %eax
ffffffff8001c72a: 44 09 c8             	orl	%r9d, %eax
ffffffff8001c72d: 89 c1                	movl	%eax, %ecx
ffffffff8001c72f: 89 4c 24 0c          	movl	%ecx, 0xc(%rsp)
ffffffff8001c733: b8 01 00 00 00       	movl	$0x1, %eax
ffffffff8001c738: 81 f9 80 00 00 00    	cmpl	$0x80, %ecx
ffffffff8001c73e: 73 1a                	jae	0xffffffff8001c75a <core::str::slice_error_fail_rt::h16b33285e184e925+0x22a>
ffffffff8001c740: eb 34                	jmp	0xffffffff8001c776 <core::str::slice_error_fail_rt::h16b33285e184e925+0x246>
ffffffff8001c742: c1 e0 0c             	shll	$0xc, %eax
ffffffff8001c745: 09 c6                	orl	%eax, %esi
ffffffff8001c747: 89 f1                	movl	%esi, %ecx
ffffffff8001c749: 89 4c 24 0c          	movl	%ecx, 0xc(%rsp)
ffffffff8001c74d: b8 01 00 00 00       	movl	$0x1, %eax
ffffffff8001c752: 81 f9 80 00 00 00    	cmpl	$0x80, %ecx
ffffffff8001c758: 72 1c                	jb	0xffffffff8001c776 <core::str::slice_error_fail_rt::h16b33285e184e925+0x246>
ffffffff8001c75a: b8 02 00 00 00       	movl	$0x2, %eax
ffffffff8001c75f: 81 f9 00 08 00 00    	cmpl	$0x800, %ecx            # imm = 0x800
ffffffff8001c765: 72 0f                	jb	0xffffffff8001c776 <core::str::slice_error_fail_rt::h16b33285e184e925+0x246>
ffffffff8001c767: 81 f9 00 00 01 00    	cmpl	$0x10000, %ecx          # imm = 0x10000
ffffffff8001c76d: b8 04 00 00 00       	movl	$0x4, %eax
ffffffff8001c772: 48 83 d8 00          	sbbq	$0x0, %rax
ffffffff8001c776: 48 01 d0             	addq	%rdx, %rax
ffffffff8001c779: 48 89 94 24 b0 00 00 00      	movq	%rdx, 0xb0(%rsp)
ffffffff8001c781: 48 89 84 24 b8 00 00 00      	movq	%rax, 0xb8(%rsp)
ffffffff8001c789: 48 8d 84 24 d0 00 00 00      	leaq	0xd0(%rsp), %rax
ffffffff8001c791: 48 89 44 24 50       	movq	%rax, 0x50(%rsp)
ffffffff8001c796: 48 c7 44 24 58 c0 b8 01 80   	movq	$-0x7ffe4740, 0x58(%rsp) # imm = 0x8001B8C0
ffffffff8001c79f: 48 8d 44 24 0c       	leaq	0xc(%rsp), %rax
ffffffff8001c7a4: 48 89 44 24 60       	movq	%rax, 0x60(%rsp)
ffffffff8001c7a9: 48 c7 44 24 68 00 a8 01 80   	movq	$-0x7ffe5800, 0x68(%rsp) # imm = 0x8001A800
ffffffff8001c7b2: 48 8d 84 24 b0 00 00 00      	leaq	0xb0(%rsp), %rax
ffffffff8001c7ba: 48 89 44 24 70       	movq	%rax, 0x70(%rsp)
ffffffff8001c7bf: 48 c7 44 24 78 e0 b9 01 80   	movq	$-0x7ffe4620, 0x78(%rsp) # imm = 0x8001B9E0
ffffffff8001c7c8: 48 8d 44 24 10       	leaq	0x10(%rsp), %rax
ffffffff8001c7cd: 48 89 84 24 80 00 00 00      	movq	%rax, 0x80(%rsp)
ffffffff8001c7d5: 48 c7 84 24 88 00 00 00 b0 a8 01 80  	movq	$-0x7ffe5750, 0x88(%rsp) # imm = 0x8001A8B0
ffffffff8001c7e1: 48 8d 84 24 a0 00 00 00      	leaq	0xa0(%rsp), %rax
ffffffff8001c7e9: 48 89 84 24 90 00 00 00      	movq	%rax, 0x90(%rsp)
ffffffff8001c7f1: 48 c7 84 24 98 00 00 00 b0 a8 01 80  	movq	$-0x7ffe5750, 0x98(%rsp) # imm = 0x8001A8B0
ffffffff8001c7fd: 48 c7 44 24 20 90 4d 02 80   	movq	$-0x7ffdb270, 0x20(%rsp) # imm = 0x80024D90
ffffffff8001c806: 48 c7 44 24 28 05 00 00 00   	movq	$0x5, 0x28(%rsp)
ffffffff8001c80f: 48 c7 44 24 40 00 00 00 00   	movq	$0x0, 0x40(%rsp)
ffffffff8001c818: 48 8d 44 24 50       	leaq	0x50(%rsp), %rax
ffffffff8001c81d: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff8001c822: 48 c7 44 24 38 05 00 00 00   	movq	$0x5, 0x38(%rsp)
ffffffff8001c82b: 48 8d 7c 24 20       	leaq	0x20(%rsp), %rdi
ffffffff8001c830: 4c 89 c6             	movq	%r8, %rsi
ffffffff8001c833: e8 b8 fb ff ff       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8001c838: 48 39 f2             	cmpq	%rsi, %rdx
ffffffff8001c83b: 48 0f 47 ca          	cmovaq	%rdx, %rcx
ffffffff8001c83f: 48 89 8c 24 b0 00 00 00      	movq	%rcx, 0xb0(%rsp)
ffffffff8001c847: 48 8d 84 24 b0 00 00 00      	leaq	0xb0(%rsp), %rax
ffffffff8001c84f: 48 89 44 24 50       	movq	%rax, 0x50(%rsp)
ffffffff8001c854: 48 c7 44 24 58 c0 b8 01 80   	movq	$-0x7ffe4740, 0x58(%rsp) # imm = 0x8001B8C0
ffffffff8001c85d: 48 8d 44 24 10       	leaq	0x10(%rsp), %rax
ffffffff8001c862: 48 89 44 24 60       	movq	%rax, 0x60(%rsp)
ffffffff8001c867: 48 c7 44 24 68 b0 a8 01 80   	movq	$-0x7ffe5750, 0x68(%rsp) # imm = 0x8001A8B0
ffffffff8001c870: 48 8d 84 24 a0 00 00 00      	leaq	0xa0(%rsp), %rax
ffffffff8001c878: 48 89 44 24 70       	movq	%rax, 0x70(%rsp)
ffffffff8001c87d: 48 c7 44 24 78 b0 a8 01 80   	movq	$-0x7ffe5750, 0x78(%rsp) # imm = 0x8001A8B0
ffffffff8001c886: 48 c7 44 24 20 f8 4d 02 80   	movq	$-0x7ffdb208, 0x20(%rsp) # imm = 0x80024DF8
ffffffff8001c88f: 48 c7 44 24 28 03 00 00 00   	movq	$0x3, 0x28(%rsp)
ffffffff8001c898: 48 c7 44 24 40 00 00 00 00   	movq	$0x0, 0x40(%rsp)
ffffffff8001c8a1: 48 8d 44 24 50       	leaq	0x50(%rsp), %rax
ffffffff8001c8a6: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff8001c8ab: 48 c7 44 24 38 03 00 00 00   	movq	$0x3, 0x38(%rsp)
ffffffff8001c8b4: 48 8d 7c 24 20       	leaq	0x20(%rsp), %rdi
ffffffff8001c8b9: 4c 89 c6             	movq	%r8, %rsi
ffffffff8001c8bc: e8 2f fb ff ff       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8001c8c1: 48 8d 84 24 c0 00 00 00      	leaq	0xc0(%rsp), %rax
ffffffff8001c8c9: 48 89 44 24 50       	movq	%rax, 0x50(%rsp)
ffffffff8001c8ce: 48 c7 44 24 58 c0 b8 01 80   	movq	$-0x7ffe4740, 0x58(%rsp) # imm = 0x8001B8C0
ffffffff8001c8d7: 48 8d 84 24 c8 00 00 00      	leaq	0xc8(%rsp), %rax
ffffffff8001c8df: 48 89 44 24 60       	movq	%rax, 0x60(%rsp)
ffffffff8001c8e4: 48 c7 44 24 68 c0 b8 01 80   	movq	$-0x7ffe4740, 0x68(%rsp) # imm = 0x8001B8C0
ffffffff8001c8ed: 48 8d 44 24 10       	leaq	0x10(%rsp), %rax
ffffffff8001c8f2: 48 89 44 24 70       	movq	%rax, 0x70(%rsp)
ffffffff8001c8f7: 48 c7 44 24 78 b0 a8 01 80   	movq	$-0x7ffe5750, 0x78(%rsp) # imm = 0x8001A8B0
ffffffff8001c900: 48 8d 84 24 a0 00 00 00      	leaq	0xa0(%rsp), %rax
ffffffff8001c908: 48 89 84 24 80 00 00 00      	movq	%rax, 0x80(%rsp)
ffffffff8001c910: 48 c7 84 24 88 00 00 00 b0 a8 01 80  	movq	$-0x7ffe5750, 0x88(%rsp) # imm = 0x8001A8B0
ffffffff8001c91c: 48 c7 44 24 20 18 4d 02 80   	movq	$-0x7ffdb2e8, 0x20(%rsp) # imm = 0x80024D18
ffffffff8001c925: 48 c7 44 24 28 04 00 00 00   	movq	$0x4, 0x28(%rsp)
ffffffff8001c92e: 48 c7 44 24 40 00 00 00 00   	movq	$0x0, 0x40(%rsp)
ffffffff8001c937: 48 8d 44 24 50       	leaq	0x50(%rsp), %rax
ffffffff8001c93c: 48 89 44 24 30       	movq	%rax, 0x30(%rsp)
ffffffff8001c941: 48 c7 44 24 38 04 00 00 00   	movq	$0x4, 0x38(%rsp)
ffffffff8001c94a: 48 8d 7c 24 20       	leaq	0x20(%rsp), %rdi
ffffffff8001c94f: 4c 89 c6             	movq	%r8, %rsi
ffffffff8001c952: e8 99 fa ff ff       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8001c957: 48 89 c7             	movq	%rax, %rdi
ffffffff8001c95a: 4c 89 ce             	movq	%r9, %rsi
ffffffff8001c95d: 48 c7 c2 28 4e 02 80 	movq	$-0x7ffdb1d8, %rdx      # imm = 0x80024E28
ffffffff8001c964: e8 27 f6 ff ff       	callq	0xffffffff8001bf90 <core::slice::index::slice_index_order_fail::h1a167d6bc7fac2e8>
ffffffff8001c969: cc                   	int3
ffffffff8001c96a: cc                   	int3
ffffffff8001c96b: cc                   	int3
ffffffff8001c96c: cc                   	int3
ffffffff8001c96d: cc                   	int3
ffffffff8001c96e: cc                   	int3
ffffffff8001c96f: cc                   	int3

ffffffff8001c970 <core::option::unwrap_failed::hd8ef34c781aa10a4>:
ffffffff8001c970: 50                   	pushq	%rax
ffffffff8001c971: 48 89 fa             	movq	%rdi, %rdx
ffffffff8001c974: be 2b 00 00 00       	movl	$0x2b, %esi
ffffffff8001c979: 48 c7 c7 40 4e 02 80 	movq	$-0x7ffdb1c0, %rdi      # imm = 0x80024E40
ffffffff8001c980: e8 eb fa ff ff       	callq	0xffffffff8001c470 <core::panicking::panic::h8fe0944795198edd>
ffffffff8001c985: cc                   	int3
ffffffff8001c986: cc                   	int3
ffffffff8001c987: cc                   	int3
ffffffff8001c988: cc                   	int3
ffffffff8001c989: cc                   	int3
ffffffff8001c98a: cc                   	int3
ffffffff8001c98b: cc                   	int3
ffffffff8001c98c: cc                   	int3
ffffffff8001c98d: cc                   	int3
ffffffff8001c98e: cc                   	int3
ffffffff8001c98f: cc                   	int3

ffffffff8001c990 <core::option::expect_failed::h9503e6b4ddc453dd>:
ffffffff8001c990: 48 83 ec 58          	subq	$0x58, %rsp
ffffffff8001c994: 48 89 7c 24 08       	movq	%rdi, 0x8(%rsp)
ffffffff8001c999: 48 89 74 24 10       	movq	%rsi, 0x10(%rsp)
ffffffff8001c99e: 48 8d 44 24 08       	leaq	0x8(%rsp), %rax
ffffffff8001c9a3: 48 89 44 24 18       	movq	%rax, 0x18(%rsp)
ffffffff8001c9a8: 48 c7 44 24 20 b0 a8 01 80   	movq	$-0x7ffe5750, 0x20(%rsp) # imm = 0x8001A8B0
ffffffff8001c9b1: 48 c7 44 24 28 40 dc 01 80   	movq	$-0x7ffe23c0, 0x28(%rsp) # imm = 0x8001DC40
ffffffff8001c9ba: 48 c7 44 24 30 01 00 00 00   	movq	$0x1, 0x30(%rsp)
ffffffff8001c9c3: 48 c7 44 24 48 00 00 00 00   	movq	$0x0, 0x48(%rsp)
ffffffff8001c9cc: 48 8d 44 24 18       	leaq	0x18(%rsp), %rax
ffffffff8001c9d1: 48 89 44 24 38       	movq	%rax, 0x38(%rsp)
ffffffff8001c9d6: 48 c7 44 24 40 01 00 00 00   	movq	$0x1, 0x40(%rsp)
ffffffff8001c9df: 48 8d 7c 24 28       	leaq	0x28(%rsp), %rdi
ffffffff8001c9e4: 48 89 d6             	movq	%rdx, %rsi
ffffffff8001c9e7: e8 04 fa ff ff       	callq	0xffffffff8001c3f0 <core::panicking::panic_fmt::hce924d14f74a1e34>
ffffffff8001c9ec: cc                   	int3
ffffffff8001c9ed: cc                   	int3
ffffffff8001c9ee: cc                   	int3
ffffffff8001c9ef: cc                   	int3

ffffffff8001c9f0 <memmove>:
ffffffff8001c9f0: 48 89 f8             	movq	%rdi, %rax
ffffffff8001c9f3: 48 89 f9             	movq	%rdi, %rcx
ffffffff8001c9f6: 48 29 f1             	subq	%rsi, %rcx
ffffffff8001c9f9: 41 89 c1             	movl	%eax, %r9d
ffffffff8001c9fc: 41 f7 d9             	negl	%r9d
ffffffff8001c9ff: 41 83 e1 07          	andl	$0x7, %r9d
ffffffff8001ca03: 49 39 d1             	cmpq	%rdx, %r9
ffffffff8001ca06: 4c 0f 43 ca          	cmovaeq	%rdx, %r9
ffffffff8001ca0a: 49 89 d2             	movq	%rdx, %r10
ffffffff8001ca0d: 4d 29 ca             	subq	%r9, %r10
ffffffff8001ca10: 4d 89 d0             	movq	%r10, %r8
ffffffff8001ca13: 49 c1 e8 03          	shrq	$0x3, %r8
ffffffff8001ca17: 41 83 e2 07          	andl	$0x7, %r10d
ffffffff8001ca1b: 48 39 d1             	cmpq	%rdx, %rcx
ffffffff8001ca1e: 73 33                	jae	0xffffffff8001ca53 <memmove+0x63>
ffffffff8001ca20: 48 8d 3c 10          	leaq	(%rax,%rdx), %rdi
ffffffff8001ca24: 48 ff cf             	decq	%rdi
ffffffff8001ca27: 48 01 d6             	addq	%rdx, %rsi
ffffffff8001ca2a: 48 ff ce             	decq	%rsi
ffffffff8001ca2d: 4c 89 d1             	movq	%r10, %rcx
ffffffff8001ca30: fd                   	std
ffffffff8001ca31: f3 a4                	rep		movsb	(%rsi), %es:(%rdi)
ffffffff8001ca33: 48 83 ee 07          	subq	$0x7, %rsi
ffffffff8001ca37: 48 83 ef 07          	subq	$0x7, %rdi
ffffffff8001ca3b: 4c 89 c1             	movq	%r8, %rcx
ffffffff8001ca3e: f3 48 a5             	rep		movsq	(%rsi), %es:(%rdi)
ffffffff8001ca41: 45 85 c9             	testl	%r9d, %r9d
ffffffff8001ca44: 48 83 c6 07          	addq	$0x7, %rsi
ffffffff8001ca48: 48 83 c7 07          	addq	$0x7, %rdi
ffffffff8001ca4c: 44 89 c9             	movl	%r9d, %ecx
ffffffff8001ca4f: f3 a4                	rep		movsb	(%rsi), %es:(%rdi)
ffffffff8001ca51: fc                   	cld
ffffffff8001ca52: c3                   	retq
ffffffff8001ca53: 4c 89 c9             	movq	%r9, %rcx
ffffffff8001ca56: 48 89 c7             	movq	%rax, %rdi
ffffffff8001ca59: f3 a4                	rep		movsb	(%rsi), %es:(%rdi)
ffffffff8001ca5b: 4c 89 c1             	movq	%r8, %rcx
ffffffff8001ca5e: f3 48 a5             	rep		movsq	(%rsi), %es:(%rdi)
ffffffff8001ca61: 4c 89 d1             	movq	%r10, %rcx
ffffffff8001ca64: f3 a4                	rep		movsb	(%rsi), %es:(%rdi)
ffffffff8001ca66: c3                   	retq
ffffffff8001ca67: cc                   	int3
ffffffff8001ca68: cc                   	int3
ffffffff8001ca69: cc                   	int3
ffffffff8001ca6a: cc                   	int3
ffffffff8001ca6b: cc                   	int3
ffffffff8001ca6c: cc                   	int3
ffffffff8001ca6d: cc                   	int3
ffffffff8001ca6e: cc                   	int3
ffffffff8001ca6f: cc                   	int3

ffffffff8001ca70 <strlen>:
ffffffff8001ca70: 48 89 f9             	movq	%rdi, %rcx
ffffffff8001ca73: 48 83 e1 07          	andq	$0x7, %rcx
ffffffff8001ca77: 0f 84 8f 00 00 00    	je	0xffffffff8001cb0c <strlen+0x9c>
ffffffff8001ca7d: 80 3f 00             	cmpb	$0x0, (%rdi)
ffffffff8001ca80: 0f 84 fd 00 00 00    	je	0xffffffff8001cb83 <strlen+0x113>
ffffffff8001ca86: b8 08 00 00 00       	movl	$0x8, %eax
ffffffff8001ca8b: 48 29 c8             	subq	%rcx, %rax
ffffffff8001ca8e: 48 f7 d9             	negq	%rcx
ffffffff8001ca91: 48 01 f9             	addq	%rdi, %rcx
ffffffff8001ca94: 48 83 c1 08          	addq	$0x8, %rcx
ffffffff8001ca98: 89 fa                	movl	%edi, %edx
ffffffff8001ca9a: f6 d2                	notb	%dl
ffffffff8001ca9c: f6 c2 07             	testb	$0x7, %dl
ffffffff8001ca9f: 74 70                	je	0xffffffff8001cb11 <strlen+0xa1>
ffffffff8001caa1: 80 7f 01 00          	cmpb	$0x0, 0x1(%rdi)
ffffffff8001caa5: 0f 84 db 00 00 00    	je	0xffffffff8001cb86 <strlen+0x116>
ffffffff8001caab: 89 fa                	movl	%edi, %edx
ffffffff8001caad: 80 e2 07             	andb	$0x7, %dl
ffffffff8001cab0: 80 fa 06             	cmpb	$0x6, %dl
ffffffff8001cab3: 74 5c                	je	0xffffffff8001cb11 <strlen+0xa1>
ffffffff8001cab5: 80 7f 02 00          	cmpb	$0x0, 0x2(%rdi)
ffffffff8001cab9: 0f 84 cd 00 00 00    	je	0xffffffff8001cb8c <strlen+0x11c>
ffffffff8001cabf: 80 fa 05             	cmpb	$0x5, %dl
ffffffff8001cac2: 74 4d                	je	0xffffffff8001cb11 <strlen+0xa1>
ffffffff8001cac4: 80 7f 03 00          	cmpb	$0x0, 0x3(%rdi)
ffffffff8001cac8: 0f 84 c4 00 00 00    	je	0xffffffff8001cb92 <strlen+0x122>
ffffffff8001cace: 80 fa 04             	cmpb	$0x4, %dl
ffffffff8001cad1: 74 3e                	je	0xffffffff8001cb11 <strlen+0xa1>
ffffffff8001cad3: 80 7f 04 00          	cmpb	$0x0, 0x4(%rdi)
ffffffff8001cad7: 0f 84 bb 00 00 00    	je	0xffffffff8001cb98 <strlen+0x128>
ffffffff8001cadd: 80 fa 03             	cmpb	$0x3, %dl
ffffffff8001cae0: 74 2f                	je	0xffffffff8001cb11 <strlen+0xa1>
ffffffff8001cae2: 80 7f 05 00          	cmpb	$0x0, 0x5(%rdi)
ffffffff8001cae6: 0f 84 b2 00 00 00    	je	0xffffffff8001cb9e <strlen+0x12e>
ffffffff8001caec: 80 fa 02             	cmpb	$0x2, %dl
ffffffff8001caef: 74 20                	je	0xffffffff8001cb11 <strlen+0xa1>
ffffffff8001caf1: 80 7f 06 00          	cmpb	$0x0, 0x6(%rdi)
ffffffff8001caf5: 0f 84 a9 00 00 00    	je	0xffffffff8001cba4 <strlen+0x134>
ffffffff8001cafb: 80 fa 01             	cmpb	$0x1, %dl
ffffffff8001cafe: 74 11                	je	0xffffffff8001cb11 <strlen+0xa1>
ffffffff8001cb00: 80 7f 07 00          	cmpb	$0x0, 0x7(%rdi)
ffffffff8001cb04: 75 0b                	jne	0xffffffff8001cb11 <strlen+0xa1>
ffffffff8001cb06: b8 07 00 00 00       	movl	$0x7, %eax
ffffffff8001cb0b: c3                   	retq
ffffffff8001cb0c: 31 c0                	xorl	%eax, %eax
ffffffff8001cb0e: 48 89 f9             	movq	%rdi, %rcx
ffffffff8001cb11: 48 be 80 80 80 80 80 80 80 80	movabsq	$-0x7f7f7f7f7f7f7f80, %rsi # imm = 0x8080808080808080
ffffffff8001cb1b: 48 bf 00 01 01 01 01 01 01 01	movabsq	$0x101010101010100, %rdi # imm = 0x101010101010100
ffffffff8001cb25: 48 8b 11             	movq	(%rcx), %rdx
ffffffff8001cb28: 49 89 f8             	movq	%rdi, %r8
ffffffff8001cb2b: 49 29 d0             	subq	%rdx, %r8
ffffffff8001cb2e: 49 09 d0             	orq	%rdx, %r8
ffffffff8001cb31: 49 f7 d0             	notq	%r8
ffffffff8001cb34: 49 85 f0             	testq	%rsi, %r8
ffffffff8001cb37: 75 23                	jne	0xffffffff8001cb5c <strlen+0xec>
ffffffff8001cb39: 48 83 c1 08          	addq	$0x8, %rcx
ffffffff8001cb3d: 0f 1f 00             	nopl	(%rax)
ffffffff8001cb40: 48 83 c0 08          	addq	$0x8, %rax
ffffffff8001cb44: 48 8b 11             	movq	(%rcx), %rdx
ffffffff8001cb47: 49 89 f8             	movq	%rdi, %r8
ffffffff8001cb4a: 49 29 d0             	subq	%rdx, %r8
ffffffff8001cb4d: 49 09 d0             	orq	%rdx, %r8
ffffffff8001cb50: 49 f7 d0             	notq	%r8
ffffffff8001cb53: 48 83 c1 08          	addq	$0x8, %rcx
ffffffff8001cb57: 4c 85 c6             	testq	%r8, %rsi
ffffffff8001cb5a: 74 e4                	je	0xffffffff8001cb40 <strlen+0xd0>
ffffffff8001cb5c: 84 d2                	testb	%dl, %dl
ffffffff8001cb5e: 74 22                	je	0xffffffff8001cb82 <strlen+0x112>
ffffffff8001cb60: 48 89 d1             	movq	%rdx, %rcx
ffffffff8001cb63: 66 66 66 66 2e 0f 1f 84 00 00 00 00 00       	nopw	%cs:(%rax,%rax)
ffffffff8001cb70: 48 c1 e9 08          	shrq	$0x8, %rcx
ffffffff8001cb74: 48 ff c0             	incq	%rax
ffffffff8001cb77: f7 c2 00 ff 00 00    	testl	$0xff00, %edx           # imm = 0xFF00
ffffffff8001cb7d: 48 89 ca             	movq	%rcx, %rdx
ffffffff8001cb80: 75 ee                	jne	0xffffffff8001cb70 <strlen+0x100>
ffffffff8001cb82: c3                   	retq
ffffffff8001cb83: 31 c0                	xorl	%eax, %eax
ffffffff8001cb85: c3                   	retq
ffffffff8001cb86: b8 01 00 00 00       	movl	$0x1, %eax
ffffffff8001cb8b: c3                   	retq
ffffffff8001cb8c: b8 02 00 00 00       	movl	$0x2, %eax
ffffffff8001cb91: c3                   	retq
ffffffff8001cb92: b8 03 00 00 00       	movl	$0x3, %eax
ffffffff8001cb97: c3                   	retq
ffffffff8001cb98: b8 04 00 00 00       	movl	$0x4, %eax
ffffffff8001cb9d: c3                   	retq
ffffffff8001cb9e: b8 05 00 00 00       	movl	$0x5, %eax
ffffffff8001cba3: c3                   	retq
ffffffff8001cba4: b8 06 00 00 00       	movl	$0x6, %eax
ffffffff8001cba9: c3                   	retq
ffffffff8001cbaa: cc                   	int3
ffffffff8001cbab: cc                   	int3
ffffffff8001cbac: cc                   	int3
ffffffff8001cbad: cc                   	int3
ffffffff8001cbae: cc                   	int3
ffffffff8001cbaf: cc                   	int3

ffffffff8001cbb0 <memcpy>:
ffffffff8001cbb0: 48 89 f8             	movq	%rdi, %rax
ffffffff8001cbb3: 41 89 c0             	movl	%eax, %r8d
ffffffff8001cbb6: 41 f7 d8             	negl	%r8d
ffffffff8001cbb9: 41 83 e0 07          	andl	$0x7, %r8d
ffffffff8001cbbd: 49 39 d0             	cmpq	%rdx, %r8
ffffffff8001cbc0: 4c 0f 43 c2          	cmovaeq	%rdx, %r8
ffffffff8001cbc4: 4c 89 c1             	movq	%r8, %rcx
ffffffff8001cbc7: f3 a4                	rep		movsb	(%rsi), %es:(%rdi)
ffffffff8001cbc9: 4c 29 c2             	subq	%r8, %rdx
ffffffff8001cbcc: 48 89 d1             	movq	%rdx, %rcx
ffffffff8001cbcf: 48 c1 e9 03          	shrq	$0x3, %rcx
ffffffff8001cbd3: f3 48 a5             	rep		movsq	(%rsi), %es:(%rdi)
ffffffff8001cbd6: 83 e2 07             	andl	$0x7, %edx
ffffffff8001cbd9: 48 89 d1             	movq	%rdx, %rcx
ffffffff8001cbdc: f3 a4                	rep		movsb	(%rsi), %es:(%rdi)
ffffffff8001cbde: c3                   	retq
ffffffff8001cbdf: cc                   	int3

ffffffff8001cbe0 <memset>:
ffffffff8001cbe0: 49 89 d0             	movq	%rdx, %r8
ffffffff8001cbe3: 48 89 fa             	movq	%rdi, %rdx
ffffffff8001cbe6: 89 d1                	movl	%edx, %ecx
ffffffff8001cbe8: f7 d9                	negl	%ecx
ffffffff8001cbea: 83 e1 07             	andl	$0x7, %ecx
ffffffff8001cbed: 4c 39 c1             	cmpq	%r8, %rcx
ffffffff8001cbf0: 49 0f 43 c8          	cmovaeq	%r8, %rcx
ffffffff8001cbf4: 40 0f b6 f6          	movzbl	%sil, %esi
ffffffff8001cbf8: 48 b8 01 01 01 01 01 01 01 01	movabsq	$0x101010101010101, %rax # imm = 0x101010101010101
ffffffff8001cc02: 48 0f af c6          	imulq	%rsi, %rax
ffffffff8001cc06: 49 29 c8             	subq	%rcx, %r8
ffffffff8001cc09: 4c 89 c6             	movq	%r8, %rsi
ffffffff8001cc0c: 48 c1 ee 03          	shrq	$0x3, %rsi
ffffffff8001cc10: 41 83 e0 07          	andl	$0x7, %r8d
ffffffff8001cc14: f3 aa                	rep		stosb	%al, %es:(%rdi)
ffffffff8001cc16: 48 89 f1             	movq	%rsi, %rcx
ffffffff8001cc19: f3 48 ab             	rep		stosq	%rax, %es:(%rdi)
ffffffff8001cc1c: 4c 89 c1             	movq	%r8, %rcx
ffffffff8001cc1f: f3 aa                	rep		stosb	%al, %es:(%rdi)
ffffffff8001cc21: 48 89 d0             	movq	%rdx, %rax
ffffffff8001cc24: c3                   	retq
